var lC = Object.defineProperty;
var po = (e) => {
  throw TypeError(e);
};
var CC = (e, A, t) => A in e ? lC(e, A, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[A] = t;
var et = (e, A, t) => CC(e, typeof A != "symbol" ? A + "" : A, t), Er = (e, A, t) => A.has(e) || po("Cannot " + t);
var PA = (e, A, t) => (Er(e, A, "read from private field"), t ? t.call(e) : A.get(e)), jA = (e, A, t) => A.has(e) ? po("Cannot add the same private member more than once") : A instanceof WeakSet ? A.add(e) : A.set(e, t), wt = (e, A, t, i) => (Er(e, A, "write to private field"), i ? i.call(e, t) : A.set(e, t), t), BA = (e, A, t) => (Er(e, A, "access private method"), t);
var Hs = {};
Hs.d = (e, A) => {
  for (var t in A)
    Hs.o(A, t) && !Hs.o(e, t) && Object.defineProperty(e, t, { enumerable: !0, get: A[t] });
};
Hs.o = (e, A) => Object.prototype.hasOwnProperty.call(e, A);
var sc = globalThis.pdfjsWorker = {};
Hs.d(sc, {
  WorkerMessageHandler: () => (
    /* reexport */
    Kg
  )
});
const hC = typeof process == "object" && process + "" == "[object process]" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== "browser"), Zt = [1, 0, 0, 1, 0, 0], c0 = [1e-3, 0, 0, 1e-3, 0, 0], BC = 1e7, Ei = 1.35, fn = 0.35, yo = fn / Ei, st = {
  ANY: 1,
  DISPLAY: 2,
  PRINT: 4,
  SAVE: 8,
  ANNOTATIONS_FORMS: 16,
  ANNOTATIONS_STORAGE: 32,
  ANNOTATIONS_DISABLE: 64,
  IS_EDITING: 128,
  OPLIST: 256
}, ac = "pdfjs_internal_editor_", bi = {
  DISABLE: -1,
  NONE: 0,
  FREETEXT: 3,
  HIGHLIGHT: 9,
  STAMP: 13,
  INK: 15
}, wo = {
  PRINT: 4,
  MODIFY_CONTENTS: 8,
  COPY: 16,
  MODIFY_ANNOTATIONS: 32,
  FILL_INTERACTIVE_FORMS: 256,
  COPY_FOR_ACCESSIBILITY: 512,
  ASSEMBLE: 1024,
  PRINT_HIGH_QUALITY: 2048
}, nc = {
  FILL: 0,
  STROKE: 1,
  FILL_STROKE: 2,
  INVISIBLE: 3,
  FILL_ADD_TO_PATH: 4,
  STROKE_ADD_TO_PATH: 5,
  FILL_STROKE_ADD_TO_PATH: 6,
  ADD_TO_PATH: 7,
  FILL_STROKE_MASK: 3,
  ADD_TO_PATH_FLAG: 4
}, Ue = {
  GRAYSCALE_1BPP: 1,
  RGB_24BPP: 2,
  RGBA_32BPP: 3
}, He = {
  TEXT: 1,
  LINK: 2,
  FREETEXT: 3,
  LINE: 4,
  SQUARE: 5,
  CIRCLE: 6,
  POLYGON: 7,
  POLYLINE: 8,
  HIGHLIGHT: 9,
  UNDERLINE: 10,
  SQUIGGLY: 11,
  STRIKEOUT: 12,
  STAMP: 13,
  CARET: 14,
  INK: 15,
  POPUP: 16,
  FILEATTACHMENT: 17,
  SOUND: 18,
  MOVIE: 19,
  WIDGET: 20,
  SCREEN: 21,
  PRINTERMARK: 22,
  TRAPNET: 23,
  WATERMARK: 24,
  THREED: 25,
  REDACT: 26
}, Pr = {
  GROUP: "Group",
  REPLY: "R"
}, oe = {
  INVISIBLE: 1,
  HIDDEN: 2,
  PRINT: 4,
  NOZOOM: 8,
  NOROTATE: 16,
  NOVIEW: 32,
  READONLY: 64,
  LOCKED: 128,
  TOGGLENOVIEW: 256,
  LOCKEDCONTENTS: 512
}, Te = {
  READONLY: 1,
  REQUIRED: 2,
  NOEXPORT: 4,
  MULTILINE: 4096,
  PASSWORD: 8192,
  NOTOGGLETOOFF: 16384,
  RADIO: 32768,
  PUSHBUTTON: 65536,
  COMBO: 131072,
  EDIT: 262144,
  SORT: 524288,
  FILESELECT: 1048576,
  MULTISELECT: 2097152,
  DONOTSPELLCHECK: 4194304,
  DONOTSCROLL: 8388608,
  COMB: 16777216,
  RICHTEXT: 33554432,
  RADIOSINUNISON: 33554432,
  COMMITONSELCHANGE: 67108864
}, m0 = {
  SOLID: 1,
  DASHED: 2,
  BEVELED: 3,
  INSET: 4,
  UNDERLINE: 5
}, rc = {
  E: "Mouse Enter",
  X: "Mouse Exit",
  D: "Mouse Down",
  U: "Mouse Up",
  Fo: "Focus",
  Bl: "Blur",
  PO: "PageOpen",
  PC: "PageClose",
  PV: "PageVisible",
  PI: "PageInvisible",
  K: "Keystroke",
  F: "Format",
  V: "Validate",
  C: "Calculate"
}, QC = {
  WC: "WillClose",
  WS: "WillSave",
  DS: "DidSave",
  WP: "WillPrint",
  DP: "DidPrint"
}, EC = {
  O: "PageOpen",
  C: "PageClose"
}, Os = {
  ERRORS: 0,
  WARNINGS: 1,
  INFOS: 5
}, w = {
  dependency: 1,
  setLineWidth: 2,
  setLineCap: 3,
  setLineJoin: 4,
  setMiterLimit: 5,
  setDash: 6,
  setRenderingIntent: 7,
  setFlatness: 8,
  setGState: 9,
  save: 10,
  restore: 11,
  transform: 12,
  moveTo: 13,
  lineTo: 14,
  curveTo: 15,
  curveTo2: 16,
  curveTo3: 17,
  closePath: 18,
  rectangle: 19,
  stroke: 20,
  closeStroke: 21,
  fill: 22,
  eoFill: 23,
  fillStroke: 24,
  eoFillStroke: 25,
  closeFillStroke: 26,
  closeEOFillStroke: 27,
  endPath: 28,
  clip: 29,
  eoClip: 30,
  beginText: 31,
  endText: 32,
  setCharSpacing: 33,
  setWordSpacing: 34,
  setHScale: 35,
  setLeading: 36,
  setFont: 37,
  setTextRenderingMode: 38,
  setTextRise: 39,
  moveText: 40,
  setLeadingMoveText: 41,
  setTextMatrix: 42,
  nextLine: 43,
  showText: 44,
  showSpacedText: 45,
  nextLineShowText: 46,
  nextLineSetSpacingShowText: 47,
  setCharWidth: 48,
  setCharWidthAndBounds: 49,
  setStrokeColorSpace: 50,
  setFillColorSpace: 51,
  setStrokeColor: 52,
  setStrokeColorN: 53,
  setFillColor: 54,
  setFillColorN: 55,
  setStrokeGray: 56,
  setFillGray: 57,
  setStrokeRGBColor: 58,
  setFillRGBColor: 59,
  setStrokeCMYKColor: 60,
  setFillCMYKColor: 61,
  shadingFill: 62,
  beginInlineImage: 63,
  beginImageData: 64,
  endInlineImage: 65,
  paintXObject: 66,
  markPoint: 67,
  markPointProps: 68,
  beginMarkedContent: 69,
  beginMarkedContentProps: 70,
  endMarkedContent: 71,
  beginCompat: 72,
  endCompat: 73,
  paintFormXObjectBegin: 74,
  paintFormXObjectEnd: 75,
  beginGroup: 76,
  endGroup: 77,
  beginAnnotation: 80,
  endAnnotation: 81,
  paintImageMaskXObject: 83,
  paintImageMaskXObjectGroup: 84,
  paintImageXObject: 85,
  paintInlineImageXObject: 86,
  paintInlineImageXObjectGroup: 87,
  paintImageXObjectRepeat: 88,
  paintImageMaskXObjectRepeat: 89,
  paintSolidColorImageMask: 90,
  constructPath: 91,
  setStrokeTransparent: 92,
  setFillTransparent: 93
}, bo = {
  NEED_PASSWORD: 1,
  INCORRECT_PASSWORD: 2
};
let zn = Os.WARNINGS;
function fC(e) {
  Number.isInteger(e) && (zn = e);
}
function uC() {
  return zn;
}
function vA(e) {
  zn >= Os.INFOS && console.log(`Info: ${e}`);
}
function k(e) {
  zn >= Os.WARNINGS && console.log(`Warning: ${e}`);
}
function WA(e) {
  throw new Error(e);
}
function nt(e, A) {
  e || WA(A);
}
function dC(e) {
  switch (e == null ? void 0 : e.protocol) {
    case "http:":
    case "https:":
    case "ftp:":
    case "mailto:":
    case "tel:":
      return !0;
    default:
      return !1;
  }
}
function un(e, A = null, t = null) {
  if (!e)
    return null;
  try {
    if (t && typeof e == "string") {
      if (t.addDefaultProtocol && e.startsWith("www.")) {
        const s = e.match(/\./g);
        (s == null ? void 0 : s.length) >= 2 && (e = `http://${e}`);
      }
      if (t.tryConvertEncoding)
        try {
          e = Zs(e);
        } catch {
        }
    }
    const i = A ? new URL(e, A) : new URL(e);
    if (dC(i))
      return i;
  } catch {
  }
  return null;
}
function tA(e, A, t, i = !1) {
  return Object.defineProperty(e, A, {
    value: t,
    enumerable: !i,
    configurable: !0,
    writable: !1
  }), t;
}
const At = function() {
  function A(t, i) {
    this.message = t, this.name = i;
  }
  return A.prototype = new Error(), A.constructor = A, A;
}();
class dn extends At {
  constructor(A, t) {
    super(A, "PasswordException"), this.code = t;
  }
}
class xn extends At {
  constructor(A, t) {
    super(A, "UnknownErrorException"), this.details = t;
  }
}
class mn extends At {
  constructor(A) {
    super(A, "InvalidPDFException");
  }
}
class gc extends At {
  constructor(A) {
    super(A, "MissingPDFException");
  }
}
class oc extends At {
  constructor(A, t) {
    super(A, "UnexpectedResponseException"), this.status = t;
  }
}
class T extends At {
  constructor(A) {
    super(A, "FormatError");
  }
}
class je extends At {
  constructor(A) {
    super(A, "AbortException");
  }
}
function lt(e) {
  (typeof e != "object" || (e == null ? void 0 : e.length) === void 0) && WA("Invalid argument for bytesToString");
  const A = e.length, t = 8192;
  if (A < t)
    return String.fromCharCode.apply(null, e);
  const i = [];
  for (let s = 0; s < A; s += t) {
    const a = Math.min(s + t, A), n = e.subarray(s, a);
    i.push(String.fromCharCode.apply(null, n));
  }
  return i.join("");
}
function qe(e) {
  typeof e != "string" && WA("Invalid argument for stringToBytes");
  const A = e.length, t = new Uint8Array(A);
  for (let i = 0; i < A; ++i)
    t[i] = e.charCodeAt(i) & 255;
  return t;
}
function ve(e) {
  return String.fromCharCode(e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, e & 255);
}
function Ic(e) {
  return Object.keys(e).length;
}
function xC() {
  const e = new Uint8Array(4);
  return e[0] = 1, new Uint32Array(e.buffer, 0, 1)[0] === 1;
}
function mC() {
  try {
    return new Function(""), !0;
  } catch {
    return !1;
  }
}
class ht {
  static get isLittleEndian() {
    return tA(this, "isLittleEndian", xC());
  }
  static get isEvalSupported() {
    return tA(this, "isEvalSupported", mC());
  }
  static get isOffscreenCanvasSupported() {
    return tA(this, "isOffscreenCanvasSupported", typeof OffscreenCanvas < "u");
  }
  static get isImageDecoderSupported() {
    return tA(this, "isImageDecoderSupported", typeof ImageDecoder < "u");
  }
  static get platform() {
    return typeof navigator < "u" && typeof (navigator == null ? void 0 : navigator.platform) == "string" ? tA(this, "platform", {
      isMac: navigator.platform.includes("Mac"),
      isWindows: navigator.platform.includes("Win"),
      isFirefox: typeof (navigator == null ? void 0 : navigator.userAgent) == "string" && navigator.userAgent.includes("Firefox")
    }) : tA(this, "platform", {
      isMac: !1,
      isWindows: !1,
      isFirefox: !1
    });
  }
  static get isCSSRoundSupported() {
    var A, t;
    return tA(this, "isCSSRoundSupported", (t = (A = globalThis.CSS) == null ? void 0 : A.supports) == null ? void 0 : t.call(A, "width: round(1.5px, 1px)"));
  }
}
const P0 = Array.from(Array(256).keys(), (e) => e.toString(16).padStart(2, "0"));
var xi, tn, Wr;
class ye {
  static makeHexColor(A, t, i) {
    return `#${P0[A]}${P0[t]}${P0[i]}`;
  }
  static scaleMinMax(A, t) {
    let i;
    A[0] ? (A[0] < 0 && (i = t[0], t[0] = t[2], t[2] = i), t[0] *= A[0], t[2] *= A[0], A[3] < 0 && (i = t[1], t[1] = t[3], t[3] = i), t[1] *= A[3], t[3] *= A[3]) : (i = t[0], t[0] = t[1], t[1] = i, i = t[2], t[2] = t[3], t[3] = i, A[1] < 0 && (i = t[1], t[1] = t[3], t[3] = i), t[1] *= A[1], t[3] *= A[1], A[2] < 0 && (i = t[0], t[0] = t[2], t[2] = i), t[0] *= A[2], t[2] *= A[2]), t[0] += A[4], t[1] += A[5], t[2] += A[4], t[3] += A[5];
  }
  static transform(A, t) {
    return [A[0] * t[0] + A[2] * t[1], A[1] * t[0] + A[3] * t[1], A[0] * t[2] + A[2] * t[3], A[1] * t[2] + A[3] * t[3], A[0] * t[4] + A[2] * t[5] + A[4], A[1] * t[4] + A[3] * t[5] + A[5]];
  }
  static applyTransform(A, t) {
    const i = A[0] * t[0] + A[1] * t[2] + t[4], s = A[0] * t[1] + A[1] * t[3] + t[5];
    return [i, s];
  }
  static applyInverseTransform(A, t) {
    const i = t[0] * t[3] - t[1] * t[2], s = (A[0] * t[3] - A[1] * t[2] + t[2] * t[5] - t[4] * t[3]) / i, a = (-A[0] * t[1] + A[1] * t[0] + t[4] * t[1] - t[5] * t[0]) / i;
    return [s, a];
  }
  static getAxialAlignedBoundingBox(A, t) {
    const i = this.applyTransform(A, t), s = this.applyTransform(A.slice(2, 4), t), a = this.applyTransform([A[0], A[3]], t), n = this.applyTransform([A[2], A[1]], t);
    return [Math.min(i[0], s[0], a[0], n[0]), Math.min(i[1], s[1], a[1], n[1]), Math.max(i[0], s[0], a[0], n[0]), Math.max(i[1], s[1], a[1], n[1])];
  }
  static inverseTransform(A) {
    const t = A[0] * A[3] - A[1] * A[2];
    return [A[3] / t, -A[1] / t, -A[2] / t, A[0] / t, (A[2] * A[5] - A[4] * A[3]) / t, (A[4] * A[1] - A[5] * A[0]) / t];
  }
  static singularValueDecompose2dScale(A) {
    const t = [A[0], A[2], A[1], A[3]], i = A[0] * t[0] + A[1] * t[2], s = A[0] * t[1] + A[1] * t[3], a = A[2] * t[0] + A[3] * t[2], n = A[2] * t[1] + A[3] * t[3], r = (i + n) / 2, g = Math.sqrt((i + n) ** 2 - 4 * (i * n - a * s)) / 2, o = r + g || 1, I = r - g || 1;
    return [Math.sqrt(o), Math.sqrt(I)];
  }
  static normalizeRect(A) {
    const t = A.slice(0);
    return A[0] > A[2] && (t[0] = A[2], t[2] = A[0]), A[1] > A[3] && (t[1] = A[3], t[3] = A[1]), t;
  }
  static intersect(A, t) {
    const i = Math.max(Math.min(A[0], A[2]), Math.min(t[0], t[2])), s = Math.min(Math.max(A[0], A[2]), Math.max(t[0], t[2]));
    if (i > s)
      return null;
    const a = Math.max(Math.min(A[1], A[3]), Math.min(t[1], t[3])), n = Math.min(Math.max(A[1], A[3]), Math.max(t[1], t[3]));
    return a > n ? null : [i, a, s, n];
  }
  static bezierBoundingBox(A, t, i, s, a, n, r, g, o) {
    return o ? (o[0] = Math.min(o[0], A, r), o[1] = Math.min(o[1], t, g), o[2] = Math.max(o[2], A, r), o[3] = Math.max(o[3], t, g)) : o = [Math.min(A, r), Math.min(t, g), Math.max(A, r), Math.max(t, g)], BA(this, xi, Wr).call(this, A, i, a, r, t, s, n, g, 3 * (-A + 3 * (i - a) + r), 6 * (A - 2 * i + a), 3 * (i - A), o), BA(this, xi, Wr).call(this, A, i, a, r, t, s, n, g, 3 * (-t + 3 * (s - n) + g), 6 * (t - 2 * s + n), 3 * (s - t), o), o;
  }
}
xi = new WeakSet(), tn = function(A, t, i, s, a, n, r, g, o, I) {
  if (o <= 0 || o >= 1)
    return;
  const c = 1 - o, l = o * o, C = l * o, h = c * (c * (c * A + 3 * o * t) + 3 * l * i) + C * s, B = c * (c * (c * a + 3 * o * n) + 3 * l * r) + C * g;
  I[0] = Math.min(I[0], h), I[1] = Math.min(I[1], B), I[2] = Math.max(I[2], h), I[3] = Math.max(I[3], B);
}, Wr = function(A, t, i, s, a, n, r, g, o, I, c, l) {
  if (Math.abs(o) < 1e-12) {
    Math.abs(I) >= 1e-12 && BA(this, xi, tn).call(this, A, t, i, s, a, n, r, g, -c / I, l);
    return;
  }
  const C = I ** 2 - 4 * c * o;
  if (C < 0)
    return;
  const h = Math.sqrt(C), B = 2 * o;
  BA(this, xi, tn).call(this, A, t, i, s, a, n, r, g, (-I + h) / B, l), BA(this, xi, tn).call(this, A, t, i, s, a, n, r, g, (-I - h) / B, l);
}, jA(ye, xi);
const pC = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 728, 711, 710, 729, 733, 731, 730, 732, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8226, 8224, 8225, 8230, 8212, 8211, 402, 8260, 8249, 8250, 8722, 8240, 8222, 8220, 8221, 8216, 8217, 8218, 8482, 64257, 64258, 321, 338, 352, 376, 381, 305, 322, 339, 353, 382, 0, 8364];
function XA(e) {
  if (e[0] >= "ï") {
    let t;
    if (e[0] === "þ" && e[1] === "ÿ" ? (t = "utf-16be", e.length % 2 === 1 && (e = e.slice(0, -1))) : e[0] === "ÿ" && e[1] === "þ" ? (t = "utf-16le", e.length % 2 === 1 && (e = e.slice(0, -1))) : e[0] === "ï" && e[1] === "»" && e[2] === "¿" && (t = "utf-8"), t)
      try {
        const i = new TextDecoder(t, {
          fatal: !0
        }), s = qe(e), a = i.decode(s);
        return a.includes("\x1B") ? a.replaceAll(/\x1b[^\x1b]*(?:\x1b|$)/g, "") : a;
      } catch (i) {
        k(`stringToPDFString: "${i}".`);
      }
  }
  const A = [];
  for (let t = 0, i = e.length; t < i; t++) {
    const s = e.charCodeAt(t);
    if (s === 27) {
      for (; ++t < i && e.charCodeAt(t) !== 27; )
        ;
      continue;
    }
    const a = pC[s];
    A.push(a ? String.fromCharCode(a) : e.charAt(t));
  }
  return A.join("");
}
function Zs(e) {
  return decodeURIComponent(escape(e));
}
function Or(e) {
  return unescape(encodeURIComponent(e));
}
function E0(e, A) {
  if (e.length !== A.length)
    return !1;
  for (let t = 0, i = e.length; t < i; t++)
    if (e[t] !== A[t])
      return !1;
  return !0;
}
function mi(e = /* @__PURE__ */ new Date()) {
  return [e.getUTCFullYear().toString(), (e.getUTCMonth() + 1).toString().padStart(2, "0"), e.getUTCDate().toString().padStart(2, "0"), e.getUTCHours().toString().padStart(2, "0"), e.getUTCMinutes().toString().padStart(2, "0"), e.getUTCSeconds().toString().padStart(2, "0")].join("");
}
let fr = null, Do = null;
function yC(e) {
  return fr || (fr = /([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu, Do = /* @__PURE__ */ new Map([["ﬅ", "ſt"]])), e.replaceAll(fr, (A, t, i) => t ? t.normalize("NFKC") : Do.get(i));
}
const wC = "pdfjs_internal_id_", _e = {
  BEZIER_CURVE_TO: 0,
  MOVE_TO: 1,
  LINE_TO: 2,
  QUADRATIC_CURVE_TO: 3,
  RESTORE: 4,
  SAVE: 5,
  SCALE: 6,
  TRANSFORM: 7,
  TRANSLATE: 8
};
function ko(e) {
  return Uint8Array.prototype.toHex ? e.toHex() : Array.from(e, (A) => P0[A]).join("");
}
function bC(e) {
  return Uint8Array.fromBase64 ? Uint8Array.fromBase64(e) : qe(atob(e));
}
typeof Promise.try != "function" && (Promise.try = function(e, ...A) {
  return new Promise((t) => {
    t(e(...A));
  });
});
const DC = Symbol("CIRCULAR_REF"), Me = Symbol("EOF");
let sn = /* @__PURE__ */ Object.create(null), an = /* @__PURE__ */ Object.create(null), S0 = /* @__PURE__ */ Object.create(null);
function kC() {
  sn = /* @__PURE__ */ Object.create(null), an = /* @__PURE__ */ Object.create(null), S0 = /* @__PURE__ */ Object.create(null);
}
class L {
  constructor(A) {
    this.name = A;
  }
  static get(A) {
    return an[A] || (an[A] = new L(A));
  }
}
class De {
  constructor(A) {
    this.cmd = A;
  }
  static get(A) {
    return sn[A] || (sn[A] = new De(A));
  }
}
const cc = function() {
  return cc;
};
class R {
  constructor(A = null) {
    this._map = /* @__PURE__ */ new Map(), this.xref = A, this.objId = null, this.suppressEncryption = !1, this.__nonSerializable__ = cc;
  }
  assignXref(A) {
    this.xref = A;
  }
  get size() {
    return this._map.size;
  }
  get(A, t, i) {
    let s = this._map.get(A);
    return s === void 0 && t !== void 0 && (s = this._map.get(t), s === void 0 && i !== void 0 && (s = this._map.get(i))), s instanceof nA && this.xref ? this.xref.fetch(s, this.suppressEncryption) : s;
  }
  async getAsync(A, t, i) {
    let s = this._map.get(A);
    return s === void 0 && t !== void 0 && (s = this._map.get(t), s === void 0 && i !== void 0 && (s = this._map.get(i))), s instanceof nA && this.xref ? this.xref.fetchAsync(s, this.suppressEncryption) : s;
  }
  getArray(A, t, i) {
    let s = this._map.get(A);
    if (s === void 0 && t !== void 0 && (s = this._map.get(t), s === void 0 && i !== void 0 && (s = this._map.get(i))), s instanceof nA && this.xref && (s = this.xref.fetch(s, this.suppressEncryption)), Array.isArray(s)) {
      s = s.slice();
      for (let a = 0, n = s.length; a < n; a++)
        s[a] instanceof nA && this.xref && (s[a] = this.xref.fetch(s[a], this.suppressEncryption));
    }
    return s;
  }
  getRaw(A) {
    return this._map.get(A);
  }
  getKeys() {
    return [...this._map.keys()];
  }
  getRawValues() {
    return [...this._map.values()];
  }
  set(A, t) {
    this._map.set(A, t);
  }
  has(A) {
    return this._map.has(A);
  }
  *[Symbol.iterator]() {
    for (const [A, t] of this._map)
      yield [A, t instanceof nA && this.xref ? this.xref.fetch(t, this.suppressEncryption) : t];
  }
  static get empty() {
    const A = new R(null);
    return A.set = (t, i) => {
      WA("Should not call `set` on the empty dictionary.");
    }, tA(this, "empty", A);
  }
  static merge({
    xref: A,
    dictArray: t,
    mergeSubDicts: i = !1
  }) {
    const s = new R(A), a = /* @__PURE__ */ new Map();
    for (const n of t)
      if (n instanceof R)
        for (const [r, g] of n._map) {
          let o = a.get(r);
          if (o === void 0)
            o = [], a.set(r, o);
          else if (!i || !(g instanceof R))
            continue;
          o.push(g);
        }
    for (const [n, r] of a) {
      if (r.length === 1 || !(r[0] instanceof R)) {
        s._map.set(n, r[0]);
        continue;
      }
      const g = new R(A);
      for (const o of r)
        for (const [I, c] of o._map)
          g._map.has(I) || g._map.set(I, c);
      g.size > 0 && s._map.set(n, g);
    }
    return a.clear(), s.size > 0 ? s : R.empty;
  }
  clone() {
    const A = new R(this.xref);
    for (const t of this.getKeys())
      A.set(t, this.getRaw(t));
    return A;
  }
  delete(A) {
    delete this._map[A];
  }
}
class nA {
  constructor(A, t) {
    this.num = A, this.gen = t;
  }
  toString() {
    return this.gen === 0 ? `${this.num}R` : `${this.num}R${this.gen}`;
  }
  static fromString(A) {
    const t = S0[A];
    if (t)
      return t;
    const i = /^(\d+)R(\d*)$/.exec(A);
    return !i || i[1] === "0" ? null : S0[A] = new nA(parseInt(i[1]), i[2] ? parseInt(i[2]) : 0);
  }
  static get(A, t) {
    const i = t === 0 ? `${A}R` : `${A}R${t}`;
    return S0[i] || (S0[i] = new nA(A, t));
  }
}
class Ge {
  constructor(A = null) {
    this._set = new Set(A == null ? void 0 : A._set);
  }
  has(A) {
    return this._set.has(A.toString());
  }
  put(A) {
    this._set.add(A.toString());
  }
  remove(A) {
    this._set.delete(A.toString());
  }
  [Symbol.iterator]() {
    return this._set.values();
  }
  clear() {
    this._set.clear();
  }
}
class It {
  constructor() {
    this._map = /* @__PURE__ */ new Map();
  }
  get size() {
    return this._map.size;
  }
  get(A) {
    return this._map.get(A.toString());
  }
  has(A) {
    return this._map.has(A.toString());
  }
  put(A, t) {
    this._map.set(A.toString(), t);
  }
  putAlias(A, t) {
    this._map.set(A.toString(), this.get(t));
  }
  [Symbol.iterator]() {
    return this._map.values();
  }
  clear() {
    this._map.clear();
  }
  *values() {
    yield* this._map.values();
  }
  *items() {
    for (const [A, t] of this._map)
      yield [nA.fromString(A), t];
  }
}
function xe(e, A) {
  return e instanceof L && (A === void 0 || e.name === A);
}
function Ne(e, A) {
  return e instanceof De && (A === void 0 || e.cmd === A);
}
function lc(e, A) {
  return e instanceof R && (A === void 0 || xe(e.get("Type"), A));
}
function pn(e, A) {
  return e.num === A.num && e.gen === A.gen;
}
class JA {
  get length() {
    WA("Abstract getter `length` accessed");
  }
  get isEmpty() {
    WA("Abstract getter `isEmpty` accessed");
  }
  get isDataLoaded() {
    return tA(this, "isDataLoaded", !0);
  }
  getByte() {
    WA("Abstract method `getByte` called");
  }
  getBytes(A) {
    WA("Abstract method `getBytes` called");
  }
  async getImageData(A, t) {
    return this.getBytes(A, t);
  }
  async asyncGetBytes() {
    WA("Abstract method `asyncGetBytes` called");
  }
  get isAsync() {
    return !1;
  }
  get canAsyncDecodeImageFromBuffer() {
    return !1;
  }
  async getTransferableImage() {
    return null;
  }
  peekByte() {
    const A = this.getByte();
    return A !== -1 && this.pos--, A;
  }
  peekBytes(A) {
    const t = this.getBytes(A);
    return this.pos -= t.length, t;
  }
  getUint16() {
    const A = this.getByte(), t = this.getByte();
    return A === -1 || t === -1 ? -1 : (A << 8) + t;
  }
  getInt32() {
    const A = this.getByte(), t = this.getByte(), i = this.getByte(), s = this.getByte();
    return (A << 24) + (t << 16) + (i << 8) + s;
  }
  getByteRange(A, t) {
    WA("Abstract method `getByteRange` called");
  }
  getString(A) {
    return lt(this.getBytes(A));
  }
  skip(A) {
    this.pos += A || 1;
  }
  reset() {
    WA("Abstract method `reset` called");
  }
  moveStart() {
    WA("Abstract method `moveStart` called");
  }
  makeSubStream(A, t, i = null) {
    WA("Abstract method `makeSubStream` called");
  }
  getBaseStreams() {
    return null;
  }
}
const Cc = /^[1-9]\.\d$/, Zr = 2 ** 31 - 1, SC = -(2 ** 31);
function Ce(e) {
  let A;
  return function() {
    return e && (A = /* @__PURE__ */ Object.create(null), e(A), e = null), A;
  };
}
class Ie extends At {
  constructor(A, t) {
    super(`Missing data [${A}, ${t})`, "MissingDataException"), this.begin = A, this.end = t;
  }
}
class jr extends At {
  constructor(A) {
    super(A, "ParserEOFException");
  }
}
class Ji extends At {
  constructor(A) {
    super(A, "XRefEntryException");
  }
}
class W0 extends At {
  constructor(A) {
    super(A, "XRefParseException");
  }
}
function hc(e) {
  const A = e.length;
  if (A === 0)
    return new Uint8Array(0);
  if (A === 1)
    return new Uint8Array(e[0]);
  let t = 0;
  for (let a = 0; a < A; a++)
    t += e[a].byteLength;
  const i = new Uint8Array(t);
  let s = 0;
  for (let a = 0; a < A; a++) {
    const n = new Uint8Array(e[a]);
    i.set(n, s), s += n.byteLength;
  }
  return i;
}
function Ut({
  dict: e,
  key: A,
  getArray: t = !1,
  stopWhenFound: i = !0
}) {
  let s;
  const a = new Ge();
  for (; e instanceof R && !(e.objId && a.has(e.objId)); ) {
    e.objId && a.put(e.objId);
    const n = t ? e.getArray(A) : e.get(A);
    if (n !== void 0) {
      if (i)
        return n;
      (s || (s = [])).push(n);
    }
    e = e.get("Parent");
  }
  return s;
}
function FC(e, A, t) {
  const i = new Ge(), s = e, a = {
    dict: null,
    ref: null
  };
  for (; e instanceof R && !i.has(A) && (i.put(A), !e.has("T")); ) {
    if (A = e.getRaw("Parent"), !(A instanceof nA))
      return a;
    e = t.fetch(A);
  }
  return e instanceof R && e !== s && (a.dict = e, a.ref = A), a;
}
const ur = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM", "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC", "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"];
function RC(e, A = !1) {
  nt(Number.isInteger(e) && e > 0, "The number should be a positive integer.");
  const t = "M".repeat(e / 1e3 | 0) + ur[e % 1e3 / 100 | 0] + ur[10 + (e % 100 / 10 | 0)] + ur[20 + e % 10];
  return A ? t.toLowerCase() : t;
}
function vg(e) {
  return e > 0 ? Math.ceil(Math.log2(e)) : 0;
}
function Di(e, A) {
  return e[A] << 24 >> 24;
}
function ce(e, A) {
  return e[A] << 8 | e[A + 1];
}
function le(e, A) {
  return (e[A] << 24 | e[A + 1] << 16 | e[A + 2] << 8 | e[A + 3]) >>> 0;
}
function mt(e) {
  return e === 32 || e === 9 || e === 13 || e === 10;
}
function NC(e, A) {
  return Array.isArray(e) && e.length === A && e.every((t) => typeof t == "boolean");
}
function rt(e, A) {
  return Array.isArray(e) ? (A === null || e.length === A) && e.every((t) => typeof t == "number") : ArrayBuffer.isView(e) && (e.length === 0 || typeof e[0] == "number") && (A === null || e.length === A);
}
function Yi(e, A) {
  return rt(e, 6) ? e : A;
}
function Xr(e, A) {
  return rt(e, 4) ? e : A;
}
function ai(e, A) {
  return rt(e, 4) ? ye.normalizeRect(e) : A;
}
function Bc(e) {
  const A = /(.+)\[(\d+)\]$/;
  return e.split(".").map((t) => {
    const i = t.match(A);
    return i ? {
      name: i[1],
      pos: parseInt(i[2], 10)
    } : {
      name: t,
      pos: 0
    };
  });
}
function Tg(e) {
  const A = [];
  let t = 0;
  for (let i = 0, s = e.length; i < s; i++) {
    const a = e.charCodeAt(i);
    (a < 33 || a > 126 || a === 35 || a === 40 || a === 41 || a === 60 || a === 62 || a === 91 || a === 93 || a === 123 || a === 125 || a === 47 || a === 37) && (t < i && A.push(e.substring(t, i)), A.push(`#${a.toString(16)}`), t = i + 1);
  }
  return A.length === 0 ? e : (t < e.length && A.push(e.substring(t, e.length)), A.join(""));
}
function ts(e) {
  return e.replaceAll(/([()\\\n\r])/g, (A) => A === `
` ? "\\n" : A === "\r" ? "\\r" : `\\${A}`);
}
function yn(e, A, t, i) {
  if (!e)
    return;
  let s = null;
  if (e instanceof nA) {
    if (i.has(e))
      return;
    s = e, i.put(s), e = A.fetch(e);
  }
  if (Array.isArray(e))
    for (const a of e)
      yn(a, A, t, i);
  else if (e instanceof R) {
    if (xe(e.get("S"), "JavaScript")) {
      const a = e.get("JS");
      let n;
      a instanceof JA ? n = a.getString() : typeof a == "string" && (n = a), n && (n = XA(n).replaceAll("\0", "")), n && t.push(n);
    }
    yn(e.getRaw("Next"), A, t, i);
  }
  s && i.remove(s);
}
function $n(e, A, t) {
  const i = /* @__PURE__ */ Object.create(null), s = Ut({
    dict: A,
    key: "AA",
    stopWhenFound: !1
  });
  if (s)
    for (let a = s.length - 1; a >= 0; a--) {
      const n = s[a];
      if (n instanceof R)
        for (const r of n.getKeys()) {
          const g = t[r];
          if (!g)
            continue;
          const o = n.getRaw(r), I = new Ge(), c = [];
          yn(o, e, c, I), c.length > 0 && (i[g] = c);
        }
    }
  if (A.has("A")) {
    const a = A.get("A"), n = new Ge(), r = [];
    yn(a, e, r, n), r.length > 0 && (i.Action = r);
  }
  return Ic(i) > 0 ? i : null;
}
const GC = {
  60: "&lt;",
  62: "&gt;",
  38: "&amp;",
  34: "&quot;",
  39: "&apos;"
};
function* UC(e) {
  for (let A = 0, t = e.length; A < t; A++) {
    const i = e.codePointAt(A);
    i > 55295 && (i < 57344 || i > 65533) && A++, yield i;
  }
}
function O0(e) {
  const A = [];
  let t = 0;
  for (let i = 0, s = e.length; i < s; i++) {
    const a = e.codePointAt(i);
    if (32 <= a && a <= 126) {
      const n = GC[a];
      n && (t < i && A.push(e.substring(t, i)), A.push(n), t = i + 1);
    } else
      t < i && A.push(e.substring(t, i)), A.push(`&#x${a.toString(16).toUpperCase()};`), a > 55295 && (a < 57344 || a > 65533) && i++, t = i + 1;
  }
  return A.length === 0 ? e : (t < e.length && A.push(e.substring(t, e.length)), A.join(""));
}
function Vr(e, A = !1) {
  const t = /^("|').*("|')$/.exec(e);
  if (t && t[1] === t[2]) {
    if (new RegExp(`[^\\\\]${t[1]}`).test(e.slice(1, -1)))
      return A && k(`FontFamily contains unescaped ${t[1]}: ${e}.`), !1;
  } else
    for (const i of e.split(/[ \t]+/))
      if (/^(\d|(-(\d|-)))/.test(i) || !/^[\w-\\]+$/.test(i))
        return A && k(`FontFamily contains invalid <custom-ident>: ${e}.`), !1;
  return !0;
}
function MC(e) {
  const A = "14", t = "400", i = /* @__PURE__ */ new Set(["100", "200", "300", "400", "500", "600", "700", "800", "900", "1000", "normal", "bold", "bolder", "lighter"]), {
    fontFamily: s,
    fontWeight: a,
    italicAngle: n
  } = e;
  if (!Vr(s, !0))
    return !1;
  const r = a ? a.toString() : "";
  e.fontWeight = i.has(r) ? r : t;
  const g = parseFloat(n);
  return e.italicAngle = isNaN(g) || g < -90 || g > 90 ? A : n.toString(), !0;
}
function Qc(e) {
  const A = ["app.launchURL", "window.open", "xfa.host.gotoURL"], i = new RegExp("^\\s*(" + A.join("|").replaceAll(".", "\\.") + `)\\((?:'|")([^'"]*)(?:'|")(?:,\\s*(\\w+)\\)|\\))`, "i").exec(e);
  return i != null && i[2] ? {
    url: i[2],
    newWindow: i[1] === "app.launchURL" && i[3] === "true"
  } : null;
}
function $A(e) {
  if (Number.isInteger(e))
    return e.toString();
  const A = Math.round(e * 100);
  return A % 100 === 0 ? (A / 100).toString() : A % 10 === 0 ? e.toFixed(1) : e.toFixed(2);
}
function Ec(e) {
  if (!e)
    return null;
  const A = /* @__PURE__ */ new Map();
  for (const [t, i] of e) {
    if (!t.startsWith(ac))
      continue;
    let s = A.get(i.pageIndex);
    s || (s = [], A.set(i.pageIndex, s)), s.push(i);
  }
  return A.size > 0 ? A : null;
}
function Mt(e) {
  return LC(e) ? e : fc(e, !0);
}
function LC(e) {
  return /^[\x00-\x7F]*$/.test(e);
}
function HC(e) {
  const A = [];
  for (let t = 0, i = e.length; t < i; t++) {
    const s = e.charCodeAt(t);
    A.push(P0[s >> 8 & 255], P0[s & 255]);
  }
  return A.join("");
}
function fc(e, A = !1) {
  const t = [];
  A && t.push("þÿ");
  for (let i = 0, s = e.length; i < s; i++) {
    const a = e.charCodeAt(i);
    t.push(String.fromCharCode(a >> 8 & 255), String.fromCharCode(a & 255));
  }
  return t.join("");
}
function wn(e, A, t) {
  switch (e) {
    case 90:
      return [0, 1, -1, 0, A, 0];
    case 180:
      return [-1, 0, 0, -1, A, t];
    case 270:
      return [0, -1, 1, 0, 0, t];
    default:
      throw new Error("Invalid rotation");
  }
}
function So(e) {
  return Math.ceil(Math.ceil(Math.log2(1 + e)) / 8);
}
class Ee extends JA {
  constructor(A, t, i, s) {
    super(), this.bytes = A instanceof Uint8Array ? A : new Uint8Array(A), this.start = t || 0, this.pos = this.start, this.end = t + i || this.bytes.length, this.dict = s;
  }
  get length() {
    return this.end - this.start;
  }
  get isEmpty() {
    return this.length === 0;
  }
  getByte() {
    return this.pos >= this.end ? -1 : this.bytes[this.pos++];
  }
  getBytes(A) {
    const t = this.bytes, i = this.pos, s = this.end;
    if (!A)
      return t.subarray(i, s);
    let a = i + A;
    return a > s && (a = s), this.pos = a, t.subarray(i, a);
  }
  getByteRange(A, t) {
    return A < 0 && (A = 0), t > this.end && (t = this.end), this.bytes.subarray(A, t);
  }
  reset() {
    this.pos = this.start;
  }
  moveStart() {
    this.start = this.pos;
  }
  makeSubStream(A, t, i = null) {
    return new Ee(this.bytes.buffer, A, t, i);
  }
}
class Bt extends Ee {
  constructor(A) {
    super(qe(A));
  }
}
class _r extends Ee {
  constructor() {
    super(new Uint8Array(0));
  }
}
class JC extends Ee {
  constructor(A, t, i) {
    super(new Uint8Array(A), 0, A, null), this.chunkSize = t, this._loadedChunks = /* @__PURE__ */ new Set(), this.numChunks = Math.ceil(A / t), this.manager = i, this.progressiveDataLength = 0, this.lastSuccessfulEnsureByteChunk = -1;
  }
  getMissingChunks() {
    const A = [];
    for (let t = 0, i = this.numChunks; t < i; ++t)
      this._loadedChunks.has(t) || A.push(t);
    return A;
  }
  get numChunksLoaded() {
    return this._loadedChunks.size;
  }
  get isDataLoaded() {
    return this.numChunksLoaded === this.numChunks;
  }
  onReceiveData(A, t) {
    const i = this.chunkSize;
    if (A % i !== 0)
      throw new Error(`Bad begin offset: ${A}`);
    const s = A + t.byteLength;
    if (s % i !== 0 && s !== this.bytes.length)
      throw new Error(`Bad end offset: ${s}`);
    this.bytes.set(new Uint8Array(t), A);
    const a = Math.floor(A / i), n = Math.floor((s - 1) / i) + 1;
    for (let r = a; r < n; ++r)
      this._loadedChunks.add(r);
  }
  onReceiveProgressiveData(A) {
    let t = this.progressiveDataLength;
    const i = Math.floor(t / this.chunkSize);
    this.bytes.set(new Uint8Array(A), t), t += A.byteLength, this.progressiveDataLength = t;
    const s = t >= this.end ? this.numChunks : Math.floor(t / this.chunkSize);
    for (let a = i; a < s; ++a)
      this._loadedChunks.add(a);
  }
  ensureByte(A) {
    if (A < this.progressiveDataLength)
      return;
    const t = Math.floor(A / this.chunkSize);
    if (!(t > this.numChunks) && t !== this.lastSuccessfulEnsureByteChunk) {
      if (!this._loadedChunks.has(t))
        throw new Ie(A, A + 1);
      this.lastSuccessfulEnsureByteChunk = t;
    }
  }
  ensureRange(A, t) {
    if (A >= t || t <= this.progressiveDataLength)
      return;
    const i = Math.floor(A / this.chunkSize);
    if (i > this.numChunks)
      return;
    const s = Math.min(Math.floor((t - 1) / this.chunkSize) + 1, this.numChunks);
    for (let a = i; a < s; ++a)
      if (!this._loadedChunks.has(a))
        throw new Ie(A, t);
  }
  nextEmptyChunk(A) {
    const t = this.numChunks;
    for (let i = 0; i < t; ++i) {
      const s = (A + i) % t;
      if (!this._loadedChunks.has(s))
        return s;
    }
    return null;
  }
  hasChunk(A) {
    return this._loadedChunks.has(A);
  }
  getByte() {
    const A = this.pos;
    return A >= this.end ? -1 : (A >= this.progressiveDataLength && this.ensureByte(A), this.bytes[this.pos++]);
  }
  getBytes(A) {
    const t = this.bytes, i = this.pos, s = this.end;
    if (!A)
      return s > this.progressiveDataLength && this.ensureRange(i, s), t.subarray(i, s);
    let a = i + A;
    return a > s && (a = s), a > this.progressiveDataLength && this.ensureRange(i, a), this.pos = a, t.subarray(i, a);
  }
  getByteRange(A, t) {
    return A < 0 && (A = 0), t > this.end && (t = this.end), t > this.progressiveDataLength && this.ensureRange(A, t), this.bytes.subarray(A, t);
  }
  makeSubStream(A, t, i = null) {
    t ? A + t > this.progressiveDataLength && this.ensureRange(A, A + t) : A >= this.progressiveDataLength && this.ensureByte(A);
    function s() {
    }
    s.prototype = Object.create(this), s.prototype.getMissingChunks = function() {
      const n = this.chunkSize, r = Math.floor(this.start / n), g = Math.floor((this.end - 1) / n) + 1, o = [];
      for (let I = r; I < g; ++I)
        this._loadedChunks.has(I) || o.push(I);
      return o;
    }, Object.defineProperty(s.prototype, "isDataLoaded", {
      get() {
        return this.numChunksLoaded === this.numChunks ? !0 : this.getMissingChunks().length === 0;
      },
      configurable: !0
    });
    const a = new s();
    return a.pos = a.start = A, a.end = A + t || this.end, a.dict = i, a;
  }
  getBaseStreams() {
    return [this];
  }
}
class YC {
  constructor(A, t) {
    this.length = t.length, this.chunkSize = t.rangeChunkSize, this.stream = new JC(this.length, this.chunkSize, this), this.pdfNetworkStream = A, this.disableAutoFetch = t.disableAutoFetch, this.msgHandler = t.msgHandler, this.currRequestId = 0, this._chunksNeededByRequest = /* @__PURE__ */ new Map(), this._requestsByChunk = /* @__PURE__ */ new Map(), this._promisesByRequest = /* @__PURE__ */ new Map(), this.progressiveDataLength = 0, this.aborted = !1, this._loadedStreamCapability = Promise.withResolvers();
  }
  sendRequest(A, t) {
    const i = this.pdfNetworkStream.getRangeReader(A, t);
    i.isStreamingSupported || (i.onProgress = this.onProgress.bind(this));
    let s = [], a = 0;
    return new Promise((n, r) => {
      const g = ({
        value: o,
        done: I
      }) => {
        try {
          if (I) {
            const c = hc(s);
            s = null, n(c);
            return;
          }
          a += o.byteLength, i.isStreamingSupported && this.onProgress({
            loaded: a
          }), s.push(o), i.read().then(g, r);
        } catch (c) {
          r(c);
        }
      };
      i.read().then(g, r);
    }).then((n) => {
      this.aborted || this.onReceiveData({
        chunk: n,
        begin: A
      });
    });
  }
  requestAllChunks(A = !1) {
    if (!A) {
      const t = this.stream.getMissingChunks();
      this._requestChunks(t);
    }
    return this._loadedStreamCapability.promise;
  }
  _requestChunks(A) {
    const t = this.currRequestId++, i = /* @__PURE__ */ new Set();
    this._chunksNeededByRequest.set(t, i);
    for (const n of A)
      this.stream.hasChunk(n) || i.add(n);
    if (i.size === 0)
      return Promise.resolve();
    const s = Promise.withResolvers();
    this._promisesByRequest.set(t, s);
    const a = [];
    for (const n of i) {
      let r = this._requestsByChunk.get(n);
      r || (r = [], this._requestsByChunk.set(n, r), a.push(n)), r.push(t);
    }
    if (a.length > 0) {
      const n = this.groupChunks(a);
      for (const r of n) {
        const g = r.beginChunk * this.chunkSize, o = Math.min(r.endChunk * this.chunkSize, this.length);
        this.sendRequest(g, o).catch(s.reject);
      }
    }
    return s.promise.catch((n) => {
      if (!this.aborted)
        throw n;
    });
  }
  getStream() {
    return this.stream;
  }
  requestRange(A, t) {
    t = Math.min(t, this.length);
    const i = this.getBeginChunk(A), s = this.getEndChunk(t), a = [];
    for (let n = i; n < s; ++n)
      a.push(n);
    return this._requestChunks(a);
  }
  requestRanges(A = []) {
    const t = [];
    for (const i of A) {
      const s = this.getBeginChunk(i.begin), a = this.getEndChunk(i.end);
      for (let n = s; n < a; ++n)
        t.includes(n) || t.push(n);
    }
    return t.sort(function(i, s) {
      return i - s;
    }), this._requestChunks(t);
  }
  groupChunks(A) {
    const t = [];
    let i = -1, s = -1;
    for (let a = 0, n = A.length; a < n; ++a) {
      const r = A[a];
      i < 0 && (i = r), s >= 0 && s + 1 !== r && (t.push({
        beginChunk: i,
        endChunk: s + 1
      }), i = r), a + 1 === A.length && t.push({
        beginChunk: i,
        endChunk: r + 1
      }), s = r;
    }
    return t;
  }
  onProgress(A) {
    this.msgHandler.send("DocProgress", {
      loaded: this.stream.numChunksLoaded * this.chunkSize + A.loaded,
      total: this.length
    });
  }
  onReceiveData(A) {
    const t = A.chunk, i = A.begin === void 0, s = i ? this.progressiveDataLength : A.begin, a = s + t.byteLength, n = Math.floor(s / this.chunkSize), r = a < this.length ? Math.floor(a / this.chunkSize) : Math.ceil(a / this.chunkSize);
    i ? (this.stream.onReceiveProgressiveData(t), this.progressiveDataLength = a) : this.stream.onReceiveData(s, t), this.stream.isDataLoaded && this._loadedStreamCapability.resolve(this.stream);
    const g = [];
    for (let o = n; o < r; ++o) {
      const I = this._requestsByChunk.get(o);
      if (I) {
        this._requestsByChunk.delete(o);
        for (const c of I) {
          const l = this._chunksNeededByRequest.get(c);
          l.has(o) && l.delete(o), !(l.size > 0) && g.push(c);
        }
      }
    }
    if (!this.disableAutoFetch && this._requestsByChunk.size === 0) {
      let o;
      if (this.stream.numChunksLoaded === 1) {
        const I = this.stream.numChunks - 1;
        this.stream.hasChunk(I) || (o = I);
      } else
        o = this.stream.nextEmptyChunk(r);
      Number.isInteger(o) && this._requestChunks([o]);
    }
    for (const o of g) {
      const I = this._promisesByRequest.get(o);
      this._promisesByRequest.delete(o), I.resolve();
    }
    this.msgHandler.send("DocProgress", {
      loaded: this.stream.numChunksLoaded * this.chunkSize,
      total: this.length
    });
  }
  onError(A) {
    this._loadedStreamCapability.reject(A);
  }
  getBeginChunk(A) {
    return Math.floor(A / this.chunkSize);
  }
  getEndChunk(A) {
    return Math.floor((A - 1) / this.chunkSize) + 1;
  }
  abort(A) {
    var t;
    this.aborted = !0, (t = this.pdfNetworkStream) == null || t.cancelAllRequests(A);
    for (const i of this._promisesByRequest.values())
      i.reject(A);
  }
}
function KC(e, A, t, i, s, a, n) {
  n = n !== 1 ? 0 : n;
  const g = t / s, o = i / a;
  let I = 0, c;
  const l = new Uint16Array(s), C = t * 3;
  for (let h = 0; h < s; h++)
    l[h] = Math.floor(h * g) * 3;
  for (let h = 0; h < a; h++) {
    const B = Math.floor(h * o) * C;
    for (let Q = 0; Q < s; Q++)
      c = B + l[Q], A[I++] = e[c++], A[I++] = e[c++], A[I++] = e[c++], I += n;
  }
}
function vC(e, A, t, i, s, a, n) {
  const r = t / s, g = i / a;
  let o = 0;
  const I = new Uint16Array(s);
  if (n === 1) {
    for (let h = 0; h < s; h++)
      I[h] = Math.floor(h * r);
    const c = new Uint32Array(e.buffer), l = new Uint32Array(A.buffer), C = ht.isLittleEndian ? 16777215 : 4294967040;
    for (let h = 0; h < a; h++) {
      const B = c.subarray(Math.floor(h * g) * t);
      for (let Q = 0; Q < s; Q++)
        l[o++] |= B[I[Q]] & C;
    }
  } else {
    const l = t * 4;
    for (let C = 0; C < s; C++)
      I[C] = Math.floor(C * r) * 4;
    for (let C = 0; C < a; C++) {
      const h = e.subarray(Math.floor(C * g) * l);
      for (let B = 0; B < s; B++) {
        const Q = I[B];
        A[o++] = h[Q], A[o++] = h[Q + 1], A[o++] = h[Q + 2];
      }
    }
  }
}
function TC(e, A, t) {
  if (t === 1) {
    const i = new Uint32Array(e.buffer), s = new Uint32Array(A.buffer), a = ht.isLittleEndian ? 16777215 : 4294967040;
    for (let n = 0, r = i.length; n < r; n++)
      s[n] |= i[n] & a;
  } else {
    let i = 0;
    for (let s = 0, a = e.length; s < a; s += 4)
      A[i++] = e[s], A[i++] = e[s + 1], A[i++] = e[s + 2];
  }
}
class LA {
  constructor(A, t) {
    this.name = A, this.numComps = t;
  }
  getRgb(A, t) {
    const i = new Uint8ClampedArray(3);
    return this.getRgbItem(A, t, i, 0), i;
  }
  getRgbItem(A, t, i, s) {
    WA("Should not call ColorSpace.getRgbItem");
  }
  getRgbBuffer(A, t, i, s, a, n, r) {
    WA("Should not call ColorSpace.getRgbBuffer");
  }
  getOutputLength(A, t) {
    WA("Should not call ColorSpace.getOutputLength");
  }
  isPassthrough(A) {
    return !1;
  }
  isDefaultDecode(A, t) {
    return LA.isDefaultDecode(A, this.numComps);
  }
  fillRgb(A, t, i, s, a, n, r, g, o) {
    const I = t * i;
    let c = null;
    const l = 1 << r, C = i !== a || t !== s;
    if (this.isPassthrough(r))
      c = g;
    else if (this.numComps === 1 && I > l && this.name !== "DeviceGray" && this.name !== "DeviceRGB") {
      const h = r <= 8 ? new Uint8Array(l) : new Uint16Array(l);
      for (let Q = 0; Q < l; Q++)
        h[Q] = Q;
      const B = new Uint8ClampedArray(l * 3);
      if (this.getRgbBuffer(h, 0, l, B, 0, r, 0), C) {
        c = new Uint8Array(I * 3);
        let Q = 0;
        for (let E = 0; E < I; ++E) {
          const f = g[E] * 3;
          c[Q++] = B[f], c[Q++] = B[f + 1], c[Q++] = B[f + 2];
        }
      } else {
        let Q = 0;
        for (let E = 0; E < I; ++E) {
          const f = g[E] * 3;
          A[Q++] = B[f], A[Q++] = B[f + 1], A[Q++] = B[f + 2], Q += o;
        }
      }
    } else C ? (c = new Uint8ClampedArray(I * 3), this.getRgbBuffer(g, 0, I, c, 0, r, 0)) : this.getRgbBuffer(g, 0, s * n, A, 0, r, o);
    if (c)
      if (C)
        KC(c, A, t, i, s, a, o);
      else {
        let h = 0, B = 0;
        for (let Q = 0, E = s * n; Q < E; Q++)
          A[h++] = c[B++], A[h++] = c[B++], A[h++] = c[B++], h += o;
      }
  }
  get usesZeroToOneRange() {
    return tA(this, "usesZeroToOneRange", !0);
  }
  static _cache(A, t, i, s) {
    if (!i)
      throw new Error('ColorSpace._cache - expected "localColorSpaceCache" argument.');
    if (!s)
      throw new Error('ColorSpace._cache - expected "parsedColorSpace" argument.');
    let a, n;
    A instanceof nA && (n = A, A = t.fetch(A)), A instanceof L && (a = A.name), (a || n) && i.set(a, n, s);
  }
  static getCached(A, t, i) {
    if (!i)
      throw new Error('ColorSpace.getCached - expected "localColorSpaceCache" argument.');
    if (A instanceof nA) {
      const s = i.getByRef(A);
      if (s)
        return s;
      try {
        A = t.fetch(A);
      } catch (a) {
        if (a instanceof Ie)
          throw a;
      }
    }
    if (A instanceof L) {
      const s = i.getByName(A.name);
      if (s)
        return s;
    }
    return null;
  }
  static async parseAsync({
    cs: A,
    xref: t,
    resources: i = null,
    pdfFunctionFactory: s,
    localColorSpaceCache: a
  }) {
    const n = this._parse(A, t, i, s);
    return this._cache(A, t, a, n), n;
  }
  static parse({
    cs: A,
    xref: t,
    resources: i = null,
    pdfFunctionFactory: s,
    localColorSpaceCache: a
  }) {
    const n = this.getCached(A, t, a);
    if (n)
      return n;
    const r = this._parse(A, t, i, s);
    return this._cache(A, t, a, r), r;
  }
  static _parse(A, t, i = null, s) {
    if (A = t.fetchIfRef(A), A instanceof L)
      switch (A.name) {
        case "G":
        case "DeviceGray":
          return this.singletons.gray;
        case "RGB":
        case "DeviceRGB":
          return this.singletons.rgb;
        case "DeviceRGBA":
          return this.singletons.rgba;
        case "CMYK":
        case "DeviceCMYK":
          return this.singletons.cmyk;
        case "Pattern":
          return new Fo(null);
        default:
          if (i instanceof R) {
            const a = i.get("ColorSpace");
            if (a instanceof R) {
              const n = a.get(A.name);
              if (n) {
                if (n instanceof L)
                  return this._parse(n, t, i, s);
                A = n;
                break;
              }
            }
          }
          return k(`Unrecognized ColorSpace: ${A.name}`), this.singletons.gray;
      }
    if (Array.isArray(A)) {
      const a = t.fetchIfRef(A[0]).name;
      let n, r, g, o, I, c;
      switch (a) {
        case "G":
        case "DeviceGray":
          return this.singletons.gray;
        case "RGB":
        case "DeviceRGB":
          return this.singletons.rgb;
        case "CMYK":
        case "DeviceCMYK":
          return this.singletons.cmyk;
        case "CalGray":
          return n = t.fetchIfRef(A[1]), o = n.getArray("WhitePoint"), I = n.getArray("BlackPoint"), c = n.get("Gamma"), new XC(o, I, c);
        case "CalRGB":
          n = t.fetchIfRef(A[1]), o = n.getArray("WhitePoint"), I = n.getArray("BlackPoint"), c = n.getArray("Gamma");
          const l = n.getArray("Matrix");
          return new Ag(o, I, c, l);
        case "ICCBased":
          const h = t.fetchIfRef(A[1]).dict;
          r = h.get("N");
          const B = h.get("Alternate");
          if (B) {
            const x = this._parse(B, t, i, s);
            if (x.numComps === r)
              return x;
            k("ICCBased color space: Ignoring incorrect /Alternate entry.");
          }
          if (r === 1)
            return this.singletons.gray;
          if (r === 3)
            return this.singletons.rgb;
          if (r === 4)
            return this.singletons.cmyk;
          break;
        case "Pattern":
          return g = A[1] || null, g && (g = this._parse(g, t, i, s)), new Fo(g);
        case "I":
        case "Indexed":
          g = this._parse(A[1], t, i, s);
          const Q = Math.max(0, Math.min(t.fetchIfRef(A[2]), 255)), E = t.fetchIfRef(A[3]);
          return new PC(g, Q, E);
        case "Separation":
        case "DeviceN":
          const f = t.fetchIfRef(A[1]);
          r = Array.isArray(f) ? f.length : 1, g = this._parse(A[2], t, i, s);
          const d = s.create(A[3]);
          return new qC(r, g, d);
        case "Lab":
          n = t.fetchIfRef(A[1]), o = n.getArray("WhitePoint"), I = n.getArray("BlackPoint");
          const u = n.getArray("Range");
          return new VC(o, I, u);
        default:
          return k(`Unimplemented ColorSpace object: ${a}`), this.singletons.gray;
      }
    }
    return k(`Unrecognized ColorSpace object: ${A}`), this.singletons.gray;
  }
  static isDefaultDecode(A, t) {
    if (!Array.isArray(A))
      return !0;
    if (t * 2 !== A.length)
      return k("The decode map is not the correct length"), !0;
    for (let i = 0, s = A.length; i < s; i += 2)
      if (A[i] !== 0 || A[i + 1] !== 1)
        return !1;
    return !0;
  }
  static get singletons() {
    return tA(this, "singletons", {
      get gray() {
        return tA(this, "gray", new WC());
      },
      get rgb() {
        return tA(this, "rgb", new OC());
      },
      get rgba() {
        return tA(this, "rgba", new ZC());
      },
      get cmyk() {
        return tA(this, "cmyk", new jC());
      }
    });
  }
}
class qC extends LA {
  constructor(A, t, i) {
    super("Alternate", A), this.base = t, this.tintFn = i, this.tmpBuf = new Float32Array(t.numComps);
  }
  getRgbItem(A, t, i, s) {
    const a = this.tmpBuf;
    this.tintFn(A, t, a, 0), this.base.getRgbItem(a, 0, i, s);
  }
  getRgbBuffer(A, t, i, s, a, n, r) {
    const g = this.tintFn, o = this.base, I = 1 / ((1 << n) - 1), c = o.numComps, l = o.usesZeroToOneRange, C = (o.isPassthrough(8) || !l) && r === 0;
    let h = C ? a : 0;
    const B = C ? s : new Uint8ClampedArray(c * i), Q = this.numComps, E = new Float32Array(Q), f = new Float32Array(c);
    let d, u;
    for (d = 0; d < i; d++) {
      for (u = 0; u < Q; u++)
        E[u] = A[t++] * I;
      if (g(E, 0, f, 0), l)
        for (u = 0; u < c; u++)
          B[h++] = f[u] * 255;
      else
        o.getRgbItem(f, 0, B, h), h += c;
    }
    C || o.getRgbBuffer(B, 0, i, s, a, 8, r);
  }
  getOutputLength(A, t) {
    return this.base.getOutputLength(A * this.base.numComps / this.numComps, t);
  }
}
class Fo extends LA {
  constructor(A) {
    super("Pattern", null), this.base = A;
  }
  isDefaultDecode(A, t) {
    WA("Should not call PatternCS.isDefaultDecode");
  }
}
class PC extends LA {
  constructor(A, t, i) {
    super("Indexed", 1), this.base = A;
    const s = A.numComps * (t + 1);
    if (this.lookup = new Uint8Array(s), i instanceof JA) {
      const a = i.getBytes(s);
      this.lookup.set(a);
    } else if (typeof i == "string")
      for (let a = 0; a < s; ++a)
        this.lookup[a] = i.charCodeAt(a) & 255;
    else
      throw new T(`IndexedCS - unrecognized lookup table: ${i}`);
  }
  getRgbItem(A, t, i, s) {
    const a = this.base.numComps, n = A[t] * a;
    this.base.getRgbBuffer(this.lookup, n, 1, i, s, 8, 0);
  }
  getRgbBuffer(A, t, i, s, a, n, r) {
    const g = this.base, o = g.numComps, I = g.getOutputLength(o, r), c = this.lookup;
    for (let l = 0; l < i; ++l) {
      const C = A[t++] * o;
      g.getRgbBuffer(c, C, 1, s, a, 8, r), a += I;
    }
  }
  getOutputLength(A, t) {
    return this.base.getOutputLength(A * this.base.numComps, t);
  }
  isDefaultDecode(A, t) {
    return Array.isArray(A) ? A.length !== 2 ? (k("Decode map length is not correct"), !0) : !Number.isInteger(t) || t < 1 ? (k("Bits per component is not correct"), !0) : A[0] === 0 && A[1] === (1 << t) - 1 : !0;
  }
}
class WC extends LA {
  constructor() {
    super("DeviceGray", 1);
  }
  getRgbItem(A, t, i, s) {
    const a = A[t] * 255;
    i[s] = i[s + 1] = i[s + 2] = a;
  }
  getRgbBuffer(A, t, i, s, a, n, r) {
    const g = 255 / ((1 << n) - 1);
    let o = t, I = a;
    for (let c = 0; c < i; ++c) {
      const l = g * A[o++];
      s[I++] = l, s[I++] = l, s[I++] = l, I += r;
    }
  }
  getOutputLength(A, t) {
    return A * (3 + t);
  }
}
class OC extends LA {
  constructor() {
    super("DeviceRGB", 3);
  }
  getRgbItem(A, t, i, s) {
    i[s] = A[t] * 255, i[s + 1] = A[t + 1] * 255, i[s + 2] = A[t + 2] * 255;
  }
  getRgbBuffer(A, t, i, s, a, n, r) {
    if (n === 8 && r === 0) {
      s.set(A.subarray(t, t + i * 3), a);
      return;
    }
    const g = 255 / ((1 << n) - 1);
    let o = t, I = a;
    for (let c = 0; c < i; ++c)
      s[I++] = g * A[o++], s[I++] = g * A[o++], s[I++] = g * A[o++], I += r;
  }
  getOutputLength(A, t) {
    return A * (3 + t) / 3 | 0;
  }
  isPassthrough(A) {
    return A === 8;
  }
}
class ZC extends LA {
  constructor() {
    super("DeviceRGBA", 4);
  }
  getOutputLength(A, t) {
    return A * 4;
  }
  isPassthrough(A) {
    return A === 8;
  }
  fillRgb(A, t, i, s, a, n, r, g, o) {
    i !== a || t !== s ? vC(g, A, t, i, s, a, o) : TC(g, A, o);
  }
}
var oa, zr;
class jC extends LA {
  constructor() {
    super("DeviceCMYK", 4);
    jA(this, oa);
  }
  getRgbItem(t, i, s, a) {
    BA(this, oa, zr).call(this, t, i, 1, s, a);
  }
  getRgbBuffer(t, i, s, a, n, r, g) {
    const o = 1 / ((1 << r) - 1);
    for (let I = 0; I < s; I++)
      BA(this, oa, zr).call(this, t, i, o, a, n), i += 4, n += 3 + g;
  }
  getOutputLength(t, i) {
    return t / 4 * (3 + i) | 0;
  }
}
oa = new WeakSet(), zr = function(t, i, s, a, n) {
  const r = t[i] * s, g = t[i + 1] * s, o = t[i + 2] * s, I = t[i + 3] * s;
  a[n] = 255 + r * (-4.387332384609988 * r + 54.48615194189176 * g + 18.82290502165302 * o + 212.25662451639585 * I + -285.2331026137004) + g * (1.7149763477362134 * g - 5.6096736904047315 * o + -17.873870861415444 * I - 5.497006427196366) + o * (-2.5217340131683033 * o - 21.248923337353073 * I + 17.5119270841813) + I * (-21.86122147463605 * I - 189.48180835922747), a[n + 1] = 255 + r * (8.841041422036149 * r + 60.118027045597366 * g + 6.871425592049007 * o + 31.159100130055922 * I + -79.2970844816548) + g * (-15.310361306967817 * g + 17.575251261109482 * o + 131.35250912493976 * I - 190.9453302588951) + o * (4.444339102852739 * o + 9.8632861493405 * I - 24.86741582555878) + I * (-20.737325471181034 * I - 187.80453709719578), a[n + 2] = 255 + r * (0.8842522430003296 * r + 8.078677503112928 * g + 30.89978309703729 * o - 0.23883238689178934 * I + -14.183576799673286) + g * (10.49593273432072 * g + 63.02378494754052 * o + 50.606957656360734 * I - 112.23884253719248) + o * (0.03296041114873217 * o + 115.60384449646641 * I + -193.58209356861505) + I * (-22.33816807309886 * I - 180.12613974708367);
};
var Ia, $r;
class XC extends LA {
  constructor(t, i, s) {
    super("CalGray", 1);
    jA(this, Ia);
    if (!t)
      throw new T("WhitePoint missing - required for color space CalGray");
    if ([this.XW, this.YW, this.ZW] = t, [this.XB, this.YB, this.ZB] = i || [0, 0, 0], this.G = s || 1, this.XW < 0 || this.ZW < 0 || this.YW !== 1)
      throw new T(`Invalid WhitePoint components for ${this.name}, no fallback available`);
    (this.XB < 0 || this.YB < 0 || this.ZB < 0) && (vA(`Invalid BlackPoint for ${this.name}, falling back to default.`), this.XB = this.YB = this.ZB = 0), (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) && k(`${this.name}, BlackPoint: XB: ${this.XB}, YB: ${this.YB}, ZB: ${this.ZB}, only default values are supported.`), this.G < 1 && (vA(`Invalid Gamma: ${this.G} for ${this.name}, falling back to default.`), this.G = 1);
  }
  getRgbItem(t, i, s, a) {
    BA(this, Ia, $r).call(this, t, i, s, a, 1);
  }
  getRgbBuffer(t, i, s, a, n, r, g) {
    const o = 1 / ((1 << r) - 1);
    for (let I = 0; I < s; ++I)
      BA(this, Ia, $r).call(this, t, i, a, n, o), i += 1, n += 3 + g;
  }
  getOutputLength(t, i) {
    return t * (3 + i);
  }
}
Ia = new WeakSet(), $r = function(t, i, s, a, n) {
  const g = (t[i] * n) ** this.G, o = this.YW * g, I = Math.max(295.8 * o ** 0.3333333333333333 - 40.8, 0);
  s[a] = I, s[a + 1] = I, s[a + 2] = I;
};
var ca, la, qn, Pn, Ca, _0, ha, Wn, zA, F0, uc, dc, nn, R0, N0, xc, mc, pc, eg;
const he = class he extends LA {
  constructor(t, i, s, a) {
    super("CalRGB", 3);
    jA(this, zA);
    if (!t)
      throw new T("WhitePoint missing - required for color space CalRGB");
    const [n, r, g] = this.whitePoint = t, [o, I, c] = this.blackPoint = i || new Float32Array(3);
    if ([this.GR, this.GG, this.GB] = s || new Float32Array([1, 1, 1]), [this.MXA, this.MYA, this.MZA, this.MXB, this.MYB, this.MZB, this.MXC, this.MYC, this.MZC] = a || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]), n < 0 || g < 0 || r !== 1)
      throw new T(`Invalid WhitePoint components for ${this.name}, no fallback available`);
    (o < 0 || I < 0 || c < 0) && (vA(`Invalid BlackPoint for ${this.name} [${o}, ${I}, ${c}], falling back to default.`), this.blackPoint = new Float32Array(3)), (this.GR < 0 || this.GG < 0 || this.GB < 0) && (vA(`Invalid Gamma [${this.GR}, ${this.GG}, ${this.GB}] for ${this.name}, falling back to default.`), this.GR = this.GG = this.GB = 1);
  }
  getRgbItem(t, i, s, a) {
    BA(this, zA, eg).call(this, t, i, s, a, 1);
  }
  getRgbBuffer(t, i, s, a, n, r, g) {
    const o = 1 / ((1 << r) - 1);
    for (let I = 0; I < s; ++I)
      BA(this, zA, eg).call(this, t, i, a, n, o), i += 3, n += 3 + g;
  }
  getOutputLength(t, i) {
    return t * (3 + i) / 3 | 0;
  }
};
ca = new WeakMap(), la = new WeakMap(), qn = new WeakMap(), Pn = new WeakMap(), Ca = new WeakMap(), _0 = new WeakMap(), ha = new WeakMap(), Wn = new WeakMap(), zA = new WeakSet(), F0 = function(t, i, s) {
  s[0] = t[0] * i[0] + t[1] * i[1] + t[2] * i[2], s[1] = t[3] * i[0] + t[4] * i[1] + t[5] * i[2], s[2] = t[6] * i[0] + t[7] * i[1] + t[8] * i[2];
}, uc = function(t, i, s) {
  s[0] = i[0] * 1 / t[0], s[1] = i[1] * 1 / t[1], s[2] = i[2] * 1 / t[2];
}, dc = function(t, i, s) {
  s[0] = i[0] * 0.95047 / t[0], s[1] = i[1] * 1 / t[1], s[2] = i[2] * 1.08883 / t[2];
}, nn = function(t) {
  return t <= 31308e-7 ? BA(this, zA, R0).call(this, 0, 1, 12.92 * t) : t >= 0.99554525 ? 1 : BA(this, zA, R0).call(this, 0, 1, (1 + 0.055) * t ** (1 / 2.4) - 0.055);
}, R0 = function(t, i, s) {
  return Math.max(t, Math.min(i, s));
}, N0 = function(t) {
  return t < 0 ? -BA(this, zA, N0).call(this, -t) : t > 8 ? ((t + 16) / 116) ** 3 : t * PA(he, Wn);
}, xc = function(t, i, s) {
  if (t[0] === 0 && t[1] === 0 && t[2] === 0) {
    s[0] = i[0], s[1] = i[1], s[2] = i[2];
    return;
  }
  const a = BA(this, zA, N0).call(this, 0), n = a, r = BA(this, zA, N0).call(this, t[0]), g = a, o = BA(this, zA, N0).call(this, t[1]), I = a, c = BA(this, zA, N0).call(this, t[2]), l = (1 - n) / (1 - r), C = 1 - l, h = (1 - g) / (1 - o), B = 1 - h, Q = (1 - I) / (1 - c), E = 1 - Q;
  s[0] = i[0] * l + C, s[1] = i[1] * h + B, s[2] = i[2] * Q + E;
}, mc = function(t, i, s) {
  if (t[0] === 1 && t[2] === 1) {
    s[0] = i[0], s[1] = i[1], s[2] = i[2];
    return;
  }
  const a = s;
  BA(this, zA, F0).call(this, PA(he, ca), i, a);
  const n = PA(he, Ca);
  BA(this, zA, uc).call(this, t, a, n), BA(this, zA, F0).call(this, PA(he, la), n, s);
}, pc = function(t, i, s) {
  const a = s;
  BA(this, zA, F0).call(this, PA(he, ca), i, a);
  const n = PA(he, Ca);
  BA(this, zA, dc).call(this, t, a, n), BA(this, zA, F0).call(this, PA(he, la), n, s);
}, eg = function(t, i, s, a, n) {
  const r = BA(this, zA, R0).call(this, 0, 1, t[i] * n), g = BA(this, zA, R0).call(this, 0, 1, t[i + 1] * n), o = BA(this, zA, R0).call(this, 0, 1, t[i + 2] * n), I = r === 1 ? 1 : r ** this.GR, c = g === 1 ? 1 : g ** this.GG, l = o === 1 ? 1 : o ** this.GB, C = this.MXA * I + this.MXB * c + this.MXC * l, h = this.MYA * I + this.MYB * c + this.MYC * l, B = this.MZA * I + this.MZB * c + this.MZC * l, Q = PA(he, _0);
  Q[0] = C, Q[1] = h, Q[2] = B;
  const E = PA(he, ha);
  BA(this, zA, mc).call(this, this.whitePoint, Q, E);
  const f = PA(he, _0);
  BA(this, zA, xc).call(this, this.blackPoint, E, f);
  const d = PA(he, ha);
  BA(this, zA, pc).call(this, PA(he, Pn), f, d);
  const u = PA(he, _0);
  BA(this, zA, F0).call(this, PA(he, qn), d, u), s[a] = BA(this, zA, nn).call(this, u[0]) * 255, s[a + 1] = BA(this, zA, nn).call(this, u[1]) * 255, s[a + 2] = BA(this, zA, nn).call(this, u[2]) * 255;
}, jA(he, ca, new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296])), jA(he, la, new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -85287e-7, 0.0400428, 0.9684867])), jA(he, qn, new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.969266, 1.8760108, 0.041556, 0.0556434, -0.2040259, 1.0572252])), jA(he, Pn, new Float32Array([1, 1, 1])), jA(he, Ca, new Float32Array(3)), jA(he, _0, new Float32Array(3)), jA(he, ha, new Float32Array(3)), jA(he, Wn, (24 / 116) ** 3 / 8);
let Ag = he;
var pt, rn, gn, tg;
class VC extends LA {
  constructor(t, i, s) {
    super("Lab", 3);
    jA(this, pt);
    if (!t)
      throw new T("WhitePoint missing - required for color space Lab");
    if ([this.XW, this.YW, this.ZW] = t, [this.amin, this.amax, this.bmin, this.bmax] = s || [-100, 100, -100, 100], [this.XB, this.YB, this.ZB] = i || [0, 0, 0], this.XW < 0 || this.ZW < 0 || this.YW !== 1)
      throw new T("Invalid WhitePoint components, no fallback available");
    (this.XB < 0 || this.YB < 0 || this.ZB < 0) && (vA("Invalid BlackPoint, falling back to default"), this.XB = this.YB = this.ZB = 0), (this.amin > this.amax || this.bmin > this.bmax) && (vA("Invalid Range, falling back to defaults"), this.amin = -100, this.amax = 100, this.bmin = -100, this.bmax = 100);
  }
  getRgbItem(t, i, s, a) {
    BA(this, pt, tg).call(this, t, i, !1, s, a);
  }
  getRgbBuffer(t, i, s, a, n, r, g) {
    const o = (1 << r) - 1;
    for (let I = 0; I < s; I++)
      BA(this, pt, tg).call(this, t, i, o, a, n), i += 3, n += 3 + g;
  }
  getOutputLength(t, i) {
    return t * (3 + i) / 3 | 0;
  }
  isDefaultDecode(t, i) {
    return !0;
  }
  get usesZeroToOneRange() {
    return tA(this, "usesZeroToOneRange", !1);
  }
}
pt = new WeakSet(), rn = function(t) {
  return t >= 6 / 29 ? t ** 3 : 108 / 841 * (t - 4 / 29);
}, gn = function(t, i, s, a) {
  return s + t * (a - s) / i;
}, tg = function(t, i, s, a, n) {
  let r = t[i], g = t[i + 1], o = t[i + 2];
  s !== !1 && (r = BA(this, pt, gn).call(this, r, s, 0, 100), g = BA(this, pt, gn).call(this, g, s, this.amin, this.amax), o = BA(this, pt, gn).call(this, o, s, this.bmin, this.bmax)), g > this.amax ? g = this.amax : g < this.amin && (g = this.amin), o > this.bmax ? o = this.bmax : o < this.bmin && (o = this.bmin);
  const I = (r + 16) / 116, c = I + g / 500, l = I - o / 200, C = this.XW * BA(this, pt, rn).call(this, c), h = this.YW * BA(this, pt, rn).call(this, I), B = this.ZW * BA(this, pt, rn).call(this, l);
  let Q, E, f;
  this.ZW < 1 ? (Q = C * 3.1339 + h * -1.617 + B * -0.4906, E = C * -0.9785 + h * 1.916 + B * 0.0333, f = C * 0.072 + h * -0.229 + B * 1.4057) : (Q = C * 3.2406 + h * -1.5372 + B * -0.4986, E = C * -0.9689 + h * 1.8758 + B * 0.0415, f = C * 0.0557 + h * -0.204 + B * 1.057), a[n] = Math.sqrt(Q) * 255, a[n + 1] = Math.sqrt(E) * 255, a[n + 2] = Math.sqrt(f) * 255;
};
function Ze(e, A) {
  let t = 0;
  for (let i = 0; i <= A; i++)
    t = t << 8 | e[i];
  return t >>> 0;
}
function Na(e, A) {
  return A === 1 ? String.fromCharCode(e[0], e[1]) : A === 3 ? String.fromCharCode(e[0], e[1], e[2], e[3]) : String.fromCharCode(...e.subarray(0, A + 1));
}
function tt(e, A, t) {
  let i = 0;
  for (let s = t; s >= 0; s--)
    i += e[s] + A[s], e[s] = i & 255, i >>= 8;
}
function Xi(e, A) {
  let t = 1;
  for (let i = A; i >= 0 && t > 0; i--)
    t += e[i], e[i] = t & 255, t >>= 8;
}
const p0 = 16, _C = 19;
class zC {
  constructor(A) {
    this.buffer = A, this.pos = 0, this.end = A.length, this.tmpBuf = new Uint8Array(_C);
  }
  readByte() {
    return this.pos >= this.end ? -1 : this.buffer[this.pos++];
  }
  readNumber() {
    let A = 0, t;
    do {
      const i = this.readByte();
      if (i < 0)
        throw new T("unexpected EOF in bcmap");
      t = !(i & 128), A = A << 7 | i & 127;
    } while (!t);
    return A;
  }
  readSigned() {
    const A = this.readNumber();
    return A & 1 ? ~(A >>> 1) : A >>> 1;
  }
  readHex(A, t) {
    A.set(this.buffer.subarray(this.pos, this.pos + t + 1)), this.pos += t + 1;
  }
  readHexNumber(A, t) {
    let i;
    const s = this.tmpBuf;
    let a = 0;
    do {
      const o = this.readByte();
      if (o < 0)
        throw new T("unexpected EOF in bcmap");
      i = !(o & 128), s[a++] = o & 127;
    } while (!i);
    let n = t, r = 0, g = 0;
    for (; n >= 0; ) {
      for (; g < 8 && s.length > 0; )
        r |= s[--a] << g, g += 7;
      A[n] = r & 255, n--, r >>= 8, g -= 8;
    }
  }
  readHexSigned(A, t) {
    this.readHexNumber(A, t);
    const i = A[t] & 1 ? 255 : 0;
    let s = 0;
    for (let a = 0; a <= t; a++)
      s = (s & 1) << 8 | A[a], A[a] = s >> 1 ^ i;
  }
  readString() {
    const A = this.readNumber(), t = new Array(A);
    for (let i = 0; i < A; i++)
      t[i] = this.readNumber();
    return String.fromCharCode(...t);
  }
}
class $C {
  async process(A, t, i) {
    const s = new zC(A), a = s.readByte();
    t.vertical = !!(a & 1);
    let n = null;
    const r = new Uint8Array(p0), g = new Uint8Array(p0), o = new Uint8Array(p0), I = new Uint8Array(p0), c = new Uint8Array(p0);
    let l, C;
    for (; (C = s.readByte()) >= 0; ) {
      const h = C >> 5;
      if (h === 7) {
        switch (C & 31) {
          case 0:
            s.readString();
            break;
          case 1:
            n = s.readString();
            break;
        }
        continue;
      }
      const B = !!(C & 16), Q = C & 15;
      if (Q + 1 > p0)
        throw new Error("BinaryCMapReader.process: Invalid dataSize.");
      const E = 1, f = s.readNumber();
      switch (h) {
        case 0:
          s.readHex(r, Q), s.readHexNumber(g, Q), tt(g, r, Q), t.addCodespaceRange(Q + 1, Ze(r, Q), Ze(g, Q));
          for (let d = 1; d < f; d++)
            Xi(g, Q), s.readHexNumber(r, Q), tt(r, g, Q), s.readHexNumber(g, Q), tt(g, r, Q), t.addCodespaceRange(Q + 1, Ze(r, Q), Ze(g, Q));
          break;
        case 1:
          s.readHex(r, Q), s.readHexNumber(g, Q), tt(g, r, Q), s.readNumber();
          for (let d = 1; d < f; d++)
            Xi(g, Q), s.readHexNumber(r, Q), tt(r, g, Q), s.readHexNumber(g, Q), tt(g, r, Q), s.readNumber();
          break;
        case 2:
          s.readHex(o, Q), l = s.readNumber(), t.mapOne(Ze(o, Q), l);
          for (let d = 1; d < f; d++)
            Xi(o, Q), B || (s.readHexNumber(c, Q), tt(o, c, Q)), l = s.readSigned() + (l + 1), t.mapOne(Ze(o, Q), l);
          break;
        case 3:
          s.readHex(r, Q), s.readHexNumber(g, Q), tt(g, r, Q), l = s.readNumber(), t.mapCidRange(Ze(r, Q), Ze(g, Q), l);
          for (let d = 1; d < f; d++)
            Xi(g, Q), B ? r.set(g) : (s.readHexNumber(r, Q), tt(r, g, Q)), s.readHexNumber(g, Q), tt(g, r, Q), l = s.readNumber(), t.mapCidRange(Ze(r, Q), Ze(g, Q), l);
          break;
        case 4:
          s.readHex(o, E), s.readHex(I, Q), t.mapOne(Ze(o, E), Na(I, Q));
          for (let d = 1; d < f; d++)
            Xi(o, E), B || (s.readHexNumber(c, E), tt(o, c, E)), Xi(I, Q), s.readHexSigned(c, Q), tt(I, c, Q), t.mapOne(Ze(o, E), Na(I, Q));
          break;
        case 5:
          s.readHex(r, E), s.readHexNumber(g, E), tt(g, r, E), s.readHex(I, Q), t.mapBfRange(Ze(r, E), Ze(g, E), Na(I, Q));
          for (let d = 1; d < f; d++)
            Xi(g, E), B ? r.set(g) : (s.readHexNumber(r, E), tt(r, g, E)), s.readHexNumber(g, E), tt(g, r, E), s.readHex(I, Q), t.mapBfRange(Ze(r, E), Ze(g, E), Na(I, Q));
          break;
        default:
          throw new Error(`BinaryCMapReader.process - unknown type: ${h}`);
      }
    }
    return n ? i(n) : t;
  }
}
const Ah = new Uint8Array(0);
class $e extends JA {
  constructor(A) {
    if (super(), this._rawMinBufferLength = A || 0, this.pos = 0, this.bufferLength = 0, this.eof = !1, this.buffer = Ah, this.minBufferLength = 512, A)
      for (; this.minBufferLength < A; )
        this.minBufferLength *= 2;
  }
  get isEmpty() {
    for (; !this.eof && this.bufferLength === 0; )
      this.readBlock();
    return this.bufferLength === 0;
  }
  ensureBuffer(A) {
    const t = this.buffer;
    if (A <= t.byteLength)
      return t;
    let i = this.minBufferLength;
    for (; i < A; )
      i *= 2;
    const s = new Uint8Array(i);
    return s.set(t), this.buffer = s;
  }
  getByte() {
    const A = this.pos;
    for (; this.bufferLength <= A; ) {
      if (this.eof)
        return -1;
      this.readBlock();
    }
    return this.buffer[this.pos++];
  }
  getBytes(A, t = null) {
    const i = this.pos;
    let s;
    if (A) {
      for (this.ensureBuffer(i + A), s = i + A; !this.eof && this.bufferLength < s; )
        this.readBlock(t);
      const a = this.bufferLength;
      s > a && (s = a);
    } else {
      for (; !this.eof; )
        this.readBlock(t);
      s = this.bufferLength;
    }
    return this.pos = s, this.buffer.subarray(i, s);
  }
  async getImageData(A, t = null) {
    if (!this.canAsyncDecodeImageFromBuffer)
      return this.getBytes(A, t);
    const i = await this.stream.asyncGetBytes();
    return this.decodeImage(i, t);
  }
  reset() {
    this.pos = 0;
  }
  makeSubStream(A, t, i = null) {
    if (t === void 0)
      for (; !this.eof; )
        this.readBlock();
    else {
      const s = A + t;
      for (; this.bufferLength <= s && !this.eof; )
        this.readBlock();
    }
    return new Ee(this.buffer, A, t, i);
  }
  getBaseStreams() {
    return this.str ? this.str.getBaseStreams() : null;
  }
}
class eh extends $e {
  constructor(A, t = null) {
    A = A.filter((s) => s instanceof JA);
    let i = 0;
    for (const s of A)
      i += s instanceof $e ? s._rawMinBufferLength : s.length;
    super(i), this.streams = A, this._onError = t;
  }
  readBlock() {
    var r;
    const A = this.streams;
    if (A.length === 0) {
      this.eof = !0;
      return;
    }
    const t = A.shift();
    let i;
    try {
      i = t.getBytes();
    } catch (g) {
      if (this._onError) {
        this._onError(g, (r = t.dict) == null ? void 0 : r.objId);
        return;
      }
      throw g;
    }
    const s = this.bufferLength, a = s + i.length;
    this.ensureBuffer(a).set(i, s), this.bufferLength = a;
  }
  getBaseStreams() {
    const A = [];
    for (const t of this.streams) {
      const i = t.getBaseStreams();
      i && A.push(...i);
    }
    return A.length > 0 ? A : null;
  }
}
class th extends $e {
  constructor(A, t) {
    t && (t *= 0.8), super(t), this.str = A, this.dict = A.dict, this.input = new Uint8Array(5);
  }
  readBlock() {
    const s = this.str;
    let a = s.getByte();
    for (; mt(a); )
      a = s.getByte();
    if (a === -1 || a === 126) {
      this.eof = !0;
      return;
    }
    const n = this.bufferLength;
    let r, g;
    if (a === 122) {
      for (r = this.ensureBuffer(n + 4), g = 0; g < 4; ++g)
        r[n + g] = 0;
      this.bufferLength += 4;
    } else {
      const o = this.input;
      for (o[0] = a, g = 1; g < 5; ++g) {
        for (a = s.getByte(); mt(a); )
          a = s.getByte();
        if (o[g] = a, a === -1 || a === 126)
          break;
      }
      if (r = this.ensureBuffer(n + g - 1), this.bufferLength += g - 1, g < 5) {
        for (; g < 5; ++g)
          o[g] = 117;
        this.eof = !0;
      }
      let I = 0;
      for (g = 0; g < 5; ++g)
        I = I * 85 + (o[g] - 33);
      for (g = 3; g >= 0; --g)
        r[n + g] = I & 255, I >>= 8;
    }
  }
}
class ih extends $e {
  constructor(A, t) {
    t && (t *= 0.5), super(t), this.str = A, this.dict = A.dict, this.firstDigit = -1;
  }
  readBlock() {
    const t = this.str.getBytes(8e3);
    if (!t.length) {
      this.eof = !0;
      return;
    }
    const i = t.length + 1 >> 1, s = this.ensureBuffer(this.bufferLength + i);
    let a = this.bufferLength, n = this.firstDigit;
    for (const r of t) {
      let g;
      if (r >= 48 && r <= 57)
        g = r & 15;
      else if (r >= 65 && r <= 70 || r >= 97 && r <= 102)
        g = (r & 15) + 9;
      else if (r === 62) {
        this.eof = !0;
        break;
      } else
        continue;
      n < 0 ? n = g : (s[a++] = n << 4 | g, n = -1);
    }
    n >= 0 && this.eof && (s[a++] = n << 4, n = -1), this.firstDigit = n, this.bufferLength = a;
  }
}
const ig = -2, oi = -1, ci = 0, Je = 1, kA = 2, Ye = 3, Ke = 4, sg = 5, ag = 6, yc = 7, wc = 8, Ro = [[-1, -1], [-1, -1], [7, wc], [7, yc], [6, ag], [6, ag], [6, sg], [6, sg], [4, ci], [4, ci], [4, ci], [4, ci], [4, ci], [4, ci], [4, ci], [4, ci], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Je], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ke], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [3, Ye], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA], [1, kA]], No = [[-1, -1], [12, ig], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]], Go = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]], Uo = [[-1, -1], [-1, -1], [12, ig], [12, ig], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]], Mo = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]], Lo = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];
class bc {
  constructor(A, t = {}) {
    if (!A || typeof A.next != "function")
      throw new Error('CCITTFaxDecoder - invalid "source" parameter.');
    this.source = A, this.eof = !1, this.encoding = t.K || 0, this.eoline = t.EndOfLine || !1, this.byteAlign = t.EncodedByteAlign || !1, this.columns = t.Columns || 1728, this.rows = t.Rows || 0, this.eoblock = t.EndOfBlock ?? !0, this.black = t.BlackIs1 || !1, this.codingLine = new Uint32Array(this.columns + 1), this.refLine = new Uint32Array(this.columns + 2), this.codingLine[0] = this.columns, this.codingPos = 0, this.row = 0, this.nextLine2D = this.encoding < 0, this.inputBits = 0, this.inputBuf = 0, this.outputBits = 0, this.rowsDone = !1;
    let i;
    for (; (i = this._lookBits(12)) === 0; )
      this._eatBits(1);
    i === 1 && this._eatBits(12), this.encoding > 0 && (this.nextLine2D = !this._lookBits(1), this._eatBits(1));
  }
  readNextChar() {
    if (this.eof)
      return -1;
    const A = this.refLine, t = this.codingLine, i = this.columns;
    let s, a, n, r;
    if (this.outputBits === 0) {
      if (this.rowsDone && (this.eof = !0), this.eof)
        return -1;
      this.err = !1;
      let o, I, c;
      if (this.nextLine2D) {
        for (r = 0; t[r] < i; ++r)
          A[r] = t[r];
        for (A[r++] = i, A[r] = i, t[0] = 0, this.codingPos = 0, s = 0, a = 0; t[this.codingPos] < i; )
          switch (o = this._getTwoDimCode(), o) {
            case ci:
              this._addPixels(A[s + 1], a), A[s + 1] < i && (s += 2);
              break;
            case Je:
              if (o = I = 0, a) {
                do
                  o += c = this._getBlackCode();
                while (c >= 64);
                do
                  I += c = this._getWhiteCode();
                while (c >= 64);
              } else {
                do
                  o += c = this._getWhiteCode();
                while (c >= 64);
                do
                  I += c = this._getBlackCode();
                while (c >= 64);
              }
              for (this._addPixels(t[this.codingPos] + o, a), t[this.codingPos] < i && this._addPixels(t[this.codingPos] + I, a ^ 1); A[s] <= t[this.codingPos] && A[s] < i; )
                s += 2;
              break;
            case yc:
              if (this._addPixels(A[s] + 3, a), a ^= 1, t[this.codingPos] < i)
                for (++s; A[s] <= t[this.codingPos] && A[s] < i; )
                  s += 2;
              break;
            case sg:
              if (this._addPixels(A[s] + 2, a), a ^= 1, t[this.codingPos] < i)
                for (++s; A[s] <= t[this.codingPos] && A[s] < i; )
                  s += 2;
              break;
            case Ye:
              if (this._addPixels(A[s] + 1, a), a ^= 1, t[this.codingPos] < i)
                for (++s; A[s] <= t[this.codingPos] && A[s] < i; )
                  s += 2;
              break;
            case kA:
              if (this._addPixels(A[s], a), a ^= 1, t[this.codingPos] < i)
                for (++s; A[s] <= t[this.codingPos] && A[s] < i; )
                  s += 2;
              break;
            case wc:
              if (this._addPixelsNeg(A[s] - 3, a), a ^= 1, t[this.codingPos] < i)
                for (s > 0 ? --s : ++s; A[s] <= t[this.codingPos] && A[s] < i; )
                  s += 2;
              break;
            case ag:
              if (this._addPixelsNeg(A[s] - 2, a), a ^= 1, t[this.codingPos] < i)
                for (s > 0 ? --s : ++s; A[s] <= t[this.codingPos] && A[s] < i; )
                  s += 2;
              break;
            case Ke:
              if (this._addPixelsNeg(A[s] - 1, a), a ^= 1, t[this.codingPos] < i)
                for (s > 0 ? --s : ++s; A[s] <= t[this.codingPos] && A[s] < i; )
                  s += 2;
              break;
            case oi:
              this._addPixels(i, 0), this.eof = !0;
              break;
            default:
              vA("bad 2d code"), this._addPixels(i, 0), this.err = !0;
          }
      } else
        for (t[0] = 0, this.codingPos = 0, a = 0; t[this.codingPos] < i; ) {
          if (o = 0, a)
            do
              o += c = this._getBlackCode();
            while (c >= 64);
          else
            do
              o += c = this._getWhiteCode();
            while (c >= 64);
          this._addPixels(t[this.codingPos] + o, a), a ^= 1;
        }
      let l = !1;
      if (this.byteAlign && (this.inputBits &= -8), !this.eoblock && this.row === this.rows - 1)
        this.rowsDone = !0;
      else {
        if (o = this._lookBits(12), this.eoline)
          for (; o !== oi && o !== 1; )
            this._eatBits(1), o = this._lookBits(12);
        else
          for (; o === 0; )
            this._eatBits(1), o = this._lookBits(12);
        o === 1 ? (this._eatBits(12), l = !0) : o === oi && (this.eof = !0);
      }
      if (!this.eof && this.encoding > 0 && !this.rowsDone && (this.nextLine2D = !this._lookBits(1), this._eatBits(1)), this.eoblock && l && this.byteAlign) {
        if (o = this._lookBits(12), o === 1) {
          if (this._eatBits(12), this.encoding > 0 && (this._lookBits(1), this._eatBits(1)), this.encoding >= 0)
            for (r = 0; r < 4; ++r)
              o = this._lookBits(12), o !== 1 && vA("bad rtc code: " + o), this._eatBits(12), this.encoding > 0 && (this._lookBits(1), this._eatBits(1));
          this.eof = !0;
        }
      } else if (this.err && this.eoline) {
        for (; ; ) {
          if (o = this._lookBits(13), o === oi)
            return this.eof = !0, -1;
          if (o >> 1 === 1)
            break;
          this._eatBits(1);
        }
        this._eatBits(12), this.encoding > 0 && (this._eatBits(1), this.nextLine2D = !(o & 1));
      }
      this.outputBits = t[0] > 0 ? t[this.codingPos = 0] : t[this.codingPos = 1], this.row++;
    }
    let g;
    if (this.outputBits >= 8)
      g = this.codingPos & 1 ? 0 : 255, this.outputBits -= 8, this.outputBits === 0 && t[this.codingPos] < i && (this.codingPos++, this.outputBits = t[this.codingPos] - t[this.codingPos - 1]);
    else {
      n = 8, g = 0;
      do {
        if (typeof this.outputBits != "number")
          throw new T('Invalid /CCITTFaxDecode data, "outputBits" must be a number.');
        this.outputBits > n ? (g <<= n, this.codingPos & 1 || (g |= 255 >> 8 - n), this.outputBits -= n, n = 0) : (g <<= this.outputBits, this.codingPos & 1 || (g |= 255 >> 8 - this.outputBits), n -= this.outputBits, this.outputBits = 0, t[this.codingPos] < i ? (this.codingPos++, this.outputBits = t[this.codingPos] - t[this.codingPos - 1]) : n > 0 && (g <<= n, n = 0));
      } while (n);
    }
    return this.black && (g ^= 255), g;
  }
  _addPixels(A, t) {
    const i = this.codingLine;
    let s = this.codingPos;
    A > i[s] && (A > this.columns && (vA("row is wrong length"), this.err = !0, A = this.columns), s & 1 ^ t && ++s, i[s] = A), this.codingPos = s;
  }
  _addPixelsNeg(A, t) {
    const i = this.codingLine;
    let s = this.codingPos;
    if (A > i[s])
      A > this.columns && (vA("row is wrong length"), this.err = !0, A = this.columns), s & 1 ^ t && ++s, i[s] = A;
    else if (A < i[s]) {
      for (A < 0 && (vA("invalid code"), this.err = !0, A = 0); s > 0 && A < i[s - 1]; )
        --s;
      i[s] = A;
    }
    this.codingPos = s;
  }
  _findTableCode(A, t, i, s) {
    const a = s || 0;
    for (let n = A; n <= t; ++n) {
      let r = this._lookBits(n);
      if (r === oi)
        return [!0, 1, !1];
      if (n < t && (r <<= t - n), !a || r >= a) {
        const g = i[r - a];
        if (g[0] === n)
          return this._eatBits(n), [!0, g[1], !0];
      }
    }
    return [!1, 0, !1];
  }
  _getTwoDimCode() {
    let A = 0, t;
    if (this.eoblock) {
      if (A = this._lookBits(7), t = Ro[A], (t == null ? void 0 : t[0]) > 0)
        return this._eatBits(t[0]), t[1];
    } else {
      const i = this._findTableCode(1, 7, Ro);
      if (i[0] && i[2])
        return i[1];
    }
    return vA("Bad two dim code"), oi;
  }
  _getWhiteCode() {
    let A = 0, t;
    if (this.eoblock) {
      if (A = this._lookBits(12), A === oi)
        return 1;
      if (t = A >> 5 ? Go[A >> 3] : No[A], t[0] > 0)
        return this._eatBits(t[0]), t[1];
    } else {
      let i = this._findTableCode(1, 9, Go);
      if (i[0] || (i = this._findTableCode(11, 12, No), i[0]))
        return i[1];
    }
    return vA("bad white code"), this._eatBits(1), 1;
  }
  _getBlackCode() {
    let A, t;
    if (this.eoblock) {
      if (A = this._lookBits(13), A === oi)
        return 1;
      if (A >> 7 ? !(A >> 9) && A >> 7 ? t = Mo[(A >> 1) - 64] : t = Lo[A >> 7] : t = Uo[A], t[0] > 0)
        return this._eatBits(t[0]), t[1];
    } else {
      let i = this._findTableCode(2, 6, Lo);
      if (i[0] || (i = this._findTableCode(7, 12, Mo, 64), i[0]) || (i = this._findTableCode(10, 13, Uo), i[0]))
        return i[1];
    }
    return vA("bad black code"), this._eatBits(1), 1;
  }
  _lookBits(A) {
    let t;
    for (; this.inputBits < A; ) {
      if ((t = this.source.next()) === -1)
        return this.inputBits === 0 ? oi : this.inputBuf << A - this.inputBits & 65535 >> 16 - A;
      this.inputBuf = this.inputBuf << 8 | t, this.inputBits += 8;
    }
    return this.inputBuf >> this.inputBits - A & 65535 >> 16 - A;
  }
  _eatBits(A) {
    (this.inputBits -= A) < 0 && (this.inputBits = 0);
  }
}
class sh extends $e {
  constructor(A, t, i) {
    super(t), this.str = A, this.dict = A.dict, i instanceof R || (i = R.empty);
    const s = {
      next() {
        return A.getByte();
      }
    };
    this.ccittFaxDecoder = new bc(s, {
      K: i.get("K"),
      EndOfLine: i.get("EndOfLine"),
      EncodedByteAlign: i.get("EncodedByteAlign"),
      Columns: i.get("Columns"),
      Rows: i.get("Rows"),
      EndOfBlock: i.get("EndOfBlock"),
      BlackIs1: i.get("BlackIs1")
    });
  }
  readBlock() {
    for (; !this.eof; ) {
      const A = this.ccittFaxDecoder.readNextChar();
      if (A === -1) {
        this.eof = !0;
        return;
      }
      this.ensureBuffer(this.bufferLength + 1), this.buffer[this.bufferLength++] = A;
    }
  }
}
const Ho = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), ah = new Int32Array([3, 4, 5, 6, 7, 8, 9, 10, 65547, 65549, 65551, 65553, 131091, 131095, 131099, 131103, 196643, 196651, 196659, 196667, 262211, 262227, 262243, 262259, 327811, 327843, 327875, 327907, 258, 258, 258]), nh = new Int32Array([1, 2, 3, 4, 65541, 65543, 131081, 131085, 196625, 196633, 262177, 262193, 327745, 327777, 393345, 393409, 459009, 459137, 524801, 525057, 590849, 591361, 657409, 658433, 724993, 727041, 794625, 798721, 868353, 876545]), rh = [new Int32Array([459008, 524368, 524304, 524568, 459024, 524400, 524336, 590016, 459016, 524384, 524320, 589984, 524288, 524416, 524352, 590048, 459012, 524376, 524312, 589968, 459028, 524408, 524344, 590032, 459020, 524392, 524328, 59e4, 524296, 524424, 524360, 590064, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590024, 459018, 524388, 524324, 589992, 524292, 524420, 524356, 590056, 459014, 524380, 524316, 589976, 459030, 524412, 524348, 590040, 459022, 524396, 524332, 590008, 524300, 524428, 524364, 590072, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590020, 459017, 524386, 524322, 589988, 524290, 524418, 524354, 590052, 459013, 524378, 524314, 589972, 459029, 524410, 524346, 590036, 459021, 524394, 524330, 590004, 524298, 524426, 524362, 590068, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590028, 459019, 524390, 524326, 589996, 524294, 524422, 524358, 590060, 459015, 524382, 524318, 589980, 459031, 524414, 524350, 590044, 459023, 524398, 524334, 590012, 524302, 524430, 524366, 590076, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590018, 459016, 524385, 524321, 589986, 524289, 524417, 524353, 590050, 459012, 524377, 524313, 589970, 459028, 524409, 524345, 590034, 459020, 524393, 524329, 590002, 524297, 524425, 524361, 590066, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590026, 459018, 524389, 524325, 589994, 524293, 524421, 524357, 590058, 459014, 524381, 524317, 589978, 459030, 524413, 524349, 590042, 459022, 524397, 524333, 590010, 524301, 524429, 524365, 590074, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590022, 459017, 524387, 524323, 589990, 524291, 524419, 524355, 590054, 459013, 524379, 524315, 589974, 459029, 524411, 524347, 590038, 459021, 524395, 524331, 590006, 524299, 524427, 524363, 590070, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590030, 459019, 524391, 524327, 589998, 524295, 524423, 524359, 590062, 459015, 524383, 524319, 589982, 459031, 524415, 524351, 590046, 459023, 524399, 524335, 590014, 524303, 524431, 524367, 590078, 459008, 524368, 524304, 524568, 459024, 524400, 524336, 590017, 459016, 524384, 524320, 589985, 524288, 524416, 524352, 590049, 459012, 524376, 524312, 589969, 459028, 524408, 524344, 590033, 459020, 524392, 524328, 590001, 524296, 524424, 524360, 590065, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590025, 459018, 524388, 524324, 589993, 524292, 524420, 524356, 590057, 459014, 524380, 524316, 589977, 459030, 524412, 524348, 590041, 459022, 524396, 524332, 590009, 524300, 524428, 524364, 590073, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590021, 459017, 524386, 524322, 589989, 524290, 524418, 524354, 590053, 459013, 524378, 524314, 589973, 459029, 524410, 524346, 590037, 459021, 524394, 524330, 590005, 524298, 524426, 524362, 590069, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590029, 459019, 524390, 524326, 589997, 524294, 524422, 524358, 590061, 459015, 524382, 524318, 589981, 459031, 524414, 524350, 590045, 459023, 524398, 524334, 590013, 524302, 524430, 524366, 590077, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590019, 459016, 524385, 524321, 589987, 524289, 524417, 524353, 590051, 459012, 524377, 524313, 589971, 459028, 524409, 524345, 590035, 459020, 524393, 524329, 590003, 524297, 524425, 524361, 590067, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590027, 459018, 524389, 524325, 589995, 524293, 524421, 524357, 590059, 459014, 524381, 524317, 589979, 459030, 524413, 524349, 590043, 459022, 524397, 524333, 590011, 524301, 524429, 524365, 590075, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590023, 459017, 524387, 524323, 589991, 524291, 524419, 524355, 590055, 459013, 524379, 524315, 589975, 459029, 524411, 524347, 590039, 459021, 524395, 524331, 590007, 524299, 524427, 524363, 590071, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590031, 459019, 524391, 524327, 589999, 524295, 524423, 524359, 590063, 459015, 524383, 524319, 589983, 459031, 524415, 524351, 590047, 459023, 524399, 524335, 590015, 524303, 524431, 524367, 590079]), 9], gh = [new Int32Array([327680, 327696, 327688, 327704, 327684, 327700, 327692, 327708, 327682, 327698, 327690, 327706, 327686, 327702, 327694, 0, 327681, 327697, 327689, 327705, 327685, 327701, 327693, 327709, 327683, 327699, 327691, 327707, 327687, 327703, 327695, 0]), 5];
var Hi, G0;
class Jo extends $e {
  constructor(t, i) {
    super(i);
    jA(this, Hi);
    this.str = t, this.dict = t.dict;
    const s = t.getByte(), a = t.getByte();
    if (s === -1 || a === -1)
      throw new T(`Invalid header in flate stream: ${s}, ${a}`);
    if ((s & 15) !== 8)
      throw new T(`Unknown compression method in flate stream: ${s}, ${a}`);
    if (((s << 8) + a) % 31 !== 0)
      throw new T(`Bad FCHECK in flate stream: ${s}, ${a}`);
    if (a & 32)
      throw new T(`FDICT bit set in flate stream: ${s}, ${a}`);
    this.codeSize = 0, this.codeBuf = 0;
  }
  async getImageData(t, i) {
    const s = await this.asyncGetBytes();
    return (s == null ? void 0 : s.subarray(0, t)) || this.getBytes(t);
  }
  async asyncGetBytes() {
    this.str.reset();
    const t = this.str.getBytes();
    try {
      const {
        readable: i,
        writable: s
      } = new DecompressionStream("deflate"), a = s.getWriter();
      await a.ready, a.write(t).then(async () => {
        await a.ready, await a.close();
      }).catch(() => {
      });
      const n = [];
      let r = 0;
      for await (const I of i)
        n.push(I), r += I.byteLength;
      const g = new Uint8Array(r);
      let o = 0;
      for (const I of n)
        g.set(I, o), o += I.byteLength;
      return g;
    } catch {
      return this.str = new Ee(t, 2, t.length, this.str.dict), this.reset(), null;
    }
  }
  get isAsync() {
    return !0;
  }
  getBits(t) {
    const i = this.str;
    let s = this.codeSize, a = this.codeBuf, n;
    for (; s < t; ) {
      if ((n = i.getByte()) === -1)
        throw new T("Bad encoding in flate stream");
      a |= n << s, s += 8;
    }
    return n = a & (1 << t) - 1, this.codeBuf = a >> t, this.codeSize = s -= t, n;
  }
  getCode(t) {
    const i = this.str, s = t[0], a = t[1];
    let n = this.codeSize, r = this.codeBuf, g;
    for (; n < a && (g = i.getByte()) !== -1; )
      r |= g << n, n += 8;
    const o = s[r & (1 << a) - 1], I = o >> 16, c = o & 65535;
    if (I < 1 || n < I)
      throw new T("Bad encoding in flate stream");
    return this.codeBuf = r >> I, this.codeSize = n - I, c;
  }
  generateHuffmanTable(t) {
    const i = t.length;
    let s = 0, a;
    for (a = 0; a < i; ++a)
      t[a] > s && (s = t[a]);
    const n = 1 << s, r = new Int32Array(n);
    for (let g = 1, o = 0, I = 2; g <= s; ++g, o <<= 1, I <<= 1)
      for (let c = 0; c < i; ++c)
        if (t[c] === g) {
          let l = 0, C = o;
          for (a = 0; a < g; ++a)
            l = l << 1 | C & 1, C >>= 1;
          for (a = l; a < n; a += I)
            r[a] = g << 16 | c;
          ++o;
        }
    return [r, s];
  }
  readBlock() {
    let t, i, s;
    const a = this.str;
    try {
      i = this.getBits(3);
    } catch (I) {
      BA(this, Hi, G0).call(this, I.message);
      return;
    }
    if (i & 1 && (this.eof = !0), i >>= 1, i === 0) {
      let I;
      if ((I = a.getByte()) === -1) {
        BA(this, Hi, G0).call(this, "Bad block header in flate stream");
        return;
      }
      let c = I;
      if ((I = a.getByte()) === -1) {
        BA(this, Hi, G0).call(this, "Bad block header in flate stream");
        return;
      }
      if (c |= I << 8, (I = a.getByte()) === -1) {
        BA(this, Hi, G0).call(this, "Bad block header in flate stream");
        return;
      }
      let l = I;
      if ((I = a.getByte()) === -1) {
        BA(this, Hi, G0).call(this, "Bad block header in flate stream");
        return;
      }
      if (l |= I << 8, l !== (~c & 65535) && (c !== 0 || l !== 0))
        throw new T("Bad uncompressed block length in flate stream");
      this.codeBuf = 0, this.codeSize = 0;
      const C = this.bufferLength, h = C + c;
      if (t = this.ensureBuffer(h), this.bufferLength = h, c === 0)
        a.peekByte() === -1 && (this.eof = !0);
      else {
        const B = a.getBytes(c);
        t.set(B, C), B.length < c && (this.eof = !0);
      }
      return;
    }
    let n, r;
    if (i === 1)
      n = rh, r = gh;
    else if (i === 2) {
      const I = this.getBits(5) + 257, c = this.getBits(5) + 1, l = this.getBits(4) + 4, C = new Uint8Array(Ho.length);
      let h;
      for (h = 0; h < l; ++h)
        C[Ho[h]] = this.getBits(3);
      const B = this.generateHuffmanTable(C);
      s = 0, h = 0;
      const Q = I + c, E = new Uint8Array(Q);
      let f, d, u;
      for (; h < Q; ) {
        const x = this.getCode(B);
        if (x === 16)
          f = 2, d = 3, u = s;
        else if (x === 17)
          f = 3, d = 3, u = s = 0;
        else if (x === 18)
          f = 7, d = 11, u = s = 0;
        else {
          E[h++] = s = x;
          continue;
        }
        let p = this.getBits(f) + d;
        for (; p-- > 0; )
          E[h++] = u;
      }
      n = this.generateHuffmanTable(E.subarray(0, I)), r = this.generateHuffmanTable(E.subarray(I, Q));
    } else
      throw new T("Unknown block type in flate stream");
    t = this.buffer;
    let g = t ? t.length : 0, o = this.bufferLength;
    for (; ; ) {
      let I = this.getCode(n);
      if (I < 256) {
        o + 1 >= g && (t = this.ensureBuffer(o + 1), g = t.length), t[o++] = I;
        continue;
      }
      if (I === 256) {
        this.bufferLength = o;
        return;
      }
      I -= 257, I = ah[I];
      let c = I >> 16;
      c > 0 && (c = this.getBits(c)), s = (I & 65535) + c, I = this.getCode(r), I = nh[I], c = I >> 16, c > 0 && (c = this.getBits(c));
      const l = (I & 65535) + c;
      o + s >= g && (t = this.ensureBuffer(o + s), g = t.length);
      for (let C = 0; C < s; ++C, ++o)
        t[o] = t[o - l];
    }
  }
}
Hi = new WeakSet(), G0 = function(t) {
  vA(t), this.eof = !0;
};
const oh = [{
  qe: 22017,
  nmps: 1,
  nlps: 1,
  switchFlag: 1
}, {
  qe: 13313,
  nmps: 2,
  nlps: 6,
  switchFlag: 0
}, {
  qe: 6145,
  nmps: 3,
  nlps: 9,
  switchFlag: 0
}, {
  qe: 2753,
  nmps: 4,
  nlps: 12,
  switchFlag: 0
}, {
  qe: 1313,
  nmps: 5,
  nlps: 29,
  switchFlag: 0
}, {
  qe: 545,
  nmps: 38,
  nlps: 33,
  switchFlag: 0
}, {
  qe: 22017,
  nmps: 7,
  nlps: 6,
  switchFlag: 1
}, {
  qe: 21505,
  nmps: 8,
  nlps: 14,
  switchFlag: 0
}, {
  qe: 18433,
  nmps: 9,
  nlps: 14,
  switchFlag: 0
}, {
  qe: 14337,
  nmps: 10,
  nlps: 14,
  switchFlag: 0
}, {
  qe: 12289,
  nmps: 11,
  nlps: 17,
  switchFlag: 0
}, {
  qe: 9217,
  nmps: 12,
  nlps: 18,
  switchFlag: 0
}, {
  qe: 7169,
  nmps: 13,
  nlps: 20,
  switchFlag: 0
}, {
  qe: 5633,
  nmps: 29,
  nlps: 21,
  switchFlag: 0
}, {
  qe: 22017,
  nmps: 15,
  nlps: 14,
  switchFlag: 1
}, {
  qe: 21505,
  nmps: 16,
  nlps: 14,
  switchFlag: 0
}, {
  qe: 20737,
  nmps: 17,
  nlps: 15,
  switchFlag: 0
}, {
  qe: 18433,
  nmps: 18,
  nlps: 16,
  switchFlag: 0
}, {
  qe: 14337,
  nmps: 19,
  nlps: 17,
  switchFlag: 0
}, {
  qe: 13313,
  nmps: 20,
  nlps: 18,
  switchFlag: 0
}, {
  qe: 12289,
  nmps: 21,
  nlps: 19,
  switchFlag: 0
}, {
  qe: 10241,
  nmps: 22,
  nlps: 19,
  switchFlag: 0
}, {
  qe: 9217,
  nmps: 23,
  nlps: 20,
  switchFlag: 0
}, {
  qe: 8705,
  nmps: 24,
  nlps: 21,
  switchFlag: 0
}, {
  qe: 7169,
  nmps: 25,
  nlps: 22,
  switchFlag: 0
}, {
  qe: 6145,
  nmps: 26,
  nlps: 23,
  switchFlag: 0
}, {
  qe: 5633,
  nmps: 27,
  nlps: 24,
  switchFlag: 0
}, {
  qe: 5121,
  nmps: 28,
  nlps: 25,
  switchFlag: 0
}, {
  qe: 4609,
  nmps: 29,
  nlps: 26,
  switchFlag: 0
}, {
  qe: 4353,
  nmps: 30,
  nlps: 27,
  switchFlag: 0
}, {
  qe: 2753,
  nmps: 31,
  nlps: 28,
  switchFlag: 0
}, {
  qe: 2497,
  nmps: 32,
  nlps: 29,
  switchFlag: 0
}, {
  qe: 2209,
  nmps: 33,
  nlps: 30,
  switchFlag: 0
}, {
  qe: 1313,
  nmps: 34,
  nlps: 31,
  switchFlag: 0
}, {
  qe: 1089,
  nmps: 35,
  nlps: 32,
  switchFlag: 0
}, {
  qe: 673,
  nmps: 36,
  nlps: 33,
  switchFlag: 0
}, {
  qe: 545,
  nmps: 37,
  nlps: 34,
  switchFlag: 0
}, {
  qe: 321,
  nmps: 38,
  nlps: 35,
  switchFlag: 0
}, {
  qe: 273,
  nmps: 39,
  nlps: 36,
  switchFlag: 0
}, {
  qe: 133,
  nmps: 40,
  nlps: 37,
  switchFlag: 0
}, {
  qe: 73,
  nmps: 41,
  nlps: 38,
  switchFlag: 0
}, {
  qe: 37,
  nmps: 42,
  nlps: 39,
  switchFlag: 0
}, {
  qe: 21,
  nmps: 43,
  nlps: 40,
  switchFlag: 0
}, {
  qe: 9,
  nmps: 44,
  nlps: 41,
  switchFlag: 0
}, {
  qe: 5,
  nmps: 45,
  nlps: 42,
  switchFlag: 0
}, {
  qe: 1,
  nmps: 45,
  nlps: 43,
  switchFlag: 0
}, {
  qe: 22017,
  nmps: 46,
  nlps: 46,
  switchFlag: 0
}];
class Ih {
  constructor(A, t, i) {
    this.data = A, this.bp = t, this.dataEnd = i, this.chigh = A[t], this.clow = 0, this.byteIn(), this.chigh = this.chigh << 7 & 65535 | this.clow >> 9 & 127, this.clow = this.clow << 7 & 65535, this.ct -= 7, this.a = 32768;
  }
  byteIn() {
    const A = this.data;
    let t = this.bp;
    A[t] === 255 ? A[t + 1] > 143 ? (this.clow += 65280, this.ct = 8) : (t++, this.clow += A[t] << 9, this.ct = 7, this.bp = t) : (t++, this.clow += t < this.dataEnd ? A[t] << 8 : 65280, this.ct = 8, this.bp = t), this.clow > 65535 && (this.chigh += this.clow >> 16, this.clow &= 65535);
  }
  readBit(A, t) {
    let i = A[t] >> 1, s = A[t] & 1;
    const a = oh[i], n = a.qe;
    let r, g = this.a - n;
    if (this.chigh < n)
      g < n ? (g = n, r = s, i = a.nmps) : (g = n, r = 1 ^ s, a.switchFlag === 1 && (s = r), i = a.nlps);
    else {
      if (this.chigh -= n, g & 32768)
        return this.a = g, s;
      g < n ? (r = 1 ^ s, a.switchFlag === 1 && (s = r), i = a.nlps) : (r = s, i = a.nmps);
    }
    do
      this.ct === 0 && this.byteIn(), g <<= 1, this.chigh = this.chigh << 1 & 65535 | this.clow >> 15 & 1, this.clow = this.clow << 1 & 65535, this.ct--;
    while (!(g & 32768));
    return this.a = g, A[t] = i << 1 | s, r;
  }
}
class Be extends At {
  constructor(A) {
    super(A, "Jbig2Error");
  }
}
class ch {
  getContexts(A) {
    return A in this ? this[A] : this[A] = new Int8Array(65536);
  }
}
class Es {
  constructor(A, t, i) {
    this.data = A, this.start = t, this.end = i;
  }
  get decoder() {
    const A = new Ih(this.data, this.start, this.end);
    return tA(this, "decoder", A);
  }
  get contextCache() {
    const A = new ch();
    return tA(this, "contextCache", A);
  }
}
function Xe(e, A, t) {
  const i = e.getContexts(A);
  let s = 1;
  function a(o) {
    let I = 0;
    for (let c = 0; c < o; c++) {
      const l = t.readBit(i, s);
      s = s < 256 ? s << 1 | l : (s << 1 | l) & 511 | 256, I = I << 1 | l;
    }
    return I >>> 0;
  }
  const n = a(1), r = a(1) ? a(1) ? a(1) ? a(1) ? a(1) ? a(32) + 4436 : a(12) + 340 : a(8) + 84 : a(6) + 20 : a(4) + 4 : a(2);
  let g;
  return n === 0 ? g = r : r > 0 && (g = -r), g >= SC && g <= Zr ? g : null;
}
function Dc(e, A, t) {
  const i = e.getContexts("IAID");
  let s = 1;
  for (let a = 0; a < t; a++) {
    const n = A.readBit(i, s);
    s = s << 1 | n;
  }
  return t < 31 ? s & (1 << t) - 1 : s & 2147483647;
}
const Yo = ["SymbolDictionary", null, null, null, "IntermediateTextRegion", null, "ImmediateTextRegion", "ImmediateLosslessTextRegion", null, null, null, null, null, null, null, null, "PatternDictionary", null, null, null, "IntermediateHalftoneRegion", null, "ImmediateHalftoneRegion", "ImmediateLosslessHalftoneRegion", null, null, null, null, null, null, null, null, null, null, null, null, "IntermediateGenericRegion", null, "ImmediateGenericRegion", "ImmediateLosslessGenericRegion", "IntermediateGenericRefinementRegion", null, "ImmediateGenericRefinementRegion", "ImmediateLosslessGenericRefinementRegion", null, null, null, null, "PageInformation", "EndOfPage", "EndOfStripe", "EndOfFile", "Profiles", "Tables", null, null, null, null, null, null, null, null, "Extension"], lh = [[{
  x: -1,
  y: -2
}, {
  x: 0,
  y: -2
}, {
  x: 1,
  y: -2
}, {
  x: -2,
  y: -1
}, {
  x: -1,
  y: -1
}, {
  x: 0,
  y: -1
}, {
  x: 1,
  y: -1
}, {
  x: 2,
  y: -1
}, {
  x: -4,
  y: 0
}, {
  x: -3,
  y: 0
}, {
  x: -2,
  y: 0
}, {
  x: -1,
  y: 0
}], [{
  x: -1,
  y: -2
}, {
  x: 0,
  y: -2
}, {
  x: 1,
  y: -2
}, {
  x: 2,
  y: -2
}, {
  x: -2,
  y: -1
}, {
  x: -1,
  y: -1
}, {
  x: 0,
  y: -1
}, {
  x: 1,
  y: -1
}, {
  x: 2,
  y: -1
}, {
  x: -3,
  y: 0
}, {
  x: -2,
  y: 0
}, {
  x: -1,
  y: 0
}], [{
  x: -1,
  y: -2
}, {
  x: 0,
  y: -2
}, {
  x: 1,
  y: -2
}, {
  x: -2,
  y: -1
}, {
  x: -1,
  y: -1
}, {
  x: 0,
  y: -1
}, {
  x: 1,
  y: -1
}, {
  x: -2,
  y: 0
}, {
  x: -1,
  y: 0
}], [{
  x: -3,
  y: -1
}, {
  x: -2,
  y: -1
}, {
  x: -1,
  y: -1
}, {
  x: 0,
  y: -1
}, {
  x: 1,
  y: -1
}, {
  x: -4,
  y: 0
}, {
  x: -3,
  y: 0
}, {
  x: -2,
  y: 0
}, {
  x: -1,
  y: 0
}]], Ko = [{
  coding: [{
    x: 0,
    y: -1
  }, {
    x: 1,
    y: -1
  }, {
    x: -1,
    y: 0
  }],
  reference: [{
    x: 0,
    y: -1
  }, {
    x: 1,
    y: -1
  }, {
    x: -1,
    y: 0
  }, {
    x: 0,
    y: 0
  }, {
    x: 1,
    y: 0
  }, {
    x: -1,
    y: 1
  }, {
    x: 0,
    y: 1
  }, {
    x: 1,
    y: 1
  }]
}, {
  coding: [{
    x: -1,
    y: -1
  }, {
    x: 0,
    y: -1
  }, {
    x: 1,
    y: -1
  }, {
    x: -1,
    y: 0
  }],
  reference: [{
    x: 0,
    y: -1
  }, {
    x: -1,
    y: 0
  }, {
    x: 0,
    y: 0
  }, {
    x: 1,
    y: 0
  }, {
    x: 0,
    y: 1
  }, {
    x: 1,
    y: 1
  }]
}], Ch = [39717, 1941, 229, 405];
function hh(e, A, t) {
  const i = t.decoder, s = t.contextCache.getContexts("GB"), a = [];
  let n, r, g, o, I, c, l;
  const C = 31735;
  for (r = 0; r < A; r++)
    for (I = a[r] = new Uint8Array(e), c = r < 1 ? I : a[r - 1], l = r < 2 ? I : a[r - 2], n = l[0] << 13 | l[1] << 12 | l[2] << 11 | c[0] << 7 | c[1] << 6 | c[2] << 5 | c[3] << 4, g = 0; g < e; g++)
      I[g] = o = i.readBit(s, n), n = (n & C) << 1 | (g + 3 < e ? l[g + 3] << 11 : 0) | (g + 4 < e ? c[g + 4] << 4 : 0) | o;
  return a;
}
function Ar(e, A, t, i, s, a, n, r) {
  if (e) {
    const mA = new js(r.data, r.start, r.end);
    return qg(mA, A, t, !1);
  }
  if (i === 0 && !a && !s && n.length === 4 && n[0].x === 3 && n[0].y === -1 && n[1].x === -3 && n[1].y === -1 && n[2].x === 2 && n[2].y === -2 && n[3].x === -2 && n[3].y === -2)
    return hh(A, t, r);
  const g = lh[i].concat(n);
  g.sort(function(mA, DA) {
    return mA.y - DA.y || mA.x - DA.x;
  });
  const o = g.length, I = new Int8Array(o), c = new Int8Array(o), l = [];
  let C = 0, h = 0, B = 0, Q = 0, E, f;
  for (f = 0; f < o; f++)
    I[f] = g[f].x, c[f] = g[f].y, h = Math.min(h, g[f].x), B = Math.max(B, g[f].x), Q = Math.min(Q, g[f].y), f < o - 1 && g[f].y === g[f + 1].y && g[f].x === g[f + 1].x - 1 ? C |= 1 << o - 1 - f : l.push(f);
  const d = l.length, u = new Int8Array(d), x = new Int8Array(d), p = new Uint16Array(d);
  for (E = 0; E < d; E++)
    f = l[E], u[E] = g[f].x, x[E] = g[f].y, p[E] = 1 << o - 1 - f;
  const m = -h, D = -Q, S = A - B, y = Ch[i];
  let H = new Uint8Array(A);
  const G = [], v = r.decoder, X = r.contextCache.getContexts("GB");
  let gA = 0, N, F, eA, z = 0, cA, wA;
  for (let mA = 0; mA < t; mA++) {
    if (s) {
      const DA = v.readBit(X, y);
      if (gA ^= DA, gA) {
        G.push(H);
        continue;
      }
    }
    for (H = new Uint8Array(H), G.push(H), N = 0; N < A; N++) {
      if (N >= m && N < S && mA >= D)
        for (z = z << 1 & C, f = 0; f < d; f++)
          F = mA + x[f], eA = N + u[f], cA = G[F][eA], cA && (cA = p[f], z |= cA);
      else
        for (z = 0, wA = o - 1, f = 0; f < o; f++, wA--)
          eA = N + I[f], eA >= 0 && eA < A && (F = mA + c[f], F >= 0 && (cA = G[F][eA], cA && (z |= cA << wA)));
      const DA = v.readBit(X, z);
      H[N] = DA;
    }
  }
  return G;
}
function kc(e, A, t, i, s, a, n, r, g) {
  let o = Ko[t].coding;
  t === 0 && (o = o.concat([r[0]]));
  const I = o.length, c = new Int32Array(I), l = new Int32Array(I);
  let C;
  for (C = 0; C < I; C++)
    c[C] = o[C].x, l[C] = o[C].y;
  let h = Ko[t].reference;
  t === 0 && (h = h.concat([r[1]]));
  const B = h.length, Q = new Int32Array(B), E = new Int32Array(B);
  for (C = 0; C < B; C++)
    Q[C] = h[C].x, E[C] = h[C].y;
  const f = i[0].length, d = i.length, u = [], x = g.decoder, p = g.contextCache.getContexts("GR");
  for (let m = 0; m < A; m++) {
    const D = new Uint8Array(e);
    u.push(D);
    for (let S = 0; S < e; S++) {
      let y, H, G = 0;
      for (C = 0; C < I; C++)
        y = m + l[C], H = S + c[C], y < 0 || H < 0 || H >= e ? G <<= 1 : G = G << 1 | u[y][H];
      for (C = 0; C < B; C++)
        y = m + E[C] - a, H = S + Q[C] - s, y < 0 || y >= d || H < 0 || H >= f ? G <<= 1 : G = G << 1 | i[y][H];
      const v = x.readBit(p, G);
      D[S] = v;
    }
  }
  return u;
}
function Bh(e, A, t, i, s, a, n, r, g, o, I, c) {
  if (e && A)
    throw new Be("symbol refinement with Huffman is not supported");
  const l = [];
  let C = 0, h = vg(t.length + i);
  const B = I.decoder, Q = I.contextCache;
  let E, f;
  for (e && (E = vi(1), f = [], h = Math.max(h, 1)); l.length < i; ) {
    const S = e ? a.tableDeltaHeight.decode(c) : Xe(Q, "IADH", B);
    C += S;
    let y = 0, H = 0;
    const G = e ? f.length : 0;
    for (; ; ) {
      const v = e ? a.tableDeltaWidth.decode(c) : Xe(Q, "IADW", B);
      if (v === null)
        break;
      y += v, H += y;
      let X;
      if (A) {
        const gA = Xe(Q, "IAAI", B);
        if (gA > 1)
          X = Sc(e, A, y, C, 0, gA, 1, t.concat(l), h, 0, 0, 1, 0, a, g, o, I, 0, c);
        else {
          const N = Dc(Q, B, h), F = Xe(Q, "IARDX", B), eA = Xe(Q, "IARDY", B), z = N < t.length ? t[N] : l[N - t.length];
          X = kc(y, C, g, z, F, eA, !1, o, I);
        }
        l.push(X);
      } else e ? f.push(y) : (X = Ar(!1, y, C, n, !1, null, r, I), l.push(X));
    }
    if (e && !A) {
      const v = a.tableBitmapSize.decode(c);
      c.byteAlign();
      let X;
      if (v === 0)
        X = Dh(c, H, C);
      else {
        const N = c.end, F = c.position + v;
        c.end = F, X = qg(c, H, C, !1), c.end = N, c.position = F;
      }
      const gA = f.length;
      if (G === gA - 1)
        l.push(X);
      else {
        let N, F, eA = 0, z, cA, wA;
        for (N = G; N < gA; N++) {
          for (cA = f[N], z = eA + cA, wA = [], F = 0; F < C; F++)
            wA.push(X[F].subarray(eA, z));
          l.push(wA), eA = z;
        }
      }
    }
  }
  const d = [], u = [];
  let x = !1, p, m;
  const D = t.length + i;
  for (; u.length < D; ) {
    let S = e ? E.decode(c) : Xe(Q, "IAEX", B);
    for (; S--; )
      u.push(x);
    x = !x;
  }
  for (p = 0, m = t.length; p < m; p++)
    u[p] && d.push(t[p]);
  for (let S = 0; S < i; p++, S++)
    u[p] && d.push(l[S]);
  return d;
}
function Sc(e, A, t, i, s, a, n, r, g, o, I, c, l, C, h, B, Q, E, f) {
  if (e && A)
    throw new Be("refinement with Huffman is not supported");
  const d = [];
  let u, x;
  for (u = 0; u < i; u++) {
    if (x = new Uint8Array(t), s)
      for (let y = 0; y < t; y++)
        x[y] = s;
    d.push(x);
  }
  const p = Q.decoder, m = Q.contextCache;
  let D = e ? -C.tableDeltaT.decode(f) : -Xe(m, "IADT", p), S = 0;
  for (u = 0; u < a; ) {
    const y = e ? C.tableDeltaT.decode(f) : Xe(m, "IADT", p);
    D += y;
    const H = e ? C.tableFirstS.decode(f) : Xe(m, "IAFS", p);
    S += H;
    let G = S;
    do {
      let v = 0;
      n > 1 && (v = e ? f.readBits(E) : Xe(m, "IAIT", p));
      const X = n * D + v, gA = e ? C.symbolIDTable.decode(f) : Dc(m, p, g), N = A && (e ? f.readBit() : Xe(m, "IARI", p));
      let F = r[gA], eA = F[0].length, z = F.length;
      if (N) {
        const U = Xe(m, "IARDW", p), J = Xe(m, "IARDH", p), q = Xe(m, "IARDX", p), Z = Xe(m, "IARDY", p);
        eA += U, z += J, F = kc(eA, z, h, F, (U >> 1) + q, (J >> 1) + Z, !1, B, Q);
      }
      let cA = 0;
      o ? c & 1 ? cA = z - 1 : G += z - 1 : c > 1 ? G += eA - 1 : cA = eA - 1;
      const wA = X - (c & 1 ? 0 : z - 1), mA = G - (c & 2 ? eA - 1 : 0);
      let DA, _, TA;
      if (o)
        for (DA = 0; DA < z; DA++) {
          if (x = d[mA + DA], !x)
            continue;
          TA = F[DA];
          const U = Math.min(t - wA, eA);
          switch (l) {
            case 0:
              for (_ = 0; _ < U; _++)
                x[wA + _] |= TA[_];
              break;
            case 2:
              for (_ = 0; _ < U; _++)
                x[wA + _] ^= TA[_];
              break;
            default:
              throw new Be(`operator ${l} is not supported`);
          }
        }
      else
        for (_ = 0; _ < z; _++)
          if (x = d[wA + _], !!x)
            switch (TA = F[_], l) {
              case 0:
                for (DA = 0; DA < eA; DA++)
                  x[mA + DA] |= TA[DA];
                break;
              case 2:
                for (DA = 0; DA < eA; DA++)
                  x[mA + DA] ^= TA[DA];
                break;
              default:
                throw new Be(`operator ${l} is not supported`);
            }
      u++;
      const oA = e ? C.tableDeltaS.decode(f) : Xe(m, "IADS", p);
      if (oA === null)
        break;
      G += cA + oA + I;
    } while (!0);
  }
  return d;
}
function Qh(e, A, t, i, s, a) {
  const n = [];
  e || (n.push({
    x: -A,
    y: 0
  }), s === 0 && n.push({
    x: -3,
    y: -1
  }, {
    x: 2,
    y: -2
  }, {
    x: -2,
    y: -2
  }));
  const r = (i + 1) * A, g = Ar(e, r, t, s, !1, null, n, a), o = [];
  for (let I = 0; I <= i; I++) {
    const c = [], l = A * I, C = l + A;
    for (let h = 0; h < t; h++)
      c.push(g[h].subarray(l, C));
    o.push(c);
  }
  return o;
}
function Eh(e, A, t, i, s, a, n, r, g, o, I, c, l, C, h) {
  if (n)
    throw new Be("skip is not supported");
  if (r !== 0)
    throw new Be(`operator "${r}" is not supported in halftone region`);
  const Q = [];
  let E, f, d;
  for (E = 0; E < s; E++) {
    if (d = new Uint8Array(i), a)
      for (f = 0; f < i; f++)
        d[f] = a;
    Q.push(d);
  }
  const u = A.length, x = A[0], p = x[0].length, m = x.length, D = vg(u), S = [];
  e || (S.push({
    x: t <= 1 ? 3 : 2,
    y: -1
  }), t === 0 && S.push({
    x: -3,
    y: -1
  }, {
    x: 2,
    y: -2
  }, {
    x: -2,
    y: -2
  }));
  const y = [];
  let H, G;
  for (e && (H = new js(h.data, h.start, h.end)), E = D - 1; E >= 0; E--)
    e ? G = qg(H, g, o, !0) : G = Ar(!1, g, o, t, !1, null, S, h), y[E] = G;
  let v, X, gA, N, F, eA, z, cA, wA;
  for (v = 0; v < o; v++)
    for (X = 0; X < g; X++) {
      for (gA = 0, N = 0, f = D - 1; f >= 0; f--)
        gA ^= y[f][v][X], N |= gA << f;
      if (F = A[N], eA = I + v * C + X * l >> 8, z = c + v * l - X * C >> 8, eA >= 0 && eA + p <= i && z >= 0 && z + m <= s)
        for (E = 0; E < m; E++)
          for (wA = Q[z + E], cA = F[E], f = 0; f < p; f++)
            wA[eA + f] |= cA[f];
      else {
        let mA, DA;
        for (E = 0; E < m; E++)
          if (DA = z + E, !(DA < 0 || DA >= s))
            for (wA = Q[DA], cA = F[E], f = 0; f < p; f++)
              mA = eA + f, mA >= 0 && mA < i && (wA[mA] |= cA[f]);
      }
    }
  return Q;
}
function fh(e, A) {
  const t = {};
  t.number = le(e, A);
  const i = e[A + 4], s = i & 63;
  if (!Yo[s])
    throw new Be("invalid segment type: " + s);
  t.type = s, t.typeName = Yo[s], t.deferredNonRetain = !!(i & 128);
  const a = !!(i & 64), n = e[A + 5];
  let r = n >> 5 & 7;
  const g = [n & 31];
  let o = A + 6;
  if (n === 7) {
    r = le(e, o - 1) & 536870911, o += 3;
    let h = r + 7 >> 3;
    for (g[0] = e[o++]; --h > 0; )
      g.push(e[o++]);
  } else if (n === 5 || n === 6)
    throw new Be("invalid referred-to flags");
  t.retainBits = g;
  let I = 4;
  t.number <= 256 ? I = 1 : t.number <= 65536 && (I = 2);
  const c = [];
  let l, C;
  for (l = 0; l < r; l++) {
    let h;
    I === 1 ? h = e[o] : I === 2 ? h = ce(e, o) : h = le(e, o), c.push(h), o += I;
  }
  if (t.referredTo = c, a ? (t.pageAssociation = le(e, o), o += 4) : t.pageAssociation = e[o++], t.length = le(e, o), o += 4, t.length === 4294967295)
    if (s === 38) {
      const h = on(e, o), Q = !!(e[o + In] & 1), E = 6, f = new Uint8Array(E);
      for (Q || (f[0] = 255, f[1] = 172), f[2] = h.height >>> 24 & 255, f[3] = h.height >> 16 & 255, f[4] = h.height >> 8 & 255, f[5] = h.height & 255, l = o, C = e.length; l < C; l++) {
        let d = 0;
        for (; d < E && f[d] === e[l + d]; )
          d++;
        if (d === E) {
          t.length = l + E;
          break;
        }
      }
      if (t.length === 4294967295)
        throw new Be("segment end was not found");
    } else
      throw new Be("invalid unknown segment length");
  return t.headerEnd = o, t;
}
function uh(e, A, t, i) {
  const s = [];
  let a = t;
  for (; a < i; ) {
    const n = fh(A, a);
    a = n.headerEnd;
    const r = {
      header: n,
      data: A
    };
    if (e.randomAccess || (r.start = a, a += n.length, r.end = a), s.push(r), n.type === 51)
      break;
  }
  if (e.randomAccess)
    for (let n = 0, r = s.length; n < r; n++)
      s[n].start = a, a += s[n].header.length, s[n].end = a;
  return s;
}
function on(e, A) {
  return {
    width: le(e, A),
    height: le(e, A + 4),
    x: le(e, A + 8),
    y: le(e, A + 12),
    combinationOperator: e[A + 16] & 7
  };
}
const In = 17;
function dh(e, A) {
  const t = e.header, i = e.data, s = e.end;
  let a = e.start, n, r, g, o;
  switch (t.type) {
    case 0:
      const c = {}, l = ce(i, a);
      if (c.huffman = !!(l & 1), c.refinement = !!(l & 2), c.huffmanDHSelector = l >> 2 & 3, c.huffmanDWSelector = l >> 4 & 3, c.bitmapSizeSelector = l >> 6 & 1, c.aggregationInstancesSelector = l >> 7 & 1, c.bitmapCodingContextUsed = !!(l & 256), c.bitmapCodingContextRetained = !!(l & 512), c.template = l >> 10 & 3, c.refinementTemplate = l >> 12 & 1, a += 2, !c.huffman) {
        for (o = c.template === 0 ? 4 : 1, r = [], g = 0; g < o; g++)
          r.push({
            x: Di(i, a),
            y: Di(i, a + 1)
          }), a += 2;
        c.at = r;
      }
      if (c.refinement && !c.refinementTemplate) {
        for (r = [], g = 0; g < 2; g++)
          r.push({
            x: Di(i, a),
            y: Di(i, a + 1)
          }), a += 2;
        c.refinementAt = r;
      }
      c.numberOfExportedSymbols = le(i, a), a += 4, c.numberOfNewSymbols = le(i, a), a += 4, n = [c, t.number, t.referredTo, i, a, s];
      break;
    case 6:
    case 7:
      const C = {};
      C.info = on(i, a), a += In;
      const h = ce(i, a);
      if (a += 2, C.huffman = !!(h & 1), C.refinement = !!(h & 2), C.logStripSize = h >> 2 & 3, C.stripSize = 1 << C.logStripSize, C.referenceCorner = h >> 4 & 3, C.transposed = !!(h & 64), C.combinationOperator = h >> 7 & 3, C.defaultPixelValue = h >> 9 & 1, C.dsOffset = h << 17 >> 27, C.refinementTemplate = h >> 15 & 1, C.huffman) {
        const m = ce(i, a);
        a += 2, C.huffmanFS = m & 3, C.huffmanDS = m >> 2 & 3, C.huffmanDT = m >> 4 & 3, C.huffmanRefinementDW = m >> 6 & 3, C.huffmanRefinementDH = m >> 8 & 3, C.huffmanRefinementDX = m >> 10 & 3, C.huffmanRefinementDY = m >> 12 & 3, C.huffmanRefinementSizeSelector = !!(m & 16384);
      }
      if (C.refinement && !C.refinementTemplate) {
        for (r = [], g = 0; g < 2; g++)
          r.push({
            x: Di(i, a),
            y: Di(i, a + 1)
          }), a += 2;
        C.refinementAt = r;
      }
      C.numberOfSymbolInstances = le(i, a), a += 4, n = [C, t.referredTo, i, a, s];
      break;
    case 16:
      const B = {}, Q = i[a++];
      B.mmr = !!(Q & 1), B.template = Q >> 1 & 3, B.patternWidth = i[a++], B.patternHeight = i[a++], B.maxPatternIndex = le(i, a), a += 4, n = [B, t.number, i, a, s];
      break;
    case 22:
    case 23:
      const E = {};
      E.info = on(i, a), a += In;
      const f = i[a++];
      E.mmr = !!(f & 1), E.template = f >> 1 & 3, E.enableSkip = !!(f & 8), E.combinationOperator = f >> 4 & 7, E.defaultPixelValue = f >> 7 & 1, E.gridWidth = le(i, a), a += 4, E.gridHeight = le(i, a), a += 4, E.gridOffsetX = le(i, a) & 4294967295, a += 4, E.gridOffsetY = le(i, a) & 4294967295, a += 4, E.gridVectorX = ce(i, a), a += 2, E.gridVectorY = ce(i, a), a += 2, n = [E, t.referredTo, i, a, s];
      break;
    case 38:
    case 39:
      const d = {};
      d.info = on(i, a), a += In;
      const u = i[a++];
      if (d.mmr = !!(u & 1), d.template = u >> 1 & 3, d.prediction = !!(u & 8), !d.mmr) {
        for (o = d.template === 0 ? 4 : 1, r = [], g = 0; g < o; g++)
          r.push({
            x: Di(i, a),
            y: Di(i, a + 1)
          }), a += 2;
        d.at = r;
      }
      n = [d, i, a, s];
      break;
    case 48:
      const x = {
        width: le(i, a),
        height: le(i, a + 4),
        resolutionX: le(i, a + 8),
        resolutionY: le(i, a + 12)
      };
      x.height === 4294967295 && delete x.height;
      const p = i[a + 16];
      ce(i, a + 17), x.lossless = !!(p & 1), x.refinement = !!(p & 2), x.defaultPixelValue = p >> 2 & 1, x.combinationOperator = p >> 3 & 3, x.requiresBuffer = !!(p & 32), x.combinationOperatorOverride = !!(p & 64), n = [x];
      break;
    case 49:
      break;
    case 50:
      break;
    case 51:
      break;
    case 53:
      n = [t.number, i, a, s];
      break;
    case 62:
      break;
    default:
      throw new Be(`segment type ${t.typeName}(${t.type}) is not implemented`);
  }
  const I = "on" + t.typeName;
  I in A && A[I].apply(A, n);
}
function xh(e, A) {
  for (let t = 0, i = e.length; t < i; t++)
    dh(e[t], A);
}
function mh(e) {
  const A = new ph();
  for (let t = 0, i = e.length; t < i; t++) {
    const s = e[t], a = uh({}, s.data, s.start, s.end);
    xh(a, A);
  }
  return A.buffer;
}
class ph {
  onPageInformation(A) {
    this.currentPageInfo = A;
    const t = A.width + 7 >> 3, i = new Uint8ClampedArray(t * A.height);
    A.defaultPixelValue && i.fill(255), this.buffer = i;
  }
  drawBitmap(A, t) {
    const i = this.currentPageInfo, s = A.width, a = A.height, n = i.width + 7 >> 3, r = i.combinationOperatorOverride ? A.combinationOperator : i.combinationOperator, g = this.buffer, o = 128 >> (A.x & 7);
    let I = A.y * n + (A.x >> 3), c, l, C, h;
    switch (r) {
      case 0:
        for (c = 0; c < a; c++) {
          for (C = o, h = I, l = 0; l < s; l++)
            t[c][l] && (g[h] |= C), C >>= 1, C || (C = 128, h++);
          I += n;
        }
        break;
      case 2:
        for (c = 0; c < a; c++) {
          for (C = o, h = I, l = 0; l < s; l++)
            t[c][l] && (g[h] ^= C), C >>= 1, C || (C = 128, h++);
          I += n;
        }
        break;
      default:
        throw new Be(`operator ${r} is not supported`);
    }
  }
  onImmediateGenericRegion(A, t, i, s) {
    const a = A.info, n = new Es(t, i, s), r = Ar(A.mmr, a.width, a.height, A.template, A.prediction, null, A.at, n);
    this.drawBitmap(a, r);
  }
  onImmediateLosslessGenericRegion() {
    this.onImmediateGenericRegion(...arguments);
  }
  onSymbolDictionary(A, t, i, s, a, n) {
    let r, g;
    A.huffman && (r = bh(A, i, this.customTables), g = new js(s, a, n));
    let o = this.symbols;
    o || (this.symbols = o = {});
    const I = [];
    for (const l of i) {
      const C = o[l];
      C && I.push(...C);
    }
    const c = new Es(s, a, n);
    o[t] = Bh(A.huffman, A.refinement, I, A.numberOfNewSymbols, A.numberOfExportedSymbols, r, A.template, A.at, A.refinementTemplate, A.refinementAt, c, g);
  }
  onImmediateTextRegion(A, t, i, s, a) {
    const n = A.info;
    let r, g;
    const o = this.symbols, I = [];
    for (const h of t) {
      const B = o[h];
      B && I.push(...B);
    }
    const c = vg(I.length);
    A.huffman && (g = new js(i, s, a), r = wh(A, t, this.customTables, I.length, g));
    const l = new Es(i, s, a), C = Sc(A.huffman, A.refinement, n.width, n.height, A.defaultPixelValue, A.numberOfSymbolInstances, A.stripSize, I, c, A.transposed, A.dsOffset, A.referenceCorner, A.combinationOperator, r, A.refinementTemplate, A.refinementAt, l, A.logStripSize, g);
    this.drawBitmap(n, C);
  }
  onImmediateLosslessTextRegion() {
    this.onImmediateTextRegion(...arguments);
  }
  onPatternDictionary(A, t, i, s, a) {
    let n = this.patterns;
    n || (this.patterns = n = {});
    const r = new Es(i, s, a);
    n[t] = Qh(A.mmr, A.patternWidth, A.patternHeight, A.maxPatternIndex, A.template, r);
  }
  onImmediateHalftoneRegion(A, t, i, s, a) {
    const n = this.patterns[t[0]], r = A.info, g = new Es(i, s, a), o = Eh(A.mmr, n, A.template, r.width, r.height, A.defaultPixelValue, A.enableSkip, A.combinationOperator, A.gridWidth, A.gridHeight, A.gridOffsetX, A.gridOffsetY, A.gridVectorX, A.gridVectorY, g);
    this.drawBitmap(r, o);
  }
  onImmediateLosslessHalftoneRegion() {
    this.onImmediateHalftoneRegion(...arguments);
  }
  onTables(A, t, i, s) {
    let a = this.customTables;
    a || (this.customTables = a = {}), a[A] = yh(t, i, s);
  }
}
class Ki {
  constructor(A) {
    A.length === 2 ? (this.isOOB = !0, this.rangeLow = 0, this.prefixLength = A[0], this.rangeLength = 0, this.prefixCode = A[1], this.isLowerRange = !1) : (this.isOOB = !1, this.rangeLow = A[0], this.prefixLength = A[1], this.rangeLength = A[2], this.prefixCode = A[3], this.isLowerRange = A[4] === "lower");
  }
}
class bn {
  constructor(A) {
    this.children = [], A ? (this.isLeaf = !0, this.rangeLength = A.rangeLength, this.rangeLow = A.rangeLow, this.isLowerRange = A.isLowerRange, this.isOOB = A.isOOB) : this.isLeaf = !1;
  }
  buildTree(A, t) {
    const i = A.prefixCode >> t & 1;
    if (t <= 0)
      this.children[i] = new bn(A);
    else {
      let s = this.children[i];
      s || (this.children[i] = s = new bn(null)), s.buildTree(A, t - 1);
    }
  }
  decodeNode(A) {
    if (this.isLeaf) {
      if (this.isOOB)
        return null;
      const i = A.readBits(this.rangeLength);
      return this.rangeLow + (this.isLowerRange ? -i : i);
    }
    const t = this.children[A.readBit()];
    if (!t)
      throw new Be("invalid Huffman data");
    return t.decodeNode(A);
  }
}
class Dn {
  constructor(A, t) {
    t || this.assignPrefixCodes(A), this.rootNode = new bn(null);
    for (let i = 0, s = A.length; i < s; i++) {
      const a = A[i];
      a.prefixLength > 0 && this.rootNode.buildTree(a, a.prefixLength - 1);
    }
  }
  decode(A) {
    return this.rootNode.decodeNode(A);
  }
  assignPrefixCodes(A) {
    const t = A.length;
    let i = 0;
    for (let I = 0; I < t; I++)
      i = Math.max(i, A[I].prefixLength);
    const s = new Uint32Array(i + 1);
    for (let I = 0; I < t; I++)
      s[A[I].prefixLength]++;
    let a = 1, n = 0, r, g, o;
    for (s[0] = 0; a <= i; ) {
      for (n = n + s[a - 1] << 1, r = n, g = 0; g < t; )
        o = A[g], o.prefixLength === a && (o.prefixCode = r, r++), g++;
      a++;
    }
  }
}
function yh(e, A, t) {
  const i = e[A], s = le(e, A + 1) & 4294967295, a = le(e, A + 5) & 4294967295, n = new js(e, A + 9, t), r = (i >> 1 & 7) + 1, g = (i >> 4 & 7) + 1, o = [];
  let I, c, l = s;
  do
    I = n.readBits(r), c = n.readBits(g), o.push(new Ki([l, I, c, 0])), l += 1 << c;
  while (l < a);
  return I = n.readBits(r), o.push(new Ki([s - 1, I, 32, 0, "lower"])), I = n.readBits(r), o.push(new Ki([a, I, 32, 0])), i & 1 && (I = n.readBits(r), o.push(new Ki([I, 0]))), new Dn(o, !1);
}
const vo = {};
function vi(e) {
  let A = vo[e];
  if (A)
    return A;
  let t;
  switch (e) {
    case 1:
      t = [[0, 1, 4, 0], [16, 2, 8, 2], [272, 3, 16, 6], [65808, 3, 32, 7]];
      break;
    case 2:
      t = [[0, 1, 0, 0], [1, 2, 0, 2], [2, 3, 0, 6], [3, 4, 3, 14], [11, 5, 6, 30], [75, 6, 32, 62], [6, 63]];
      break;
    case 3:
      t = [[-256, 8, 8, 254], [0, 1, 0, 0], [1, 2, 0, 2], [2, 3, 0, 6], [3, 4, 3, 14], [11, 5, 6, 30], [-257, 8, 32, 255, "lower"], [75, 7, 32, 126], [6, 62]];
      break;
    case 4:
      t = [[1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 0, 6], [4, 4, 3, 14], [12, 5, 6, 30], [76, 5, 32, 31]];
      break;
    case 5:
      t = [[-255, 7, 8, 126], [1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 0, 6], [4, 4, 3, 14], [12, 5, 6, 30], [-256, 7, 32, 127, "lower"], [76, 6, 32, 62]];
      break;
    case 6:
      t = [[-2048, 5, 10, 28], [-1024, 4, 9, 8], [-512, 4, 8, 9], [-256, 4, 7, 10], [-128, 5, 6, 29], [-64, 5, 5, 30], [-32, 4, 5, 11], [0, 2, 7, 0], [128, 3, 7, 2], [256, 3, 8, 3], [512, 4, 9, 12], [1024, 4, 10, 13], [-2049, 6, 32, 62, "lower"], [2048, 6, 32, 63]];
      break;
    case 7:
      t = [[-1024, 4, 9, 8], [-512, 3, 8, 0], [-256, 4, 7, 9], [-128, 5, 6, 26], [-64, 5, 5, 27], [-32, 4, 5, 10], [0, 4, 5, 11], [32, 5, 5, 28], [64, 5, 6, 29], [128, 4, 7, 12], [256, 3, 8, 1], [512, 3, 9, 2], [1024, 3, 10, 3], [-1025, 5, 32, 30, "lower"], [2048, 5, 32, 31]];
      break;
    case 8:
      t = [[-15, 8, 3, 252], [-7, 9, 1, 508], [-5, 8, 1, 253], [-3, 9, 0, 509], [-2, 7, 0, 124], [-1, 4, 0, 10], [0, 2, 1, 0], [2, 5, 0, 26], [3, 6, 0, 58], [4, 3, 4, 4], [20, 6, 1, 59], [22, 4, 4, 11], [38, 4, 5, 12], [70, 5, 6, 27], [134, 5, 7, 28], [262, 6, 7, 60], [390, 7, 8, 125], [646, 6, 10, 61], [-16, 9, 32, 510, "lower"], [1670, 9, 32, 511], [2, 1]];
      break;
    case 9:
      t = [[-31, 8, 4, 252], [-15, 9, 2, 508], [-11, 8, 2, 253], [-7, 9, 1, 509], [-5, 7, 1, 124], [-3, 4, 1, 10], [-1, 3, 1, 2], [1, 3, 1, 3], [3, 5, 1, 26], [5, 6, 1, 58], [7, 3, 5, 4], [39, 6, 2, 59], [43, 4, 5, 11], [75, 4, 6, 12], [139, 5, 7, 27], [267, 5, 8, 28], [523, 6, 8, 60], [779, 7, 9, 125], [1291, 6, 11, 61], [-32, 9, 32, 510, "lower"], [3339, 9, 32, 511], [2, 0]];
      break;
    case 10:
      t = [[-21, 7, 4, 122], [-5, 8, 0, 252], [-4, 7, 0, 123], [-3, 5, 0, 24], [-2, 2, 2, 0], [2, 5, 0, 25], [3, 6, 0, 54], [4, 7, 0, 124], [5, 8, 0, 253], [6, 2, 6, 1], [70, 5, 5, 26], [102, 6, 5, 55], [134, 6, 6, 56], [198, 6, 7, 57], [326, 6, 8, 58], [582, 6, 9, 59], [1094, 6, 10, 60], [2118, 7, 11, 125], [-22, 8, 32, 254, "lower"], [4166, 8, 32, 255], [2, 2]];
      break;
    case 11:
      t = [[1, 1, 0, 0], [2, 2, 1, 2], [4, 4, 0, 12], [5, 4, 1, 13], [7, 5, 1, 28], [9, 5, 2, 29], [13, 6, 2, 60], [17, 7, 2, 122], [21, 7, 3, 123], [29, 7, 4, 124], [45, 7, 5, 125], [77, 7, 6, 126], [141, 7, 32, 127]];
      break;
    case 12:
      t = [[1, 1, 0, 0], [2, 2, 0, 2], [3, 3, 1, 6], [5, 5, 0, 28], [6, 5, 1, 29], [8, 6, 1, 60], [10, 7, 0, 122], [11, 7, 1, 123], [13, 7, 2, 124], [17, 7, 3, 125], [25, 7, 4, 126], [41, 8, 5, 254], [73, 8, 32, 255]];
      break;
    case 13:
      t = [[1, 1, 0, 0], [2, 3, 0, 4], [3, 4, 0, 12], [4, 5, 0, 28], [5, 4, 1, 13], [7, 3, 3, 5], [15, 6, 1, 58], [17, 6, 2, 59], [21, 6, 3, 60], [29, 6, 4, 61], [45, 6, 5, 62], [77, 7, 6, 126], [141, 7, 32, 127]];
      break;
    case 14:
      t = [[-2, 3, 0, 4], [-1, 3, 0, 5], [0, 1, 0, 0], [1, 3, 0, 6], [2, 3, 0, 7]];
      break;
    case 15:
      t = [[-24, 7, 4, 124], [-8, 6, 2, 60], [-4, 5, 1, 28], [-2, 4, 0, 12], [-1, 3, 0, 4], [0, 1, 0, 0], [1, 3, 0, 5], [2, 4, 0, 13], [3, 5, 1, 29], [5, 6, 2, 61], [9, 7, 4, 125], [-25, 7, 32, 126, "lower"], [25, 7, 32, 127]];
      break;
    default:
      throw new Be(`standard table B.${e} does not exist`);
  }
  for (let i = 0, s = t.length; i < s; i++)
    t[i] = new Ki(t[i]);
  return A = new Dn(t, !0), vo[e] = A, A;
}
class js {
  constructor(A, t, i) {
    this.data = A, this.start = t, this.end = i, this.position = t, this.shift = -1, this.currentByte = 0;
  }
  readBit() {
    if (this.shift < 0) {
      if (this.position >= this.end)
        throw new Be("end of data while reading bit");
      this.currentByte = this.data[this.position++], this.shift = 7;
    }
    const A = this.currentByte >> this.shift & 1;
    return this.shift--, A;
  }
  readBits(A) {
    let t = 0, i;
    for (i = A - 1; i >= 0; i--)
      t |= this.readBit() << i;
    return t;
  }
  byteAlign() {
    this.shift = -1;
  }
  next() {
    return this.position >= this.end ? -1 : this.data[this.position++];
  }
}
function o0(e, A, t) {
  let i = 0;
  for (let s = 0, a = A.length; s < a; s++) {
    const n = t[A[s]];
    if (n) {
      if (e === i)
        return n;
      i++;
    }
  }
  throw new Be("can't find custom Huffman table");
}
function wh(e, A, t, i, s) {
  const a = [];
  for (let l = 0; l <= 34; l++) {
    const C = s.readBits(4);
    a.push(new Ki([l, C, 0, 0]));
  }
  const n = new Dn(a, !1);
  a.length = 0;
  for (let l = 0; l < i; ) {
    const C = n.decode(s);
    if (C >= 32) {
      let h, B, Q;
      switch (C) {
        case 32:
          if (l === 0)
            throw new Be("no previous value in symbol ID table");
          B = s.readBits(2) + 3, h = a[l - 1].prefixLength;
          break;
        case 33:
          B = s.readBits(3) + 3, h = 0;
          break;
        case 34:
          B = s.readBits(7) + 11, h = 0;
          break;
        default:
          throw new Be("invalid code length in symbol ID table");
      }
      for (Q = 0; Q < B; Q++)
        a.push(new Ki([l, h, 0, 0])), l++;
    } else
      a.push(new Ki([l, C, 0, 0])), l++;
  }
  s.byteAlign();
  const r = new Dn(a, !1);
  let g = 0, o, I, c;
  switch (e.huffmanFS) {
    case 0:
    case 1:
      o = vi(e.huffmanFS + 6);
      break;
    case 3:
      o = o0(g, A, t), g++;
      break;
    default:
      throw new Be("invalid Huffman FS selector");
  }
  switch (e.huffmanDS) {
    case 0:
    case 1:
    case 2:
      I = vi(e.huffmanDS + 8);
      break;
    case 3:
      I = o0(g, A, t), g++;
      break;
    default:
      throw new Be("invalid Huffman DS selector");
  }
  switch (e.huffmanDT) {
    case 0:
    case 1:
    case 2:
      c = vi(e.huffmanDT + 11);
      break;
    case 3:
      c = o0(g, A, t), g++;
      break;
    default:
      throw new Be("invalid Huffman DT selector");
  }
  if (e.refinement)
    throw new Be("refinement with Huffman is not supported");
  return {
    symbolIDTable: r,
    tableFirstS: o,
    tableDeltaS: I,
    tableDeltaT: c
  };
}
function bh(e, A, t) {
  let i = 0, s, a;
  switch (e.huffmanDHSelector) {
    case 0:
    case 1:
      s = vi(e.huffmanDHSelector + 4);
      break;
    case 3:
      s = o0(i, A, t), i++;
      break;
    default:
      throw new Be("invalid Huffman DH selector");
  }
  switch (e.huffmanDWSelector) {
    case 0:
    case 1:
      a = vi(e.huffmanDWSelector + 2);
      break;
    case 3:
      a = o0(i, A, t), i++;
      break;
    default:
      throw new Be("invalid Huffman DW selector");
  }
  let n, r;
  return e.bitmapSizeSelector ? (n = o0(i, A, t), i++) : n = vi(1), e.aggregationInstancesSelector ? r = o0(i, A, t) : r = vi(1), {
    tableDeltaHeight: s,
    tableDeltaWidth: a,
    tableBitmapSize: n,
    tableAggregateInstances: r
  };
}
function Dh(e, A, t) {
  const i = [];
  for (let s = 0; s < t; s++) {
    const a = new Uint8Array(A);
    i.push(a);
    for (let n = 0; n < A; n++)
      a[n] = e.readBit();
    e.byteAlign();
  }
  return i;
}
function qg(e, A, t, i) {
  const s = {
    K: -1,
    Columns: A,
    Rows: t,
    BlackIs1: !0,
    EndOfBlock: i
  }, a = new bc(e, s), n = [];
  let r, g = !1;
  for (let o = 0; o < t; o++) {
    const I = new Uint8Array(A);
    n.push(I);
    let c = -1;
    for (let l = 0; l < A; l++)
      c < 0 && (r = a.readNextChar(), r === -1 && (r = 0, g = !0), c = 7), I[l] = r >> c & 1, c--;
  }
  if (i && !g)
    for (let I = 0; I < 5 && a.readNextChar() !== -1; I++)
      ;
  return n;
}
class kh {
  parseChunks(A) {
    return mh(A);
  }
  parse(A) {
    throw new Error("Not implemented: Jbig2Image.parse");
  }
}
class Sh extends $e {
  constructor(A, t, i) {
    super(t), this.stream = A, this.dict = A.dict, this.maybeLength = t, this.params = i;
  }
  get bytes() {
    return tA(this, "bytes", this.stream.getBytes(this.maybeLength));
  }
  ensureBuffer(A) {
  }
  readBlock() {
    this.decodeImage();
  }
  decodeImage(A) {
    if (this.eof)
      return this.buffer;
    A || (A = this.bytes);
    const t = new kh(), i = [];
    if (this.params instanceof R) {
      const n = this.params.get("JBIG2Globals");
      if (n instanceof JA) {
        const r = n.getBytes();
        i.push({
          data: r,
          start: 0,
          end: r.length
        });
      }
    }
    i.push({
      data: A,
      start: 0,
      end: A.length
    });
    const s = t.parseChunks(i), a = s.length;
    for (let n = 0; n < a; n++)
      s[n] ^= 255;
    return this.buffer = s, this.bufferLength = a, this.eof = !0, this.buffer;
  }
  get canAsyncDecodeImageFromBuffer() {
    return this.stream.isAsync;
  }
}
function Fc(e) {
  switch (e.kind) {
    case Ue.GRAYSCALE_1BPP:
      return ng(e);
    case Ue.RGB_24BPP:
      return Fh(e);
  }
  return null;
}
function ng({
  src: e,
  srcPos: A = 0,
  dest: t,
  width: i,
  height: s,
  nonBlackColor: a = 4294967295,
  inverseDecode: n = !1
}) {
  const r = ht.isLittleEndian ? 4278190080 : 255, [g, o] = n ? [a, r] : [r, a], I = i >> 3, c = i & 7, l = e.length;
  t = new Uint32Array(t.buffer);
  let C = 0;
  for (let h = 0; h < s; h++) {
    for (const Q = A + I; A < Q; A++) {
      const E = A < l ? e[A] : 255;
      t[C++] = E & 128 ? o : g, t[C++] = E & 64 ? o : g, t[C++] = E & 32 ? o : g, t[C++] = E & 16 ? o : g, t[C++] = E & 8 ? o : g, t[C++] = E & 4 ? o : g, t[C++] = E & 2 ? o : g, t[C++] = E & 1 ? o : g;
    }
    if (c === 0)
      continue;
    const B = A < l ? e[A++] : 255;
    for (let Q = 0; Q < c; Q++)
      t[C++] = B & 1 << 7 - Q ? o : g;
  }
  return {
    srcPos: A,
    destPos: C
  };
}
function Fh({
  src: e,
  srcPos: A = 0,
  dest: t,
  destPos: i = 0,
  width: s,
  height: a
}) {
  let n = 0;
  const r = s * a * 3, g = r >> 2, o = new Uint32Array(e.buffer, A, g);
  if (ht.isLittleEndian) {
    for (; n < g - 2; n += 3, i += 4) {
      const I = o[n], c = o[n + 1], l = o[n + 2];
      t[i] = I | 4278190080, t[i + 1] = I >>> 24 | c << 8 | 4278190080, t[i + 2] = c >>> 16 | l << 16 | 4278190080, t[i + 3] = l >>> 8 | 4278190080;
    }
    for (let I = n * 4, c = A + r; I < c; I += 3)
      t[i++] = e[I] | e[I + 1] << 8 | e[I + 2] << 16 | 4278190080;
  } else {
    for (; n < g - 2; n += 3, i += 4) {
      const I = o[n], c = o[n + 1], l = o[n + 2];
      t[i] = I | 255, t[i + 1] = I << 24 | c >>> 8 | 255, t[i + 2] = c << 16 | l >>> 16 | 255, t[i + 3] = l << 8 | 255;
    }
    for (let I = n * 4, c = A + r; I < c; I += 3)
      t[i++] = e[I] << 24 | e[I + 1] << 16 | e[I + 2] << 8 | 255;
  }
  return {
    srcPos: A + r,
    destPos: i
  };
}
function Rh(e, A) {
  if (ht.isLittleEndian)
    for (let t = 0, i = e.length; t < i; t++)
      A[t] = e[t] * 65793 | 4278190080;
  else
    for (let t = 0, i = e.length; t < i; t++)
      A[t] = e[t] * 16843008 | 255;
}
class qt extends At {
  constructor(A) {
    super(A, "JpegError");
  }
}
class rg extends At {
  constructor(A, t) {
    super(A, "DNLMarkerError"), this.scanLines = t;
  }
}
class Rc extends At {
  constructor(A) {
    super(A, "EOIMarkerError");
  }
}
const Js = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]), Ga = 4017, Ua = 799, Ma = 3406, La = 2276, Ha = 1567, Ja = 3784, y0 = 5793, Ya = 2896;
function Nh(e, A) {
  let t = 0, i, s, a = 16;
  for (; a > 0 && !e[a - 1]; )
    a--;
  const n = [{
    children: [],
    index: 0
  }];
  let r = n[0], g;
  for (i = 0; i < a; i++) {
    for (s = 0; s < e[i]; s++) {
      for (r = n.pop(), r.children[r.index] = A[t]; r.index > 0; )
        r = n.pop();
      for (r.index++, n.push(r); n.length <= i; )
        n.push(g = {
          children: [],
          index: 0
        }), r.children[r.index] = g.children, r = g;
      t++;
    }
    i + 1 < a && (n.push(g = {
      children: [],
      index: 0
    }), r.children[r.index] = g.children, r = g);
  }
  return n[0].children;
}
function gg(e, A, t) {
  return 64 * ((e.blocksPerLine + 1) * A + t);
}
function Gh(e, A, t, i, s, a, n, r, g, o = !1) {
  const I = t.mcusPerLine, c = t.progressive, l = A;
  let C = 0, h = 0;
  function B() {
    if (h > 0)
      return h--, C >> h & 1;
    if (C = e[A++], C === 255) {
      const oA = e[A++];
      if (oA) {
        if (oA === 220 && o) {
          A += 2;
          const U = ce(e, A);
          if (A += 2, U > 0 && U !== t.scanLines)
            throw new rg("Found DNL marker (0xFFDC) while parsing scan data", U);
        } else if (oA === 217) {
          if (o) {
            const U = H * (t.precision === 8 ? 8 : 0);
            if (U > 0 && Math.round(t.scanLines / U) >= 5)
              throw new rg("Found EOI marker (0xFFD9) while parsing scan data, possibly caused by incorrect `scanLines` parameter", U);
          }
          throw new Rc("Found EOI marker (0xFFD9) while parsing scan data");
        }
        throw new qt(`unexpected marker ${(C << 8 | oA).toString(16)}`);
      }
    }
    return h = 7, C >>> 7;
  }
  function Q(oA) {
    let U = oA;
    for (; ; ) {
      switch (U = U[B()], typeof U) {
        case "number":
          return U;
        case "object":
          continue;
      }
      throw new qt("invalid huffman sequence");
    }
  }
  function E(oA) {
    let U = 0;
    for (; oA > 0; )
      U = U << 1 | B(), oA--;
    return U;
  }
  function f(oA) {
    if (oA === 1)
      return B() === 1 ? 1 : -1;
    const U = E(oA);
    return U >= 1 << oA - 1 ? U : U + (-1 << oA) + 1;
  }
  function d(oA, U) {
    const J = Q(oA.huffmanTableDC), q = J === 0 ? 0 : f(J);
    oA.blockData[U] = oA.pred += q;
    let Z = 1;
    for (; Z < 64; ) {
      const sA = Q(oA.huffmanTableAC), V = sA & 15, P = sA >> 4;
      if (V === 0) {
        if (P < 15)
          break;
        Z += 16;
        continue;
      }
      Z += P;
      const M = Js[Z];
      oA.blockData[U + M] = f(V), Z++;
    }
  }
  function u(oA, U) {
    const J = Q(oA.huffmanTableDC), q = J === 0 ? 0 : f(J) << g;
    oA.blockData[U] = oA.pred += q;
  }
  function x(oA, U) {
    oA.blockData[U] |= B() << g;
  }
  let p = 0;
  function m(oA, U) {
    if (p > 0) {
      p--;
      return;
    }
    let J = a;
    const q = n;
    for (; J <= q; ) {
      const Z = Q(oA.huffmanTableAC), sA = Z & 15, V = Z >> 4;
      if (sA === 0) {
        if (V < 15) {
          p = E(V) + (1 << V) - 1;
          break;
        }
        J += 16;
        continue;
      }
      J += V;
      const P = Js[J];
      oA.blockData[U + P] = f(sA) * (1 << g), J++;
    }
  }
  let D = 0, S;
  function y(oA, U) {
    let J = a;
    const q = n;
    let Z = 0, sA, V;
    for (; J <= q; ) {
      const P = U + Js[J], M = oA.blockData[P] < 0 ? -1 : 1;
      switch (D) {
        case 0:
          if (V = Q(oA.huffmanTableAC), sA = V & 15, Z = V >> 4, sA === 0)
            Z < 15 ? (p = E(Z) + (1 << Z), D = 4) : (Z = 16, D = 1);
          else {
            if (sA !== 1)
              throw new qt("invalid ACn encoding");
            S = f(sA), D = Z ? 2 : 3;
          }
          continue;
        case 1:
        case 2:
          oA.blockData[P] ? oA.blockData[P] += M * (B() << g) : (Z--, Z === 0 && (D = D === 2 ? 3 : 0));
          break;
        case 3:
          oA.blockData[P] ? oA.blockData[P] += M * (B() << g) : (oA.blockData[P] = S << g, D = 0);
          break;
        case 4:
          oA.blockData[P] && (oA.blockData[P] += M * (B() << g));
          break;
      }
      J++;
    }
    D === 4 && (p--, p === 0 && (D = 0));
  }
  let H = 0;
  function G(oA, U, J, q, Z) {
    const sA = J / I | 0, V = J % I;
    H = sA * oA.v + q;
    const P = V * oA.h + Z, M = gg(oA, H, P);
    U(oA, M);
  }
  function v(oA, U, J) {
    H = J / oA.blocksPerLine | 0;
    const q = J % oA.blocksPerLine, Z = gg(oA, H, q);
    U(oA, Z);
  }
  const X = i.length;
  let gA, N, F, eA, z, cA;
  c ? a === 0 ? cA = r === 0 ? u : x : cA = r === 0 ? m : y : cA = d;
  let wA = 0, mA;
  const DA = X === 1 ? i[0].blocksPerLine * i[0].blocksPerColumn : I * t.mcusPerColumn;
  let _, TA;
  for (; wA <= DA; ) {
    const oA = s ? Math.min(DA - wA, s) : DA;
    if (oA > 0) {
      for (N = 0; N < X; N++)
        i[N].pred = 0;
      if (p = 0, X === 1)
        for (gA = i[0], z = 0; z < oA; z++)
          v(gA, cA, wA), wA++;
      else
        for (z = 0; z < oA; z++) {
          for (N = 0; N < X; N++)
            for (gA = i[N], _ = gA.h, TA = gA.v, F = 0; F < TA; F++)
              for (eA = 0; eA < _; eA++)
                G(gA, cA, wA, F, eA);
          wA++;
        }
    }
    if (h = 0, mA = er(e, A), !mA)
      break;
    if (mA.invalid) {
      const U = oA > 0 ? "unexpected" : "excessive";
      k(`decodeScan - ${U} MCU data, current marker is: ${mA.invalid}`), A = mA.offset;
    }
    if (mA.marker >= 65488 && mA.marker <= 65495)
      A += 2;
    else
      break;
  }
  return A - l;
}
function Uh(e, A, t) {
  const i = e.quantizationTable, s = e.blockData;
  let a, n, r, g, o, I, c, l, C, h, B, Q, E, f, d, u, x;
  if (!i)
    throw new qt("missing required Quantization Table.");
  for (let p = 0; p < 64; p += 8) {
    if (C = s[A + p], h = s[A + p + 1], B = s[A + p + 2], Q = s[A + p + 3], E = s[A + p + 4], f = s[A + p + 5], d = s[A + p + 6], u = s[A + p + 7], C *= i[p], !(h | B | Q | E | f | d | u)) {
      x = y0 * C + 512 >> 10, t[p] = x, t[p + 1] = x, t[p + 2] = x, t[p + 3] = x, t[p + 4] = x, t[p + 5] = x, t[p + 6] = x, t[p + 7] = x;
      continue;
    }
    h *= i[p + 1], B *= i[p + 2], Q *= i[p + 3], E *= i[p + 4], f *= i[p + 5], d *= i[p + 6], u *= i[p + 7], a = y0 * C + 128 >> 8, n = y0 * E + 128 >> 8, r = B, g = d, o = Ya * (h - u) + 128 >> 8, l = Ya * (h + u) + 128 >> 8, I = Q << 4, c = f << 4, a = a + n + 1 >> 1, n = a - n, x = r * Ja + g * Ha + 128 >> 8, r = r * Ha - g * Ja + 128 >> 8, g = x, o = o + c + 1 >> 1, c = o - c, l = l + I + 1 >> 1, I = l - I, a = a + g + 1 >> 1, g = a - g, n = n + r + 1 >> 1, r = n - r, x = o * La + l * Ma + 2048 >> 12, o = o * Ma - l * La + 2048 >> 12, l = x, x = I * Ua + c * Ga + 2048 >> 12, I = I * Ga - c * Ua + 2048 >> 12, c = x, t[p] = a + l, t[p + 7] = a - l, t[p + 1] = n + c, t[p + 6] = n - c, t[p + 2] = r + I, t[p + 5] = r - I, t[p + 3] = g + o, t[p + 4] = g - o;
  }
  for (let p = 0; p < 8; ++p) {
    if (C = t[p], h = t[p + 8], B = t[p + 16], Q = t[p + 24], E = t[p + 32], f = t[p + 40], d = t[p + 48], u = t[p + 56], !(h | B | Q | E | f | d | u)) {
      x = y0 * C + 8192 >> 14, x < -2040 ? x = 0 : x >= 2024 ? x = 255 : x = x + 2056 >> 4, s[A + p] = x, s[A + p + 8] = x, s[A + p + 16] = x, s[A + p + 24] = x, s[A + p + 32] = x, s[A + p + 40] = x, s[A + p + 48] = x, s[A + p + 56] = x;
      continue;
    }
    a = y0 * C + 2048 >> 12, n = y0 * E + 2048 >> 12, r = B, g = d, o = Ya * (h - u) + 2048 >> 12, l = Ya * (h + u) + 2048 >> 12, I = Q, c = f, a = (a + n + 1 >> 1) + 4112, n = a - n, x = r * Ja + g * Ha + 2048 >> 12, r = r * Ha - g * Ja + 2048 >> 12, g = x, o = o + c + 1 >> 1, c = o - c, l = l + I + 1 >> 1, I = l - I, a = a + g + 1 >> 1, g = a - g, n = n + r + 1 >> 1, r = n - r, x = o * La + l * Ma + 2048 >> 12, o = o * Ma - l * La + 2048 >> 12, l = x, x = I * Ua + c * Ga + 2048 >> 12, I = I * Ga - c * Ua + 2048 >> 12, c = x, C = a + l, u = a - l, h = n + c, d = n - c, B = r + I, f = r - I, Q = g + o, E = g - o, C < 16 ? C = 0 : C >= 4080 ? C = 255 : C >>= 4, h < 16 ? h = 0 : h >= 4080 ? h = 255 : h >>= 4, B < 16 ? B = 0 : B >= 4080 ? B = 255 : B >>= 4, Q < 16 ? Q = 0 : Q >= 4080 ? Q = 255 : Q >>= 4, E < 16 ? E = 0 : E >= 4080 ? E = 255 : E >>= 4, f < 16 ? f = 0 : f >= 4080 ? f = 255 : f >>= 4, d < 16 ? d = 0 : d >= 4080 ? d = 255 : d >>= 4, u < 16 ? u = 0 : u >= 4080 ? u = 255 : u >>= 4, s[A + p] = C, s[A + p + 8] = h, s[A + p + 16] = B, s[A + p + 24] = Q, s[A + p + 32] = E, s[A + p + 40] = f, s[A + p + 48] = d, s[A + p + 56] = u;
  }
}
function Mh(e, A) {
  const t = A.blocksPerLine, i = A.blocksPerColumn, s = new Int16Array(64);
  for (let a = 0; a < i; a++)
    for (let n = 0; n < t; n++) {
      const r = gg(A, a, n);
      Uh(A, r, s);
    }
  return A.blockData;
}
function er(e, A, t = A) {
  const i = e.length - 1;
  let s = t < A ? t : A;
  if (A >= i)
    return null;
  const a = ce(e, A);
  if (a >= 65472 && a <= 65534)
    return {
      invalid: null,
      marker: a,
      offset: A
    };
  let n = ce(e, s);
  for (; !(n >= 65472 && n <= 65534); ) {
    if (++s >= i)
      return null;
    n = ce(e, s);
  }
  return {
    invalid: a.toString(16),
    marker: n,
    offset: s
  };
}
function Lh(e) {
  const A = Math.ceil(e.samplesPerLine / 8 / e.maxH), t = Math.ceil(e.scanLines / 8 / e.maxV);
  for (const i of e.components) {
    const s = Math.ceil(Math.ceil(e.samplesPerLine / 8) * i.h / e.maxH), a = Math.ceil(Math.ceil(e.scanLines / 8) * i.v / e.maxV), n = A * i.h, g = 64 * (t * i.v) * (n + 1);
    i.blockData = new Int16Array(g), i.blocksPerLine = s, i.blocksPerColumn = a;
  }
  e.mcusPerLine = A, e.mcusPerColumn = t;
}
function Hh(e, A) {
  const t = ce(e, A);
  A += 2;
  let i = A + t - 2;
  const s = er(e, i, A);
  s != null && s.invalid && (k("readDataBlock - incorrect length, current marker is: " + s.invalid), i = s.offset);
  const a = e.subarray(A, i);
  return A += a.length, {
    appData: a,
    newOffset: A
  };
}
function Jh(e, A) {
  const t = ce(e, A);
  A += 2;
  const i = A + t - 2, s = er(e, i, A);
  return s != null && s.invalid ? s.offset : i;
}
class To {
  constructor({
    decodeTransform: A = null,
    colorTransform: t = -1
  } = {}) {
    this._decodeTransform = A, this._colorTransform = t;
  }
  static canUseImageDecoder(A, t = -1) {
    let i = 0, s = null, a = ce(A, i);
    if (i += 2, a !== 65496)
      throw new qt("SOI not found");
    a = ce(A, i), i += 2;
    A: for (; a !== 65497; ) {
      switch (a) {
        case 65472:
        case 65473:
        case 65474:
          s = A[i + 7];
          break A;
        case 65535:
          A[i] !== 255 && i--;
          break;
      }
      i = Jh(A, i), a = ce(A, i), i += 2;
    }
    return !(s === 4 || s === 3 && t === 0);
  }
  parse(A, {
    dnlScanLines: t = null
  } = {}) {
    let i = 0, s = null, a = null, n, r, g = 0;
    const o = [], I = [], c = [];
    let l = ce(A, i);
    if (i += 2, l !== 65496)
      throw new qt("SOI not found");
    l = ce(A, i), i += 2;
    A: for (; l !== 65497; ) {
      let C, h, B;
      switch (l) {
        case 65504:
        case 65505:
        case 65506:
        case 65507:
        case 65508:
        case 65509:
        case 65510:
        case 65511:
        case 65512:
        case 65513:
        case 65514:
        case 65515:
        case 65516:
        case 65517:
        case 65518:
        case 65519:
        case 65534:
          const {
            appData: Q,
            newOffset: E
          } = Hh(A, i);
          i = E, l === 65504 && Q[0] === 74 && Q[1] === 70 && Q[2] === 73 && Q[3] === 70 && Q[4] === 0 && (s = {
            version: {
              major: Q[5],
              minor: Q[6]
            },
            densityUnits: Q[7],
            xDensity: Q[8] << 8 | Q[9],
            yDensity: Q[10] << 8 | Q[11],
            thumbWidth: Q[12],
            thumbHeight: Q[13],
            thumbData: Q.subarray(14, 14 + 3 * Q[12] * Q[13])
          }), l === 65518 && Q[0] === 65 && Q[1] === 100 && Q[2] === 111 && Q[3] === 98 && Q[4] === 101 && (a = {
            version: Q[5] << 8 | Q[6],
            flags0: Q[7] << 8 | Q[8],
            flags1: Q[9] << 8 | Q[10],
            transformCode: Q[11]
          });
          break;
        case 65499:
          const f = ce(A, i);
          i += 2;
          const d = f + i - 2;
          let u;
          for (; i < d; ) {
            const F = A[i++], eA = new Uint16Array(64);
            if (F >> 4)
              if (F >> 4 === 1)
                for (h = 0; h < 64; h++)
                  u = Js[h], eA[u] = ce(A, i), i += 2;
              else
                throw new qt("DQT - invalid table spec");
            else for (h = 0; h < 64; h++)
              u = Js[h], eA[u] = A[i++];
            o[F & 15] = eA;
          }
          break;
        case 65472:
        case 65473:
        case 65474:
          if (n)
            throw new qt("Only single frame JPEGs supported");
          i += 2, n = {}, n.extended = l === 65473, n.progressive = l === 65474, n.precision = A[i++];
          const x = ce(A, i);
          i += 2, n.scanLines = t || x, n.samplesPerLine = ce(A, i), i += 2, n.components = [], n.componentIds = {};
          const p = A[i++];
          let m = 0, D = 0;
          for (C = 0; C < p; C++) {
            const F = A[i], eA = A[i + 1] >> 4, z = A[i + 1] & 15;
            m < eA && (m = eA), D < z && (D = z);
            const cA = A[i + 2];
            B = n.components.push({
              h: eA,
              v: z,
              quantizationId: cA,
              quantizationTable: null
            }), n.componentIds[F] = B - 1, i += 3;
          }
          n.maxH = m, n.maxV = D, Lh(n);
          break;
        case 65476:
          const S = ce(A, i);
          for (i += 2, C = 2; C < S; ) {
            const F = A[i++], eA = new Uint8Array(16);
            let z = 0;
            for (h = 0; h < 16; h++, i++)
              z += eA[h] = A[i];
            const cA = new Uint8Array(z);
            for (h = 0; h < z; h++, i++)
              cA[h] = A[i];
            C += 17 + z, (F >> 4 ? I : c)[F & 15] = Nh(eA, cA);
          }
          break;
        case 65501:
          i += 2, r = ce(A, i), i += 2;
          break;
        case 65498:
          const y = ++g === 1 && !t;
          i += 2;
          const H = A[i++], G = [];
          for (C = 0; C < H; C++) {
            const F = A[i++], eA = n.componentIds[F], z = n.components[eA];
            z.index = F;
            const cA = A[i++];
            z.huffmanTableDC = c[cA >> 4], z.huffmanTableAC = I[cA & 15], G.push(z);
          }
          const v = A[i++], X = A[i++], gA = A[i++];
          try {
            const F = Gh(A, i, n, G, r, v, X, gA >> 4, gA & 15, y);
            i += F;
          } catch (F) {
            if (F instanceof rg)
              return k(`${F.message} -- attempting to re-parse the JPEG image.`), this.parse(A, {
                dnlScanLines: F.scanLines
              });
            if (F instanceof Rc) {
              k(`${F.message} -- ignoring the rest of the image data.`);
              break A;
            }
            throw F;
          }
          break;
        case 65500:
          i += 4;
          break;
        case 65535:
          A[i] !== 255 && i--;
          break;
        default:
          const N = er(A, i - 2, i - 3);
          if (N != null && N.invalid) {
            k("JpegImage.parse - unexpected data, current marker is: " + N.invalid), i = N.offset;
            break;
          }
          if (!N || i >= A.length - 1) {
            k("JpegImage.parse - reached the end of the image data without finding an EOI marker (0xFFD9).");
            break A;
          }
          throw new qt("JpegImage.parse - unknown marker: " + l.toString(16));
      }
      l = ce(A, i), i += 2;
    }
    if (!n)
      throw new qt("JpegImage.parse - no frame data found.");
    this.width = n.samplesPerLine, this.height = n.scanLines, this.jfif = s, this.adobe = a, this.components = [];
    for (const C of n.components) {
      const h = o[C.quantizationId];
      h && (C.quantizationTable = h), this.components.push({
        index: C.index,
        output: Mh(n, C),
        scaleX: C.h / n.maxH,
        scaleY: C.v / n.maxV,
        blocksPerLine: C.blocksPerLine,
        blocksPerColumn: C.blocksPerColumn
      });
    }
    this.numComponents = this.components.length;
  }
  _getLinearizedBlockData(A, t, i = !1) {
    const s = this.width / A, a = this.height / t;
    let n, r, g, o, I, c, l, C, h, B, Q = 0, E;
    const f = this.components.length, d = A * t * f, u = new Uint8ClampedArray(d), x = new Uint32Array(A), p = 4294967288;
    let m;
    for (l = 0; l < f; l++) {
      if (n = this.components[l], r = n.scaleX * s, g = n.scaleY * a, Q = l, E = n.output, o = n.blocksPerLine + 1 << 3, r !== m) {
        for (I = 0; I < A; I++)
          C = 0 | I * r, x[I] = (C & p) << 3 | C & 7;
        m = r;
      }
      for (c = 0; c < t; c++)
        for (C = 0 | c * g, B = o * (C & p) | (C & 7) << 3, I = 0; I < A; I++)
          u[Q] = E[B + x[I]], Q += f;
    }
    let D = this._decodeTransform;
    if (!i && f === 4 && !D && (D = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255])), D)
      for (l = 0; l < d; )
        for (C = 0, h = 0; C < f; C++, l++, h += 2)
          u[l] = (u[l] * D[h] >> 8) + D[h + 1];
    return u;
  }
  get _isColorConversionNeeded() {
    return this.adobe ? !!this.adobe.transformCode : this.numComponents === 3 ? this._colorTransform === 0 ? !1 : !(this.components[0].index === 82 && this.components[1].index === 71 && this.components[2].index === 66) : this._colorTransform === 1;
  }
  _convertYccToRgb(A) {
    let t, i, s;
    for (let a = 0, n = A.length; a < n; a += 3)
      t = A[a], i = A[a + 1], s = A[a + 2], A[a] = t - 179.456 + 1.402 * s, A[a + 1] = t + 135.459 - 0.344 * i - 0.714 * s, A[a + 2] = t - 226.816 + 1.772 * i;
    return A;
  }
  _convertYccToRgba(A, t) {
    for (let i = 0, s = 0, a = A.length; i < a; i += 3, s += 4) {
      const n = A[i], r = A[i + 1], g = A[i + 2];
      t[s] = n - 179.456 + 1.402 * g, t[s + 1] = n + 135.459 - 0.344 * r - 0.714 * g, t[s + 2] = n - 226.816 + 1.772 * r, t[s + 3] = 255;
    }
    return t;
  }
  _convertYcckToRgb(A) {
    let t, i, s, a, n = 0;
    for (let r = 0, g = A.length; r < g; r += 4)
      t = A[r], i = A[r + 1], s = A[r + 2], a = A[r + 3], A[n++] = -122.67195406894 + i * (-660635669420364e-19 * i + 437130475926232e-18 * s - 54080610064599e-18 * t + 48449797120281e-17 * a - 0.154362151871126) + s * (-957964378445773e-18 * s + 817076911346625e-18 * t - 0.00477271405408747 * a + 1.53380253221734) + t * (961250184130688e-18 * t - 0.00266257332283933 * a + 0.48357088451265) + a * (-336197177618394e-18 * a + 0.484791561490776), A[n++] = 107.268039397724 + i * (219927104525741e-19 * i - 640992018297945e-18 * s + 659397001245577e-18 * t + 426105652938837e-18 * a - 0.176491792462875) + s * (-778269941513683e-18 * s + 0.00130872261408275 * t + 770482631801132e-18 * a - 0.151051492775562) + t * (0.00126935368114843 * t - 0.00265090189010898 * a + 0.25802910206845) + a * (-318913117588328e-18 * a - 0.213742400323665), A[n++] = -20.810012546947 + i * (-570115196973677e-18 * i - 263409051004589e-19 * s + 0.0020741088115012 * t - 0.00288260236853442 * a + 0.814272968359295) + s * (-153496057440975e-19 * s - 132689043961446e-18 * t + 560833691242812e-18 * a - 0.195152027534049) + t * (0.00174418132927582 * t - 0.00255243321439347 * a + 0.116935020465145) + a * (-343531996510555e-18 * a + 0.24165260232407);
    return A.subarray(0, n);
  }
  _convertYcckToRgba(A) {
    for (let t = 0, i = A.length; t < i; t += 4) {
      const s = A[t], a = A[t + 1], n = A[t + 2], r = A[t + 3];
      A[t] = -122.67195406894 + a * (-660635669420364e-19 * a + 437130475926232e-18 * n - 54080610064599e-18 * s + 48449797120281e-17 * r - 0.154362151871126) + n * (-957964378445773e-18 * n + 817076911346625e-18 * s - 0.00477271405408747 * r + 1.53380253221734) + s * (961250184130688e-18 * s - 0.00266257332283933 * r + 0.48357088451265) + r * (-336197177618394e-18 * r + 0.484791561490776), A[t + 1] = 107.268039397724 + a * (219927104525741e-19 * a - 640992018297945e-18 * n + 659397001245577e-18 * s + 426105652938837e-18 * r - 0.176491792462875) + n * (-778269941513683e-18 * n + 0.00130872261408275 * s + 770482631801132e-18 * r - 0.151051492775562) + s * (0.00126935368114843 * s - 0.00265090189010898 * r + 0.25802910206845) + r * (-318913117588328e-18 * r - 0.213742400323665), A[t + 2] = -20.810012546947 + a * (-570115196973677e-18 * a - 263409051004589e-19 * n + 0.0020741088115012 * s - 0.00288260236853442 * r + 0.814272968359295) + n * (-153496057440975e-19 * n - 132689043961446e-18 * s + 560833691242812e-18 * r - 0.195152027534049) + s * (0.00174418132927582 * s - 0.00255243321439347 * r + 0.116935020465145) + r * (-343531996510555e-18 * r + 0.24165260232407), A[t + 3] = 255;
    }
    return A;
  }
  _convertYcckToCmyk(A) {
    let t, i, s;
    for (let a = 0, n = A.length; a < n; a += 4)
      t = A[a], i = A[a + 1], s = A[a + 2], A[a] = 434.456 - t - 1.402 * s, A[a + 1] = 119.541 - t + 0.344 * i + 0.714 * s, A[a + 2] = 481.816 - t - 1.772 * i;
    return A;
  }
  _convertCmykToRgb(A) {
    let t, i, s, a, n = 0;
    for (let r = 0, g = A.length; r < g; r += 4)
      t = A[r], i = A[r + 1], s = A[r + 2], a = A[r + 3], A[n++] = 255 + t * (-6747147073602441e-20 * t + 8379262121013727e-19 * i + 2894718188643294e-19 * s + 0.003264231057537806 * a - 1.1185611867203937) + i * (26374107616089405e-21 * i - 8626949158638572e-20 * s - 2748769067499491e-19 * a - 0.02155688794978967) + s * (-3878099212869363e-20 * s - 3267808279485286e-19 * a + 0.0686742238595345) - a * (3361971776183937e-19 * a + 0.7430659151342254), A[n++] = 255 + t * (13596372813588848e-20 * t + 924537132573585e-18 * i + 10567359618683593e-20 * s + 4791864687436512e-19 * a - 0.3109689587515875) + i * (-23545346108370344e-20 * i + 2702845253534714e-19 * s + 0.0020200308977307156 * a - 0.7488052167015494) + s * (6834815998235662e-20 * s + 15168452363460973e-20 * a - 0.09751927774728933) - a * (3189131175883281e-19 * a + 0.7364883807733168), A[n++] = 255 + t * (13598650411385307e-21 * t + 12423956175490851e-20 * i + 4751985097583589e-19 * s - 36729317476630422e-22 * a - 0.05562186980264034) + i * (16141380598724676e-20 * i + 9692239130725186e-19 * s + 7782692450036253e-19 * a - 0.44015232367526463) + s * (5068882914068769e-22 * s + 0.0017778369011375071 * a - 0.7591454649749609) - a * (3435319965105553e-19 * a + 0.7063770186160144);
    return A.subarray(0, n);
  }
  _convertCmykToRgba(A) {
    for (let t = 0, i = A.length; t < i; t += 4) {
      const s = A[t], a = A[t + 1], n = A[t + 2], r = A[t + 3];
      A[t] = 255 + s * (-6747147073602441e-20 * s + 8379262121013727e-19 * a + 2894718188643294e-19 * n + 0.003264231057537806 * r - 1.1185611867203937) + a * (26374107616089405e-21 * a - 8626949158638572e-20 * n - 2748769067499491e-19 * r - 0.02155688794978967) + n * (-3878099212869363e-20 * n - 3267808279485286e-19 * r + 0.0686742238595345) - r * (3361971776183937e-19 * r + 0.7430659151342254), A[t + 1] = 255 + s * (13596372813588848e-20 * s + 924537132573585e-18 * a + 10567359618683593e-20 * n + 4791864687436512e-19 * r - 0.3109689587515875) + a * (-23545346108370344e-20 * a + 2702845253534714e-19 * n + 0.0020200308977307156 * r - 0.7488052167015494) + n * (6834815998235662e-20 * n + 15168452363460973e-20 * r - 0.09751927774728933) - r * (3189131175883281e-19 * r + 0.7364883807733168), A[t + 2] = 255 + s * (13598650411385307e-21 * s + 12423956175490851e-20 * a + 4751985097583589e-19 * n - 36729317476630422e-22 * r - 0.05562186980264034) + a * (16141380598724676e-20 * a + 9692239130725186e-19 * n + 7782692450036253e-19 * r - 0.44015232367526463) + n * (5068882914068769e-22 * n + 0.0017778369011375071 * r - 0.7591454649749609) - r * (3435319965105553e-19 * r + 0.7063770186160144), A[t + 3] = 255;
    }
    return A;
  }
  getData({
    width: A,
    height: t,
    forceRGBA: i = !1,
    forceRGB: s = !1,
    isSourcePDF: a = !1
  }) {
    if (this.numComponents > 4)
      throw new qt("Unsupported color mode");
    const n = this._getLinearizedBlockData(A, t, a);
    if (this.numComponents === 1 && (i || s)) {
      const r = n.length * (i ? 4 : 3), g = new Uint8ClampedArray(r);
      let o = 0;
      if (i)
        Rh(n, new Uint32Array(g.buffer));
      else
        for (const I of n)
          g[o++] = I, g[o++] = I, g[o++] = I;
      return g;
    } else if (this.numComponents === 3 && this._isColorConversionNeeded) {
      if (i) {
        const r = new Uint8ClampedArray(n.length / 3 * 4);
        return this._convertYccToRgba(n, r);
      }
      return this._convertYccToRgb(n);
    } else if (this.numComponents === 4) {
      if (this._isColorConversionNeeded)
        return i ? this._convertYcckToRgba(n) : s ? this._convertYcckToRgb(n) : this._convertYcckToCmyk(n);
      if (i)
        return this._convertCmykToRgba(n);
      if (s)
        return this._convertCmykToRgb(n);
    }
    return n;
  }
}
var Ba, Qa, og;
const On = class On extends $e {
  constructor(t, i, s) {
    super(i);
    jA(this, Qa);
    this.stream = t, this.dict = t.dict, this.maybeLength = i, this.params = s;
  }
  static get canUseImageDecoder() {
    return tA(this, "canUseImageDecoder", PA(this, Ba) ? ImageDecoder.isTypeSupported("image/jpeg") : Promise.resolve(!1));
  }
  static setOptions({
    isImageDecoderSupported: t = !1
  }) {
    wt(this, Ba, t);
  }
  get bytes() {
    return tA(this, "bytes", this.stream.getBytes(this.maybeLength));
  }
  ensureBuffer(t) {
  }
  readBlock() {
    this.decodeImage();
  }
  get jpegOptions() {
    const t = {
      decodeTransform: void 0,
      colorTransform: void 0
    }, i = this.dict.getArray("D", "Decode");
    if ((this.forceRGBA || this.forceRGB) && Array.isArray(i)) {
      const s = this.dict.get("BPC", "BitsPerComponent") || 8, a = i.length, n = new Int32Array(a);
      let r = !1;
      const g = (1 << s) - 1;
      for (let o = 0; o < a; o += 2)
        n[o] = (i[o + 1] - i[o]) * 256 | 0, n[o + 1] = i[o] * g | 0, (n[o] !== 256 || n[o + 1] !== 0) && (r = !0);
      r && (t.decodeTransform = n);
    }
    if (this.params instanceof R) {
      const s = this.params.get("ColorTransform");
      Number.isInteger(s) && (t.colorTransform = s);
    }
    return tA(this, "jpegOptions", t);
  }
  decodeImage(t) {
    if (this.eof)
      return this.buffer;
    t = BA(this, Qa, og).call(this, t || this.bytes);
    const i = new To(this.jpegOptions);
    i.parse(t);
    const s = i.getData({
      width: this.drawWidth,
      height: this.drawHeight,
      forceRGBA: this.forceRGBA,
      forceRGB: this.forceRGB,
      isSourcePDF: !0
    });
    return this.buffer = s, this.bufferLength = s.length, this.eof = !0, this.buffer;
  }
  get canAsyncDecodeImageFromBuffer() {
    return this.stream.isAsync;
  }
  async getTransferableImage() {
    if (!await On.canUseImageDecoder)
      return null;
    const t = this.jpegOptions;
    if (t.decodeTransform)
      return null;
    let i;
    try {
      const s = this.canAsyncDecodeImageFromBuffer && await this.stream.asyncGetBytes() || this.bytes;
      if (!s)
        return null;
      const a = BA(this, Qa, og).call(this, s);
      return To.canUseImageDecoder(a, t.colorTransform) ? (i = new ImageDecoder({
        data: a,
        type: "image/jpeg",
        preferAnimation: !1
      }), (await i.decode()).image) : null;
    } catch (s) {
      return k(`getTransferableImage - failed: "${s}".`), null;
    } finally {
      i == null || i.close();
    }
  }
};
Ba = new WeakMap(), Qa = new WeakSet(), og = function(t) {
  for (let i = 0, s = t.length - 1; i < s; i++)
    if (t[i] === 255 && t[i + 1] === 216) {
      i > 0 && (t = t.subarray(i));
      break;
    }
  return t;
}, jA(On, Ba, ht.isImageDecoderSupported);
let is = On;
var Yh = (() => {
  var A;
  var e = typeof document < "u" ? (A = document.currentScript) == null ? void 0 : A.src : void 0;
  return function(t = {}) {
    var i, s = t, a, n;
    new Promise((AA, hA) => {
      a = AA, n = hA;
    }), s.decode = function(AA, {
      numComponents: hA = 4,
      isIndexedColormap: xA = !1,
      smaskInData: UA = !1
    }) {
      const HA = AA.length, re = s._malloc(HA);
      s.HEAPU8.set(AA, re);
      const ie = s._jp2_decode(re, HA, hA > 0 ? hA : 0, !!xA, !!UA);
      if (s._free(re), ie) {
        const {
          errorMessages: se
        } = s;
        return se ? (delete s.errorMessages, se) : "Unknown error";
      }
      const {
        imageData: Oe
      } = s;
      return s.imageData = null, Oe;
    };
    var r = Object.assign({}, s), g = "./this.program", o = "";
    typeof document < "u" && document.currentScript && (o = document.currentScript.src), e && (o = e), o.startsWith("blob:") ? o = "" : o = o.substr(0, o.replace(/[?#].*/, "").lastIndexOf("/") + 1);
    var I = s.print || console.log.bind(console), c = s.printErr || console.error.bind(console);
    Object.assign(s, r), r = null, s.arguments && s.arguments, s.thisProgram && (g = s.thisProgram), s.quit && s.quit;
    var l;
    s.wasmBinary && (l = s.wasmBinary);
    function C(AA) {
      for (var hA = atob(AA), xA = new Uint8Array(hA.length), UA = 0; UA < hA.length; ++UA)
        xA[UA] = hA.charCodeAt(UA);
      return xA;
    }
    function h(AA) {
      if (eA(AA))
        return C(AA.slice(F.length));
    }
    var B, Q, E, f;
    function d() {
      var AA = B.buffer;
      s.HEAP8 = Q = new Int8Array(AA), s.HEAP16 = new Int16Array(AA), s.HEAPU8 = E = new Uint8Array(AA), s.HEAPU16 = new Uint16Array(AA), s.HEAP32 = new Int32Array(AA), s.HEAPU32 = f = new Uint32Array(AA), s.HEAPF32 = new Float32Array(AA), s.HEAPF64 = new Float64Array(AA);
    }
    var u = [], x = [], p = [];
    function m() {
      if (s.preRun)
        for (typeof s.preRun == "function" && (s.preRun = [s.preRun]); s.preRun.length; )
          y(s.preRun.shift());
      TA(u);
    }
    function D() {
      TA(x);
    }
    function S() {
      if (s.postRun)
        for (typeof s.postRun == "function" && (s.postRun = [s.postRun]); s.postRun.length; )
          G(s.postRun.shift());
      TA(p);
    }
    function y(AA) {
      u.unshift(AA);
    }
    function H(AA) {
      x.unshift(AA);
    }
    function G(AA) {
      p.unshift(AA);
    }
    var v = 0, X = null;
    function gA(AA) {
      var hA;
      v++, (hA = s.monitorRunDependencies) == null || hA.call(s, v);
    }
    function N(AA) {
      var xA;
      if (v--, (xA = s.monitorRunDependencies) == null || xA.call(s, v), v == 0 && X) {
        var hA = X;
        X = null, hA();
      }
    }
    var F = "data:application/octet-stream;base64,", eA = (AA) => AA.startsWith(F);
    function z() {
      var AA = "data:application/octet-stream;base64,";
      return AA;
    }
    var cA;
    function wA(AA) {
      if (AA == cA && l)
        return new Uint8Array(l);
      var hA = h(AA);
      if (hA)
        return hA;
      throw 'sync fetching of the wasm failed: you can preload it to Module["wasmBinary"] manually, or emcc.py will do that for you when generating HTML (but not JS)';
    }
    function mA(AA, hA) {
      var xA, UA = wA(AA);
      xA = new WebAssembly.Module(UA);
      var HA = new WebAssembly.Instance(xA, hA);
      return [HA, xA];
    }
    function DA() {
      return {
        a: We
      };
    }
    function _() {
      var AA = DA();
      function hA(UA, HA) {
        return vt = UA.exports, B = vt.p, d(), H(vt.q), N(), vt;
      }
      if (gA(), s.instantiateWasm)
        try {
          return s.instantiateWasm(AA, hA);
        } catch (UA) {
          c(`Module.instantiateWasm callback failed with error: ${UA}`), n(UA);
        }
      cA || (cA = z());
      var xA = mA(cA, AA);
      return hA(xA[0]);
    }
    var TA = (AA) => {
      for (; AA.length > 0; )
        AA.shift()(s);
    };
    s.noExitRuntime;
    var oA = (AA, hA, xA) => E.copyWithin(AA, hA, hA + xA);
    function U(AA, hA) {
      AA >>= 2;
      const xA = s.imageData = new Uint8ClampedArray(hA), UA = s.HEAP32.subarray(AA, AA + hA);
      xA.set(UA);
    }
    function J(AA, hA, xA, UA) {
      AA >>= 2, hA >>= 2, xA >>= 2;
      const HA = s.imageData = new Uint8ClampedArray(UA * 3), re = s.HEAP32.subarray(AA, AA + UA), ie = s.HEAP32.subarray(hA, hA + UA), Oe = s.HEAP32.subarray(xA, xA + UA);
      for (let se = 0; se < UA; se++)
        HA[3 * se] = re[se], HA[3 * se + 1] = ie[se], HA[3 * se + 2] = Oe[se];
    }
    function q(AA, hA, xA, UA, HA) {
      AA >>= 2, hA >>= 2, xA >>= 2, UA >>= 2;
      const re = s.imageData = new Uint8ClampedArray(HA * 4), ie = s.HEAP32.subarray(AA, AA + HA), Oe = s.HEAP32.subarray(hA, hA + HA), se = s.HEAP32.subarray(xA, xA + HA), wi = s.HEAP32.subarray(UA, UA + HA);
      for (let zt = 0; zt < HA; zt++)
        re[4 * zt] = ie[zt], re[4 * zt + 1] = Oe[zt], re[4 * zt + 2] = se[zt], re[4 * zt + 3] = wi[zt];
    }
    var Z = () => 2147483648, sA = (AA) => {
      var hA = B.buffer, xA = (AA - hA.byteLength + 65535) / 65536;
      try {
        return B.grow(xA), d(), 1;
      } catch {
      }
    }, V = (AA) => {
      var hA = E.length;
      AA >>>= 0;
      var xA = Z();
      if (AA > xA)
        return !1;
      for (var UA = (se, wi) => se + (wi - se % wi) % wi, HA = 1; HA <= 4; HA *= 2) {
        var re = hA * (1 + 0.2 / HA);
        re = Math.min(re, AA + 100663296);
        var ie = Math.min(xA, UA(Math.max(AA, re), 65536)), Oe = sA(ie);
        if (Oe)
          return !0;
      }
      return !1;
    }, P = {}, M = () => g || "./this.program", lA = () => {
      if (!lA.strings) {
        var AA = (typeof navigator == "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", hA = {
          USER: "web_user",
          LOGNAME: "web_user",
          PATH: "/",
          PWD: "/",
          HOME: "/home/web_user",
          LANG: AA,
          _: M()
        };
        for (var xA in P)
          P[xA] === void 0 ? delete hA[xA] : hA[xA] = P[xA];
        var UA = [];
        for (var xA in hA)
          UA.push(`${xA}=${hA[xA]}`);
        lA.strings = UA;
      }
      return lA.strings;
    }, uA = (AA, hA) => {
      for (var xA = 0; xA < AA.length; ++xA)
        Q[hA++] = AA.charCodeAt(xA);
      Q[hA] = 0;
    }, pA = (AA, hA) => {
      var xA = 0;
      return lA().forEach((UA, HA) => {
        var re = hA + xA;
        f[AA + HA * 4 >> 2] = re, uA(UA, re), xA += UA.length + 1;
      }), 0;
    }, QA = (AA, hA) => {
      var xA = lA();
      f[AA >> 2] = xA.length;
      var UA = 0;
      return xA.forEach((HA) => UA += HA.length + 1), f[hA >> 2] = UA, 0;
    }, EA = (AA) => 52;
    function rA(AA, hA, xA, UA, HA) {
      return 70;
    }
    var IA = [null, [], []], yA = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0, aA = (AA, hA, xA) => {
      for (var UA = hA + xA, HA = hA; AA[HA] && !(HA >= UA); ) ++HA;
      if (HA - hA > 16 && AA.buffer && yA)
        return yA.decode(AA.subarray(hA, HA));
      for (var re = ""; hA < HA; ) {
        var ie = AA[hA++];
        if (!(ie & 128)) {
          re += String.fromCharCode(ie);
          continue;
        }
        var Oe = AA[hA++] & 63;
        if ((ie & 224) == 192) {
          re += String.fromCharCode((ie & 31) << 6 | Oe);
          continue;
        }
        var se = AA[hA++] & 63;
        if ((ie & 240) == 224 ? ie = (ie & 15) << 12 | Oe << 6 | se : ie = (ie & 7) << 18 | Oe << 12 | se << 6 | AA[hA++] & 63, ie < 65536)
          re += String.fromCharCode(ie);
        else {
          var wi = ie - 65536;
          re += String.fromCharCode(55296 | wi >> 10, 56320 | wi & 1023);
        }
      }
      return re;
    }, bA = (AA, hA) => {
      var xA = IA[AA];
      hA === 0 || hA === 10 ? ((AA === 1 ? I : c)(aA(xA, 0)), xA.length = 0) : xA.push(hA);
    }, NA = (AA, hA) => AA ? aA(E, AA, hA) : "", de = (AA, hA, xA, UA) => {
      for (var HA = 0, re = 0; re < xA; re++) {
        var ie = f[hA >> 2], Oe = f[hA + 4 >> 2];
        hA += 8;
        for (var se = 0; se < Oe; se++)
          bA(AA, E[ie + se]);
        HA += Oe;
      }
      return f[UA >> 2] = HA, 0;
    };
    function dA(AA, hA) {
      AA >>= 2;
      const xA = s.imageData = new Uint8ClampedArray(hA * 4), UA = s.HEAP32.subarray(AA, AA + hA);
      for (let HA = 0; HA < hA; HA++)
        xA[4 * HA] = xA[4 * HA + 1] = xA[4 * HA + 2] = UA[HA], xA[4 * HA + 3] = 255;
    }
    function KA(AA, hA, xA) {
      AA >>= 2, hA >>= 2;
      const UA = s.imageData = new Uint8ClampedArray(xA * 4), HA = s.HEAP32.subarray(AA, AA + xA), re = s.HEAP32.subarray(hA, hA + xA);
      for (let ie = 0; ie < xA; ie++)
        UA[4 * ie] = UA[4 * ie + 1] = UA[4 * ie + 2] = HA[ie], UA[4 * ie + 3] = re[ie];
    }
    function MA(AA) {
      const hA = NA(AA);
      (s.warn || console.warn)(`OpenJPEG: ${hA}`);
    }
    function OA(AA, hA, xA, UA) {
      AA >>= 2, hA >>= 2, xA >>= 2;
      const HA = s.imageData = new Uint8ClampedArray(UA * 4), re = s.HEAP32.subarray(AA, AA + UA), ie = s.HEAP32.subarray(hA, hA + UA), Oe = s.HEAP32.subarray(xA, xA + UA);
      for (let se = 0; se < UA; se++)
        HA[4 * se] = re[se], HA[4 * se + 1] = ie[se], HA[4 * se + 2] = Oe[se], HA[4 * se + 3] = 255;
    }
    function ge(AA) {
      const hA = NA(AA);
      s.errorMessages ? s.errorMessages += `
` + hA : s.errorMessages = hA;
    }
    var We = {
      c: oA,
      g: U,
      f: J,
      e: q,
      k: V,
      l: pA,
      m: QA,
      n: EA,
      j: rA,
      b: de,
      o: dA,
      i: KA,
      d: MA,
      h: OA,
      a: ge
    }, vt = _();
    vt.q, s._malloc = vt.r, s._free = vt.s, s._jp2_decode = vt.u;
    var ji;
    X = function AA() {
      ji || Qs(), ji || (X = AA);
    };
    function Qs() {
      if (v > 0 || (m(), v > 0))
        return;
      function AA() {
        ji || (ji = !0, s.calledRun = !0, D(), a(s), s.onRuntimeInitialized && s.onRuntimeInitialized(), S());
      }
      s.setStatus ? (s.setStatus("Running..."), setTimeout(function() {
        setTimeout(function() {
          s.setStatus("");
        }, 1), AA();
      }, 1)) : AA();
    }
    if (s.preInit)
      for (typeof s.preInit == "function" && (s.preInit = [s.preInit]); s.preInit.length > 0; )
        s.preInit.pop()();
    return Qs(), i = s, i;
  };
})();
const Kh = Yh;
class qo extends At {
  constructor(A) {
    super(A, "JpxError");
  }
}
var z0;
class tr {
  static decode(A, t) {
    t || (t = {}), PA(this, z0) || wt(this, z0, Kh({
      warn: k
    }));
    const i = PA(this, z0).decode(A, t);
    if (typeof i == "string")
      throw new qo(i);
    return i;
  }
  static cleanup() {
    wt(this, z0, null);
  }
  static parseImageProperties(A) {
    let t = A.getByte();
    for (; t >= 0; ) {
      const i = t;
      if (t = A.getByte(), (i << 8 | t) === 65361) {
        A.skip(4);
        const a = A.getInt32() >>> 0, n = A.getInt32() >>> 0, r = A.getInt32() >>> 0, g = A.getInt32() >>> 0;
        A.skip(16);
        const o = A.getUint16();
        return {
          width: a - r,
          height: n - g,
          bitsPerComponent: 8,
          componentsCount: o
        };
      }
    }
    throw new qo("No size marker found in JPX stream");
  }
}
z0 = new WeakMap(), jA(tr, z0, null);
class vh extends $e {
  constructor(A, t, i) {
    super(t), this.stream = A, this.dict = A.dict, this.maybeLength = t, this.params = i;
  }
  get bytes() {
    return tA(this, "bytes", this.stream.getBytes(this.maybeLength));
  }
  ensureBuffer(A) {
  }
  readBlock(A) {
    this.decodeImage(null, A);
  }
  decodeImage(A, t) {
    return this.eof ? this.buffer : (A || (A = this.bytes), this.buffer = tr.decode(A, t), this.bufferLength = this.buffer.length, this.eof = !0, this.buffer);
  }
  get canAsyncDecodeImageFromBuffer() {
    return this.stream.isAsync;
  }
}
class Po extends $e {
  constructor(A, t, i) {
    super(t), this.str = A, this.dict = A.dict, this.cachedData = 0, this.bitsCached = 0;
    const s = 4096, a = {
      earlyChange: i,
      codeLength: 9,
      nextCode: 258,
      dictionaryValues: new Uint8Array(s),
      dictionaryLengths: new Uint16Array(s),
      dictionaryPrevCodes: new Uint16Array(s),
      currentSequence: new Uint8Array(s),
      currentSequenceLength: 0
    };
    for (let n = 0; n < 256; ++n)
      a.dictionaryValues[n] = n, a.dictionaryLengths[n] = 1;
    this.lzwState = a;
  }
  readBits(A) {
    let t = this.bitsCached, i = this.cachedData;
    for (; t < A; ) {
      const s = this.str.getByte();
      if (s === -1)
        return this.eof = !0, null;
      i = i << 8 | s, t += 8;
    }
    return this.bitsCached = t -= A, this.cachedData = i, this.lastCode = null, i >>> t & (1 << A) - 1;
  }
  readBlock() {
    let i = 1024, s, a, n;
    const r = this.lzwState;
    if (!r)
      return;
    const g = r.earlyChange;
    let o = r.nextCode;
    const I = r.dictionaryValues, c = r.dictionaryLengths, l = r.dictionaryPrevCodes;
    let C = r.codeLength, h = r.prevCode;
    const B = r.currentSequence;
    let Q = r.currentSequenceLength, E = 0, f = this.bufferLength, d = this.ensureBuffer(this.bufferLength + i);
    for (s = 0; s < 512; s++) {
      const u = this.readBits(C), x = Q > 0;
      if (u < 256)
        B[0] = u, Q = 1;
      else if (u >= 258)
        if (u < o)
          for (Q = c[u], a = Q - 1, n = u; a >= 0; a--)
            B[a] = I[n], n = l[n];
        else
          B[Q++] = B[0];
      else if (u === 256) {
        C = 9, o = 258, Q = 0;
        continue;
      } else {
        this.eof = !0, delete this.lzwState;
        break;
      }
      if (x && (l[o] = h, c[o] = c[h] + 1, I[o] = B[0], o++, C = o + g & o + g - 1 ? C : Math.min(Math.log(o + g) / 0.6931471805599453 + 1, 12) | 0), h = u, E += Q, i < E) {
        do
          i += 512;
        while (i < E);
        d = this.ensureBuffer(this.bufferLength + i);
      }
      for (a = 0; a < Q; a++)
        d[f++] = B[a];
    }
    r.nextCode = o, r.codeLength = C, r.prevCode = h, r.currentSequenceLength = Q, this.bufferLength = f;
  }
}
class Wo extends $e {
  constructor(A, t, i) {
    if (super(t), !(i instanceof R))
      return A;
    const s = this.predictor = i.get("Predictor") || 1;
    if (s <= 1)
      return A;
    if (s !== 2 && (s < 10 || s > 15))
      throw new T(`Unsupported predictor: ${s}`);
    this.readBlock = s === 2 ? this.readBlockTiff : this.readBlockPng, this.str = A, this.dict = A.dict;
    const a = this.colors = i.get("Colors") || 1, n = this.bits = i.get("BPC", "BitsPerComponent") || 8, r = this.columns = i.get("Columns") || 1;
    return this.pixBytes = a * n + 7 >> 3, this.rowBytes = r * a * n + 7 >> 3, this;
  }
  readBlockTiff() {
    const A = this.rowBytes, t = this.bufferLength, i = this.ensureBuffer(t + A), s = this.bits, a = this.colors, n = this.str.getBytes(A);
    if (this.eof = !n.length, this.eof)
      return;
    let r = 0, g = 0, o = 0, I = 0, c = t, l;
    if (s === 1 && a === 1)
      for (l = 0; l < A; ++l) {
        let C = n[l] ^ r;
        C ^= C >> 1, C ^= C >> 2, C ^= C >> 4, r = (C & 1) << 7, i[c++] = C;
      }
    else if (s === 8) {
      for (l = 0; l < a; ++l)
        i[c++] = n[l];
      for (; l < A; ++l)
        i[c] = i[c - a] + n[l], c++;
    } else if (s === 16) {
      const C = a * 2;
      for (l = 0; l < C; ++l)
        i[c++] = n[l];
      for (; l < A; l += 2) {
        const h = ((n[l] & 255) << 8) + (n[l + 1] & 255) + ((i[c - C] & 255) << 8) + (i[c - C + 1] & 255);
        i[c++] = h >> 8 & 255, i[c++] = h & 255;
      }
    } else {
      const C = new Uint8Array(a + 1), h = (1 << s) - 1;
      let B = 0, Q = t;
      const E = this.columns;
      for (l = 0; l < E; ++l)
        for (let f = 0; f < a; ++f)
          o < s && (r = r << 8 | n[B++] & 255, o += 8), C[f] = C[f] + (r >> o - s) & h, o -= s, g = g << s | C[f], I += s, I >= 8 && (i[Q++] = g >> I - 8 & 255, I -= 8);
      I > 0 && (i[Q++] = (g << 8 - I) + (r & (1 << 8 - I) - 1));
    }
    this.bufferLength += A;
  }
  readBlockPng() {
    const A = this.rowBytes, t = this.pixBytes, i = this.str.getByte(), s = this.str.getBytes(A);
    if (this.eof = !s.length, this.eof)
      return;
    const a = this.bufferLength, n = this.ensureBuffer(a + A);
    let r = n.subarray(a - A, a);
    r.length === 0 && (r = new Uint8Array(A));
    let g, o = a, I, c;
    switch (i) {
      case 0:
        for (g = 0; g < A; ++g)
          n[o++] = s[g];
        break;
      case 1:
        for (g = 0; g < t; ++g)
          n[o++] = s[g];
        for (; g < A; ++g)
          n[o] = n[o - t] + s[g] & 255, o++;
        break;
      case 2:
        for (g = 0; g < A; ++g)
          n[o++] = r[g] + s[g] & 255;
        break;
      case 3:
        for (g = 0; g < t; ++g)
          n[o++] = (r[g] >> 1) + s[g];
        for (; g < A; ++g)
          n[o] = (r[g] + n[o - t] >> 1) + s[g] & 255, o++;
        break;
      case 4:
        for (g = 0; g < t; ++g)
          I = r[g], c = s[g], n[o++] = I + c;
        for (; g < A; ++g) {
          I = r[g];
          const l = r[g - t], C = n[o - t], h = C + I - l;
          let B = h - C;
          B < 0 && (B = -B);
          let Q = h - I;
          Q < 0 && (Q = -Q);
          let E = h - l;
          E < 0 && (E = -E), c = s[g], B <= Q && B <= E ? n[o++] = C + c : Q <= E ? n[o++] = I + c : n[o++] = l + c;
        }
        break;
      default:
        throw new T(`Unsupported predictor: ${i}`);
    }
    this.bufferLength += A;
  }
}
class Th extends $e {
  constructor(A, t) {
    super(t), this.str = A, this.dict = A.dict;
  }
  readBlock() {
    const A = this.str.getBytes(2);
    if (!A || A.length < 2 || A[0] === 128) {
      this.eof = !0;
      return;
    }
    let t, i = this.bufferLength, s = A[0];
    if (s < 128) {
      if (t = this.ensureBuffer(i + s + 1), t[i++] = A[1], s > 0) {
        const a = this.str.getBytes(s);
        t.set(a, i), i += s;
      }
    } else {
      s = 257 - s;
      const a = A[1];
      t = this.ensureBuffer(i + s + 1);
      for (let n = 0; n < s; n++)
        t[i++] = a;
    }
    this.bufferLength = i;
  }
}
const qh = 1e3;
function Ph(e) {
  const A = [], t = e.length;
  let i = 0;
  for (; i < t - 1; )
    A.push(e[i++] << 8 | e[i++]);
  return i < t && A.push(e[i]), t + "_" + String.fromCharCode.apply(null, A);
}
var Zn, Nc;
class Fi {
  constructor({
    lexer: A,
    xref: t,
    allowStreams: i = !1,
    recoveryMode: s = !1
  }) {
    jA(this, Zn);
    this.lexer = A, this.xref = t, this.allowStreams = i, this.recoveryMode = s, this.imageCache = /* @__PURE__ */ Object.create(null), this._imageId = 0, this.refill();
  }
  refill() {
    this.buf1 = this.lexer.getObj(), this.buf2 = this.lexer.getObj();
  }
  shift() {
    this.buf2 instanceof De && this.buf2.cmd === "ID" ? (this.buf1 = this.buf2, this.buf2 = null) : (this.buf1 = this.buf2, this.buf2 = this.lexer.getObj());
  }
  tryShift() {
    try {
      return this.shift(), !0;
    } catch (A) {
      if (A instanceof Ie)
        throw A;
      return !1;
    }
  }
  getObj(A = null) {
    const t = this.buf1;
    if (this.shift(), t instanceof De)
      switch (t.cmd) {
        case "BI":
          return this.makeInlineImage(A);
        case "[":
          const i = [];
          for (; !Ne(this.buf1, "]") && this.buf1 !== Me; )
            i.push(this.getObj(A));
          if (this.buf1 === Me) {
            if (this.recoveryMode)
              return i;
            throw new jr("End of file inside array.");
          }
          return this.shift(), i;
        case "<<":
          const s = new R(this.xref);
          for (; !Ne(this.buf1, ">>") && this.buf1 !== Me; ) {
            if (!(this.buf1 instanceof L)) {
              vA("Malformed dictionary: key must be a name object"), this.shift();
              continue;
            }
            const a = this.buf1.name;
            if (this.shift(), this.buf1 === Me)
              break;
            s.set(a, this.getObj(A));
          }
          if (this.buf1 === Me) {
            if (this.recoveryMode)
              return s;
            throw new jr("End of file inside dictionary.");
          }
          return Ne(this.buf2, "stream") ? this.allowStreams ? this.makeStream(s, A) : s : (this.shift(), s);
        default:
          return t;
      }
    if (Number.isInteger(t)) {
      if (Number.isInteger(this.buf1) && Ne(this.buf2, "R")) {
        const i = nA.get(t, this.buf1);
        return this.shift(), this.shift(), i;
      }
      return t;
    }
    return typeof t == "string" && A ? A.decryptString(t) : t;
  }
  findDefaultInlineStreamEnd(A) {
    const {
      knownCommands: g
    } = this.lexer, o = A.pos, I = 15;
    let c = 0, l, C;
    for (; (l = A.getByte()) !== -1; )
      if (c === 0)
        c = l === 69 ? 1 : 0;
      else if (c === 1)
        c = l === 73 ? 2 : 0;
      else if (l === 32 || l === 10 || l === 13) {
        C = A.pos;
        const B = A.peekBytes(I), Q = B.length;
        if (Q === 0)
          break;
        for (let d = 0; d < Q; d++)
          if (l = B[d], !(l === 0 && B[d + 1] !== 0) && l !== 10 && l !== 13 && (l < 32 || l > 127)) {
            c = 0;
            break;
          }
        if (c !== 2)
          continue;
        if (!g) {
          k("findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined.");
          continue;
        }
        const E = new Wt(new Ee(B.slice()), g);
        E._hexStringWarn = () => {
        };
        let f = 0;
        for (; ; ) {
          const d = E.getObj();
          if (d === Me) {
            c = 0;
            break;
          }
          if (d instanceof De) {
            const u = g[d.cmd];
            if (u) {
              if (u.variableArgs ? f <= u.numArgs : f === u.numArgs)
                break;
            } else {
              c = 0;
              break;
            }
            f = 0;
            continue;
          }
          f++;
        }
        if (c === 2)
          break;
      } else
        c = 0;
    l === -1 && (k("findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker"), C && (k('... trying to recover by using the last "EI" occurrence.'), A.skip(-(A.pos - C))));
    let h = 4;
    return A.skip(-h), l = A.peekByte(), A.skip(h), mt(l) || h--, A.pos - h - o;
  }
  findDCTDecodeInlineStreamEnd(A) {
    const t = A.pos;
    let i = !1, s, a;
    for (; (s = A.getByte()) !== -1; )
      if (s === 255) {
        switch (A.getByte()) {
          case 0:
            break;
          case 255:
            A.skip(-1);
            break;
          case 217:
            i = !0;
            break;
          case 192:
          case 193:
          case 194:
          case 195:
          case 197:
          case 198:
          case 199:
          case 201:
          case 202:
          case 203:
          case 205:
          case 206:
          case 207:
          case 196:
          case 204:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 254:
            a = A.getUint16(), a > 2 ? A.skip(a - 2) : A.skip(-2);
            break;
        }
        if (i)
          break;
      }
    const n = A.pos - t;
    return s === -1 ? (k("Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead."), A.skip(-n), this.findDefaultInlineStreamEnd(A)) : (this.inlineStreamSkipEI(A), n);
  }
  findASCII85DecodeInlineStreamEnd(A) {
    const s = A.pos;
    let a;
    for (; (a = A.getByte()) !== -1; )
      if (a === 126) {
        const r = A.pos;
        for (a = A.peekByte(); mt(a); )
          A.skip(), a = A.peekByte();
        if (a === 62) {
          A.skip();
          break;
        }
        if (A.pos > r) {
          const g = A.peekBytes(2);
          if (g[0] === 69 && g[1] === 73)
            break;
        }
      }
    const n = A.pos - s;
    return a === -1 ? (k("Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead."), A.skip(-n), this.findDefaultInlineStreamEnd(A)) : (this.inlineStreamSkipEI(A), n);
  }
  findASCIIHexDecodeInlineStreamEnd(A) {
    const i = A.pos;
    let s;
    for (; (s = A.getByte()) !== -1 && s !== 62; )
      ;
    const a = A.pos - i;
    return s === -1 ? (k("Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead."), A.skip(-a), this.findDefaultInlineStreamEnd(A)) : (this.inlineStreamSkipEI(A), a);
  }
  inlineStreamSkipEI(A) {
    let s = 0, a;
    for (; (a = A.getByte()) !== -1; )
      if (s === 0)
        s = a === 69 ? 1 : 0;
      else if (s === 1)
        s = a === 73 ? 2 : 0;
      else if (s === 2)
        break;
  }
  makeInlineImage(A) {
    const t = this.lexer, i = t.stream, s = /* @__PURE__ */ Object.create(null);
    let a;
    for (; !Ne(this.buf1, "ID") && this.buf1 !== Me; ) {
      if (!(this.buf1 instanceof L))
        throw new T("Dictionary key must be a name object");
      const C = this.buf1.name;
      if (this.shift(), this.buf1 === Me)
        break;
      s[C] = this.getObj(A);
    }
    t.beginInlineImagePos !== -1 && (a = i.pos - t.beginInlineImagePos);
    const n = this.xref.fetchIfRef(s.F || s.Filter);
    let r;
    if (n instanceof L)
      r = n.name;
    else if (Array.isArray(n)) {
      const C = this.xref.fetchIfRef(n[0]);
      C instanceof L && (r = C.name);
    }
    const g = i.pos;
    let o;
    switch (r) {
      case "DCT":
      case "DCTDecode":
        o = this.findDCTDecodeInlineStreamEnd(i);
        break;
      case "A85":
      case "ASCII85Decode":
        o = this.findASCII85DecodeInlineStreamEnd(i);
        break;
      case "AHx":
      case "ASCIIHexDecode":
        o = this.findASCIIHexDecodeInlineStreamEnd(i);
        break;
      default:
        o = this.findDefaultInlineStreamEnd(i);
    }
    let I;
    if (o < qh && a > 0) {
      const C = i.pos;
      i.pos = t.beginInlineImagePos, I = Ph(i.getBytes(a + o)), i.pos = C;
      const h = this.imageCache[I];
      if (h !== void 0)
        return this.buf2 = De.get("EI"), this.shift(), h.reset(), h;
    }
    const c = new R(this.xref);
    for (const C in s)
      c.set(C, s[C]);
    let l = i.makeSubStream(g, o, c);
    return A && (l = A.createStream(l, o)), l = this.filter(l, c, o), l.dict = c, I !== void 0 && (l.cacheKey = `inline_img_${++this._imageId}`, this.imageCache[I] = l), this.buf2 = De.get("EI"), this.shift(), l;
  }
  makeStream(A, t) {
    const i = this.lexer;
    let s = i.stream;
    i.skipToNextLine();
    const a = s.pos - 1;
    let n = A.get("Length");
    if (Number.isInteger(n) || (vA(`Bad length "${n && n.toString()}" in stream.`), n = 0), s.pos = a + n, i.nextChar(), this.tryShift() && Ne(this.buf2, "endstream"))
      this.shift();
    else {
      if (n = BA(this, Zn, Nc).call(this, a), n < 0)
        throw new T("Missing endstream command.");
      i.nextChar(), this.shift(), this.shift();
    }
    return this.shift(), s = s.makeSubStream(a, n, A), t && (s = t.createStream(s, n)), s = this.filter(s, A, n), s.dict = A, s;
  }
  filter(A, t, i) {
    let s = t.get("F", "Filter"), a = t.get("DP", "DecodeParms");
    if (s instanceof L)
      return Array.isArray(a) && k("/DecodeParms should not be an Array, when /Filter is a Name."), this.makeFilter(A, s.name, i, a);
    let n = i;
    if (Array.isArray(s)) {
      const r = s, g = a;
      for (let o = 0, I = r.length; o < I; ++o) {
        if (s = this.xref.fetchIfRef(r[o]), !(s instanceof L))
          throw new T(`Bad filter name "${s}"`);
        a = null, Array.isArray(g) && o in g && (a = this.xref.fetchIfRef(g[o])), A = this.makeFilter(A, s.name, n, a), n = null;
      }
    }
    return A;
  }
  makeFilter(A, t, i, s) {
    if (i === 0)
      return k(`Empty "${t}" stream.`), new _r();
    try {
      switch (t) {
        case "Fl":
        case "FlateDecode":
          return s ? new Wo(new Jo(A, i), i, s) : new Jo(A, i);
        case "LZW":
        case "LZWDecode":
          let a = 1;
          return s ? (s.has("EarlyChange") && (a = s.get("EarlyChange")), new Wo(new Po(A, i, a), i, s)) : new Po(A, i, a);
        case "DCT":
        case "DCTDecode":
          return new is(A, i, s);
        case "JPX":
        case "JPXDecode":
          return new vh(A, i, s);
        case "A85":
        case "ASCII85Decode":
          return new th(A, i);
        case "AHx":
        case "ASCIIHexDecode":
          return new ih(A, i);
        case "CCF":
        case "CCITTFaxDecode":
          return new sh(A, i, s);
        case "RL":
        case "RunLengthDecode":
          return new Th(A, i);
        case "JBIG2Decode":
          return new Sh(A, i, s);
      }
      return k(`Filter "${t}" is not supported.`), A;
    } catch (a) {
      if (a instanceof Ie)
        throw a;
      return k(`Invalid stream: "${a}"`), new _r();
    }
  }
}
Zn = new WeakSet(), Nc = function(A) {
  const {
    stream: t
  } = this.lexer;
  t.pos = A;
  const i = 2048, s = 9, a = new Uint8Array([101, 110, 100]), n = a.length, r = [new Uint8Array([115, 116, 114, 101, 97, 109]), new Uint8Array([115, 116, 101, 97, 109]), new Uint8Array([115, 116, 114, 101, 97])], g = s - n;
  for (; t.pos < t.end; ) {
    const o = t.peekBytes(i), I = o.length - s;
    if (I <= 0)
      break;
    let c = 0;
    for (; c < I; ) {
      let l = 0;
      for (; l < n && o[c + l] === a[l]; )
        l++;
      if (l >= n) {
        let C = !1;
        for (const h of r) {
          const B = h.length;
          let Q = 0;
          for (; Q < B && o[c + l + Q] === h[Q]; )
            Q++;
          if (Q >= g) {
            C = !0;
            break;
          }
          if (Q >= B) {
            const E = o[c + l + Q];
            mt(E) && (vA(`Found "${lt([...a, ...h])}" when searching for endstream command.`), C = !0);
            break;
          }
        }
        if (C)
          return t.pos += c, t.pos - A;
      }
      c++;
    }
    t.pos += I;
  }
  return -1;
};
const w0 = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
function dr(e) {
  return e >= 48 && e <= 57 ? e & 15 : e >= 65 && e <= 70 || e >= 97 && e <= 102 ? (e & 15) + 9 : -1;
}
class Wt {
  constructor(A, t = null) {
    this.stream = A, this.nextChar(), this.strBuf = [], this.knownCommands = t, this._hexStringNumWarn = 0, this.beginInlineImagePos = -1;
  }
  nextChar() {
    return this.currentChar = this.stream.getByte();
  }
  peekChar() {
    return this.stream.peekByte();
  }
  getNumber() {
    let A = this.currentChar, t = !1, i = 0, s = 1;
    if (A === 45 ? (s = -1, A = this.nextChar(), A === 45 && (A = this.nextChar())) : A === 43 && (A = this.nextChar()), A === 10 || A === 13)
      do
        A = this.nextChar();
      while (A === 10 || A === 13);
    if (A === 46 && (i = 10, A = this.nextChar()), A < 48 || A > 57) {
      const g = `Invalid number: ${String.fromCharCode(A)} (charCode ${A})`;
      if (mt(A) || A === -1)
        return vA(`Lexer.getNumber - "${g}".`), 0;
      throw new T(g);
    }
    let a = A - 48, n = 0, r = 1;
    for (; (A = this.nextChar()) >= 0; )
      if (A >= 48 && A <= 57) {
        const g = A - 48;
        t ? n = n * 10 + g : (i !== 0 && (i *= 10), a = a * 10 + g);
      } else if (A === 46)
        if (i === 0)
          i = 1;
        else
          break;
      else if (A === 45)
        k("Badly formatted number: minus sign in the middle");
      else if (A === 69 || A === 101) {
        if (A = this.peekChar(), A === 43 || A === 45)
          r = A === 45 ? -1 : 1, this.nextChar();
        else if (A < 48 || A > 57)
          break;
        t = !0;
      } else
        break;
    return i !== 0 && (a /= i), t && (a *= 10 ** (r * n)), s * a;
  }
  getString() {
    let A = 1, t = !1;
    const i = this.strBuf;
    i.length = 0;
    let s = this.nextChar();
    for (; ; ) {
      let a = !1;
      switch (s | 0) {
        case -1:
          k("Unterminated string"), t = !0;
          break;
        case 40:
          ++A, i.push("(");
          break;
        case 41:
          --A === 0 ? (this.nextChar(), t = !0) : i.push(")");
          break;
        case 92:
          switch (s = this.nextChar(), s) {
            case -1:
              k("Unterminated string"), t = !0;
              break;
            case 110:
              i.push(`
`);
              break;
            case 114:
              i.push("\r");
              break;
            case 116:
              i.push("	");
              break;
            case 98:
              i.push("\b");
              break;
            case 102:
              i.push("\f");
              break;
            case 92:
            case 40:
            case 41:
              i.push(String.fromCharCode(s));
              break;
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
              let n = s & 15;
              s = this.nextChar(), a = !0, s >= 48 && s <= 55 && (n = (n << 3) + (s & 15), s = this.nextChar(), s >= 48 && s <= 55 && (a = !1, n = (n << 3) + (s & 15))), i.push(String.fromCharCode(n));
              break;
            case 13:
              this.peekChar() === 10 && this.nextChar();
              break;
            case 10:
              break;
            default:
              i.push(String.fromCharCode(s));
              break;
          }
          break;
        default:
          i.push(String.fromCharCode(s));
          break;
      }
      if (t)
        break;
      a || (s = this.nextChar());
    }
    return i.join("");
  }
  getName() {
    let A, t;
    const i = this.strBuf;
    for (i.length = 0; (A = this.nextChar()) >= 0 && !w0[A]; )
      if (A === 35) {
        if (A = this.nextChar(), w0[A]) {
          k("Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number."), i.push("#");
          break;
        }
        const s = dr(A);
        if (s !== -1) {
          t = A, A = this.nextChar();
          const a = dr(A);
          if (a === -1) {
            if (k(`Lexer_getName: Illegal digit (${String.fromCharCode(A)}) in hexadecimal number.`), i.push("#", String.fromCharCode(t)), w0[A])
              break;
            i.push(String.fromCharCode(A));
            continue;
          }
          i.push(String.fromCharCode(s << 4 | a));
        } else
          i.push("#", String.fromCharCode(A));
      } else
        i.push(String.fromCharCode(A));
    return i.length > 127 && k(`Name token is longer than allowed by the spec: ${i.length}`), L.get(i.join(""));
  }
  _hexStringWarn(A) {
    if (this._hexStringNumWarn++ === 5) {
      k("getHexString - ignoring additional invalid characters.");
      return;
    }
    this._hexStringNumWarn > 5 || k(`getHexString - ignoring invalid character: ${A}`);
  }
  getHexString() {
    const A = this.strBuf;
    A.length = 0;
    let t = this.currentChar, i = -1, s = -1;
    for (this._hexStringNumWarn = 0; ; )
      if (t < 0) {
        k("Unterminated hex string");
        break;
      } else if (t === 62) {
        this.nextChar();
        break;
      } else if (w0[t] === 1) {
        t = this.nextChar();
        continue;
      } else
        s = dr(t), s === -1 ? this._hexStringWarn(t) : i === -1 ? i = s : (A.push(String.fromCharCode(i << 4 | s)), i = -1), t = this.nextChar();
    return i !== -1 && A.push(String.fromCharCode(i << 4)), A.join("");
  }
  getObj() {
    let A = !1, t = this.currentChar;
    for (; ; ) {
      if (t < 0)
        return Me;
      if (A)
        (t === 10 || t === 13) && (A = !1);
      else if (t === 37)
        A = !0;
      else if (w0[t] !== 1)
        break;
      t = this.nextChar();
    }
    switch (t | 0) {
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 43:
      case 45:
      case 46:
        return this.getNumber();
      case 40:
        return this.getString();
      case 47:
        return this.getName();
      case 91:
        return this.nextChar(), De.get("[");
      case 93:
        return this.nextChar(), De.get("]");
      case 60:
        return t = this.nextChar(), t === 60 ? (this.nextChar(), De.get("<<")) : this.getHexString();
      case 62:
        return t = this.nextChar(), t === 62 ? (this.nextChar(), De.get(">>")) : De.get(">");
      case 123:
        return this.nextChar(), De.get("{");
      case 125:
        return this.nextChar(), De.get("}");
      case 41:
        throw this.nextChar(), new T(`Illegal character: ${t}`);
    }
    let i = String.fromCharCode(t);
    if (t < 32 || t > 127) {
      const n = this.peekChar();
      if (n >= 32 && n <= 127)
        return this.nextChar(), De.get(i);
    }
    const s = this.knownCommands;
    let a = (s == null ? void 0 : s[i]) !== void 0;
    for (; (t = this.nextChar()) >= 0 && !w0[t]; ) {
      const n = i + String.fromCharCode(t);
      if (a && s[n] === void 0)
        break;
      if (i.length === 128)
        throw new T(`Command token too long: ${i.length}`);
      i = n, a = (s == null ? void 0 : s[i]) !== void 0;
    }
    return i === "true" ? !0 : i === "false" ? !1 : i === "null" ? null : (i === "BI" && (this.beginInlineImagePos = this.stream.pos), De.get(i));
  }
  skipToNextLine() {
    let A = this.currentChar;
    for (; A >= 0; ) {
      if (A === 13) {
        A = this.nextChar(), A === 10 && this.nextChar();
        break;
      } else if (A === 10) {
        this.nextChar();
        break;
      }
      A = this.nextChar();
    }
  }
}
class Wh {
  static create(A) {
    function t(c, l, C = !1) {
      const h = c.get(l);
      if (Number.isInteger(h) && (C ? h >= 0 : h > 0))
        return h;
      throw new Error(`The "${l}" parameter in the linearization dictionary is invalid.`);
    }
    function i(c) {
      const l = c.get("H");
      let C;
      if (Array.isArray(l) && ((C = l.length) === 2 || C === 4)) {
        for (let h = 0; h < C; h++) {
          const B = l[h];
          if (!(Number.isInteger(B) && B > 0))
            throw new Error(`Hint (${h}) in the linearization dictionary is invalid.`);
        }
        return l;
      }
      throw new Error("Hint array in the linearization dictionary is invalid.");
    }
    const s = new Fi({
      lexer: new Wt(A),
      xref: null
    }), a = s.getObj(), n = s.getObj(), r = s.getObj(), g = s.getObj();
    let o, I;
    if (Number.isInteger(a) && Number.isInteger(n) && Ne(r, "obj") && g instanceof R && typeof (o = g.get("Linearized")) == "number" && o > 0) {
      if ((I = t(g, "L")) !== A.length)
        throw new Error('The "L" parameter in the linearization dictionary does not equal the stream length.');
    } else return null;
    return {
      length: I,
      hints: i(g),
      objectNumberFirst: t(g, "O"),
      endFirst: t(g, "E"),
      numPages: t(g, "N"),
      mainXRefEntriesOffset: t(g, "T"),
      pageFirst: g.has("P") ? t(g, "P", !0) : 0
    };
  }
}
const Oh = ["Adobe-GB1-UCS2", "Adobe-CNS1-UCS2", "Adobe-Japan1-UCS2", "Adobe-Korea1-UCS2", "78-EUC-H", "78-EUC-V", "78-H", "78-RKSJ-H", "78-RKSJ-V", "78-V", "78ms-RKSJ-H", "78ms-RKSJ-V", "83pv-RKSJ-H", "90ms-RKSJ-H", "90ms-RKSJ-V", "90msp-RKSJ-H", "90msp-RKSJ-V", "90pv-RKSJ-H", "90pv-RKSJ-V", "Add-H", "Add-RKSJ-H", "Add-RKSJ-V", "Add-V", "Adobe-CNS1-0", "Adobe-CNS1-1", "Adobe-CNS1-2", "Adobe-CNS1-3", "Adobe-CNS1-4", "Adobe-CNS1-5", "Adobe-CNS1-6", "Adobe-GB1-0", "Adobe-GB1-1", "Adobe-GB1-2", "Adobe-GB1-3", "Adobe-GB1-4", "Adobe-GB1-5", "Adobe-Japan1-0", "Adobe-Japan1-1", "Adobe-Japan1-2", "Adobe-Japan1-3", "Adobe-Japan1-4", "Adobe-Japan1-5", "Adobe-Japan1-6", "Adobe-Korea1-0", "Adobe-Korea1-1", "Adobe-Korea1-2", "B5-H", "B5-V", "B5pc-H", "B5pc-V", "CNS-EUC-H", "CNS-EUC-V", "CNS1-H", "CNS1-V", "CNS2-H", "CNS2-V", "ETHK-B5-H", "ETHK-B5-V", "ETen-B5-H", "ETen-B5-V", "ETenms-B5-H", "ETenms-B5-V", "EUC-H", "EUC-V", "Ext-H", "Ext-RKSJ-H", "Ext-RKSJ-V", "Ext-V", "GB-EUC-H", "GB-EUC-V", "GB-H", "GB-V", "GBK-EUC-H", "GBK-EUC-V", "GBK2K-H", "GBK2K-V", "GBKp-EUC-H", "GBKp-EUC-V", "GBT-EUC-H", "GBT-EUC-V", "GBT-H", "GBT-V", "GBTpc-EUC-H", "GBTpc-EUC-V", "GBpc-EUC-H", "GBpc-EUC-V", "H", "HKdla-B5-H", "HKdla-B5-V", "HKdlb-B5-H", "HKdlb-B5-V", "HKgccs-B5-H", "HKgccs-B5-V", "HKm314-B5-H", "HKm314-B5-V", "HKm471-B5-H", "HKm471-B5-V", "HKscs-B5-H", "HKscs-B5-V", "Hankaku", "Hiragana", "KSC-EUC-H", "KSC-EUC-V", "KSC-H", "KSC-Johab-H", "KSC-Johab-V", "KSC-V", "KSCms-UHC-H", "KSCms-UHC-HW-H", "KSCms-UHC-HW-V", "KSCms-UHC-V", "KSCpc-EUC-H", "KSCpc-EUC-V", "Katakana", "NWP-H", "NWP-V", "RKSJ-H", "RKSJ-V", "Roman", "UniCNS-UCS2-H", "UniCNS-UCS2-V", "UniCNS-UTF16-H", "UniCNS-UTF16-V", "UniCNS-UTF32-H", "UniCNS-UTF32-V", "UniCNS-UTF8-H", "UniCNS-UTF8-V", "UniGB-UCS2-H", "UniGB-UCS2-V", "UniGB-UTF16-H", "UniGB-UTF16-V", "UniGB-UTF32-H", "UniGB-UTF32-V", "UniGB-UTF8-H", "UniGB-UTF8-V", "UniJIS-UCS2-H", "UniJIS-UCS2-HW-H", "UniJIS-UCS2-HW-V", "UniJIS-UCS2-V", "UniJIS-UTF16-H", "UniJIS-UTF16-V", "UniJIS-UTF32-H", "UniJIS-UTF32-V", "UniJIS-UTF8-H", "UniJIS-UTF8-V", "UniJIS2004-UTF16-H", "UniJIS2004-UTF16-V", "UniJIS2004-UTF32-H", "UniJIS2004-UTF32-V", "UniJIS2004-UTF8-H", "UniJIS2004-UTF8-V", "UniJISPro-UCS2-HW-V", "UniJISPro-UCS2-V", "UniJISPro-UTF8-V", "UniJISX0213-UTF32-H", "UniJISX0213-UTF32-V", "UniJISX02132004-UTF32-H", "UniJISX02132004-UTF32-V", "UniKS-UCS2-H", "UniKS-UCS2-V", "UniKS-UTF16-H", "UniKS-UTF16-V", "UniKS-UTF32-H", "UniKS-UTF32-V", "UniKS-UTF8-H", "UniKS-UTF8-V", "V", "WP-Symbol"], xr = 2 ** 24 - 1;
class Pg {
  constructor(A = !1) {
    this.codespaceRanges = [[], [], [], []], this.numCodespaceRanges = 0, this._map = [], this.name = "", this.vertical = !1, this.useCMap = null, this.builtInCMap = A;
  }
  addCodespaceRange(A, t, i) {
    this.codespaceRanges[A - 1].push(t, i), this.numCodespaceRanges++;
  }
  mapCidRange(A, t, i) {
    if (t - A > xr)
      throw new Error("mapCidRange - ignoring data above MAX_MAP_RANGE.");
    for (; A <= t; )
      this._map[A++] = i++;
  }
  mapBfRange(A, t, i) {
    if (t - A > xr)
      throw new Error("mapBfRange - ignoring data above MAX_MAP_RANGE.");
    const s = i.length - 1;
    for (; A <= t; ) {
      this._map[A++] = i;
      const a = i.charCodeAt(s) + 1;
      if (a > 255) {
        i = i.substring(0, s - 1) + String.fromCharCode(i.charCodeAt(s - 1) + 1) + "\0";
        continue;
      }
      i = i.substring(0, s) + String.fromCharCode(a);
    }
  }
  mapBfRangeToArray(A, t, i) {
    if (t - A > xr)
      throw new Error("mapBfRangeToArray - ignoring data above MAX_MAP_RANGE.");
    const s = i.length;
    let a = 0;
    for (; A <= t && a < s; )
      this._map[A] = i[a++], ++A;
  }
  mapOne(A, t) {
    this._map[A] = t;
  }
  lookup(A) {
    return this._map[A];
  }
  contains(A) {
    return this._map[A] !== void 0;
  }
  forEach(A) {
    const t = this._map, i = t.length;
    if (i <= 65536)
      for (let s = 0; s < i; s++)
        t[s] !== void 0 && A(s, t[s]);
    else
      for (const s in t)
        A(s, t[s]);
  }
  charCodeOf(A) {
    const t = this._map;
    if (t.length <= 65536)
      return t.indexOf(A);
    for (const i in t)
      if (t[i] === A)
        return i | 0;
    return -1;
  }
  getMap() {
    return this._map;
  }
  readCharCode(A, t, i) {
    let s = 0;
    const a = this.codespaceRanges;
    for (let n = 0, r = a.length; n < r; n++) {
      s = (s << 8 | A.charCodeAt(t + n)) >>> 0;
      const g = a[n];
      for (let o = 0, I = g.length; o < I; ) {
        const c = g[o++], l = g[o++];
        if (s >= c && s <= l) {
          i.charcode = s, i.length = n + 1;
          return;
        }
      }
    }
    i.charcode = 0, i.length = 1;
  }
  getCharCodeLength(A) {
    const t = this.codespaceRanges;
    for (let i = 0, s = t.length; i < s; i++) {
      const a = t[i];
      for (let n = 0, r = a.length; n < r; ) {
        const g = a[n++], o = a[n++];
        if (A >= g && A <= o)
          return i + 1;
      }
    }
    return 1;
  }
  get length() {
    return this._map.length;
  }
  get isIdentityCMap() {
    if (!(this.name === "Identity-H" || this.name === "Identity-V") || this._map.length !== 65536)
      return !1;
    for (let A = 0; A < 65536; A++)
      if (this._map[A] !== A)
        return !1;
    return !0;
  }
}
class Z0 extends Pg {
  constructor(A, t) {
    super(), this.vertical = A, this.addCodespaceRange(t, 0, 65535);
  }
  mapCidRange(A, t, i) {
    WA("should not call mapCidRange");
  }
  mapBfRange(A, t, i) {
    WA("should not call mapBfRange");
  }
  mapBfRangeToArray(A, t, i) {
    WA("should not call mapBfRangeToArray");
  }
  mapOne(A, t) {
    WA("should not call mapCidOne");
  }
  lookup(A) {
    return Number.isInteger(A) && A <= 65535 ? A : void 0;
  }
  contains(A) {
    return Number.isInteger(A) && A <= 65535;
  }
  forEach(A) {
    for (let t = 0; t <= 65535; t++)
      A(t, t);
  }
  charCodeOf(A) {
    return Number.isInteger(A) && A <= 65535 ? A : -1;
  }
  getMap() {
    const A = new Array(65536);
    for (let t = 0; t <= 65535; t++)
      A[t] = t;
    return A;
  }
  get length() {
    return 65536;
  }
  get isIdentityCMap() {
    WA("should not access .isIdentityCMap");
  }
}
function Wi(e) {
  let A = 0;
  for (let t = 0; t < e.length; t++)
    A = A << 8 | e.charCodeAt(t);
  return A >>> 0;
}
function f0(e) {
  if (typeof e != "string")
    throw new T("Malformed CMap: expected string.");
}
function Gc(e) {
  if (!Number.isInteger(e))
    throw new T("Malformed CMap: expected int.");
}
function Zh(e, A) {
  for (; ; ) {
    let t = A.getObj();
    if (t === Me)
      break;
    if (Ne(t, "endbfchar"))
      return;
    f0(t);
    const i = Wi(t);
    t = A.getObj(), f0(t);
    const s = t;
    e.mapOne(i, s);
  }
}
function jh(e, A) {
  for (; ; ) {
    let t = A.getObj();
    if (t === Me)
      break;
    if (Ne(t, "endbfrange"))
      return;
    f0(t);
    const i = Wi(t);
    t = A.getObj(), f0(t);
    const s = Wi(t);
    if (t = A.getObj(), Number.isInteger(t) || typeof t == "string") {
      const a = Number.isInteger(t) ? String.fromCharCode(t) : t;
      e.mapBfRange(i, s, a);
    } else if (Ne(t, "[")) {
      t = A.getObj();
      const a = [];
      for (; !Ne(t, "]") && t !== Me; )
        a.push(t), t = A.getObj();
      e.mapBfRangeToArray(i, s, a);
    } else
      break;
  }
  throw new T("Invalid bf range.");
}
function Xh(e, A) {
  for (; ; ) {
    let t = A.getObj();
    if (t === Me)
      break;
    if (Ne(t, "endcidchar"))
      return;
    f0(t);
    const i = Wi(t);
    t = A.getObj(), Gc(t);
    const s = t;
    e.mapOne(i, s);
  }
}
function Vh(e, A) {
  for (; ; ) {
    let t = A.getObj();
    if (t === Me)
      break;
    if (Ne(t, "endcidrange"))
      return;
    f0(t);
    const i = Wi(t);
    t = A.getObj(), f0(t);
    const s = Wi(t);
    t = A.getObj(), Gc(t);
    const a = t;
    e.mapCidRange(i, s, a);
  }
}
function _h(e, A) {
  for (; ; ) {
    let t = A.getObj();
    if (t === Me)
      break;
    if (Ne(t, "endcodespacerange"))
      return;
    if (typeof t != "string")
      break;
    const i = Wi(t);
    if (t = A.getObj(), typeof t != "string")
      break;
    const s = Wi(t);
    e.addCodespaceRange(t.length, i, s);
  }
  throw new T("Invalid codespace range.");
}
function zh(e, A) {
  const t = A.getObj();
  Number.isInteger(t) && (e.vertical = !!t);
}
function $h(e, A) {
  const t = A.getObj();
  t instanceof L && (e.name = t.name);
}
async function Uc(e, A, t, i) {
  let s, a;
  A: for (; ; )
    try {
      const n = A.getObj();
      if (n === Me)
        break;
      if (n instanceof L)
        n.name === "WMode" ? zh(e, A) : n.name === "CMapName" && $h(e, A), s = n;
      else if (n instanceof De)
        switch (n.cmd) {
          case "endcmap":
            break A;
          case "usecmap":
            s instanceof L && (a = s.name);
            break;
          case "begincodespacerange":
            _h(e, A);
            break;
          case "beginbfchar":
            Zh(e, A);
            break;
          case "begincidchar":
            Xh(e, A);
            break;
          case "beginbfrange":
            jh(e, A);
            break;
          case "begincidrange":
            Vh(e, A);
            break;
        }
    } catch (n) {
      if (n instanceof Ie)
        throw n;
      k("Invalid cMap data: " + n);
      continue;
    }
  return !i && a && (i = a), i ? Mc(e, t, i) : e;
}
async function Mc(e, A, t) {
  if (e.useCMap = await Ig(t, A), e.numCodespaceRanges === 0) {
    const i = e.useCMap.codespaceRanges;
    for (let s = 0; s < i.length; s++)
      e.codespaceRanges[s] = i[s].slice();
    e.numCodespaceRanges = e.useCMap.numCodespaceRanges;
  }
  return e.useCMap.forEach(function(i, s) {
    e.contains(i) || e.mapOne(i, s);
  }), e;
}
async function Ig(e, A) {
  if (e === "Identity-H")
    return new Z0(!1, 2);
  if (e === "Identity-V")
    return new Z0(!0, 2);
  if (!Oh.includes(e))
    throw new Error("Unknown CMap name: " + e);
  if (!A)
    throw new Error("Built-in CMap parameters are not provided.");
  const {
    cMapData: t,
    isCompressed: i
  } = await A(e), s = new Pg(!0);
  if (i)
    return new $C().process(t, s, (n) => Mc(s, A, n));
  const a = new Wt(new Ee(t));
  return Uc(s, a, A, null);
}
class Ka {
  static async create({
    encoding: A,
    fetchBuiltInCMap: t,
    useCMap: i
  }) {
    if (A instanceof L)
      return Ig(A.name, t);
    if (A instanceof JA) {
      const s = await Uc(new Pg(), new Wt(A), t, i);
      return s.isIdentityCMap ? Ig(s.name, t) : s;
    }
    throw new Error("Encoding required.");
  }
}
const AB = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron"], eB = [".notdef", "space", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], tB = [".notdef", "space", "dollaroldstyle", "dollarsuperior", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "hyphensuperior", "colonmonetary", "onefitted", "rupiah", "centoldstyle", "figuredash", "hypheninferior", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior"], Lc = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], iB = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "centoldstyle", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "", "threequartersemdash", "", "questionsmall", "", "", "", "", "Ethsmall", "", "", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "", "", "", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hypheninferior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "asuperior", "centsuperior", "", "", "", "", "Aacutesmall", "Agravesmall", "Acircumflexsmall", "Adieresissmall", "Atildesmall", "Aringsmall", "Ccedillasmall", "Eacutesmall", "Egravesmall", "Ecircumflexsmall", "Edieresissmall", "Iacutesmall", "Igravesmall", "Icircumflexsmall", "Idieresissmall", "Ntildesmall", "Oacutesmall", "Ogravesmall", "Ocircumflexsmall", "Odieresissmall", "Otildesmall", "Uacutesmall", "Ugravesmall", "Ucircumflexsmall", "Udieresissmall", "", "eightsuperior", "fourinferior", "threeinferior", "sixinferior", "eightinferior", "seveninferior", "Scaronsmall", "", "centinferior", "twoinferior", "", "Dieresissmall", "", "Caronsmall", "osuperior", "fiveinferior", "", "commainferior", "periodinferior", "Yacutesmall", "", "dollarinferior", "", "", "Thornsmall", "", "nineinferior", "zeroinferior", "Zcaronsmall", "AEsmall", "Oslashsmall", "questiondownsmall", "oneinferior", "Lslashsmall", "", "", "", "", "", "", "Cedillasmall", "", "", "", "", "", "OEsmall", "figuredash", "hyphensuperior", "", "", "", "", "exclamdownsmall", "", "Ydieresissmall", "", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "ninesuperior", "zerosuperior", "", "esuperior", "rsuperior", "tsuperior", "", "", "isuperior", "ssuperior", "dsuperior", "", "", "", "", "", "lsuperior", "Ogoneksmall", "Brevesmall", "Macronsmall", "bsuperior", "nsuperior", "msuperior", "commasuperior", "periodsuperior", "Dotaccentsmall", "Ringsmall", "", "", "", ""], Wg = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "space", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron"], fi = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls", "", "", "", ""], Xs = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "bullet", "Euro", "bullet", "quotesinglbase", "florin", "quotedblbase", "ellipsis", "dagger", "daggerdbl", "circumflex", "perthousand", "Scaron", "guilsinglleft", "OE", "bullet", "Zcaron", "bullet", "bullet", "quoteleft", "quoteright", "quotedblleft", "quotedblright", "bullet", "endash", "emdash", "tilde", "trademark", "scaron", "guilsinglright", "oe", "bullet", "zcaron", "Ydieresis", "space", "exclamdown", "cent", "sterling", "currency", "yen", "brokenbar", "section", "dieresis", "copyright", "ordfeminine", "guillemotleft", "logicalnot", "hyphen", "registered", "macron", "degree", "plusminus", "twosuperior", "threesuperior", "acute", "mu", "paragraph", "periodcentered", "cedilla", "onesuperior", "ordmasculine", "guillemotright", "onequarter", "onehalf", "threequarters", "questiondown", "Agrave", "Aacute", "Acircumflex", "Atilde", "Adieresis", "Aring", "AE", "Ccedilla", "Egrave", "Eacute", "Ecircumflex", "Edieresis", "Igrave", "Iacute", "Icircumflex", "Idieresis", "Eth", "Ntilde", "Ograve", "Oacute", "Ocircumflex", "Otilde", "Odieresis", "multiply", "Oslash", "Ugrave", "Uacute", "Ucircumflex", "Udieresis", "Yacute", "Thorn", "germandbls", "agrave", "aacute", "acircumflex", "atilde", "adieresis", "aring", "ae", "ccedilla", "egrave", "eacute", "ecircumflex", "edieresis", "igrave", "iacute", "icircumflex", "idieresis", "eth", "ntilde", "ograve", "oacute", "ocircumflex", "otilde", "odieresis", "divide", "oslash", "ugrave", "uacute", "ucircumflex", "udieresis", "yacute", "thorn", "ydieresis"], Og = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "universal", "numbersign", "existential", "percent", "ampersand", "suchthat", "parenleft", "parenright", "asteriskmath", "plus", "comma", "minus", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "congruent", "Alpha", "Beta", "Chi", "Delta", "Epsilon", "Phi", "Gamma", "Eta", "Iota", "theta1", "Kappa", "Lambda", "Mu", "Nu", "Omicron", "Pi", "Theta", "Rho", "Sigma", "Tau", "Upsilon", "sigma1", "Omega", "Xi", "Psi", "Zeta", "bracketleft", "therefore", "bracketright", "perpendicular", "underscore", "radicalex", "alpha", "beta", "chi", "delta", "epsilon", "phi", "gamma", "eta", "iota", "phi1", "kappa", "lambda", "mu", "nu", "omicron", "pi", "theta", "rho", "sigma", "tau", "upsilon", "omega1", "omega", "xi", "psi", "zeta", "braceleft", "bar", "braceright", "similar", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Euro", "Upsilon1", "minute", "lessequal", "fraction", "infinity", "florin", "club", "diamond", "heart", "spade", "arrowboth", "arrowleft", "arrowup", "arrowright", "arrowdown", "degree", "plusminus", "second", "greaterequal", "multiply", "proportional", "partialdiff", "bullet", "divide", "notequal", "equivalence", "approxequal", "ellipsis", "arrowvertex", "arrowhorizex", "carriagereturn", "aleph", "Ifraktur", "Rfraktur", "weierstrass", "circlemultiply", "circleplus", "emptyset", "intersection", "union", "propersuperset", "reflexsuperset", "notsubset", "propersubset", "reflexsubset", "element", "notelement", "angle", "gradient", "registerserif", "copyrightserif", "trademarkserif", "product", "radical", "dotmath", "logicalnot", "logicaland", "logicalor", "arrowdblboth", "arrowdblleft", "arrowdblup", "arrowdblright", "arrowdbldown", "lozenge", "angleleft", "registersans", "copyrightsans", "trademarksans", "summation", "parenlefttp", "parenleftex", "parenleftbt", "bracketlefttp", "bracketleftex", "bracketleftbt", "bracelefttp", "braceleftmid", "braceleftbt", "braceex", "", "angleright", "integral", "integraltp", "integralex", "integralbt", "parenrighttp", "parenrightex", "parenrightbt", "bracketrighttp", "bracketrightex", "bracketrightbt", "bracerighttp", "bracerightmid", "bracerightbt", ""], Zg = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "a1", "a2", "a202", "a3", "a4", "a5", "a119", "a118", "a117", "a11", "a12", "a13", "a14", "a15", "a16", "a105", "a17", "a18", "a19", "a20", "a21", "a22", "a23", "a24", "a25", "a26", "a27", "a28", "a6", "a7", "a8", "a9", "a10", "a29", "a30", "a31", "a32", "a33", "a34", "a35", "a36", "a37", "a38", "a39", "a40", "a41", "a42", "a43", "a44", "a45", "a46", "a47", "a48", "a49", "a50", "a51", "a52", "a53", "a54", "a55", "a56", "a57", "a58", "a59", "a60", "a61", "a62", "a63", "a64", "a65", "a66", "a67", "a68", "a69", "a70", "a71", "a72", "a73", "a74", "a203", "a75", "a204", "a76", "a77", "a78", "a79", "a81", "a82", "a83", "a84", "a97", "a98", "a99", "a100", "", "a89", "a90", "a93", "a94", "a91", "a92", "a205", "a85", "a206", "a86", "a87", "a88", "a95", "a96", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "a101", "a102", "a103", "a104", "a106", "a107", "a108", "a112", "a111", "a110", "a109", "a120", "a121", "a122", "a123", "a124", "a125", "a126", "a127", "a128", "a129", "a130", "a131", "a132", "a133", "a134", "a135", "a136", "a137", "a138", "a139", "a140", "a141", "a142", "a143", "a144", "a145", "a146", "a147", "a148", "a149", "a150", "a151", "a152", "a153", "a154", "a155", "a156", "a157", "a158", "a159", "a160", "a161", "a163", "a164", "a196", "a165", "a192", "a166", "a167", "a168", "a169", "a170", "a171", "a172", "a173", "a162", "a174", "a175", "a176", "a177", "a178", "a179", "a193", "a180", "a199", "a181", "a200", "a182", "", "a201", "a183", "a184", "a197", "a185", "a194", "a198", "a186", "a195", "a187", "a188", "a189", "a190", "a191", ""];
function Vs(e) {
  switch (e) {
    case "WinAnsiEncoding":
      return Xs;
    case "StandardEncoding":
      return fi;
    case "MacRomanEncoding":
      return Wg;
    case "SymbolSetEncoding":
      return Og;
    case "ZapfDingbatsEncoding":
      return Zg;
    case "ExpertEncoding":
      return Lc;
    case "MacExpertEncoding":
      return iB;
    default:
      return null;
  }
}
const sB = 10, cn = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], va = 391, b0 = [null, {
  id: "hstem",
  min: 2,
  stackClearing: !0,
  stem: !0
}, null, {
  id: "vstem",
  min: 2,
  stackClearing: !0,
  stem: !0
}, {
  id: "vmoveto",
  min: 1,
  stackClearing: !0
}, {
  id: "rlineto",
  min: 2,
  resetStack: !0
}, {
  id: "hlineto",
  min: 1,
  resetStack: !0
}, {
  id: "vlineto",
  min: 1,
  resetStack: !0
}, {
  id: "rrcurveto",
  min: 6,
  resetStack: !0
}, null, {
  id: "callsubr",
  min: 1,
  undefStack: !0
}, {
  id: "return",
  min: 0,
  undefStack: !0
}, null, null, {
  id: "endchar",
  min: 0,
  stackClearing: !0
}, null, null, null, {
  id: "hstemhm",
  min: 2,
  stackClearing: !0,
  stem: !0
}, {
  id: "hintmask",
  min: 0,
  stackClearing: !0
}, {
  id: "cntrmask",
  min: 0,
  stackClearing: !0
}, {
  id: "rmoveto",
  min: 2,
  stackClearing: !0
}, {
  id: "hmoveto",
  min: 1,
  stackClearing: !0
}, {
  id: "vstemhm",
  min: 2,
  stackClearing: !0,
  stem: !0
}, {
  id: "rcurveline",
  min: 8,
  resetStack: !0
}, {
  id: "rlinecurve",
  min: 8,
  resetStack: !0
}, {
  id: "vvcurveto",
  min: 4,
  resetStack: !0
}, {
  id: "hhcurveto",
  min: 4,
  resetStack: !0
}, null, {
  id: "callgsubr",
  min: 1,
  undefStack: !0
}, {
  id: "vhcurveto",
  min: 4,
  resetStack: !0
}, {
  id: "hvcurveto",
  min: 4,
  resetStack: !0
}], aB = [null, null, null, {
  id: "and",
  min: 2,
  stackDelta: -1
}, {
  id: "or",
  min: 2,
  stackDelta: -1
}, {
  id: "not",
  min: 1,
  stackDelta: 0
}, null, null, null, {
  id: "abs",
  min: 1,
  stackDelta: 0
}, {
  id: "add",
  min: 2,
  stackDelta: -1,
  stackFn(e, A) {
    e[A - 2] = e[A - 2] + e[A - 1];
  }
}, {
  id: "sub",
  min: 2,
  stackDelta: -1,
  stackFn(e, A) {
    e[A - 2] = e[A - 2] - e[A - 1];
  }
}, {
  id: "div",
  min: 2,
  stackDelta: -1,
  stackFn(e, A) {
    e[A - 2] = e[A - 2] / e[A - 1];
  }
}, null, {
  id: "neg",
  min: 1,
  stackDelta: 0,
  stackFn(e, A) {
    e[A - 1] = -e[A - 1];
  }
}, {
  id: "eq",
  min: 2,
  stackDelta: -1
}, null, null, {
  id: "drop",
  min: 1,
  stackDelta: -1
}, null, {
  id: "put",
  min: 2,
  stackDelta: -2
}, {
  id: "get",
  min: 1,
  stackDelta: 0
}, {
  id: "ifelse",
  min: 4,
  stackDelta: -3
}, {
  id: "random",
  min: 0,
  stackDelta: 1
}, {
  id: "mul",
  min: 2,
  stackDelta: -1,
  stackFn(e, A) {
    e[A - 2] = e[A - 2] * e[A - 1];
  }
}, null, {
  id: "sqrt",
  min: 1,
  stackDelta: 0
}, {
  id: "dup",
  min: 1,
  stackDelta: 1
}, {
  id: "exch",
  min: 2,
  stackDelta: 0
}, {
  id: "index",
  min: 2,
  stackDelta: 0
}, {
  id: "roll",
  min: 3,
  stackDelta: -2
}, null, null, null, {
  id: "hflex",
  min: 7,
  resetStack: !0
}, {
  id: "flex",
  min: 13,
  resetStack: !0
}, {
  id: "hflex1",
  min: 9,
  resetStack: !0
}, {
  id: "flex1",
  min: 11,
  resetStack: !0
}];
class jg {
  constructor(A, t, i) {
    this.bytes = A.getBytes(), this.properties = t, this.seacAnalysisEnabled = !!i;
  }
  parse() {
    const A = this.properties, t = new Hc();
    this.cff = t;
    const i = this.parseHeader(), s = this.parseIndex(i.endPos), a = this.parseIndex(s.endPos), n = this.parseIndex(a.endPos), r = this.parseIndex(n.endPos), g = this.parseDict(a.obj.get(0)), o = this.createDict(_s, g, t.strings);
    t.header = i.obj, t.names = this.parseNameIndex(s.obj), t.strings = this.parseStringIndex(n.obj), t.topDict = o, t.globalSubrIndex = r.obj, this.parsePrivateDict(t.topDict), t.isCIDFont = o.hasName("ROS");
    const I = o.getByName("CharStrings"), c = this.parseIndex(I).obj, l = o.getByName("FontMatrix");
    l && (A.fontMatrix = l);
    const C = o.getByName("FontBBox");
    C && (A.ascent = Math.max(C[3], C[1]), A.descent = Math.min(C[1], C[3]), A.ascentScaled = !0);
    let h, B;
    if (t.isCIDFont) {
      const E = this.parseIndex(o.getByName("FDArray")).obj;
      for (let f = 0, d = E.count; f < d; ++f) {
        const u = E.get(f), x = this.createDict(_s, this.parseDict(u), t.strings);
        this.parsePrivateDict(x), t.fdArray.push(x);
      }
      B = null, h = this.parseCharsets(o.getByName("charset"), c.count, t.strings, !0), t.fdSelect = this.parseFDSelect(o.getByName("FDSelect"), c.count);
    } else
      h = this.parseCharsets(o.getByName("charset"), c.count, t.strings, !1), B = this.parseEncoding(o.getByName("Encoding"), A, t.strings, h.charset);
    t.charset = h, t.encoding = B;
    const Q = this.parseCharStrings({
      charStrings: c,
      localSubrIndex: o.privateDict.subrsIndex,
      globalSubrIndex: r.obj,
      fdSelect: t.fdSelect,
      fdArray: t.fdArray,
      privateDict: o.privateDict
    });
    return t.charStrings = Q.charStrings, t.seacs = Q.seacs, t.widths = Q.widths, t;
  }
  parseHeader() {
    let A = this.bytes;
    const t = A.length;
    let i = 0;
    for (; i < t && A[i] !== 1; )
      ++i;
    if (i >= t)
      throw new T("Invalid CFF header");
    i !== 0 && (vA("cff data is shifted"), A = A.subarray(i), this.bytes = A);
    const s = A[0], a = A[1], n = A[2], r = A[3];
    return {
      obj: new Jc(s, a, n, r),
      endPos: n
    };
  }
  parseDict(A) {
    let t = 0;
    function i() {
      let g = A[t++];
      return g === 30 ? s() : g === 28 ? (g = A[t++], g = (g << 24 | A[t++] << 16) >> 16, g) : g === 29 ? (g = A[t++], g = g << 8 | A[t++], g = g << 8 | A[t++], g = g << 8 | A[t++], g) : g >= 32 && g <= 246 ? g - 139 : g >= 247 && g <= 250 ? (g - 247) * 256 + A[t++] + 108 : g >= 251 && g <= 254 ? -((g - 251) * 256) - A[t++] - 108 : (k('CFFParser_parseDict: "' + g + '" is a reserved command.'), NaN);
    }
    function s() {
      let g = "";
      const I = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"], c = A.length;
      for (; t < c; ) {
        const l = A[t++], C = l >> 4, h = l & 15;
        if (C === 15 || (g += I[C], h === 15))
          break;
        g += I[h];
      }
      return parseFloat(g);
    }
    let a = [];
    const n = [];
    t = 0;
    const r = A.length;
    for (; t < r; ) {
      let g = A[t];
      g <= 21 ? (g === 12 && (g = g << 8 | A[++t]), n.push([g, a]), a = [], ++t) : a.push(i());
    }
    return n;
  }
  parseIndex(A) {
    const t = new Ti(), i = this.bytes, s = i[A++] << 8 | i[A++], a = [];
    let n = A, r, g;
    if (s !== 0) {
      const o = i[A++], I = A + (s + 1) * o - 1;
      for (r = 0, g = s + 1; r < g; ++r) {
        let c = 0;
        for (let l = 0; l < o; ++l)
          c <<= 8, c += i[A++];
        a.push(I + c);
      }
      n = a[s];
    }
    for (r = 0, g = a.length - 1; r < g; ++r) {
      const o = a[r], I = a[r + 1];
      t.add(i.subarray(o, I));
    }
    return {
      obj: t,
      endPos: n
    };
  }
  parseNameIndex(A) {
    const t = [];
    for (let i = 0, s = A.count; i < s; ++i) {
      const a = A.get(i);
      t.push(lt(a));
    }
    return t;
  }
  parseStringIndex(A) {
    const t = new Xg();
    for (let i = 0, s = A.count; i < s; ++i) {
      const a = A.get(i);
      t.add(lt(a));
    }
    return t;
  }
  createDict(A, t, i) {
    const s = new A(i);
    for (const [a, n] of t)
      s.setByKey(a, n);
    return s;
  }
  parseCharString(A, t, i, s) {
    if (!t || A.callDepth > sB)
      return !1;
    let a = A.stackSize;
    const n = A.stack;
    let r = t.length;
    for (let g = 0; g < r; ) {
      const o = t[g++];
      let I = null;
      if (o === 12) {
        const c = t[g++];
        c === 0 ? (t[g - 2] = 139, t[g - 1] = 22, a = 0) : I = aB[c];
      } else if (o === 28)
        n[a] = (t[g] << 24 | t[g + 1] << 16) >> 16, g += 2, a++;
      else if (o === 14) {
        if (a >= 4 && (a -= 4, this.seacAnalysisEnabled))
          return A.seac = n.slice(a, a + 4), !1;
        I = b0[o];
      } else if (o >= 32 && o <= 246)
        n[a] = o - 139, a++;
      else if (o >= 247 && o <= 254)
        n[a] = o < 251 ? (o - 247 << 8) + t[g] + 108 : -(o - 251 << 8) - t[g] - 108, g++, a++;
      else if (o === 255)
        n[a] = (t[g] << 24 | t[g + 1] << 16 | t[g + 2] << 8 | t[g + 3]) / 65536, g += 4, a++;
      else if (o === 19 || o === 20) {
        if (A.hints += a >> 1, A.hints === 0) {
          t.copyWithin(g - 1, g, -1), g -= 1, r -= 1;
          continue;
        }
        g += A.hints + 7 >> 3, a %= 2, I = b0[o];
      } else if (o === 10 || o === 29) {
        const c = o === 10 ? i : s;
        if (!c)
          return I = b0[o], k("Missing subrsIndex for " + I.id), !1;
        let l = 32768;
        c.count < 1240 ? l = 107 : c.count < 33900 && (l = 1131);
        const C = n[--a] + l;
        if (C < 0 || C >= c.count || isNaN(C))
          return I = b0[o], k("Out of bounds subrIndex for " + I.id), !1;
        if (A.stackSize = a, A.callDepth++, !this.parseCharString(A, c.get(C), i, s))
          return !1;
        A.callDepth--, a = A.stackSize;
        continue;
      } else {
        if (o === 11)
          return A.stackSize = a, !0;
        if (o === 0 && g === t.length)
          t[g - 1] = 14, I = b0[14];
        else if (o === 9) {
          t.copyWithin(g - 1, g, -1), g -= 1, r -= 1;
          continue;
        } else
          I = b0[o];
      }
      if (I) {
        if (I.stem && (A.hints += a >> 1, o === 3 || o === 23 ? A.hasVStems = !0 : A.hasVStems && (o === 1 || o === 18) && (k("CFF stem hints are in wrong order"), t[g - 1] = o === 1 ? 3 : 23)), "min" in I && !A.undefStack && a < I.min)
          return k("Not enough parameters for " + I.id + "; actual: " + a + ", expected: " + I.min), a === 0 ? (t[g - 1] = 14, !0) : !1;
        A.firstStackClearing && I.stackClearing && (A.firstStackClearing = !1, a -= I.min, a >= 2 && I.stem ? a %= 2 : a > 1 && k("Found too many parameters for stack-clearing command"), a > 0 && (A.width = n[a - 1])), "stackDelta" in I ? ("stackFn" in I && I.stackFn(n, a), a += I.stackDelta) : I.stackClearing ? a = 0 : I.resetStack ? (a = 0, A.undefStack = !1) : I.undefStack && (a = 0, A.undefStack = !0, A.firstStackClearing = !1);
      }
    }
    return r < t.length && t.fill(14, r), A.stackSize = a, !0;
  }
  parseCharStrings({
    charStrings: A,
    localSubrIndex: t,
    globalSubrIndex: i,
    fdSelect: s,
    fdArray: a,
    privateDict: n
  }) {
    const r = [], g = [], o = A.count;
    for (let I = 0; I < o; I++) {
      const c = A.get(I), l = {
        callDepth: 0,
        stackSize: 0,
        stack: [],
        undefStack: !0,
        hints: 0,
        firstStackClearing: !0,
        seac: null,
        width: null,
        hasVStems: !1
      };
      let C = !0, h = null, B = n;
      if (s && a.length) {
        const Q = s.getFDIndex(I);
        Q === -1 && (k("Glyph index is not in fd select."), C = !1), Q >= a.length && (k("Invalid fd index for glyph index."), C = !1), C && (B = a[Q].privateDict, h = B.subrsIndex);
      } else t && (h = t);
      if (C && (C = this.parseCharString(l, c, h, i)), l.width !== null) {
        const Q = B.getByName("nominalWidthX");
        g[I] = Q + l.width;
      } else {
        const Q = B.getByName("defaultWidthX");
        g[I] = Q;
      }
      l.seac !== null && (r[I] = l.seac), C || A.set(I, new Uint8Array([14]));
    }
    return {
      charStrings: A,
      seacs: r,
      widths: g
    };
  }
  emptyPrivateDictionary(A) {
    const t = this.createDict(zs, [], A.strings);
    A.setByKey(18, [0, 0]), A.privateDict = t;
  }
  parsePrivateDict(A) {
    if (!A.hasName("Private")) {
      this.emptyPrivateDictionary(A);
      return;
    }
    const t = A.getByName("Private");
    if (!Array.isArray(t) || t.length !== 2) {
      A.removeByName("Private");
      return;
    }
    const i = t[0], s = t[1];
    if (i === 0 || s >= this.bytes.length) {
      this.emptyPrivateDictionary(A);
      return;
    }
    const a = s + i, n = this.bytes.subarray(s, a), r = this.parseDict(n), g = this.createDict(zs, r, A.strings);
    if (A.privateDict = g, g.getByName("ExpansionFactor") === 0 && g.setByName("ExpansionFactor", 0.06), !g.getByName("Subrs"))
      return;
    const o = g.getByName("Subrs"), I = s + o;
    if (o === 0 || I >= this.bytes.length) {
      this.emptyPrivateDictionary(A);
      return;
    }
    const c = this.parseIndex(I);
    g.subrsIndex = c.obj;
  }
  parseCharsets(A, t, i, s) {
    if (A === 0)
      return new Gs(!0, mr.ISO_ADOBE, AB);
    if (A === 1)
      return new Gs(!0, mr.EXPERT, eB);
    if (A === 2)
      return new Gs(!0, mr.EXPERT_SUBSET, tB);
    const a = this.bytes, n = A, r = a[A++], g = [s ? 0 : ".notdef"];
    let o, I, c;
    switch (t -= 1, r) {
      case 0:
        for (c = 0; c < t; c++)
          o = a[A++] << 8 | a[A++], g.push(s ? o : i.get(o));
        break;
      case 1:
        for (; g.length <= t; )
          for (o = a[A++] << 8 | a[A++], I = a[A++], c = 0; c <= I; c++)
            g.push(s ? o++ : i.get(o++));
        break;
      case 2:
        for (; g.length <= t; )
          for (o = a[A++] << 8 | a[A++], I = a[A++] << 8 | a[A++], c = 0; c <= I; c++)
            g.push(s ? o++ : i.get(o++));
        break;
      default:
        throw new T("Unknown charset format");
    }
    const l = A, C = a.subarray(n, l);
    return new Gs(!1, r, g, C);
  }
  parseEncoding(A, t, i, s) {
    const a = /* @__PURE__ */ Object.create(null), n = this.bytes;
    let r = !1, g, o, I, c = null;
    function l() {
      const C = n[A++];
      for (o = 0; o < C; o++) {
        const h = n[A++], B = (n[A++] << 8) + (n[A++] & 255);
        a[h] = s.indexOf(i.get(B));
      }
    }
    if (A === 0 || A === 1) {
      r = !0, g = A;
      const C = A ? Lc : fi;
      for (o = 0, I = s.length; o < I; o++) {
        const h = C.indexOf(s[o]);
        h !== -1 && (a[h] = o);
      }
    } else {
      const C = A;
      switch (g = n[A++], g & 127) {
        case 0:
          const B = n[A++];
          for (o = 1; o <= B; o++)
            a[n[A++]] = o;
          break;
        case 1:
          const Q = n[A++];
          let E = 1;
          for (o = 0; o < Q; o++) {
            const f = n[A++], d = n[A++];
            for (let u = f; u <= f + d; u++)
              a[u] = E++;
          }
          break;
        default:
          throw new T(`Unknown encoding format: ${g} in CFF`);
      }
      const h = A;
      g & 128 && (n[C] &= 127, l()), c = n.subarray(C, h);
    }
    return g &= 127, new gB(r, g, a, c);
  }
  parseFDSelect(A, t) {
    const i = this.bytes, s = i[A++], a = [];
    let n;
    switch (s) {
      case 0:
        for (n = 0; n < t; ++n) {
          const g = i[A++];
          a.push(g);
        }
        break;
      case 3:
        const r = i[A++] << 8 | i[A++];
        for (n = 0; n < r; ++n) {
          let g = i[A++] << 8 | i[A++];
          n === 0 && g !== 0 && (k("parseFDSelect: The first range must have a first GID of 0 -- trying to recover."), g = 0);
          const o = i[A++], I = i[A] << 8 | i[A + 1];
          for (let c = g; c < I; ++c)
            a.push(o);
        }
        A += 2;
        break;
      default:
        throw new T(`parseFDSelect: Unknown format "${s}".`);
    }
    if (a.length !== t)
      throw new T("parseFDSelect: Invalid font data.");
    return new oB(s, a);
  }
}
class Hc {
  constructor() {
    this.header = null, this.names = [], this.topDict = null, this.strings = new Xg(), this.globalSubrIndex = null, this.encoding = null, this.charset = null, this.charStrings = null, this.fdArray = [], this.fdSelect = null, this.isCIDFont = !1;
  }
  duplicateFirstGlyph() {
    if (this.charStrings.count >= 65535) {
      k("Not enough space in charstrings to duplicate first glyph.");
      return;
    }
    const A = this.charStrings.get(0);
    this.charStrings.add(A), this.isCIDFont && this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0]);
  }
  hasGlyphId(A) {
    return A < 0 || A >= this.charStrings.count ? !1 : this.charStrings.get(A).length > 0;
  }
}
class Jc {
  constructor(A, t, i, s) {
    this.major = A, this.minor = t, this.hdrSize = i, this.offSize = s;
  }
}
class Xg {
  constructor() {
    this.strings = [];
  }
  get(A) {
    return A >= 0 && A <= va - 1 ? cn[A] : A - va <= this.strings.length ? this.strings[A - va] : cn[0];
  }
  getSID(A) {
    let t = cn.indexOf(A);
    return t !== -1 ? t : (t = this.strings.indexOf(A), t !== -1 ? t + va : -1);
  }
  add(A) {
    this.strings.push(A);
  }
  get count() {
    return this.strings.length;
  }
}
class Ti {
  constructor() {
    this.objects = [], this.length = 0;
  }
  add(A) {
    this.length += A.length, this.objects.push(A);
  }
  set(A, t) {
    this.length += t.length - this.objects[A].length, this.objects[A] = t;
  }
  get(A) {
    return this.objects[A];
  }
  get count() {
    return this.objects.length;
  }
}
class Yc {
  constructor(A, t) {
    this.keyToNameMap = A.keyToNameMap, this.nameToKeyMap = A.nameToKeyMap, this.defaults = A.defaults, this.types = A.types, this.opcodes = A.opcodes, this.order = A.order, this.strings = t, this.values = /* @__PURE__ */ Object.create(null);
  }
  setByKey(A, t) {
    if (!(A in this.keyToNameMap))
      return !1;
    if (t.length === 0)
      return !0;
    for (const s of t)
      if (isNaN(s))
        return k(`Invalid CFFDict value: "${t}" for key "${A}".`), !0;
    const i = this.types[A];
    return (i === "num" || i === "sid" || i === "offset") && (t = t[0]), this.values[A] = t, !0;
  }
  setByName(A, t) {
    if (!(A in this.nameToKeyMap))
      throw new T(`Invalid dictionary name "${A}"`);
    this.values[this.nameToKeyMap[A]] = t;
  }
  hasName(A) {
    return this.nameToKeyMap[A] in this.values;
  }
  getByName(A) {
    if (!(A in this.nameToKeyMap))
      throw new T(`Invalid dictionary name ${A}"`);
    const t = this.nameToKeyMap[A];
    return t in this.values ? this.values[t] : this.defaults[t];
  }
  removeByName(A) {
    delete this.values[this.nameToKeyMap[A]];
  }
  static createTables(A) {
    const t = {
      keyToNameMap: {},
      nameToKeyMap: {},
      defaults: {},
      types: {},
      opcodes: {},
      order: []
    };
    for (const i of A) {
      const s = Array.isArray(i[0]) ? (i[0][0] << 8) + i[0][1] : i[0];
      t.keyToNameMap[s] = i[1], t.nameToKeyMap[i[1]] = s, t.types[s] = i[2], t.defaults[s] = i[3], t.opcodes[s] = Array.isArray(i[0]) ? i[0] : [i[0]], t.order.push(s);
    }
    return t;
  }
}
const nB = [[[12, 30], "ROS", ["sid", "sid", "num"], null], [[12, 20], "SyntheticBase", "num", null], [0, "version", "sid", null], [1, "Notice", "sid", null], [[12, 0], "Copyright", "sid", null], [2, "FullName", "sid", null], [3, "FamilyName", "sid", null], [4, "Weight", "sid", null], [[12, 1], "isFixedPitch", "num", 0], [[12, 2], "ItalicAngle", "num", 0], [[12, 3], "UnderlinePosition", "num", -100], [[12, 4], "UnderlineThickness", "num", 50], [[12, 5], "PaintType", "num", 0], [[12, 6], "CharstringType", "num", 2], [[12, 7], "FontMatrix", ["num", "num", "num", "num", "num", "num"], [1e-3, 0, 0, 1e-3, 0, 0]], [13, "UniqueID", "num", null], [5, "FontBBox", ["num", "num", "num", "num"], [0, 0, 0, 0]], [[12, 8], "StrokeWidth", "num", 0], [14, "XUID", "array", null], [15, "charset", "offset", 0], [16, "Encoding", "offset", 0], [17, "CharStrings", "offset", 0], [18, "Private", ["offset", "offset"], null], [[12, 21], "PostScript", "sid", null], [[12, 22], "BaseFontName", "sid", null], [[12, 23], "BaseFontBlend", "delta", null], [[12, 31], "CIDFontVersion", "num", 0], [[12, 32], "CIDFontRevision", "num", 0], [[12, 33], "CIDFontType", "num", 0], [[12, 34], "CIDCount", "num", 8720], [[12, 35], "UIDBase", "num", null], [[12, 37], "FDSelect", "offset", null], [[12, 36], "FDArray", "offset", null], [[12, 38], "FontName", "sid", null]];
class _s extends Yc {
  static get tables() {
    return tA(this, "tables", this.createTables(nB));
  }
  constructor(A) {
    super(_s.tables, A), this.privateDict = null;
  }
}
const rB = [[6, "BlueValues", "delta", null], [7, "OtherBlues", "delta", null], [8, "FamilyBlues", "delta", null], [9, "FamilyOtherBlues", "delta", null], [[12, 9], "BlueScale", "num", 0.039625], [[12, 10], "BlueShift", "num", 7], [[12, 11], "BlueFuzz", "num", 1], [10, "StdHW", "num", null], [11, "StdVW", "num", null], [[12, 12], "StemSnapH", "delta", null], [[12, 13], "StemSnapV", "delta", null], [[12, 14], "ForceBold", "num", 0], [[12, 17], "LanguageGroup", "num", 0], [[12, 18], "ExpansionFactor", "num", 0.06], [[12, 19], "initialRandomSeed", "num", 0], [20, "defaultWidthX", "num", 0], [21, "nominalWidthX", "num", 0], [19, "Subrs", "offset", null]];
class zs extends Yc {
  static get tables() {
    return tA(this, "tables", this.createTables(rB));
  }
  constructor(A) {
    super(zs.tables, A), this.subrsIndex = null;
  }
}
const mr = {
  ISO_ADOBE: 0,
  EXPERT: 1,
  EXPERT_SUBSET: 2
};
class Gs {
  constructor(A, t, i, s) {
    this.predefined = A, this.format = t, this.charset = i, this.raw = s;
  }
}
class gB {
  constructor(A, t, i, s) {
    this.predefined = A, this.format = t, this.encoding = i, this.raw = s;
  }
}
class oB {
  constructor(A, t) {
    this.format = A, this.fdSelect = t;
  }
  getFDIndex(A) {
    return A < 0 || A >= this.fdSelect.length ? -1 : this.fdSelect[A];
  }
}
class Oo {
  constructor() {
    this.offsets = /* @__PURE__ */ Object.create(null);
  }
  isTracking(A) {
    return A in this.offsets;
  }
  track(A, t) {
    if (A in this.offsets)
      throw new T(`Already tracking location of ${A}`);
    this.offsets[A] = t;
  }
  offset(A) {
    for (const t in this.offsets)
      this.offsets[t] += A;
  }
  setEntryLocation(A, t, i) {
    if (!(A in this.offsets))
      throw new T(`Not tracking location of ${A}`);
    const s = i.data, a = this.offsets[A], n = 5;
    for (let r = 0, g = t.length; r < g; ++r) {
      const o = r * n + a, I = o + 1, c = o + 2, l = o + 3, C = o + 4;
      if (s[o] !== 29 || s[I] !== 0 || s[c] !== 0 || s[l] !== 0 || s[C] !== 0)
        throw new T("writing to an offset that is not empty");
      const h = t[r];
      s[o] = 29, s[I] = h >> 24 & 255, s[c] = h >> 16 & 255, s[l] = h >> 8 & 255, s[C] = h & 255;
    }
  }
}
class ya {
  constructor(A) {
    this.cff = A;
  }
  compile() {
    const A = this.cff, t = {
      data: [],
      length: 0,
      add(l) {
        try {
          this.data.push(...l);
        } catch {
          this.data = this.data.concat(l);
        }
        this.length = this.data.length;
      }
    }, i = this.compileHeader(A.header);
    t.add(i);
    const s = this.compileNameIndex(A.names);
    if (t.add(s), A.isCIDFont && A.topDict.hasName("FontMatrix")) {
      const l = A.topDict.getByName("FontMatrix");
      A.topDict.removeByName("FontMatrix");
      for (const C of A.fdArray) {
        let h = l.slice(0);
        C.hasName("FontMatrix") && (h = ye.transform(h, C.getByName("FontMatrix"))), C.setByName("FontMatrix", h);
      }
    }
    const a = A.topDict.getByName("XUID");
    (a == null ? void 0 : a.length) > 16 && A.topDict.removeByName("XUID"), A.topDict.setByName("charset", 0);
    let n = this.compileTopDicts([A.topDict], t.length, A.isCIDFont);
    t.add(n.output);
    const r = n.trackers[0], g = this.compileStringIndex(A.strings.strings);
    t.add(g);
    const o = this.compileIndex(A.globalSubrIndex);
    if (t.add(o), A.encoding && A.topDict.hasName("Encoding"))
      if (A.encoding.predefined)
        r.setEntryLocation("Encoding", [A.encoding.format], t);
      else {
        const l = this.compileEncoding(A.encoding);
        r.setEntryLocation("Encoding", [t.length], t), t.add(l);
      }
    const I = this.compileCharset(A.charset, A.charStrings.count, A.strings, A.isCIDFont);
    r.setEntryLocation("charset", [t.length], t), t.add(I);
    const c = this.compileCharStrings(A.charStrings);
    if (r.setEntryLocation("CharStrings", [t.length], t), t.add(c), A.isCIDFont) {
      r.setEntryLocation("FDSelect", [t.length], t);
      const l = this.compileFDSelect(A.fdSelect);
      t.add(l), n = this.compileTopDicts(A.fdArray, t.length, !0), r.setEntryLocation("FDArray", [t.length], t), t.add(n.output);
      const C = n.trackers;
      this.compilePrivateDicts(A.fdArray, C, t);
    }
    return this.compilePrivateDicts([A.topDict], [r], t), t.add([0]), t.data;
  }
  encodeNumber(A) {
    return Number.isInteger(A) ? this.encodeInteger(A) : this.encodeFloat(A);
  }
  static get EncodeFloatRegExp() {
    return tA(this, "EncodeFloatRegExp", /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/);
  }
  encodeFloat(A) {
    let t = A.toString();
    const i = ya.EncodeFloatRegExp.exec(t);
    if (i) {
      const g = parseFloat("1e" + ((i[2] ? +i[2] : 0) + i[1].length));
      t = (Math.round(A * g) / g).toString();
    }
    let s = "", a, n;
    for (a = 0, n = t.length; a < n; ++a) {
      const g = t[a];
      g === "e" ? s += t[++a] === "-" ? "c" : "b" : g === "." ? s += "a" : g === "-" ? s += "e" : s += g;
    }
    s += s.length & 1 ? "f" : "ff";
    const r = [30];
    for (a = 0, n = s.length; a < n; a += 2)
      r.push(parseInt(s.substring(a, a + 2), 16));
    return r;
  }
  encodeInteger(A) {
    let t;
    return A >= -107 && A <= 107 ? t = [A + 139] : A >= 108 && A <= 1131 ? (A -= 108, t = [(A >> 8) + 247, A & 255]) : A >= -1131 && A <= -108 ? (A = -A - 108, t = [(A >> 8) + 251, A & 255]) : A >= -32768 && A <= 32767 ? t = [28, A >> 8 & 255, A & 255] : t = [29, A >> 24 & 255, A >> 16 & 255, A >> 8 & 255, A & 255], t;
  }
  compileHeader(A) {
    return [A.major, A.minor, 4, A.offSize];
  }
  compileNameIndex(A) {
    const t = new Ti();
    for (const i of A) {
      const s = Math.min(i.length, 127);
      let a = new Array(s);
      for (let n = 0; n < s; n++) {
        let r = i[n];
        (r < "!" || r > "~" || r === "[" || r === "]" || r === "(" || r === ")" || r === "{" || r === "}" || r === "<" || r === ">" || r === "/" || r === "%") && (r = "_"), a[n] = r;
      }
      a = a.join(""), a === "" && (a = "Bad_Font_Name"), t.add(qe(a));
    }
    return this.compileIndex(t);
  }
  compileTopDicts(A, t, i) {
    const s = [];
    let a = new Ti();
    for (const n of A) {
      i && (n.removeByName("CIDFontVersion"), n.removeByName("CIDFontRevision"), n.removeByName("CIDFontType"), n.removeByName("CIDCount"), n.removeByName("UIDBase"));
      const r = new Oo(), g = this.compileDict(n, r);
      s.push(r), a.add(g), r.offset(t);
    }
    return a = this.compileIndex(a, s), {
      trackers: s,
      output: a
    };
  }
  compilePrivateDicts(A, t, i) {
    for (let s = 0, a = A.length; s < a; ++s) {
      const n = A[s], r = n.privateDict;
      if (!r || !n.hasName("Private"))
        throw new T("There must be a private dictionary.");
      const g = new Oo(), o = this.compileDict(r, g);
      let I = i.length;
      if (g.offset(I), o.length || (I = 0), t[s].setEntryLocation("Private", [o.length, I], i), i.add(o), r.subrsIndex && r.hasName("Subrs")) {
        const c = this.compileIndex(r.subrsIndex);
        g.setEntryLocation("Subrs", [o.length], i), i.add(c);
      }
    }
  }
  compileDict(A, t) {
    const i = [];
    for (const s of A.order) {
      if (!(s in A.values))
        continue;
      let a = A.values[s], n = A.types[s];
      if (Array.isArray(n) || (n = [n]), Array.isArray(a) || (a = [a]), a.length !== 0) {
        for (let r = 0, g = n.length; r < g; ++r) {
          const o = n[r], I = a[r];
          switch (o) {
            case "num":
            case "sid":
              i.push(...this.encodeNumber(I));
              break;
            case "offset":
              const c = A.keyToNameMap[s];
              t.isTracking(c) || t.track(c, i.length), i.push(29, 0, 0, 0, 0);
              break;
            case "array":
            case "delta":
              i.push(...this.encodeNumber(I));
              for (let l = 1, C = a.length; l < C; ++l)
                i.push(...this.encodeNumber(a[l]));
              break;
            default:
              throw new T(`Unknown data type of ${o}`);
          }
        }
        i.push(...A.opcodes[s]);
      }
    }
    return i;
  }
  compileStringIndex(A) {
    const t = new Ti();
    for (const i of A)
      t.add(qe(i));
    return this.compileIndex(t);
  }
  compileCharStrings(A) {
    const t = new Ti();
    for (let i = 0; i < A.count; i++) {
      const s = A.get(i);
      if (s.length === 0) {
        t.add(new Uint8Array([139, 14]));
        continue;
      }
      t.add(s);
    }
    return this.compileIndex(t);
  }
  compileCharset(A, t, i, s) {
    let a;
    const n = t - 1;
    if (s)
      a = new Uint8Array([2, 0, 0, n >> 8 & 255, n & 255]);
    else {
      const r = 1 + n * 2;
      a = new Uint8Array(r), a[0] = 0;
      let g = 0;
      const o = A.charset.length;
      let I = !1;
      for (let c = 1; c < a.length; c += 2) {
        let l = 0;
        if (g < o) {
          const C = A.charset[g++];
          l = i.getSID(C), l === -1 && (l = 0, I || (I = !0, k(`Couldn't find ${C} in CFF strings`)));
        }
        a[c] = l >> 8 & 255, a[c + 1] = l & 255;
      }
    }
    return this.compileTypedArray(a);
  }
  compileEncoding(A) {
    return this.compileTypedArray(A.raw);
  }
  compileFDSelect(A) {
    const t = A.format;
    let i, s;
    switch (t) {
      case 0:
        for (i = new Uint8Array(1 + A.fdSelect.length), i[0] = t, s = 0; s < A.fdSelect.length; s++)
          i[s + 1] = A.fdSelect[s];
        break;
      case 3:
        const a = 0;
        let n = A.fdSelect[0];
        const r = [t, 0, 0, a >> 8 & 255, a & 255, n];
        for (s = 1; s < A.fdSelect.length; s++) {
          const o = A.fdSelect[s];
          o !== n && (r.push(s >> 8 & 255, s & 255, o), n = o);
        }
        const g = (r.length - 3) / 3;
        r[1] = g >> 8 & 255, r[2] = g & 255, r.push(s >> 8 & 255, s & 255), i = new Uint8Array(r);
        break;
    }
    return this.compileTypedArray(i);
  }
  compileTypedArray(A) {
    return Array.from(A);
  }
  compileIndex(A, t = []) {
    const i = A.objects, s = i.length;
    if (s === 0)
      return [0, 0];
    const a = [s >> 8 & 255, s & 255];
    let n = 1, r;
    for (r = 0; r < s; ++r)
      n += i[r].length;
    let g;
    n < 256 ? g = 1 : n < 65536 ? g = 2 : n < 16777216 ? g = 3 : g = 4, a.push(g);
    let o = 1;
    for (r = 0; r < s + 1; r++)
      g === 1 ? a.push(o & 255) : g === 2 ? a.push(o >> 8 & 255, o & 255) : g === 3 ? a.push(o >> 16 & 255, o >> 8 & 255, o & 255) : a.push(o >>> 24 & 255, o >> 16 & 255, o >> 8 & 255, o & 255), i[r] && (o += i[r].length);
    for (r = 0; r < s; r++)
      t[r] && t[r].offset(a.length), a.push(...i[r]);
    return a;
  }
}
const si = Ce(function(e) {
  e.A = 65, e.AE = 198, e.AEacute = 508, e.AEmacron = 482, e.AEsmall = 63462, e.Aacute = 193, e.Aacutesmall = 63457, e.Abreve = 258, e.Abreveacute = 7854, e.Abrevecyrillic = 1232, e.Abrevedotbelow = 7862, e.Abrevegrave = 7856, e.Abrevehookabove = 7858, e.Abrevetilde = 7860, e.Acaron = 461, e.Acircle = 9398, e.Acircumflex = 194, e.Acircumflexacute = 7844, e.Acircumflexdotbelow = 7852, e.Acircumflexgrave = 7846, e.Acircumflexhookabove = 7848, e.Acircumflexsmall = 63458, e.Acircumflextilde = 7850, e.Acute = 63177, e.Acutesmall = 63412, e.Acyrillic = 1040, e.Adblgrave = 512, e.Adieresis = 196, e.Adieresiscyrillic = 1234, e.Adieresismacron = 478, e.Adieresissmall = 63460, e.Adotbelow = 7840, e.Adotmacron = 480, e.Agrave = 192, e.Agravesmall = 63456, e.Ahookabove = 7842, e.Aiecyrillic = 1236, e.Ainvertedbreve = 514, e.Alpha = 913, e.Alphatonos = 902, e.Amacron = 256, e.Amonospace = 65313, e.Aogonek = 260, e.Aring = 197, e.Aringacute = 506, e.Aringbelow = 7680, e.Aringsmall = 63461, e.Asmall = 63329, e.Atilde = 195, e.Atildesmall = 63459, e.Aybarmenian = 1329, e.B = 66, e.Bcircle = 9399, e.Bdotaccent = 7682, e.Bdotbelow = 7684, e.Becyrillic = 1041, e.Benarmenian = 1330, e.Beta = 914, e.Bhook = 385, e.Blinebelow = 7686, e.Bmonospace = 65314, e.Brevesmall = 63220, e.Bsmall = 63330, e.Btopbar = 386, e.C = 67, e.Caarmenian = 1342, e.Cacute = 262, e.Caron = 63178, e.Caronsmall = 63221, e.Ccaron = 268, e.Ccedilla = 199, e.Ccedillaacute = 7688, e.Ccedillasmall = 63463, e.Ccircle = 9400, e.Ccircumflex = 264, e.Cdot = 266, e.Cdotaccent = 266, e.Cedillasmall = 63416, e.Chaarmenian = 1353, e.Cheabkhasiancyrillic = 1212, e.Checyrillic = 1063, e.Chedescenderabkhasiancyrillic = 1214, e.Chedescendercyrillic = 1206, e.Chedieresiscyrillic = 1268, e.Cheharmenian = 1347, e.Chekhakassiancyrillic = 1227, e.Cheverticalstrokecyrillic = 1208, e.Chi = 935, e.Chook = 391, e.Circumflexsmall = 63222, e.Cmonospace = 65315, e.Coarmenian = 1361, e.Csmall = 63331, e.D = 68, e.DZ = 497, e.DZcaron = 452, e.Daarmenian = 1332, e.Dafrican = 393, e.Dcaron = 270, e.Dcedilla = 7696, e.Dcircle = 9401, e.Dcircumflexbelow = 7698, e.Dcroat = 272, e.Ddotaccent = 7690, e.Ddotbelow = 7692, e.Decyrillic = 1044, e.Deicoptic = 1006, e.Delta = 8710, e.Deltagreek = 916, e.Dhook = 394, e.Dieresis = 63179, e.DieresisAcute = 63180, e.DieresisGrave = 63181, e.Dieresissmall = 63400, e.Digammagreek = 988, e.Djecyrillic = 1026, e.Dlinebelow = 7694, e.Dmonospace = 65316, e.Dotaccentsmall = 63223, e.Dslash = 272, e.Dsmall = 63332, e.Dtopbar = 395, e.Dz = 498, e.Dzcaron = 453, e.Dzeabkhasiancyrillic = 1248, e.Dzecyrillic = 1029, e.Dzhecyrillic = 1039, e.E = 69, e.Eacute = 201, e.Eacutesmall = 63465, e.Ebreve = 276, e.Ecaron = 282, e.Ecedillabreve = 7708, e.Echarmenian = 1333, e.Ecircle = 9402, e.Ecircumflex = 202, e.Ecircumflexacute = 7870, e.Ecircumflexbelow = 7704, e.Ecircumflexdotbelow = 7878, e.Ecircumflexgrave = 7872, e.Ecircumflexhookabove = 7874, e.Ecircumflexsmall = 63466, e.Ecircumflextilde = 7876, e.Ecyrillic = 1028, e.Edblgrave = 516, e.Edieresis = 203, e.Edieresissmall = 63467, e.Edot = 278, e.Edotaccent = 278, e.Edotbelow = 7864, e.Efcyrillic = 1060, e.Egrave = 200, e.Egravesmall = 63464, e.Eharmenian = 1335, e.Ehookabove = 7866, e.Eightroman = 8551, e.Einvertedbreve = 518, e.Eiotifiedcyrillic = 1124, e.Elcyrillic = 1051, e.Elevenroman = 8554, e.Emacron = 274, e.Emacronacute = 7702, e.Emacrongrave = 7700, e.Emcyrillic = 1052, e.Emonospace = 65317, e.Encyrillic = 1053, e.Endescendercyrillic = 1186, e.Eng = 330, e.Enghecyrillic = 1188, e.Enhookcyrillic = 1223, e.Eogonek = 280, e.Eopen = 400, e.Epsilon = 917, e.Epsilontonos = 904, e.Ercyrillic = 1056, e.Ereversed = 398, e.Ereversedcyrillic = 1069, e.Escyrillic = 1057, e.Esdescendercyrillic = 1194, e.Esh = 425, e.Esmall = 63333, e.Eta = 919, e.Etarmenian = 1336, e.Etatonos = 905, e.Eth = 208, e.Ethsmall = 63472, e.Etilde = 7868, e.Etildebelow = 7706, e.Euro = 8364, e.Ezh = 439, e.Ezhcaron = 494, e.Ezhreversed = 440, e.F = 70, e.Fcircle = 9403, e.Fdotaccent = 7710, e.Feharmenian = 1366, e.Feicoptic = 996, e.Fhook = 401, e.Fitacyrillic = 1138, e.Fiveroman = 8548, e.Fmonospace = 65318, e.Fourroman = 8547, e.Fsmall = 63334, e.G = 71, e.GBsquare = 13191, e.Gacute = 500, e.Gamma = 915, e.Gammaafrican = 404, e.Gangiacoptic = 1002, e.Gbreve = 286, e.Gcaron = 486, e.Gcedilla = 290, e.Gcircle = 9404, e.Gcircumflex = 284, e.Gcommaaccent = 290, e.Gdot = 288, e.Gdotaccent = 288, e.Gecyrillic = 1043, e.Ghadarmenian = 1346, e.Ghemiddlehookcyrillic = 1172, e.Ghestrokecyrillic = 1170, e.Gheupturncyrillic = 1168, e.Ghook = 403, e.Gimarmenian = 1331, e.Gjecyrillic = 1027, e.Gmacron = 7712, e.Gmonospace = 65319, e.Grave = 63182, e.Gravesmall = 63328, e.Gsmall = 63335, e.Gsmallhook = 667, e.Gstroke = 484, e.H = 72, e.H18533 = 9679, e.H18543 = 9642, e.H18551 = 9643, e.H22073 = 9633, e.HPsquare = 13259, e.Haabkhasiancyrillic = 1192, e.Hadescendercyrillic = 1202, e.Hardsigncyrillic = 1066, e.Hbar = 294, e.Hbrevebelow = 7722, e.Hcedilla = 7720, e.Hcircle = 9405, e.Hcircumflex = 292, e.Hdieresis = 7718, e.Hdotaccent = 7714, e.Hdotbelow = 7716, e.Hmonospace = 65320, e.Hoarmenian = 1344, e.Horicoptic = 1e3, e.Hsmall = 63336, e.Hungarumlaut = 63183, e.Hungarumlautsmall = 63224, e.Hzsquare = 13200, e.I = 73, e.IAcyrillic = 1071, e.IJ = 306, e.IUcyrillic = 1070, e.Iacute = 205, e.Iacutesmall = 63469, e.Ibreve = 300, e.Icaron = 463, e.Icircle = 9406, e.Icircumflex = 206, e.Icircumflexsmall = 63470, e.Icyrillic = 1030, e.Idblgrave = 520, e.Idieresis = 207, e.Idieresisacute = 7726, e.Idieresiscyrillic = 1252, e.Idieresissmall = 63471, e.Idot = 304, e.Idotaccent = 304, e.Idotbelow = 7882, e.Iebrevecyrillic = 1238, e.Iecyrillic = 1045, e.Ifraktur = 8465, e.Igrave = 204, e.Igravesmall = 63468, e.Ihookabove = 7880, e.Iicyrillic = 1048, e.Iinvertedbreve = 522, e.Iishortcyrillic = 1049, e.Imacron = 298, e.Imacroncyrillic = 1250, e.Imonospace = 65321, e.Iniarmenian = 1339, e.Iocyrillic = 1025, e.Iogonek = 302, e.Iota = 921, e.Iotaafrican = 406, e.Iotadieresis = 938, e.Iotatonos = 906, e.Ismall = 63337, e.Istroke = 407, e.Itilde = 296, e.Itildebelow = 7724, e.Izhitsacyrillic = 1140, e.Izhitsadblgravecyrillic = 1142, e.J = 74, e.Jaarmenian = 1345, e.Jcircle = 9407, e.Jcircumflex = 308, e.Jecyrillic = 1032, e.Jheharmenian = 1355, e.Jmonospace = 65322, e.Jsmall = 63338, e.K = 75, e.KBsquare = 13189, e.KKsquare = 13261, e.Kabashkircyrillic = 1184, e.Kacute = 7728, e.Kacyrillic = 1050, e.Kadescendercyrillic = 1178, e.Kahookcyrillic = 1219, e.Kappa = 922, e.Kastrokecyrillic = 1182, e.Kaverticalstrokecyrillic = 1180, e.Kcaron = 488, e.Kcedilla = 310, e.Kcircle = 9408, e.Kcommaaccent = 310, e.Kdotbelow = 7730, e.Keharmenian = 1364, e.Kenarmenian = 1343, e.Khacyrillic = 1061, e.Kheicoptic = 998, e.Khook = 408, e.Kjecyrillic = 1036, e.Klinebelow = 7732, e.Kmonospace = 65323, e.Koppacyrillic = 1152, e.Koppagreek = 990, e.Ksicyrillic = 1134, e.Ksmall = 63339, e.L = 76, e.LJ = 455, e.LL = 63167, e.Lacute = 313, e.Lambda = 923, e.Lcaron = 317, e.Lcedilla = 315, e.Lcircle = 9409, e.Lcircumflexbelow = 7740, e.Lcommaaccent = 315, e.Ldot = 319, e.Ldotaccent = 319, e.Ldotbelow = 7734, e.Ldotbelowmacron = 7736, e.Liwnarmenian = 1340, e.Lj = 456, e.Ljecyrillic = 1033, e.Llinebelow = 7738, e.Lmonospace = 65324, e.Lslash = 321, e.Lslashsmall = 63225, e.Lsmall = 63340, e.M = 77, e.MBsquare = 13190, e.Macron = 63184, e.Macronsmall = 63407, e.Macute = 7742, e.Mcircle = 9410, e.Mdotaccent = 7744, e.Mdotbelow = 7746, e.Menarmenian = 1348, e.Mmonospace = 65325, e.Msmall = 63341, e.Mturned = 412, e.Mu = 924, e.N = 78, e.NJ = 458, e.Nacute = 323, e.Ncaron = 327, e.Ncedilla = 325, e.Ncircle = 9411, e.Ncircumflexbelow = 7754, e.Ncommaaccent = 325, e.Ndotaccent = 7748, e.Ndotbelow = 7750, e.Nhookleft = 413, e.Nineroman = 8552, e.Nj = 459, e.Njecyrillic = 1034, e.Nlinebelow = 7752, e.Nmonospace = 65326, e.Nowarmenian = 1350, e.Nsmall = 63342, e.Ntilde = 209, e.Ntildesmall = 63473, e.Nu = 925, e.O = 79, e.OE = 338, e.OEsmall = 63226, e.Oacute = 211, e.Oacutesmall = 63475, e.Obarredcyrillic = 1256, e.Obarreddieresiscyrillic = 1258, e.Obreve = 334, e.Ocaron = 465, e.Ocenteredtilde = 415, e.Ocircle = 9412, e.Ocircumflex = 212, e.Ocircumflexacute = 7888, e.Ocircumflexdotbelow = 7896, e.Ocircumflexgrave = 7890, e.Ocircumflexhookabove = 7892, e.Ocircumflexsmall = 63476, e.Ocircumflextilde = 7894, e.Ocyrillic = 1054, e.Odblacute = 336, e.Odblgrave = 524, e.Odieresis = 214, e.Odieresiscyrillic = 1254, e.Odieresissmall = 63478, e.Odotbelow = 7884, e.Ogoneksmall = 63227, e.Ograve = 210, e.Ogravesmall = 63474, e.Oharmenian = 1365, e.Ohm = 8486, e.Ohookabove = 7886, e.Ohorn = 416, e.Ohornacute = 7898, e.Ohorndotbelow = 7906, e.Ohorngrave = 7900, e.Ohornhookabove = 7902, e.Ohorntilde = 7904, e.Ohungarumlaut = 336, e.Oi = 418, e.Oinvertedbreve = 526, e.Omacron = 332, e.Omacronacute = 7762, e.Omacrongrave = 7760, e.Omega = 8486, e.Omegacyrillic = 1120, e.Omegagreek = 937, e.Omegaroundcyrillic = 1146, e.Omegatitlocyrillic = 1148, e.Omegatonos = 911, e.Omicron = 927, e.Omicrontonos = 908, e.Omonospace = 65327, e.Oneroman = 8544, e.Oogonek = 490, e.Oogonekmacron = 492, e.Oopen = 390, e.Oslash = 216, e.Oslashacute = 510, e.Oslashsmall = 63480, e.Osmall = 63343, e.Ostrokeacute = 510, e.Otcyrillic = 1150, e.Otilde = 213, e.Otildeacute = 7756, e.Otildedieresis = 7758, e.Otildesmall = 63477, e.P = 80, e.Pacute = 7764, e.Pcircle = 9413, e.Pdotaccent = 7766, e.Pecyrillic = 1055, e.Peharmenian = 1354, e.Pemiddlehookcyrillic = 1190, e.Phi = 934, e.Phook = 420, e.Pi = 928, e.Piwrarmenian = 1363, e.Pmonospace = 65328, e.Psi = 936, e.Psicyrillic = 1136, e.Psmall = 63344, e.Q = 81, e.Qcircle = 9414, e.Qmonospace = 65329, e.Qsmall = 63345, e.R = 82, e.Raarmenian = 1356, e.Racute = 340, e.Rcaron = 344, e.Rcedilla = 342, e.Rcircle = 9415, e.Rcommaaccent = 342, e.Rdblgrave = 528, e.Rdotaccent = 7768, e.Rdotbelow = 7770, e.Rdotbelowmacron = 7772, e.Reharmenian = 1360, e.Rfraktur = 8476, e.Rho = 929, e.Ringsmall = 63228, e.Rinvertedbreve = 530, e.Rlinebelow = 7774, e.Rmonospace = 65330, e.Rsmall = 63346, e.Rsmallinverted = 641, e.Rsmallinvertedsuperior = 694, e.S = 83, e.SF010000 = 9484, e.SF020000 = 9492, e.SF030000 = 9488, e.SF040000 = 9496, e.SF050000 = 9532, e.SF060000 = 9516, e.SF070000 = 9524, e.SF080000 = 9500, e.SF090000 = 9508, e.SF100000 = 9472, e.SF110000 = 9474, e.SF190000 = 9569, e.SF200000 = 9570, e.SF210000 = 9558, e.SF220000 = 9557, e.SF230000 = 9571, e.SF240000 = 9553, e.SF250000 = 9559, e.SF260000 = 9565, e.SF270000 = 9564, e.SF280000 = 9563, e.SF360000 = 9566, e.SF370000 = 9567, e.SF380000 = 9562, e.SF390000 = 9556, e.SF400000 = 9577, e.SF410000 = 9574, e.SF420000 = 9568, e.SF430000 = 9552, e.SF440000 = 9580, e.SF450000 = 9575, e.SF460000 = 9576, e.SF470000 = 9572, e.SF480000 = 9573, e.SF490000 = 9561, e.SF500000 = 9560, e.SF510000 = 9554, e.SF520000 = 9555, e.SF530000 = 9579, e.SF540000 = 9578, e.Sacute = 346, e.Sacutedotaccent = 7780, e.Sampigreek = 992, e.Scaron = 352, e.Scarondotaccent = 7782, e.Scaronsmall = 63229, e.Scedilla = 350, e.Schwa = 399, e.Schwacyrillic = 1240, e.Schwadieresiscyrillic = 1242, e.Scircle = 9416, e.Scircumflex = 348, e.Scommaaccent = 536, e.Sdotaccent = 7776, e.Sdotbelow = 7778, e.Sdotbelowdotaccent = 7784, e.Seharmenian = 1357, e.Sevenroman = 8550, e.Shaarmenian = 1351, e.Shacyrillic = 1064, e.Shchacyrillic = 1065, e.Sheicoptic = 994, e.Shhacyrillic = 1210, e.Shimacoptic = 1004, e.Sigma = 931, e.Sixroman = 8549, e.Smonospace = 65331, e.Softsigncyrillic = 1068, e.Ssmall = 63347, e.Stigmagreek = 986, e.T = 84, e.Tau = 932, e.Tbar = 358, e.Tcaron = 356, e.Tcedilla = 354, e.Tcircle = 9417, e.Tcircumflexbelow = 7792, e.Tcommaaccent = 354, e.Tdotaccent = 7786, e.Tdotbelow = 7788, e.Tecyrillic = 1058, e.Tedescendercyrillic = 1196, e.Tenroman = 8553, e.Tetsecyrillic = 1204, e.Theta = 920, e.Thook = 428, e.Thorn = 222, e.Thornsmall = 63486, e.Threeroman = 8546, e.Tildesmall = 63230, e.Tiwnarmenian = 1359, e.Tlinebelow = 7790, e.Tmonospace = 65332, e.Toarmenian = 1337, e.Tonefive = 444, e.Tonesix = 388, e.Tonetwo = 423, e.Tretroflexhook = 430, e.Tsecyrillic = 1062, e.Tshecyrillic = 1035, e.Tsmall = 63348, e.Twelveroman = 8555, e.Tworoman = 8545, e.U = 85, e.Uacute = 218, e.Uacutesmall = 63482, e.Ubreve = 364, e.Ucaron = 467, e.Ucircle = 9418, e.Ucircumflex = 219, e.Ucircumflexbelow = 7798, e.Ucircumflexsmall = 63483, e.Ucyrillic = 1059, e.Udblacute = 368, e.Udblgrave = 532, e.Udieresis = 220, e.Udieresisacute = 471, e.Udieresisbelow = 7794, e.Udieresiscaron = 473, e.Udieresiscyrillic = 1264, e.Udieresisgrave = 475, e.Udieresismacron = 469, e.Udieresissmall = 63484, e.Udotbelow = 7908, e.Ugrave = 217, e.Ugravesmall = 63481, e.Uhookabove = 7910, e.Uhorn = 431, e.Uhornacute = 7912, e.Uhorndotbelow = 7920, e.Uhorngrave = 7914, e.Uhornhookabove = 7916, e.Uhorntilde = 7918, e.Uhungarumlaut = 368, e.Uhungarumlautcyrillic = 1266, e.Uinvertedbreve = 534, e.Ukcyrillic = 1144, e.Umacron = 362, e.Umacroncyrillic = 1262, e.Umacrondieresis = 7802, e.Umonospace = 65333, e.Uogonek = 370, e.Upsilon = 933, e.Upsilon1 = 978, e.Upsilonacutehooksymbolgreek = 979, e.Upsilonafrican = 433, e.Upsilondieresis = 939, e.Upsilondieresishooksymbolgreek = 980, e.Upsilonhooksymbol = 978, e.Upsilontonos = 910, e.Uring = 366, e.Ushortcyrillic = 1038, e.Usmall = 63349, e.Ustraightcyrillic = 1198, e.Ustraightstrokecyrillic = 1200, e.Utilde = 360, e.Utildeacute = 7800, e.Utildebelow = 7796, e.V = 86, e.Vcircle = 9419, e.Vdotbelow = 7806, e.Vecyrillic = 1042, e.Vewarmenian = 1358, e.Vhook = 434, e.Vmonospace = 65334, e.Voarmenian = 1352, e.Vsmall = 63350, e.Vtilde = 7804, e.W = 87, e.Wacute = 7810, e.Wcircle = 9420, e.Wcircumflex = 372, e.Wdieresis = 7812, e.Wdotaccent = 7814, e.Wdotbelow = 7816, e.Wgrave = 7808, e.Wmonospace = 65335, e.Wsmall = 63351, e.X = 88, e.Xcircle = 9421, e.Xdieresis = 7820, e.Xdotaccent = 7818, e.Xeharmenian = 1341, e.Xi = 926, e.Xmonospace = 65336, e.Xsmall = 63352, e.Y = 89, e.Yacute = 221, e.Yacutesmall = 63485, e.Yatcyrillic = 1122, e.Ycircle = 9422, e.Ycircumflex = 374, e.Ydieresis = 376, e.Ydieresissmall = 63487, e.Ydotaccent = 7822, e.Ydotbelow = 7924, e.Yericyrillic = 1067, e.Yerudieresiscyrillic = 1272, e.Ygrave = 7922, e.Yhook = 435, e.Yhookabove = 7926, e.Yiarmenian = 1349, e.Yicyrillic = 1031, e.Yiwnarmenian = 1362, e.Ymonospace = 65337, e.Ysmall = 63353, e.Ytilde = 7928, e.Yusbigcyrillic = 1130, e.Yusbigiotifiedcyrillic = 1132, e.Yuslittlecyrillic = 1126, e.Yuslittleiotifiedcyrillic = 1128, e.Z = 90, e.Zaarmenian = 1334, e.Zacute = 377, e.Zcaron = 381, e.Zcaronsmall = 63231, e.Zcircle = 9423, e.Zcircumflex = 7824, e.Zdot = 379, e.Zdotaccent = 379, e.Zdotbelow = 7826, e.Zecyrillic = 1047, e.Zedescendercyrillic = 1176, e.Zedieresiscyrillic = 1246, e.Zeta = 918, e.Zhearmenian = 1338, e.Zhebrevecyrillic = 1217, e.Zhecyrillic = 1046, e.Zhedescendercyrillic = 1174, e.Zhedieresiscyrillic = 1244, e.Zlinebelow = 7828, e.Zmonospace = 65338, e.Zsmall = 63354, e.Zstroke = 437, e.a = 97, e.aabengali = 2438, e.aacute = 225, e.aadeva = 2310, e.aagujarati = 2694, e.aagurmukhi = 2566, e.aamatragurmukhi = 2622, e.aarusquare = 13059, e.aavowelsignbengali = 2494, e.aavowelsigndeva = 2366, e.aavowelsigngujarati = 2750, e.abbreviationmarkarmenian = 1375, e.abbreviationsigndeva = 2416, e.abengali = 2437, e.abopomofo = 12570, e.abreve = 259, e.abreveacute = 7855, e.abrevecyrillic = 1233, e.abrevedotbelow = 7863, e.abrevegrave = 7857, e.abrevehookabove = 7859, e.abrevetilde = 7861, e.acaron = 462, e.acircle = 9424, e.acircumflex = 226, e.acircumflexacute = 7845, e.acircumflexdotbelow = 7853, e.acircumflexgrave = 7847, e.acircumflexhookabove = 7849, e.acircumflextilde = 7851, e.acute = 180, e.acutebelowcmb = 791, e.acutecmb = 769, e.acutecomb = 769, e.acutedeva = 2388, e.acutelowmod = 719, e.acutetonecmb = 833, e.acyrillic = 1072, e.adblgrave = 513, e.addakgurmukhi = 2673, e.adeva = 2309, e.adieresis = 228, e.adieresiscyrillic = 1235, e.adieresismacron = 479, e.adotbelow = 7841, e.adotmacron = 481, e.ae = 230, e.aeacute = 509, e.aekorean = 12624, e.aemacron = 483, e.afii00208 = 8213, e.afii08941 = 8356, e.afii10017 = 1040, e.afii10018 = 1041, e.afii10019 = 1042, e.afii10020 = 1043, e.afii10021 = 1044, e.afii10022 = 1045, e.afii10023 = 1025, e.afii10024 = 1046, e.afii10025 = 1047, e.afii10026 = 1048, e.afii10027 = 1049, e.afii10028 = 1050, e.afii10029 = 1051, e.afii10030 = 1052, e.afii10031 = 1053, e.afii10032 = 1054, e.afii10033 = 1055, e.afii10034 = 1056, e.afii10035 = 1057, e.afii10036 = 1058, e.afii10037 = 1059, e.afii10038 = 1060, e.afii10039 = 1061, e.afii10040 = 1062, e.afii10041 = 1063, e.afii10042 = 1064, e.afii10043 = 1065, e.afii10044 = 1066, e.afii10045 = 1067, e.afii10046 = 1068, e.afii10047 = 1069, e.afii10048 = 1070, e.afii10049 = 1071, e.afii10050 = 1168, e.afii10051 = 1026, e.afii10052 = 1027, e.afii10053 = 1028, e.afii10054 = 1029, e.afii10055 = 1030, e.afii10056 = 1031, e.afii10057 = 1032, e.afii10058 = 1033, e.afii10059 = 1034, e.afii10060 = 1035, e.afii10061 = 1036, e.afii10062 = 1038, e.afii10063 = 63172, e.afii10064 = 63173, e.afii10065 = 1072, e.afii10066 = 1073, e.afii10067 = 1074, e.afii10068 = 1075, e.afii10069 = 1076, e.afii10070 = 1077, e.afii10071 = 1105, e.afii10072 = 1078, e.afii10073 = 1079, e.afii10074 = 1080, e.afii10075 = 1081, e.afii10076 = 1082, e.afii10077 = 1083, e.afii10078 = 1084, e.afii10079 = 1085, e.afii10080 = 1086, e.afii10081 = 1087, e.afii10082 = 1088, e.afii10083 = 1089, e.afii10084 = 1090, e.afii10085 = 1091, e.afii10086 = 1092, e.afii10087 = 1093, e.afii10088 = 1094, e.afii10089 = 1095, e.afii10090 = 1096, e.afii10091 = 1097, e.afii10092 = 1098, e.afii10093 = 1099, e.afii10094 = 1100, e.afii10095 = 1101, e.afii10096 = 1102, e.afii10097 = 1103, e.afii10098 = 1169, e.afii10099 = 1106, e.afii10100 = 1107, e.afii10101 = 1108, e.afii10102 = 1109, e.afii10103 = 1110, e.afii10104 = 1111, e.afii10105 = 1112, e.afii10106 = 1113, e.afii10107 = 1114, e.afii10108 = 1115, e.afii10109 = 1116, e.afii10110 = 1118, e.afii10145 = 1039, e.afii10146 = 1122, e.afii10147 = 1138, e.afii10148 = 1140, e.afii10192 = 63174, e.afii10193 = 1119, e.afii10194 = 1123, e.afii10195 = 1139, e.afii10196 = 1141, e.afii10831 = 63175, e.afii10832 = 63176, e.afii10846 = 1241, e.afii299 = 8206, e.afii300 = 8207, e.afii301 = 8205, e.afii57381 = 1642, e.afii57388 = 1548, e.afii57392 = 1632, e.afii57393 = 1633, e.afii57394 = 1634, e.afii57395 = 1635, e.afii57396 = 1636, e.afii57397 = 1637, e.afii57398 = 1638, e.afii57399 = 1639, e.afii57400 = 1640, e.afii57401 = 1641, e.afii57403 = 1563, e.afii57407 = 1567, e.afii57409 = 1569, e.afii57410 = 1570, e.afii57411 = 1571, e.afii57412 = 1572, e.afii57413 = 1573, e.afii57414 = 1574, e.afii57415 = 1575, e.afii57416 = 1576, e.afii57417 = 1577, e.afii57418 = 1578, e.afii57419 = 1579, e.afii57420 = 1580, e.afii57421 = 1581, e.afii57422 = 1582, e.afii57423 = 1583, e.afii57424 = 1584, e.afii57425 = 1585, e.afii57426 = 1586, e.afii57427 = 1587, e.afii57428 = 1588, e.afii57429 = 1589, e.afii57430 = 1590, e.afii57431 = 1591, e.afii57432 = 1592, e.afii57433 = 1593, e.afii57434 = 1594, e.afii57440 = 1600, e.afii57441 = 1601, e.afii57442 = 1602, e.afii57443 = 1603, e.afii57444 = 1604, e.afii57445 = 1605, e.afii57446 = 1606, e.afii57448 = 1608, e.afii57449 = 1609, e.afii57450 = 1610, e.afii57451 = 1611, e.afii57452 = 1612, e.afii57453 = 1613, e.afii57454 = 1614, e.afii57455 = 1615, e.afii57456 = 1616, e.afii57457 = 1617, e.afii57458 = 1618, e.afii57470 = 1607, e.afii57505 = 1700, e.afii57506 = 1662, e.afii57507 = 1670, e.afii57508 = 1688, e.afii57509 = 1711, e.afii57511 = 1657, e.afii57512 = 1672, e.afii57513 = 1681, e.afii57514 = 1722, e.afii57519 = 1746, e.afii57534 = 1749, e.afii57636 = 8362, e.afii57645 = 1470, e.afii57658 = 1475, e.afii57664 = 1488, e.afii57665 = 1489, e.afii57666 = 1490, e.afii57667 = 1491, e.afii57668 = 1492, e.afii57669 = 1493, e.afii57670 = 1494, e.afii57671 = 1495, e.afii57672 = 1496, e.afii57673 = 1497, e.afii57674 = 1498, e.afii57675 = 1499, e.afii57676 = 1500, e.afii57677 = 1501, e.afii57678 = 1502, e.afii57679 = 1503, e.afii57680 = 1504, e.afii57681 = 1505, e.afii57682 = 1506, e.afii57683 = 1507, e.afii57684 = 1508, e.afii57685 = 1509, e.afii57686 = 1510, e.afii57687 = 1511, e.afii57688 = 1512, e.afii57689 = 1513, e.afii57690 = 1514, e.afii57694 = 64298, e.afii57695 = 64299, e.afii57700 = 64331, e.afii57705 = 64287, e.afii57716 = 1520, e.afii57717 = 1521, e.afii57718 = 1522, e.afii57723 = 64309, e.afii57793 = 1460, e.afii57794 = 1461, e.afii57795 = 1462, e.afii57796 = 1467, e.afii57797 = 1464, e.afii57798 = 1463, e.afii57799 = 1456, e.afii57800 = 1458, e.afii57801 = 1457, e.afii57802 = 1459, e.afii57803 = 1474, e.afii57804 = 1473, e.afii57806 = 1465, e.afii57807 = 1468, e.afii57839 = 1469, e.afii57841 = 1471, e.afii57842 = 1472, e.afii57929 = 700, e.afii61248 = 8453, e.afii61289 = 8467, e.afii61352 = 8470, e.afii61573 = 8236, e.afii61574 = 8237, e.afii61575 = 8238, e.afii61664 = 8204, e.afii63167 = 1645, e.afii64937 = 701, e.agrave = 224, e.agujarati = 2693, e.agurmukhi = 2565, e.ahiragana = 12354, e.ahookabove = 7843, e.aibengali = 2448, e.aibopomofo = 12574, e.aideva = 2320, e.aiecyrillic = 1237, e.aigujarati = 2704, e.aigurmukhi = 2576, e.aimatragurmukhi = 2632, e.ainarabic = 1593, e.ainfinalarabic = 65226, e.aininitialarabic = 65227, e.ainmedialarabic = 65228, e.ainvertedbreve = 515, e.aivowelsignbengali = 2504, e.aivowelsigndeva = 2376, e.aivowelsigngujarati = 2760, e.akatakana = 12450, e.akatakanahalfwidth = 65393, e.akorean = 12623, e.alef = 1488, e.alefarabic = 1575, e.alefdageshhebrew = 64304, e.aleffinalarabic = 65166, e.alefhamzaabovearabic = 1571, e.alefhamzaabovefinalarabic = 65156, e.alefhamzabelowarabic = 1573, e.alefhamzabelowfinalarabic = 65160, e.alefhebrew = 1488, e.aleflamedhebrew = 64335, e.alefmaddaabovearabic = 1570, e.alefmaddaabovefinalarabic = 65154, e.alefmaksuraarabic = 1609, e.alefmaksurafinalarabic = 65264, e.alefmaksurainitialarabic = 65267, e.alefmaksuramedialarabic = 65268, e.alefpatahhebrew = 64302, e.alefqamatshebrew = 64303, e.aleph = 8501, e.allequal = 8780, e.alpha = 945, e.alphatonos = 940, e.amacron = 257, e.amonospace = 65345, e.ampersand = 38, e.ampersandmonospace = 65286, e.ampersandsmall = 63270, e.amsquare = 13250, e.anbopomofo = 12578, e.angbopomofo = 12580, e.angbracketleft = 12296, e.angbracketright = 12297, e.angkhankhuthai = 3674, e.angle = 8736, e.anglebracketleft = 12296, e.anglebracketleftvertical = 65087, e.anglebracketright = 12297, e.anglebracketrightvertical = 65088, e.angleleft = 9001, e.angleright = 9002, e.angstrom = 8491, e.anoteleia = 903, e.anudattadeva = 2386, e.anusvarabengali = 2434, e.anusvaradeva = 2306, e.anusvaragujarati = 2690, e.aogonek = 261, e.apaatosquare = 13056, e.aparen = 9372, e.apostrophearmenian = 1370, e.apostrophemod = 700, e.apple = 63743, e.approaches = 8784, e.approxequal = 8776, e.approxequalorimage = 8786, e.approximatelyequal = 8773, e.araeaekorean = 12686, e.araeakorean = 12685, e.arc = 8978, e.arighthalfring = 7834, e.aring = 229, e.aringacute = 507, e.aringbelow = 7681, e.arrowboth = 8596, e.arrowdashdown = 8675, e.arrowdashleft = 8672, e.arrowdashright = 8674, e.arrowdashup = 8673, e.arrowdblboth = 8660, e.arrowdbldown = 8659, e.arrowdblleft = 8656, e.arrowdblright = 8658, e.arrowdblup = 8657, e.arrowdown = 8595, e.arrowdownleft = 8601, e.arrowdownright = 8600, e.arrowdownwhite = 8681, e.arrowheaddownmod = 709, e.arrowheadleftmod = 706, e.arrowheadrightmod = 707, e.arrowheadupmod = 708, e.arrowhorizex = 63719, e.arrowleft = 8592, e.arrowleftdbl = 8656, e.arrowleftdblstroke = 8653, e.arrowleftoverright = 8646, e.arrowleftwhite = 8678, e.arrowright = 8594, e.arrowrightdblstroke = 8655, e.arrowrightheavy = 10142, e.arrowrightoverleft = 8644, e.arrowrightwhite = 8680, e.arrowtableft = 8676, e.arrowtabright = 8677, e.arrowup = 8593, e.arrowupdn = 8597, e.arrowupdnbse = 8616, e.arrowupdownbase = 8616, e.arrowupleft = 8598, e.arrowupleftofdown = 8645, e.arrowupright = 8599, e.arrowupwhite = 8679, e.arrowvertex = 63718, e.asciicircum = 94, e.asciicircummonospace = 65342, e.asciitilde = 126, e.asciitildemonospace = 65374, e.ascript = 593, e.ascriptturned = 594, e.asmallhiragana = 12353, e.asmallkatakana = 12449, e.asmallkatakanahalfwidth = 65383, e.asterisk = 42, e.asteriskaltonearabic = 1645, e.asteriskarabic = 1645, e.asteriskmath = 8727, e.asteriskmonospace = 65290, e.asterisksmall = 65121, e.asterism = 8258, e.asuperior = 63209, e.asymptoticallyequal = 8771, e.at = 64, e.atilde = 227, e.atmonospace = 65312, e.atsmall = 65131, e.aturned = 592, e.aubengali = 2452, e.aubopomofo = 12576, e.audeva = 2324, e.augujarati = 2708, e.augurmukhi = 2580, e.aulengthmarkbengali = 2519, e.aumatragurmukhi = 2636, e.auvowelsignbengali = 2508, e.auvowelsigndeva = 2380, e.auvowelsigngujarati = 2764, e.avagrahadeva = 2365, e.aybarmenian = 1377, e.ayin = 1506, e.ayinaltonehebrew = 64288, e.ayinhebrew = 1506, e.b = 98, e.babengali = 2476, e.backslash = 92, e.backslashmonospace = 65340, e.badeva = 2348, e.bagujarati = 2732, e.bagurmukhi = 2604, e.bahiragana = 12400, e.bahtthai = 3647, e.bakatakana = 12496, e.bar = 124, e.barmonospace = 65372, e.bbopomofo = 12549, e.bcircle = 9425, e.bdotaccent = 7683, e.bdotbelow = 7685, e.beamedsixteenthnotes = 9836, e.because = 8757, e.becyrillic = 1073, e.beharabic = 1576, e.behfinalarabic = 65168, e.behinitialarabic = 65169, e.behiragana = 12409, e.behmedialarabic = 65170, e.behmeeminitialarabic = 64671, e.behmeemisolatedarabic = 64520, e.behnoonfinalarabic = 64621, e.bekatakana = 12505, e.benarmenian = 1378, e.bet = 1489, e.beta = 946, e.betasymbolgreek = 976, e.betdagesh = 64305, e.betdageshhebrew = 64305, e.bethebrew = 1489, e.betrafehebrew = 64332, e.bhabengali = 2477, e.bhadeva = 2349, e.bhagujarati = 2733, e.bhagurmukhi = 2605, e.bhook = 595, e.bihiragana = 12403, e.bikatakana = 12499, e.bilabialclick = 664, e.bindigurmukhi = 2562, e.birusquare = 13105, e.blackcircle = 9679, e.blackdiamond = 9670, e.blackdownpointingtriangle = 9660, e.blackleftpointingpointer = 9668, e.blackleftpointingtriangle = 9664, e.blacklenticularbracketleft = 12304, e.blacklenticularbracketleftvertical = 65083, e.blacklenticularbracketright = 12305, e.blacklenticularbracketrightvertical = 65084, e.blacklowerlefttriangle = 9699, e.blacklowerrighttriangle = 9698, e.blackrectangle = 9644, e.blackrightpointingpointer = 9658, e.blackrightpointingtriangle = 9654, e.blacksmallsquare = 9642, e.blacksmilingface = 9787, e.blacksquare = 9632, e.blackstar = 9733, e.blackupperlefttriangle = 9700, e.blackupperrighttriangle = 9701, e.blackuppointingsmalltriangle = 9652, e.blackuppointingtriangle = 9650, e.blank = 9251, e.blinebelow = 7687, e.block = 9608, e.bmonospace = 65346, e.bobaimaithai = 3610, e.bohiragana = 12412, e.bokatakana = 12508, e.bparen = 9373, e.bqsquare = 13251, e.braceex = 63732, e.braceleft = 123, e.braceleftbt = 63731, e.braceleftmid = 63730, e.braceleftmonospace = 65371, e.braceleftsmall = 65115, e.bracelefttp = 63729, e.braceleftvertical = 65079, e.braceright = 125, e.bracerightbt = 63742, e.bracerightmid = 63741, e.bracerightmonospace = 65373, e.bracerightsmall = 65116, e.bracerighttp = 63740, e.bracerightvertical = 65080, e.bracketleft = 91, e.bracketleftbt = 63728, e.bracketleftex = 63727, e.bracketleftmonospace = 65339, e.bracketlefttp = 63726, e.bracketright = 93, e.bracketrightbt = 63739, e.bracketrightex = 63738, e.bracketrightmonospace = 65341, e.bracketrighttp = 63737, e.breve = 728, e.brevebelowcmb = 814, e.brevecmb = 774, e.breveinvertedbelowcmb = 815, e.breveinvertedcmb = 785, e.breveinverteddoublecmb = 865, e.bridgebelowcmb = 810, e.bridgeinvertedbelowcmb = 826, e.brokenbar = 166, e.bstroke = 384, e.bsuperior = 63210, e.btopbar = 387, e.buhiragana = 12406, e.bukatakana = 12502, e.bullet = 8226, e.bulletinverse = 9688, e.bulletoperator = 8729, e.bullseye = 9678, e.c = 99, e.caarmenian = 1390, e.cabengali = 2458, e.cacute = 263, e.cadeva = 2330, e.cagujarati = 2714, e.cagurmukhi = 2586, e.calsquare = 13192, e.candrabindubengali = 2433, e.candrabinducmb = 784, e.candrabindudeva = 2305, e.candrabindugujarati = 2689, e.capslock = 8682, e.careof = 8453, e.caron = 711, e.caronbelowcmb = 812, e.caroncmb = 780, e.carriagereturn = 8629, e.cbopomofo = 12568, e.ccaron = 269, e.ccedilla = 231, e.ccedillaacute = 7689, e.ccircle = 9426, e.ccircumflex = 265, e.ccurl = 597, e.cdot = 267, e.cdotaccent = 267, e.cdsquare = 13253, e.cedilla = 184, e.cedillacmb = 807, e.cent = 162, e.centigrade = 8451, e.centinferior = 63199, e.centmonospace = 65504, e.centoldstyle = 63394, e.centsuperior = 63200, e.chaarmenian = 1401, e.chabengali = 2459, e.chadeva = 2331, e.chagujarati = 2715, e.chagurmukhi = 2587, e.chbopomofo = 12564, e.cheabkhasiancyrillic = 1213, e.checkmark = 10003, e.checyrillic = 1095, e.chedescenderabkhasiancyrillic = 1215, e.chedescendercyrillic = 1207, e.chedieresiscyrillic = 1269, e.cheharmenian = 1395, e.chekhakassiancyrillic = 1228, e.cheverticalstrokecyrillic = 1209, e.chi = 967, e.chieuchacirclekorean = 12919, e.chieuchaparenkorean = 12823, e.chieuchcirclekorean = 12905, e.chieuchkorean = 12618, e.chieuchparenkorean = 12809, e.chochangthai = 3594, e.chochanthai = 3592, e.chochingthai = 3593, e.chochoethai = 3596, e.chook = 392, e.cieucacirclekorean = 12918, e.cieucaparenkorean = 12822, e.cieuccirclekorean = 12904, e.cieuckorean = 12616, e.cieucparenkorean = 12808, e.cieucuparenkorean = 12828, e.circle = 9675, e.circlecopyrt = 169, e.circlemultiply = 8855, e.circleot = 8857, e.circleplus = 8853, e.circlepostalmark = 12342, e.circlewithlefthalfblack = 9680, e.circlewithrighthalfblack = 9681, e.circumflex = 710, e.circumflexbelowcmb = 813, e.circumflexcmb = 770, e.clear = 8999, e.clickalveolar = 450, e.clickdental = 448, e.clicklateral = 449, e.clickretroflex = 451, e.club = 9827, e.clubsuitblack = 9827, e.clubsuitwhite = 9831, e.cmcubedsquare = 13220, e.cmonospace = 65347, e.cmsquaredsquare = 13216, e.coarmenian = 1409, e.colon = 58, e.colonmonetary = 8353, e.colonmonospace = 65306, e.colonsign = 8353, e.colonsmall = 65109, e.colontriangularhalfmod = 721, e.colontriangularmod = 720, e.comma = 44, e.commaabovecmb = 787, e.commaaboverightcmb = 789, e.commaaccent = 63171, e.commaarabic = 1548, e.commaarmenian = 1373, e.commainferior = 63201, e.commamonospace = 65292, e.commareversedabovecmb = 788, e.commareversedmod = 701, e.commasmall = 65104, e.commasuperior = 63202, e.commaturnedabovecmb = 786, e.commaturnedmod = 699, e.compass = 9788, e.congruent = 8773, e.contourintegral = 8750, e.control = 8963, e.controlACK = 6, e.controlBEL = 7, e.controlBS = 8, e.controlCAN = 24, e.controlCR = 13, e.controlDC1 = 17, e.controlDC2 = 18, e.controlDC3 = 19, e.controlDC4 = 20, e.controlDEL = 127, e.controlDLE = 16, e.controlEM = 25, e.controlENQ = 5, e.controlEOT = 4, e.controlESC = 27, e.controlETB = 23, e.controlETX = 3, e.controlFF = 12, e.controlFS = 28, e.controlGS = 29, e.controlHT = 9, e.controlLF = 10, e.controlNAK = 21, e.controlNULL = 0, e.controlRS = 30, e.controlSI = 15, e.controlSO = 14, e.controlSOT = 2, e.controlSTX = 1, e.controlSUB = 26, e.controlSYN = 22, e.controlUS = 31, e.controlVT = 11, e.copyright = 169, e.copyrightsans = 63721, e.copyrightserif = 63193, e.cornerbracketleft = 12300, e.cornerbracketlefthalfwidth = 65378, e.cornerbracketleftvertical = 65089, e.cornerbracketright = 12301, e.cornerbracketrighthalfwidth = 65379, e.cornerbracketrightvertical = 65090, e.corporationsquare = 13183, e.cosquare = 13255, e.coverkgsquare = 13254, e.cparen = 9374, e.cruzeiro = 8354, e.cstretched = 663, e.curlyand = 8911, e.curlyor = 8910, e.currency = 164, e.cyrBreve = 63185, e.cyrFlex = 63186, e.cyrbreve = 63188, e.cyrflex = 63189, e.d = 100, e.daarmenian = 1380, e.dabengali = 2470, e.dadarabic = 1590, e.dadeva = 2342, e.dadfinalarabic = 65214, e.dadinitialarabic = 65215, e.dadmedialarabic = 65216, e.dagesh = 1468, e.dageshhebrew = 1468, e.dagger = 8224, e.daggerdbl = 8225, e.dagujarati = 2726, e.dagurmukhi = 2598, e.dahiragana = 12384, e.dakatakana = 12480, e.dalarabic = 1583, e.dalet = 1491, e.daletdagesh = 64307, e.daletdageshhebrew = 64307, e.dalethebrew = 1491, e.dalfinalarabic = 65194, e.dammaarabic = 1615, e.dammalowarabic = 1615, e.dammatanaltonearabic = 1612, e.dammatanarabic = 1612, e.danda = 2404, e.dargahebrew = 1447, e.dargalefthebrew = 1447, e.dasiapneumatacyrilliccmb = 1157, e.dblGrave = 63187, e.dblanglebracketleft = 12298, e.dblanglebracketleftvertical = 65085, e.dblanglebracketright = 12299, e.dblanglebracketrightvertical = 65086, e.dblarchinvertedbelowcmb = 811, e.dblarrowleft = 8660, e.dblarrowright = 8658, e.dbldanda = 2405, e.dblgrave = 63190, e.dblgravecmb = 783, e.dblintegral = 8748, e.dbllowline = 8215, e.dbllowlinecmb = 819, e.dbloverlinecmb = 831, e.dblprimemod = 698, e.dblverticalbar = 8214, e.dblverticallineabovecmb = 782, e.dbopomofo = 12553, e.dbsquare = 13256, e.dcaron = 271, e.dcedilla = 7697, e.dcircle = 9427, e.dcircumflexbelow = 7699, e.dcroat = 273, e.ddabengali = 2465, e.ddadeva = 2337, e.ddagujarati = 2721, e.ddagurmukhi = 2593, e.ddalarabic = 1672, e.ddalfinalarabic = 64393, e.dddhadeva = 2396, e.ddhabengali = 2466, e.ddhadeva = 2338, e.ddhagujarati = 2722, e.ddhagurmukhi = 2594, e.ddotaccent = 7691, e.ddotbelow = 7693, e.decimalseparatorarabic = 1643, e.decimalseparatorpersian = 1643, e.decyrillic = 1076, e.degree = 176, e.dehihebrew = 1453, e.dehiragana = 12391, e.deicoptic = 1007, e.dekatakana = 12487, e.deleteleft = 9003, e.deleteright = 8998, e.delta = 948, e.deltaturned = 397, e.denominatorminusonenumeratorbengali = 2552, e.dezh = 676, e.dhabengali = 2471, e.dhadeva = 2343, e.dhagujarati = 2727, e.dhagurmukhi = 2599, e.dhook = 599, e.dialytikatonos = 901, e.dialytikatonoscmb = 836, e.diamond = 9830, e.diamondsuitwhite = 9826, e.dieresis = 168, e.dieresisacute = 63191, e.dieresisbelowcmb = 804, e.dieresiscmb = 776, e.dieresisgrave = 63192, e.dieresistonos = 901, e.dihiragana = 12386, e.dikatakana = 12482, e.dittomark = 12291, e.divide = 247, e.divides = 8739, e.divisionslash = 8725, e.djecyrillic = 1106, e.dkshade = 9619, e.dlinebelow = 7695, e.dlsquare = 13207, e.dmacron = 273, e.dmonospace = 65348, e.dnblock = 9604, e.dochadathai = 3598, e.dodekthai = 3604, e.dohiragana = 12393, e.dokatakana = 12489, e.dollar = 36, e.dollarinferior = 63203, e.dollarmonospace = 65284, e.dollaroldstyle = 63268, e.dollarsmall = 65129, e.dollarsuperior = 63204, e.dong = 8363, e.dorusquare = 13094, e.dotaccent = 729, e.dotaccentcmb = 775, e.dotbelowcmb = 803, e.dotbelowcomb = 803, e.dotkatakana = 12539, e.dotlessi = 305, e.dotlessj = 63166, e.dotlessjstrokehook = 644, e.dotmath = 8901, e.dottedcircle = 9676, e.doubleyodpatah = 64287, e.doubleyodpatahhebrew = 64287, e.downtackbelowcmb = 798, e.downtackmod = 725, e.dparen = 9375, e.dsuperior = 63211, e.dtail = 598, e.dtopbar = 396, e.duhiragana = 12389, e.dukatakana = 12485, e.dz = 499, e.dzaltone = 675, e.dzcaron = 454, e.dzcurl = 677, e.dzeabkhasiancyrillic = 1249, e.dzecyrillic = 1109, e.dzhecyrillic = 1119, e.e = 101, e.eacute = 233, e.earth = 9793, e.ebengali = 2447, e.ebopomofo = 12572, e.ebreve = 277, e.ecandradeva = 2317, e.ecandragujarati = 2701, e.ecandravowelsigndeva = 2373, e.ecandravowelsigngujarati = 2757, e.ecaron = 283, e.ecedillabreve = 7709, e.echarmenian = 1381, e.echyiwnarmenian = 1415, e.ecircle = 9428, e.ecircumflex = 234, e.ecircumflexacute = 7871, e.ecircumflexbelow = 7705, e.ecircumflexdotbelow = 7879, e.ecircumflexgrave = 7873, e.ecircumflexhookabove = 7875, e.ecircumflextilde = 7877, e.ecyrillic = 1108, e.edblgrave = 517, e.edeva = 2319, e.edieresis = 235, e.edot = 279, e.edotaccent = 279, e.edotbelow = 7865, e.eegurmukhi = 2575, e.eematragurmukhi = 2631, e.efcyrillic = 1092, e.egrave = 232, e.egujarati = 2703, e.eharmenian = 1383, e.ehbopomofo = 12573, e.ehiragana = 12360, e.ehookabove = 7867, e.eibopomofo = 12575, e.eight = 56, e.eightarabic = 1640, e.eightbengali = 2542, e.eightcircle = 9319, e.eightcircleinversesansserif = 10129, e.eightdeva = 2414, e.eighteencircle = 9329, e.eighteenparen = 9349, e.eighteenperiod = 9369, e.eightgujarati = 2798, e.eightgurmukhi = 2670, e.eighthackarabic = 1640, e.eighthangzhou = 12328, e.eighthnotebeamed = 9835, e.eightideographicparen = 12839, e.eightinferior = 8328, e.eightmonospace = 65304, e.eightoldstyle = 63288, e.eightparen = 9339, e.eightperiod = 9359, e.eightpersian = 1784, e.eightroman = 8567, e.eightsuperior = 8312, e.eightthai = 3672, e.einvertedbreve = 519, e.eiotifiedcyrillic = 1125, e.ekatakana = 12456, e.ekatakanahalfwidth = 65396, e.ekonkargurmukhi = 2676, e.ekorean = 12628, e.elcyrillic = 1083, e.element = 8712, e.elevencircle = 9322, e.elevenparen = 9342, e.elevenperiod = 9362, e.elevenroman = 8570, e.ellipsis = 8230, e.ellipsisvertical = 8942, e.emacron = 275, e.emacronacute = 7703, e.emacrongrave = 7701, e.emcyrillic = 1084, e.emdash = 8212, e.emdashvertical = 65073, e.emonospace = 65349, e.emphasismarkarmenian = 1371, e.emptyset = 8709, e.enbopomofo = 12579, e.encyrillic = 1085, e.endash = 8211, e.endashvertical = 65074, e.endescendercyrillic = 1187, e.eng = 331, e.engbopomofo = 12581, e.enghecyrillic = 1189, e.enhookcyrillic = 1224, e.enspace = 8194, e.eogonek = 281, e.eokorean = 12627, e.eopen = 603, e.eopenclosed = 666, e.eopenreversed = 604, e.eopenreversedclosed = 606, e.eopenreversedhook = 605, e.eparen = 9376, e.epsilon = 949, e.epsilontonos = 941, e.equal = 61, e.equalmonospace = 65309, e.equalsmall = 65126, e.equalsuperior = 8316, e.equivalence = 8801, e.erbopomofo = 12582, e.ercyrillic = 1088, e.ereversed = 600, e.ereversedcyrillic = 1101, e.escyrillic = 1089, e.esdescendercyrillic = 1195, e.esh = 643, e.eshcurl = 646, e.eshortdeva = 2318, e.eshortvowelsigndeva = 2374, e.eshreversedloop = 426, e.eshsquatreversed = 645, e.esmallhiragana = 12359, e.esmallkatakana = 12455, e.esmallkatakanahalfwidth = 65386, e.estimated = 8494, e.esuperior = 63212, e.eta = 951, e.etarmenian = 1384, e.etatonos = 942, e.eth = 240, e.etilde = 7869, e.etildebelow = 7707, e.etnahtafoukhhebrew = 1425, e.etnahtafoukhlefthebrew = 1425, e.etnahtahebrew = 1425, e.etnahtalefthebrew = 1425, e.eturned = 477, e.eukorean = 12641, e.euro = 8364, e.evowelsignbengali = 2503, e.evowelsigndeva = 2375, e.evowelsigngujarati = 2759, e.exclam = 33, e.exclamarmenian = 1372, e.exclamdbl = 8252, e.exclamdown = 161, e.exclamdownsmall = 63393, e.exclammonospace = 65281, e.exclamsmall = 63265, e.existential = 8707, e.ezh = 658, e.ezhcaron = 495, e.ezhcurl = 659, e.ezhreversed = 441, e.ezhtail = 442, e.f = 102, e.fadeva = 2398, e.fagurmukhi = 2654, e.fahrenheit = 8457, e.fathaarabic = 1614, e.fathalowarabic = 1614, e.fathatanarabic = 1611, e.fbopomofo = 12552, e.fcircle = 9429, e.fdotaccent = 7711, e.feharabic = 1601, e.feharmenian = 1414, e.fehfinalarabic = 65234, e.fehinitialarabic = 65235, e.fehmedialarabic = 65236, e.feicoptic = 997, e.female = 9792, e.ff = 64256, e.f_f = 64256, e.ffi = 64259, e.f_f_i = 64259, e.ffl = 64260, e.f_f_l = 64260, e.fi = 64257, e.f_i = 64257, e.fifteencircle = 9326, e.fifteenparen = 9346, e.fifteenperiod = 9366, e.figuredash = 8210, e.filledbox = 9632, e.filledrect = 9644, e.finalkaf = 1498, e.finalkafdagesh = 64314, e.finalkafdageshhebrew = 64314, e.finalkafhebrew = 1498, e.finalmem = 1501, e.finalmemhebrew = 1501, e.finalnun = 1503, e.finalnunhebrew = 1503, e.finalpe = 1507, e.finalpehebrew = 1507, e.finaltsadi = 1509, e.finaltsadihebrew = 1509, e.firsttonechinese = 713, e.fisheye = 9673, e.fitacyrillic = 1139, e.five = 53, e.fivearabic = 1637, e.fivebengali = 2539, e.fivecircle = 9316, e.fivecircleinversesansserif = 10126, e.fivedeva = 2411, e.fiveeighths = 8541, e.fivegujarati = 2795, e.fivegurmukhi = 2667, e.fivehackarabic = 1637, e.fivehangzhou = 12325, e.fiveideographicparen = 12836, e.fiveinferior = 8325, e.fivemonospace = 65301, e.fiveoldstyle = 63285, e.fiveparen = 9336, e.fiveperiod = 9356, e.fivepersian = 1781, e.fiveroman = 8564, e.fivesuperior = 8309, e.fivethai = 3669, e.fl = 64258, e.f_l = 64258, e.florin = 402, e.fmonospace = 65350, e.fmsquare = 13209, e.fofanthai = 3615, e.fofathai = 3613, e.fongmanthai = 3663, e.forall = 8704, e.four = 52, e.fourarabic = 1636, e.fourbengali = 2538, e.fourcircle = 9315, e.fourcircleinversesansserif = 10125, e.fourdeva = 2410, e.fourgujarati = 2794, e.fourgurmukhi = 2666, e.fourhackarabic = 1636, e.fourhangzhou = 12324, e.fourideographicparen = 12835, e.fourinferior = 8324, e.fourmonospace = 65300, e.fournumeratorbengali = 2551, e.fouroldstyle = 63284, e.fourparen = 9335, e.fourperiod = 9355, e.fourpersian = 1780, e.fourroman = 8563, e.foursuperior = 8308, e.fourteencircle = 9325, e.fourteenparen = 9345, e.fourteenperiod = 9365, e.fourthai = 3668, e.fourthtonechinese = 715, e.fparen = 9377, e.fraction = 8260, e.franc = 8355, e.g = 103, e.gabengali = 2455, e.gacute = 501, e.gadeva = 2327, e.gafarabic = 1711, e.gaffinalarabic = 64403, e.gafinitialarabic = 64404, e.gafmedialarabic = 64405, e.gagujarati = 2711, e.gagurmukhi = 2583, e.gahiragana = 12364, e.gakatakana = 12460, e.gamma = 947, e.gammalatinsmall = 611, e.gammasuperior = 736, e.gangiacoptic = 1003, e.gbopomofo = 12557, e.gbreve = 287, e.gcaron = 487, e.gcedilla = 291, e.gcircle = 9430, e.gcircumflex = 285, e.gcommaaccent = 291, e.gdot = 289, e.gdotaccent = 289, e.gecyrillic = 1075, e.gehiragana = 12370, e.gekatakana = 12466, e.geometricallyequal = 8785, e.gereshaccenthebrew = 1436, e.gereshhebrew = 1523, e.gereshmuqdamhebrew = 1437, e.germandbls = 223, e.gershayimaccenthebrew = 1438, e.gershayimhebrew = 1524, e.getamark = 12307, e.ghabengali = 2456, e.ghadarmenian = 1394, e.ghadeva = 2328, e.ghagujarati = 2712, e.ghagurmukhi = 2584, e.ghainarabic = 1594, e.ghainfinalarabic = 65230, e.ghaininitialarabic = 65231, e.ghainmedialarabic = 65232, e.ghemiddlehookcyrillic = 1173, e.ghestrokecyrillic = 1171, e.gheupturncyrillic = 1169, e.ghhadeva = 2394, e.ghhagurmukhi = 2650, e.ghook = 608, e.ghzsquare = 13203, e.gihiragana = 12366, e.gikatakana = 12462, e.gimarmenian = 1379, e.gimel = 1490, e.gimeldagesh = 64306, e.gimeldageshhebrew = 64306, e.gimelhebrew = 1490, e.gjecyrillic = 1107, e.glottalinvertedstroke = 446, e.glottalstop = 660, e.glottalstopinverted = 662, e.glottalstopmod = 704, e.glottalstopreversed = 661, e.glottalstopreversedmod = 705, e.glottalstopreversedsuperior = 740, e.glottalstopstroke = 673, e.glottalstopstrokereversed = 674, e.gmacron = 7713, e.gmonospace = 65351, e.gohiragana = 12372, e.gokatakana = 12468, e.gparen = 9378, e.gpasquare = 13228, e.gradient = 8711, e.grave = 96, e.gravebelowcmb = 790, e.gravecmb = 768, e.gravecomb = 768, e.gravedeva = 2387, e.gravelowmod = 718, e.gravemonospace = 65344, e.gravetonecmb = 832, e.greater = 62, e.greaterequal = 8805, e.greaterequalorless = 8923, e.greatermonospace = 65310, e.greaterorequivalent = 8819, e.greaterorless = 8823, e.greateroverequal = 8807, e.greatersmall = 65125, e.gscript = 609, e.gstroke = 485, e.guhiragana = 12368, e.guillemotleft = 171, e.guillemotright = 187, e.guilsinglleft = 8249, e.guilsinglright = 8250, e.gukatakana = 12464, e.guramusquare = 13080, e.gysquare = 13257, e.h = 104, e.haabkhasiancyrillic = 1193, e.haaltonearabic = 1729, e.habengali = 2489, e.hadescendercyrillic = 1203, e.hadeva = 2361, e.hagujarati = 2745, e.hagurmukhi = 2617, e.haharabic = 1581, e.hahfinalarabic = 65186, e.hahinitialarabic = 65187, e.hahiragana = 12399, e.hahmedialarabic = 65188, e.haitusquare = 13098, e.hakatakana = 12495, e.hakatakanahalfwidth = 65418, e.halantgurmukhi = 2637, e.hamzaarabic = 1569, e.hamzalowarabic = 1569, e.hangulfiller = 12644, e.hardsigncyrillic = 1098, e.harpoonleftbarbup = 8636, e.harpoonrightbarbup = 8640, e.hasquare = 13258, e.hatafpatah = 1458, e.hatafpatah16 = 1458, e.hatafpatah23 = 1458, e.hatafpatah2f = 1458, e.hatafpatahhebrew = 1458, e.hatafpatahnarrowhebrew = 1458, e.hatafpatahquarterhebrew = 1458, e.hatafpatahwidehebrew = 1458, e.hatafqamats = 1459, e.hatafqamats1b = 1459, e.hatafqamats28 = 1459, e.hatafqamats34 = 1459, e.hatafqamatshebrew = 1459, e.hatafqamatsnarrowhebrew = 1459, e.hatafqamatsquarterhebrew = 1459, e.hatafqamatswidehebrew = 1459, e.hatafsegol = 1457, e.hatafsegol17 = 1457, e.hatafsegol24 = 1457, e.hatafsegol30 = 1457, e.hatafsegolhebrew = 1457, e.hatafsegolnarrowhebrew = 1457, e.hatafsegolquarterhebrew = 1457, e.hatafsegolwidehebrew = 1457, e.hbar = 295, e.hbopomofo = 12559, e.hbrevebelow = 7723, e.hcedilla = 7721, e.hcircle = 9431, e.hcircumflex = 293, e.hdieresis = 7719, e.hdotaccent = 7715, e.hdotbelow = 7717, e.he = 1492, e.heart = 9829, e.heartsuitblack = 9829, e.heartsuitwhite = 9825, e.hedagesh = 64308, e.hedageshhebrew = 64308, e.hehaltonearabic = 1729, e.heharabic = 1607, e.hehebrew = 1492, e.hehfinalaltonearabic = 64423, e.hehfinalalttwoarabic = 65258, e.hehfinalarabic = 65258, e.hehhamzaabovefinalarabic = 64421, e.hehhamzaaboveisolatedarabic = 64420, e.hehinitialaltonearabic = 64424, e.hehinitialarabic = 65259, e.hehiragana = 12408, e.hehmedialaltonearabic = 64425, e.hehmedialarabic = 65260, e.heiseierasquare = 13179, e.hekatakana = 12504, e.hekatakanahalfwidth = 65421, e.hekutaarusquare = 13110, e.henghook = 615, e.herutusquare = 13113, e.het = 1495, e.hethebrew = 1495, e.hhook = 614, e.hhooksuperior = 689, e.hieuhacirclekorean = 12923, e.hieuhaparenkorean = 12827, e.hieuhcirclekorean = 12909, e.hieuhkorean = 12622, e.hieuhparenkorean = 12813, e.hihiragana = 12402, e.hikatakana = 12498, e.hikatakanahalfwidth = 65419, e.hiriq = 1460, e.hiriq14 = 1460, e.hiriq21 = 1460, e.hiriq2d = 1460, e.hiriqhebrew = 1460, e.hiriqnarrowhebrew = 1460, e.hiriqquarterhebrew = 1460, e.hiriqwidehebrew = 1460, e.hlinebelow = 7830, e.hmonospace = 65352, e.hoarmenian = 1392, e.hohipthai = 3627, e.hohiragana = 12411, e.hokatakana = 12507, e.hokatakanahalfwidth = 65422, e.holam = 1465, e.holam19 = 1465, e.holam26 = 1465, e.holam32 = 1465, e.holamhebrew = 1465, e.holamnarrowhebrew = 1465, e.holamquarterhebrew = 1465, e.holamwidehebrew = 1465, e.honokhukthai = 3630, e.hookabovecomb = 777, e.hookcmb = 777, e.hookpalatalizedbelowcmb = 801, e.hookretroflexbelowcmb = 802, e.hoonsquare = 13122, e.horicoptic = 1001, e.horizontalbar = 8213, e.horncmb = 795, e.hotsprings = 9832, e.house = 8962, e.hparen = 9379, e.hsuperior = 688, e.hturned = 613, e.huhiragana = 12405, e.huiitosquare = 13107, e.hukatakana = 12501, e.hukatakanahalfwidth = 65420, e.hungarumlaut = 733, e.hungarumlautcmb = 779, e.hv = 405, e.hyphen = 45, e.hypheninferior = 63205, e.hyphenmonospace = 65293, e.hyphensmall = 65123, e.hyphensuperior = 63206, e.hyphentwo = 8208, e.i = 105, e.iacute = 237, e.iacyrillic = 1103, e.ibengali = 2439, e.ibopomofo = 12583, e.ibreve = 301, e.icaron = 464, e.icircle = 9432, e.icircumflex = 238, e.icyrillic = 1110, e.idblgrave = 521, e.ideographearthcircle = 12943, e.ideographfirecircle = 12939, e.ideographicallianceparen = 12863, e.ideographiccallparen = 12858, e.ideographiccentrecircle = 12965, e.ideographicclose = 12294, e.ideographiccomma = 12289, e.ideographiccommaleft = 65380, e.ideographiccongratulationparen = 12855, e.ideographiccorrectcircle = 12963, e.ideographicearthparen = 12847, e.ideographicenterpriseparen = 12861, e.ideographicexcellentcircle = 12957, e.ideographicfestivalparen = 12864, e.ideographicfinancialcircle = 12950, e.ideographicfinancialparen = 12854, e.ideographicfireparen = 12843, e.ideographichaveparen = 12850, e.ideographichighcircle = 12964, e.ideographiciterationmark = 12293, e.ideographiclaborcircle = 12952, e.ideographiclaborparen = 12856, e.ideographicleftcircle = 12967, e.ideographiclowcircle = 12966, e.ideographicmedicinecircle = 12969, e.ideographicmetalparen = 12846, e.ideographicmoonparen = 12842, e.ideographicnameparen = 12852, e.ideographicperiod = 12290, e.ideographicprintcircle = 12958, e.ideographicreachparen = 12867, e.ideographicrepresentparen = 12857, e.ideographicresourceparen = 12862, e.ideographicrightcircle = 12968, e.ideographicsecretcircle = 12953, e.ideographicselfparen = 12866, e.ideographicsocietyparen = 12851, e.ideographicspace = 12288, e.ideographicspecialparen = 12853, e.ideographicstockparen = 12849, e.ideographicstudyparen = 12859, e.ideographicsunparen = 12848, e.ideographicsuperviseparen = 12860, e.ideographicwaterparen = 12844, e.ideographicwoodparen = 12845, e.ideographiczero = 12295, e.ideographmetalcircle = 12942, e.ideographmooncircle = 12938, e.ideographnamecircle = 12948, e.ideographsuncircle = 12944, e.ideographwatercircle = 12940, e.ideographwoodcircle = 12941, e.ideva = 2311, e.idieresis = 239, e.idieresisacute = 7727, e.idieresiscyrillic = 1253, e.idotbelow = 7883, e.iebrevecyrillic = 1239, e.iecyrillic = 1077, e.ieungacirclekorean = 12917, e.ieungaparenkorean = 12821, e.ieungcirclekorean = 12903, e.ieungkorean = 12615, e.ieungparenkorean = 12807, e.igrave = 236, e.igujarati = 2695, e.igurmukhi = 2567, e.ihiragana = 12356, e.ihookabove = 7881, e.iibengali = 2440, e.iicyrillic = 1080, e.iideva = 2312, e.iigujarati = 2696, e.iigurmukhi = 2568, e.iimatragurmukhi = 2624, e.iinvertedbreve = 523, e.iishortcyrillic = 1081, e.iivowelsignbengali = 2496, e.iivowelsigndeva = 2368, e.iivowelsigngujarati = 2752, e.ij = 307, e.ikatakana = 12452, e.ikatakanahalfwidth = 65394, e.ikorean = 12643, e.ilde = 732, e.iluyhebrew = 1452, e.imacron = 299, e.imacroncyrillic = 1251, e.imageorapproximatelyequal = 8787, e.imatragurmukhi = 2623, e.imonospace = 65353, e.increment = 8710, e.infinity = 8734, e.iniarmenian = 1387, e.integral = 8747, e.integralbottom = 8993, e.integralbt = 8993, e.integralex = 63733, e.integraltop = 8992, e.integraltp = 8992, e.intersection = 8745, e.intisquare = 13061, e.invbullet = 9688, e.invcircle = 9689, e.invsmileface = 9787, e.iocyrillic = 1105, e.iogonek = 303, e.iota = 953, e.iotadieresis = 970, e.iotadieresistonos = 912, e.iotalatin = 617, e.iotatonos = 943, e.iparen = 9380, e.irigurmukhi = 2674, e.ismallhiragana = 12355, e.ismallkatakana = 12451, e.ismallkatakanahalfwidth = 65384, e.issharbengali = 2554, e.istroke = 616, e.isuperior = 63213, e.iterationhiragana = 12445, e.iterationkatakana = 12541, e.itilde = 297, e.itildebelow = 7725, e.iubopomofo = 12585, e.iucyrillic = 1102, e.ivowelsignbengali = 2495, e.ivowelsigndeva = 2367, e.ivowelsigngujarati = 2751, e.izhitsacyrillic = 1141, e.izhitsadblgravecyrillic = 1143, e.j = 106, e.jaarmenian = 1393, e.jabengali = 2460, e.jadeva = 2332, e.jagujarati = 2716, e.jagurmukhi = 2588, e.jbopomofo = 12560, e.jcaron = 496, e.jcircle = 9433, e.jcircumflex = 309, e.jcrossedtail = 669, e.jdotlessstroke = 607, e.jecyrillic = 1112, e.jeemarabic = 1580, e.jeemfinalarabic = 65182, e.jeeminitialarabic = 65183, e.jeemmedialarabic = 65184, e.jeharabic = 1688, e.jehfinalarabic = 64395, e.jhabengali = 2461, e.jhadeva = 2333, e.jhagujarati = 2717, e.jhagurmukhi = 2589, e.jheharmenian = 1403, e.jis = 12292, e.jmonospace = 65354, e.jparen = 9381, e.jsuperior = 690, e.k = 107, e.kabashkircyrillic = 1185, e.kabengali = 2453, e.kacute = 7729, e.kacyrillic = 1082, e.kadescendercyrillic = 1179, e.kadeva = 2325, e.kaf = 1499, e.kafarabic = 1603, e.kafdagesh = 64315, e.kafdageshhebrew = 64315, e.kaffinalarabic = 65242, e.kafhebrew = 1499, e.kafinitialarabic = 65243, e.kafmedialarabic = 65244, e.kafrafehebrew = 64333, e.kagujarati = 2709, e.kagurmukhi = 2581, e.kahiragana = 12363, e.kahookcyrillic = 1220, e.kakatakana = 12459, e.kakatakanahalfwidth = 65398, e.kappa = 954, e.kappasymbolgreek = 1008, e.kapyeounmieumkorean = 12657, e.kapyeounphieuphkorean = 12676, e.kapyeounpieupkorean = 12664, e.kapyeounssangpieupkorean = 12665, e.karoriisquare = 13069, e.kashidaautoarabic = 1600, e.kashidaautonosidebearingarabic = 1600, e.kasmallkatakana = 12533, e.kasquare = 13188, e.kasraarabic = 1616, e.kasratanarabic = 1613, e.kastrokecyrillic = 1183, e.katahiraprolongmarkhalfwidth = 65392, e.kaverticalstrokecyrillic = 1181, e.kbopomofo = 12558, e.kcalsquare = 13193, e.kcaron = 489, e.kcedilla = 311, e.kcircle = 9434, e.kcommaaccent = 311, e.kdotbelow = 7731, e.keharmenian = 1412, e.kehiragana = 12369, e.kekatakana = 12465, e.kekatakanahalfwidth = 65401, e.kenarmenian = 1391, e.kesmallkatakana = 12534, e.kgreenlandic = 312, e.khabengali = 2454, e.khacyrillic = 1093, e.khadeva = 2326, e.khagujarati = 2710, e.khagurmukhi = 2582, e.khaharabic = 1582, e.khahfinalarabic = 65190, e.khahinitialarabic = 65191, e.khahmedialarabic = 65192, e.kheicoptic = 999, e.khhadeva = 2393, e.khhagurmukhi = 2649, e.khieukhacirclekorean = 12920, e.khieukhaparenkorean = 12824, e.khieukhcirclekorean = 12906, e.khieukhkorean = 12619, e.khieukhparenkorean = 12810, e.khokhaithai = 3586, e.khokhonthai = 3589, e.khokhuatthai = 3587, e.khokhwaithai = 3588, e.khomutthai = 3675, e.khook = 409, e.khorakhangthai = 3590, e.khzsquare = 13201, e.kihiragana = 12365, e.kikatakana = 12461, e.kikatakanahalfwidth = 65399, e.kiroguramusquare = 13077, e.kiromeetorusquare = 13078, e.kirosquare = 13076, e.kiyeokacirclekorean = 12910, e.kiyeokaparenkorean = 12814, e.kiyeokcirclekorean = 12896, e.kiyeokkorean = 12593, e.kiyeokparenkorean = 12800, e.kiyeoksioskorean = 12595, e.kjecyrillic = 1116, e.klinebelow = 7733, e.klsquare = 13208, e.kmcubedsquare = 13222, e.kmonospace = 65355, e.kmsquaredsquare = 13218, e.kohiragana = 12371, e.kohmsquare = 13248, e.kokaithai = 3585, e.kokatakana = 12467, e.kokatakanahalfwidth = 65402, e.kooposquare = 13086, e.koppacyrillic = 1153, e.koreanstandardsymbol = 12927, e.koroniscmb = 835, e.kparen = 9382, e.kpasquare = 13226, e.ksicyrillic = 1135, e.ktsquare = 13263, e.kturned = 670, e.kuhiragana = 12367, e.kukatakana = 12463, e.kukatakanahalfwidth = 65400, e.kvsquare = 13240, e.kwsquare = 13246, e.l = 108, e.labengali = 2482, e.lacute = 314, e.ladeva = 2354, e.lagujarati = 2738, e.lagurmukhi = 2610, e.lakkhangyaothai = 3653, e.lamaleffinalarabic = 65276, e.lamalefhamzaabovefinalarabic = 65272, e.lamalefhamzaaboveisolatedarabic = 65271, e.lamalefhamzabelowfinalarabic = 65274, e.lamalefhamzabelowisolatedarabic = 65273, e.lamalefisolatedarabic = 65275, e.lamalefmaddaabovefinalarabic = 65270, e.lamalefmaddaaboveisolatedarabic = 65269, e.lamarabic = 1604, e.lambda = 955, e.lambdastroke = 411, e.lamed = 1500, e.lameddagesh = 64316, e.lameddageshhebrew = 64316, e.lamedhebrew = 1500, e.lamfinalarabic = 65246, e.lamhahinitialarabic = 64714, e.laminitialarabic = 65247, e.lamjeeminitialarabic = 64713, e.lamkhahinitialarabic = 64715, e.lamlamhehisolatedarabic = 65010, e.lammedialarabic = 65248, e.lammeemhahinitialarabic = 64904, e.lammeeminitialarabic = 64716, e.largecircle = 9711, e.lbar = 410, e.lbelt = 620, e.lbopomofo = 12556, e.lcaron = 318, e.lcedilla = 316, e.lcircle = 9435, e.lcircumflexbelow = 7741, e.lcommaaccent = 316, e.ldot = 320, e.ldotaccent = 320, e.ldotbelow = 7735, e.ldotbelowmacron = 7737, e.leftangleabovecmb = 794, e.lefttackbelowcmb = 792, e.less = 60, e.lessequal = 8804, e.lessequalorgreater = 8922, e.lessmonospace = 65308, e.lessorequivalent = 8818, e.lessorgreater = 8822, e.lessoverequal = 8806, e.lesssmall = 65124, e.lezh = 622, e.lfblock = 9612, e.lhookretroflex = 621, e.lira = 8356, e.liwnarmenian = 1388, e.lj = 457, e.ljecyrillic = 1113, e.ll = 63168, e.lladeva = 2355, e.llagujarati = 2739, e.llinebelow = 7739, e.llladeva = 2356, e.llvocalicbengali = 2529, e.llvocalicdeva = 2401, e.llvocalicvowelsignbengali = 2531, e.llvocalicvowelsigndeva = 2403, e.lmiddletilde = 619, e.lmonospace = 65356, e.lmsquare = 13264, e.lochulathai = 3628, e.logicaland = 8743, e.logicalnot = 172, e.logicalnotreversed = 8976, e.logicalor = 8744, e.lolingthai = 3621, e.longs = 383, e.lowlinecenterline = 65102, e.lowlinecmb = 818, e.lowlinedashed = 65101, e.lozenge = 9674, e.lparen = 9383, e.lslash = 322, e.lsquare = 8467, e.lsuperior = 63214, e.ltshade = 9617, e.luthai = 3622, e.lvocalicbengali = 2444, e.lvocalicdeva = 2316, e.lvocalicvowelsignbengali = 2530, e.lvocalicvowelsigndeva = 2402, e.lxsquare = 13267, e.m = 109, e.mabengali = 2478, e.macron = 175, e.macronbelowcmb = 817, e.macroncmb = 772, e.macronlowmod = 717, e.macronmonospace = 65507, e.macute = 7743, e.madeva = 2350, e.magujarati = 2734, e.magurmukhi = 2606, e.mahapakhhebrew = 1444, e.mahapakhlefthebrew = 1444, e.mahiragana = 12414, e.maichattawalowleftthai = 63637, e.maichattawalowrightthai = 63636, e.maichattawathai = 3659, e.maichattawaupperleftthai = 63635, e.maieklowleftthai = 63628, e.maieklowrightthai = 63627, e.maiekthai = 3656, e.maiekupperleftthai = 63626, e.maihanakatleftthai = 63620, e.maihanakatthai = 3633, e.maitaikhuleftthai = 63625, e.maitaikhuthai = 3655, e.maitholowleftthai = 63631, e.maitholowrightthai = 63630, e.maithothai = 3657, e.maithoupperleftthai = 63629, e.maitrilowleftthai = 63634, e.maitrilowrightthai = 63633, e.maitrithai = 3658, e.maitriupperleftthai = 63632, e.maiyamokthai = 3654, e.makatakana = 12510, e.makatakanahalfwidth = 65423, e.male = 9794, e.mansyonsquare = 13127, e.maqafhebrew = 1470, e.mars = 9794, e.masoracirclehebrew = 1455, e.masquare = 13187, e.mbopomofo = 12551, e.mbsquare = 13268, e.mcircle = 9436, e.mcubedsquare = 13221, e.mdotaccent = 7745, e.mdotbelow = 7747, e.meemarabic = 1605, e.meemfinalarabic = 65250, e.meeminitialarabic = 65251, e.meemmedialarabic = 65252, e.meemmeeminitialarabic = 64721, e.meemmeemisolatedarabic = 64584, e.meetorusquare = 13133, e.mehiragana = 12417, e.meizierasquare = 13182, e.mekatakana = 12513, e.mekatakanahalfwidth = 65426, e.mem = 1502, e.memdagesh = 64318, e.memdageshhebrew = 64318, e.memhebrew = 1502, e.menarmenian = 1396, e.merkhahebrew = 1445, e.merkhakefulahebrew = 1446, e.merkhakefulalefthebrew = 1446, e.merkhalefthebrew = 1445, e.mhook = 625, e.mhzsquare = 13202, e.middledotkatakanahalfwidth = 65381, e.middot = 183, e.mieumacirclekorean = 12914, e.mieumaparenkorean = 12818, e.mieumcirclekorean = 12900, e.mieumkorean = 12609, e.mieumpansioskorean = 12656, e.mieumparenkorean = 12804, e.mieumpieupkorean = 12654, e.mieumsioskorean = 12655, e.mihiragana = 12415, e.mikatakana = 12511, e.mikatakanahalfwidth = 65424, e.minus = 8722, e.minusbelowcmb = 800, e.minuscircle = 8854, e.minusmod = 727, e.minusplus = 8723, e.minute = 8242, e.miribaarusquare = 13130, e.mirisquare = 13129, e.mlonglegturned = 624, e.mlsquare = 13206, e.mmcubedsquare = 13219, e.mmonospace = 65357, e.mmsquaredsquare = 13215, e.mohiragana = 12418, e.mohmsquare = 13249, e.mokatakana = 12514, e.mokatakanahalfwidth = 65427, e.molsquare = 13270, e.momathai = 3617, e.moverssquare = 13223, e.moverssquaredsquare = 13224, e.mparen = 9384, e.mpasquare = 13227, e.mssquare = 13235, e.msuperior = 63215, e.mturned = 623, e.mu = 181, e.mu1 = 181, e.muasquare = 13186, e.muchgreater = 8811, e.muchless = 8810, e.mufsquare = 13196, e.mugreek = 956, e.mugsquare = 13197, e.muhiragana = 12416, e.mukatakana = 12512, e.mukatakanahalfwidth = 65425, e.mulsquare = 13205, e.multiply = 215, e.mumsquare = 13211, e.munahhebrew = 1443, e.munahlefthebrew = 1443, e.musicalnote = 9834, e.musicalnotedbl = 9835, e.musicflatsign = 9837, e.musicsharpsign = 9839, e.mussquare = 13234, e.muvsquare = 13238, e.muwsquare = 13244, e.mvmegasquare = 13241, e.mvsquare = 13239, e.mwmegasquare = 13247, e.mwsquare = 13245, e.n = 110, e.nabengali = 2472, e.nabla = 8711, e.nacute = 324, e.nadeva = 2344, e.nagujarati = 2728, e.nagurmukhi = 2600, e.nahiragana = 12394, e.nakatakana = 12490, e.nakatakanahalfwidth = 65413, e.napostrophe = 329, e.nasquare = 13185, e.nbopomofo = 12555, e.nbspace = 160, e.ncaron = 328, e.ncedilla = 326, e.ncircle = 9437, e.ncircumflexbelow = 7755, e.ncommaaccent = 326, e.ndotaccent = 7749, e.ndotbelow = 7751, e.nehiragana = 12397, e.nekatakana = 12493, e.nekatakanahalfwidth = 65416, e.newsheqelsign = 8362, e.nfsquare = 13195, e.ngabengali = 2457, e.ngadeva = 2329, e.ngagujarati = 2713, e.ngagurmukhi = 2585, e.ngonguthai = 3591, e.nhiragana = 12435, e.nhookleft = 626, e.nhookretroflex = 627, e.nieunacirclekorean = 12911, e.nieunaparenkorean = 12815, e.nieuncieuckorean = 12597, e.nieuncirclekorean = 12897, e.nieunhieuhkorean = 12598, e.nieunkorean = 12596, e.nieunpansioskorean = 12648, e.nieunparenkorean = 12801, e.nieunsioskorean = 12647, e.nieuntikeutkorean = 12646, e.nihiragana = 12395, e.nikatakana = 12491, e.nikatakanahalfwidth = 65414, e.nikhahitleftthai = 63641, e.nikhahitthai = 3661, e.nine = 57, e.ninearabic = 1641, e.ninebengali = 2543, e.ninecircle = 9320, e.ninecircleinversesansserif = 10130, e.ninedeva = 2415, e.ninegujarati = 2799, e.ninegurmukhi = 2671, e.ninehackarabic = 1641, e.ninehangzhou = 12329, e.nineideographicparen = 12840, e.nineinferior = 8329, e.ninemonospace = 65305, e.nineoldstyle = 63289, e.nineparen = 9340, e.nineperiod = 9360, e.ninepersian = 1785, e.nineroman = 8568, e.ninesuperior = 8313, e.nineteencircle = 9330, e.nineteenparen = 9350, e.nineteenperiod = 9370, e.ninethai = 3673, e.nj = 460, e.njecyrillic = 1114, e.nkatakana = 12531, e.nkatakanahalfwidth = 65437, e.nlegrightlong = 414, e.nlinebelow = 7753, e.nmonospace = 65358, e.nmsquare = 13210, e.nnabengali = 2467, e.nnadeva = 2339, e.nnagujarati = 2723, e.nnagurmukhi = 2595, e.nnnadeva = 2345, e.nohiragana = 12398, e.nokatakana = 12494, e.nokatakanahalfwidth = 65417, e.nonbreakingspace = 160, e.nonenthai = 3603, e.nonuthai = 3609, e.noonarabic = 1606, e.noonfinalarabic = 65254, e.noonghunnaarabic = 1722, e.noonghunnafinalarabic = 64415, e.nooninitialarabic = 65255, e.noonjeeminitialarabic = 64722, e.noonjeemisolatedarabic = 64587, e.noonmedialarabic = 65256, e.noonmeeminitialarabic = 64725, e.noonmeemisolatedarabic = 64590, e.noonnoonfinalarabic = 64653, e.notcontains = 8716, e.notelement = 8713, e.notelementof = 8713, e.notequal = 8800, e.notgreater = 8815, e.notgreaternorequal = 8817, e.notgreaternorless = 8825, e.notidentical = 8802, e.notless = 8814, e.notlessnorequal = 8816, e.notparallel = 8742, e.notprecedes = 8832, e.notsubset = 8836, e.notsucceeds = 8833, e.notsuperset = 8837, e.nowarmenian = 1398, e.nparen = 9385, e.nssquare = 13233, e.nsuperior = 8319, e.ntilde = 241, e.nu = 957, e.nuhiragana = 12396, e.nukatakana = 12492, e.nukatakanahalfwidth = 65415, e.nuktabengali = 2492, e.nuktadeva = 2364, e.nuktagujarati = 2748, e.nuktagurmukhi = 2620, e.numbersign = 35, e.numbersignmonospace = 65283, e.numbersignsmall = 65119, e.numeralsigngreek = 884, e.numeralsignlowergreek = 885, e.numero = 8470, e.nun = 1504, e.nundagesh = 64320, e.nundageshhebrew = 64320, e.nunhebrew = 1504, e.nvsquare = 13237, e.nwsquare = 13243, e.nyabengali = 2462, e.nyadeva = 2334, e.nyagujarati = 2718, e.nyagurmukhi = 2590, e.o = 111, e.oacute = 243, e.oangthai = 3629, e.obarred = 629, e.obarredcyrillic = 1257, e.obarreddieresiscyrillic = 1259, e.obengali = 2451, e.obopomofo = 12571, e.obreve = 335, e.ocandradeva = 2321, e.ocandragujarati = 2705, e.ocandravowelsigndeva = 2377, e.ocandravowelsigngujarati = 2761, e.ocaron = 466, e.ocircle = 9438, e.ocircumflex = 244, e.ocircumflexacute = 7889, e.ocircumflexdotbelow = 7897, e.ocircumflexgrave = 7891, e.ocircumflexhookabove = 7893, e.ocircumflextilde = 7895, e.ocyrillic = 1086, e.odblacute = 337, e.odblgrave = 525, e.odeva = 2323, e.odieresis = 246, e.odieresiscyrillic = 1255, e.odotbelow = 7885, e.oe = 339, e.oekorean = 12634, e.ogonek = 731, e.ogonekcmb = 808, e.ograve = 242, e.ogujarati = 2707, e.oharmenian = 1413, e.ohiragana = 12362, e.ohookabove = 7887, e.ohorn = 417, e.ohornacute = 7899, e.ohorndotbelow = 7907, e.ohorngrave = 7901, e.ohornhookabove = 7903, e.ohorntilde = 7905, e.ohungarumlaut = 337, e.oi = 419, e.oinvertedbreve = 527, e.okatakana = 12458, e.okatakanahalfwidth = 65397, e.okorean = 12631, e.olehebrew = 1451, e.omacron = 333, e.omacronacute = 7763, e.omacrongrave = 7761, e.omdeva = 2384, e.omega = 969, e.omega1 = 982, e.omegacyrillic = 1121, e.omegalatinclosed = 631, e.omegaroundcyrillic = 1147, e.omegatitlocyrillic = 1149, e.omegatonos = 974, e.omgujarati = 2768, e.omicron = 959, e.omicrontonos = 972, e.omonospace = 65359, e.one = 49, e.onearabic = 1633, e.onebengali = 2535, e.onecircle = 9312, e.onecircleinversesansserif = 10122, e.onedeva = 2407, e.onedotenleader = 8228, e.oneeighth = 8539, e.onefitted = 63196, e.onegujarati = 2791, e.onegurmukhi = 2663, e.onehackarabic = 1633, e.onehalf = 189, e.onehangzhou = 12321, e.oneideographicparen = 12832, e.oneinferior = 8321, e.onemonospace = 65297, e.onenumeratorbengali = 2548, e.oneoldstyle = 63281, e.oneparen = 9332, e.oneperiod = 9352, e.onepersian = 1777, e.onequarter = 188, e.oneroman = 8560, e.onesuperior = 185, e.onethai = 3665, e.onethird = 8531, e.oogonek = 491, e.oogonekmacron = 493, e.oogurmukhi = 2579, e.oomatragurmukhi = 2635, e.oopen = 596, e.oparen = 9386, e.openbullet = 9702, e.option = 8997, e.ordfeminine = 170, e.ordmasculine = 186, e.orthogonal = 8735, e.oshortdeva = 2322, e.oshortvowelsigndeva = 2378, e.oslash = 248, e.oslashacute = 511, e.osmallhiragana = 12361, e.osmallkatakana = 12457, e.osmallkatakanahalfwidth = 65387, e.ostrokeacute = 511, e.osuperior = 63216, e.otcyrillic = 1151, e.otilde = 245, e.otildeacute = 7757, e.otildedieresis = 7759, e.oubopomofo = 12577, e.overline = 8254, e.overlinecenterline = 65098, e.overlinecmb = 773, e.overlinedashed = 65097, e.overlinedblwavy = 65100, e.overlinewavy = 65099, e.overscore = 175, e.ovowelsignbengali = 2507, e.ovowelsigndeva = 2379, e.ovowelsigngujarati = 2763, e.p = 112, e.paampssquare = 13184, e.paasentosquare = 13099, e.pabengali = 2474, e.pacute = 7765, e.padeva = 2346, e.pagedown = 8671, e.pageup = 8670, e.pagujarati = 2730, e.pagurmukhi = 2602, e.pahiragana = 12401, e.paiyannoithai = 3631, e.pakatakana = 12497, e.palatalizationcyrilliccmb = 1156, e.palochkacyrillic = 1216, e.pansioskorean = 12671, e.paragraph = 182, e.parallel = 8741, e.parenleft = 40, e.parenleftaltonearabic = 64830, e.parenleftbt = 63725, e.parenleftex = 63724, e.parenleftinferior = 8333, e.parenleftmonospace = 65288, e.parenleftsmall = 65113, e.parenleftsuperior = 8317, e.parenlefttp = 63723, e.parenleftvertical = 65077, e.parenright = 41, e.parenrightaltonearabic = 64831, e.parenrightbt = 63736, e.parenrightex = 63735, e.parenrightinferior = 8334, e.parenrightmonospace = 65289, e.parenrightsmall = 65114, e.parenrightsuperior = 8318, e.parenrighttp = 63734, e.parenrightvertical = 65078, e.partialdiff = 8706, e.paseqhebrew = 1472, e.pashtahebrew = 1433, e.pasquare = 13225, e.patah = 1463, e.patah11 = 1463, e.patah1d = 1463, e.patah2a = 1463, e.patahhebrew = 1463, e.patahnarrowhebrew = 1463, e.patahquarterhebrew = 1463, e.patahwidehebrew = 1463, e.pazerhebrew = 1441, e.pbopomofo = 12550, e.pcircle = 9439, e.pdotaccent = 7767, e.pe = 1508, e.pecyrillic = 1087, e.pedagesh = 64324, e.pedageshhebrew = 64324, e.peezisquare = 13115, e.pefinaldageshhebrew = 64323, e.peharabic = 1662, e.peharmenian = 1402, e.pehebrew = 1508, e.pehfinalarabic = 64343, e.pehinitialarabic = 64344, e.pehiragana = 12410, e.pehmedialarabic = 64345, e.pekatakana = 12506, e.pemiddlehookcyrillic = 1191, e.perafehebrew = 64334, e.percent = 37, e.percentarabic = 1642, e.percentmonospace = 65285, e.percentsmall = 65130, e.period = 46, e.periodarmenian = 1417, e.periodcentered = 183, e.periodhalfwidth = 65377, e.periodinferior = 63207, e.periodmonospace = 65294, e.periodsmall = 65106, e.periodsuperior = 63208, e.perispomenigreekcmb = 834, e.perpendicular = 8869, e.perthousand = 8240, e.peseta = 8359, e.pfsquare = 13194, e.phabengali = 2475, e.phadeva = 2347, e.phagujarati = 2731, e.phagurmukhi = 2603, e.phi = 966, e.phi1 = 981, e.phieuphacirclekorean = 12922, e.phieuphaparenkorean = 12826, e.phieuphcirclekorean = 12908, e.phieuphkorean = 12621, e.phieuphparenkorean = 12812, e.philatin = 632, e.phinthuthai = 3642, e.phisymbolgreek = 981, e.phook = 421, e.phophanthai = 3614, e.phophungthai = 3612, e.phosamphaothai = 3616, e.pi = 960, e.pieupacirclekorean = 12915, e.pieupaparenkorean = 12819, e.pieupcieuckorean = 12662, e.pieupcirclekorean = 12901, e.pieupkiyeokkorean = 12658, e.pieupkorean = 12610, e.pieupparenkorean = 12805, e.pieupsioskiyeokkorean = 12660, e.pieupsioskorean = 12612, e.pieupsiostikeutkorean = 12661, e.pieupthieuthkorean = 12663, e.pieuptikeutkorean = 12659, e.pihiragana = 12404, e.pikatakana = 12500, e.pisymbolgreek = 982, e.piwrarmenian = 1411, e.planckover2pi = 8463, e.planckover2pi1 = 8463, e.plus = 43, e.plusbelowcmb = 799, e.pluscircle = 8853, e.plusminus = 177, e.plusmod = 726, e.plusmonospace = 65291, e.plussmall = 65122, e.plussuperior = 8314, e.pmonospace = 65360, e.pmsquare = 13272, e.pohiragana = 12413, e.pointingindexdownwhite = 9759, e.pointingindexleftwhite = 9756, e.pointingindexrightwhite = 9758, e.pointingindexupwhite = 9757, e.pokatakana = 12509, e.poplathai = 3611, e.postalmark = 12306, e.postalmarkface = 12320, e.pparen = 9387, e.precedes = 8826, e.prescription = 8478, e.primemod = 697, e.primereversed = 8245, e.product = 8719, e.projective = 8965, e.prolongedkana = 12540, e.propellor = 8984, e.propersubset = 8834, e.propersuperset = 8835, e.proportion = 8759, e.proportional = 8733, e.psi = 968, e.psicyrillic = 1137, e.psilipneumatacyrilliccmb = 1158, e.pssquare = 13232, e.puhiragana = 12407, e.pukatakana = 12503, e.pvsquare = 13236, e.pwsquare = 13242, e.q = 113, e.qadeva = 2392, e.qadmahebrew = 1448, e.qafarabic = 1602, e.qaffinalarabic = 65238, e.qafinitialarabic = 65239, e.qafmedialarabic = 65240, e.qamats = 1464, e.qamats10 = 1464, e.qamats1a = 1464, e.qamats1c = 1464, e.qamats27 = 1464, e.qamats29 = 1464, e.qamats33 = 1464, e.qamatsde = 1464, e.qamatshebrew = 1464, e.qamatsnarrowhebrew = 1464, e.qamatsqatanhebrew = 1464, e.qamatsqatannarrowhebrew = 1464, e.qamatsqatanquarterhebrew = 1464, e.qamatsqatanwidehebrew = 1464, e.qamatsquarterhebrew = 1464, e.qamatswidehebrew = 1464, e.qarneyparahebrew = 1439, e.qbopomofo = 12561, e.qcircle = 9440, e.qhook = 672, e.qmonospace = 65361, e.qof = 1511, e.qofdagesh = 64327, e.qofdageshhebrew = 64327, e.qofhebrew = 1511, e.qparen = 9388, e.quarternote = 9833, e.qubuts = 1467, e.qubuts18 = 1467, e.qubuts25 = 1467, e.qubuts31 = 1467, e.qubutshebrew = 1467, e.qubutsnarrowhebrew = 1467, e.qubutsquarterhebrew = 1467, e.qubutswidehebrew = 1467, e.question = 63, e.questionarabic = 1567, e.questionarmenian = 1374, e.questiondown = 191, e.questiondownsmall = 63423, e.questiongreek = 894, e.questionmonospace = 65311, e.questionsmall = 63295, e.quotedbl = 34, e.quotedblbase = 8222, e.quotedblleft = 8220, e.quotedblmonospace = 65282, e.quotedblprime = 12318, e.quotedblprimereversed = 12317, e.quotedblright = 8221, e.quoteleft = 8216, e.quoteleftreversed = 8219, e.quotereversed = 8219, e.quoteright = 8217, e.quoterightn = 329, e.quotesinglbase = 8218, e.quotesingle = 39, e.quotesinglemonospace = 65287, e.r = 114, e.raarmenian = 1404, e.rabengali = 2480, e.racute = 341, e.radeva = 2352, e.radical = 8730, e.radicalex = 63717, e.radoverssquare = 13230, e.radoverssquaredsquare = 13231, e.radsquare = 13229, e.rafe = 1471, e.rafehebrew = 1471, e.ragujarati = 2736, e.ragurmukhi = 2608, e.rahiragana = 12425, e.rakatakana = 12521, e.rakatakanahalfwidth = 65431, e.ralowerdiagonalbengali = 2545, e.ramiddlediagonalbengali = 2544, e.ramshorn = 612, e.ratio = 8758, e.rbopomofo = 12566, e.rcaron = 345, e.rcedilla = 343, e.rcircle = 9441, e.rcommaaccent = 343, e.rdblgrave = 529, e.rdotaccent = 7769, e.rdotbelow = 7771, e.rdotbelowmacron = 7773, e.referencemark = 8251, e.reflexsubset = 8838, e.reflexsuperset = 8839, e.registered = 174, e.registersans = 63720, e.registerserif = 63194, e.reharabic = 1585, e.reharmenian = 1408, e.rehfinalarabic = 65198, e.rehiragana = 12428, e.rekatakana = 12524, e.rekatakanahalfwidth = 65434, e.resh = 1512, e.reshdageshhebrew = 64328, e.reshhebrew = 1512, e.reversedtilde = 8765, e.reviahebrew = 1431, e.reviamugrashhebrew = 1431, e.revlogicalnot = 8976, e.rfishhook = 638, e.rfishhookreversed = 639, e.rhabengali = 2525, e.rhadeva = 2397, e.rho = 961, e.rhook = 637, e.rhookturned = 635, e.rhookturnedsuperior = 693, e.rhosymbolgreek = 1009, e.rhotichookmod = 734, e.rieulacirclekorean = 12913, e.rieulaparenkorean = 12817, e.rieulcirclekorean = 12899, e.rieulhieuhkorean = 12608, e.rieulkiyeokkorean = 12602, e.rieulkiyeoksioskorean = 12649, e.rieulkorean = 12601, e.rieulmieumkorean = 12603, e.rieulpansioskorean = 12652, e.rieulparenkorean = 12803, e.rieulphieuphkorean = 12607, e.rieulpieupkorean = 12604, e.rieulpieupsioskorean = 12651, e.rieulsioskorean = 12605, e.rieulthieuthkorean = 12606, e.rieultikeutkorean = 12650, e.rieulyeorinhieuhkorean = 12653, e.rightangle = 8735, e.righttackbelowcmb = 793, e.righttriangle = 8895, e.rihiragana = 12426, e.rikatakana = 12522, e.rikatakanahalfwidth = 65432, e.ring = 730, e.ringbelowcmb = 805, e.ringcmb = 778, e.ringhalfleft = 703, e.ringhalfleftarmenian = 1369, e.ringhalfleftbelowcmb = 796, e.ringhalfleftcentered = 723, e.ringhalfright = 702, e.ringhalfrightbelowcmb = 825, e.ringhalfrightcentered = 722, e.rinvertedbreve = 531, e.rittorusquare = 13137, e.rlinebelow = 7775, e.rlongleg = 636, e.rlonglegturned = 634, e.rmonospace = 65362, e.rohiragana = 12429, e.rokatakana = 12525, e.rokatakanahalfwidth = 65435, e.roruathai = 3619, e.rparen = 9389, e.rrabengali = 2524, e.rradeva = 2353, e.rragurmukhi = 2652, e.rreharabic = 1681, e.rrehfinalarabic = 64397, e.rrvocalicbengali = 2528, e.rrvocalicdeva = 2400, e.rrvocalicgujarati = 2784, e.rrvocalicvowelsignbengali = 2500, e.rrvocalicvowelsigndeva = 2372, e.rrvocalicvowelsigngujarati = 2756, e.rsuperior = 63217, e.rtblock = 9616, e.rturned = 633, e.rturnedsuperior = 692, e.ruhiragana = 12427, e.rukatakana = 12523, e.rukatakanahalfwidth = 65433, e.rupeemarkbengali = 2546, e.rupeesignbengali = 2547, e.rupiah = 63197, e.ruthai = 3620, e.rvocalicbengali = 2443, e.rvocalicdeva = 2315, e.rvocalicgujarati = 2699, e.rvocalicvowelsignbengali = 2499, e.rvocalicvowelsigndeva = 2371, e.rvocalicvowelsigngujarati = 2755, e.s = 115, e.sabengali = 2488, e.sacute = 347, e.sacutedotaccent = 7781, e.sadarabic = 1589, e.sadeva = 2360, e.sadfinalarabic = 65210, e.sadinitialarabic = 65211, e.sadmedialarabic = 65212, e.sagujarati = 2744, e.sagurmukhi = 2616, e.sahiragana = 12373, e.sakatakana = 12469, e.sakatakanahalfwidth = 65403, e.sallallahoualayhewasallamarabic = 65018, e.samekh = 1505, e.samekhdagesh = 64321, e.samekhdageshhebrew = 64321, e.samekhhebrew = 1505, e.saraaathai = 3634, e.saraaethai = 3649, e.saraaimaimalaithai = 3652, e.saraaimaimuanthai = 3651, e.saraamthai = 3635, e.saraathai = 3632, e.saraethai = 3648, e.saraiileftthai = 63622, e.saraiithai = 3637, e.saraileftthai = 63621, e.saraithai = 3636, e.saraothai = 3650, e.saraueeleftthai = 63624, e.saraueethai = 3639, e.saraueleftthai = 63623, e.sarauethai = 3638, e.sarauthai = 3640, e.sarauuthai = 3641, e.sbopomofo = 12569, e.scaron = 353, e.scarondotaccent = 7783, e.scedilla = 351, e.schwa = 601, e.schwacyrillic = 1241, e.schwadieresiscyrillic = 1243, e.schwahook = 602, e.scircle = 9442, e.scircumflex = 349, e.scommaaccent = 537, e.sdotaccent = 7777, e.sdotbelow = 7779, e.sdotbelowdotaccent = 7785, e.seagullbelowcmb = 828, e.second = 8243, e.secondtonechinese = 714, e.section = 167, e.seenarabic = 1587, e.seenfinalarabic = 65202, e.seeninitialarabic = 65203, e.seenmedialarabic = 65204, e.segol = 1462, e.segol13 = 1462, e.segol1f = 1462, e.segol2c = 1462, e.segolhebrew = 1462, e.segolnarrowhebrew = 1462, e.segolquarterhebrew = 1462, e.segoltahebrew = 1426, e.segolwidehebrew = 1462, e.seharmenian = 1405, e.sehiragana = 12379, e.sekatakana = 12475, e.sekatakanahalfwidth = 65406, e.semicolon = 59, e.semicolonarabic = 1563, e.semicolonmonospace = 65307, e.semicolonsmall = 65108, e.semivoicedmarkkana = 12444, e.semivoicedmarkkanahalfwidth = 65439, e.sentisquare = 13090, e.sentosquare = 13091, e.seven = 55, e.sevenarabic = 1639, e.sevenbengali = 2541, e.sevencircle = 9318, e.sevencircleinversesansserif = 10128, e.sevendeva = 2413, e.seveneighths = 8542, e.sevengujarati = 2797, e.sevengurmukhi = 2669, e.sevenhackarabic = 1639, e.sevenhangzhou = 12327, e.sevenideographicparen = 12838, e.seveninferior = 8327, e.sevenmonospace = 65303, e.sevenoldstyle = 63287, e.sevenparen = 9338, e.sevenperiod = 9358, e.sevenpersian = 1783, e.sevenroman = 8566, e.sevensuperior = 8311, e.seventeencircle = 9328, e.seventeenparen = 9348, e.seventeenperiod = 9368, e.seventhai = 3671, e.sfthyphen = 173, e.shaarmenian = 1399, e.shabengali = 2486, e.shacyrillic = 1096, e.shaddaarabic = 1617, e.shaddadammaarabic = 64609, e.shaddadammatanarabic = 64606, e.shaddafathaarabic = 64608, e.shaddakasraarabic = 64610, e.shaddakasratanarabic = 64607, e.shade = 9618, e.shadedark = 9619, e.shadelight = 9617, e.shademedium = 9618, e.shadeva = 2358, e.shagujarati = 2742, e.shagurmukhi = 2614, e.shalshelethebrew = 1427, e.shbopomofo = 12565, e.shchacyrillic = 1097, e.sheenarabic = 1588, e.sheenfinalarabic = 65206, e.sheeninitialarabic = 65207, e.sheenmedialarabic = 65208, e.sheicoptic = 995, e.sheqel = 8362, e.sheqelhebrew = 8362, e.sheva = 1456, e.sheva115 = 1456, e.sheva15 = 1456, e.sheva22 = 1456, e.sheva2e = 1456, e.shevahebrew = 1456, e.shevanarrowhebrew = 1456, e.shevaquarterhebrew = 1456, e.shevawidehebrew = 1456, e.shhacyrillic = 1211, e.shimacoptic = 1005, e.shin = 1513, e.shindagesh = 64329, e.shindageshhebrew = 64329, e.shindageshshindot = 64300, e.shindageshshindothebrew = 64300, e.shindageshsindot = 64301, e.shindageshsindothebrew = 64301, e.shindothebrew = 1473, e.shinhebrew = 1513, e.shinshindot = 64298, e.shinshindothebrew = 64298, e.shinsindot = 64299, e.shinsindothebrew = 64299, e.shook = 642, e.sigma = 963, e.sigma1 = 962, e.sigmafinal = 962, e.sigmalunatesymbolgreek = 1010, e.sihiragana = 12375, e.sikatakana = 12471, e.sikatakanahalfwidth = 65404, e.siluqhebrew = 1469, e.siluqlefthebrew = 1469, e.similar = 8764, e.sindothebrew = 1474, e.siosacirclekorean = 12916, e.siosaparenkorean = 12820, e.sioscieuckorean = 12670, e.sioscirclekorean = 12902, e.sioskiyeokkorean = 12666, e.sioskorean = 12613, e.siosnieunkorean = 12667, e.siosparenkorean = 12806, e.siospieupkorean = 12669, e.siostikeutkorean = 12668, e.six = 54, e.sixarabic = 1638, e.sixbengali = 2540, e.sixcircle = 9317, e.sixcircleinversesansserif = 10127, e.sixdeva = 2412, e.sixgujarati = 2796, e.sixgurmukhi = 2668, e.sixhackarabic = 1638, e.sixhangzhou = 12326, e.sixideographicparen = 12837, e.sixinferior = 8326, e.sixmonospace = 65302, e.sixoldstyle = 63286, e.sixparen = 9337, e.sixperiod = 9357, e.sixpersian = 1782, e.sixroman = 8565, e.sixsuperior = 8310, e.sixteencircle = 9327, e.sixteencurrencydenominatorbengali = 2553, e.sixteenparen = 9347, e.sixteenperiod = 9367, e.sixthai = 3670, e.slash = 47, e.slashmonospace = 65295, e.slong = 383, e.slongdotaccent = 7835, e.smileface = 9786, e.smonospace = 65363, e.sofpasuqhebrew = 1475, e.softhyphen = 173, e.softsigncyrillic = 1100, e.sohiragana = 12381, e.sokatakana = 12477, e.sokatakanahalfwidth = 65407, e.soliduslongoverlaycmb = 824, e.solidusshortoverlaycmb = 823, e.sorusithai = 3625, e.sosalathai = 3624, e.sosothai = 3595, e.sosuathai = 3626, e.space = 32, e.spacehackarabic = 32, e.spade = 9824, e.spadesuitblack = 9824, e.spadesuitwhite = 9828, e.sparen = 9390, e.squarebelowcmb = 827, e.squarecc = 13252, e.squarecm = 13213, e.squarediagonalcrosshatchfill = 9641, e.squarehorizontalfill = 9636, e.squarekg = 13199, e.squarekm = 13214, e.squarekmcapital = 13262, e.squareln = 13265, e.squarelog = 13266, e.squaremg = 13198, e.squaremil = 13269, e.squaremm = 13212, e.squaremsquared = 13217, e.squareorthogonalcrosshatchfill = 9638, e.squareupperlefttolowerrightfill = 9639, e.squareupperrighttolowerleftfill = 9640, e.squareverticalfill = 9637, e.squarewhitewithsmallblack = 9635, e.srsquare = 13275, e.ssabengali = 2487, e.ssadeva = 2359, e.ssagujarati = 2743, e.ssangcieuckorean = 12617, e.ssanghieuhkorean = 12677, e.ssangieungkorean = 12672, e.ssangkiyeokkorean = 12594, e.ssangnieunkorean = 12645, e.ssangpieupkorean = 12611, e.ssangsioskorean = 12614, e.ssangtikeutkorean = 12600, e.ssuperior = 63218, e.sterling = 163, e.sterlingmonospace = 65505, e.strokelongoverlaycmb = 822, e.strokeshortoverlaycmb = 821, e.subset = 8834, e.subsetnotequal = 8842, e.subsetorequal = 8838, e.succeeds = 8827, e.suchthat = 8715, e.suhiragana = 12377, e.sukatakana = 12473, e.sukatakanahalfwidth = 65405, e.sukunarabic = 1618, e.summation = 8721, e.sun = 9788, e.superset = 8835, e.supersetnotequal = 8843, e.supersetorequal = 8839, e.svsquare = 13276, e.syouwaerasquare = 13180, e.t = 116, e.tabengali = 2468, e.tackdown = 8868, e.tackleft = 8867, e.tadeva = 2340, e.tagujarati = 2724, e.tagurmukhi = 2596, e.taharabic = 1591, e.tahfinalarabic = 65218, e.tahinitialarabic = 65219, e.tahiragana = 12383, e.tahmedialarabic = 65220, e.taisyouerasquare = 13181, e.takatakana = 12479, e.takatakanahalfwidth = 65408, e.tatweelarabic = 1600, e.tau = 964, e.tav = 1514, e.tavdages = 64330, e.tavdagesh = 64330, e.tavdageshhebrew = 64330, e.tavhebrew = 1514, e.tbar = 359, e.tbopomofo = 12554, e.tcaron = 357, e.tccurl = 680, e.tcedilla = 355, e.tcheharabic = 1670, e.tchehfinalarabic = 64379, e.tchehinitialarabic = 64380, e.tchehmedialarabic = 64381, e.tcircle = 9443, e.tcircumflexbelow = 7793, e.tcommaaccent = 355, e.tdieresis = 7831, e.tdotaccent = 7787, e.tdotbelow = 7789, e.tecyrillic = 1090, e.tedescendercyrillic = 1197, e.teharabic = 1578, e.tehfinalarabic = 65174, e.tehhahinitialarabic = 64674, e.tehhahisolatedarabic = 64524, e.tehinitialarabic = 65175, e.tehiragana = 12390, e.tehjeeminitialarabic = 64673, e.tehjeemisolatedarabic = 64523, e.tehmarbutaarabic = 1577, e.tehmarbutafinalarabic = 65172, e.tehmedialarabic = 65176, e.tehmeeminitialarabic = 64676, e.tehmeemisolatedarabic = 64526, e.tehnoonfinalarabic = 64627, e.tekatakana = 12486, e.tekatakanahalfwidth = 65411, e.telephone = 8481, e.telephoneblack = 9742, e.telishagedolahebrew = 1440, e.telishaqetanahebrew = 1449, e.tencircle = 9321, e.tenideographicparen = 12841, e.tenparen = 9341, e.tenperiod = 9361, e.tenroman = 8569, e.tesh = 679, e.tet = 1496, e.tetdagesh = 64312, e.tetdageshhebrew = 64312, e.tethebrew = 1496, e.tetsecyrillic = 1205, e.tevirhebrew = 1435, e.tevirlefthebrew = 1435, e.thabengali = 2469, e.thadeva = 2341, e.thagujarati = 2725, e.thagurmukhi = 2597, e.thalarabic = 1584, e.thalfinalarabic = 65196, e.thanthakhatlowleftthai = 63640, e.thanthakhatlowrightthai = 63639, e.thanthakhatthai = 3660, e.thanthakhatupperleftthai = 63638, e.theharabic = 1579, e.thehfinalarabic = 65178, e.thehinitialarabic = 65179, e.thehmedialarabic = 65180, e.thereexists = 8707, e.therefore = 8756, e.theta = 952, e.theta1 = 977, e.thetasymbolgreek = 977, e.thieuthacirclekorean = 12921, e.thieuthaparenkorean = 12825, e.thieuthcirclekorean = 12907, e.thieuthkorean = 12620, e.thieuthparenkorean = 12811, e.thirteencircle = 9324, e.thirteenparen = 9344, e.thirteenperiod = 9364, e.thonangmonthothai = 3601, e.thook = 429, e.thophuthaothai = 3602, e.thorn = 254, e.thothahanthai = 3607, e.thothanthai = 3600, e.thothongthai = 3608, e.thothungthai = 3606, e.thousandcyrillic = 1154, e.thousandsseparatorarabic = 1644, e.thousandsseparatorpersian = 1644, e.three = 51, e.threearabic = 1635, e.threebengali = 2537, e.threecircle = 9314, e.threecircleinversesansserif = 10124, e.threedeva = 2409, e.threeeighths = 8540, e.threegujarati = 2793, e.threegurmukhi = 2665, e.threehackarabic = 1635, e.threehangzhou = 12323, e.threeideographicparen = 12834, e.threeinferior = 8323, e.threemonospace = 65299, e.threenumeratorbengali = 2550, e.threeoldstyle = 63283, e.threeparen = 9334, e.threeperiod = 9354, e.threepersian = 1779, e.threequarters = 190, e.threequartersemdash = 63198, e.threeroman = 8562, e.threesuperior = 179, e.threethai = 3667, e.thzsquare = 13204, e.tihiragana = 12385, e.tikatakana = 12481, e.tikatakanahalfwidth = 65409, e.tikeutacirclekorean = 12912, e.tikeutaparenkorean = 12816, e.tikeutcirclekorean = 12898, e.tikeutkorean = 12599, e.tikeutparenkorean = 12802, e.tilde = 732, e.tildebelowcmb = 816, e.tildecmb = 771, e.tildecomb = 771, e.tildedoublecmb = 864, e.tildeoperator = 8764, e.tildeoverlaycmb = 820, e.tildeverticalcmb = 830, e.timescircle = 8855, e.tipehahebrew = 1430, e.tipehalefthebrew = 1430, e.tippigurmukhi = 2672, e.titlocyrilliccmb = 1155, e.tiwnarmenian = 1407, e.tlinebelow = 7791, e.tmonospace = 65364, e.toarmenian = 1385, e.tohiragana = 12392, e.tokatakana = 12488, e.tokatakanahalfwidth = 65412, e.tonebarextrahighmod = 741, e.tonebarextralowmod = 745, e.tonebarhighmod = 742, e.tonebarlowmod = 744, e.tonebarmidmod = 743, e.tonefive = 445, e.tonesix = 389, e.tonetwo = 424, e.tonos = 900, e.tonsquare = 13095, e.topatakthai = 3599, e.tortoiseshellbracketleft = 12308, e.tortoiseshellbracketleftsmall = 65117, e.tortoiseshellbracketleftvertical = 65081, e.tortoiseshellbracketright = 12309, e.tortoiseshellbracketrightsmall = 65118, e.tortoiseshellbracketrightvertical = 65082, e.totaothai = 3605, e.tpalatalhook = 427, e.tparen = 9391, e.trademark = 8482, e.trademarksans = 63722, e.trademarkserif = 63195, e.tretroflexhook = 648, e.triagdn = 9660, e.triaglf = 9668, e.triagrt = 9658, e.triagup = 9650, e.ts = 678, e.tsadi = 1510, e.tsadidagesh = 64326, e.tsadidageshhebrew = 64326, e.tsadihebrew = 1510, e.tsecyrillic = 1094, e.tsere = 1461, e.tsere12 = 1461, e.tsere1e = 1461, e.tsere2b = 1461, e.tserehebrew = 1461, e.tserenarrowhebrew = 1461, e.tserequarterhebrew = 1461, e.tserewidehebrew = 1461, e.tshecyrillic = 1115, e.tsuperior = 63219, e.ttabengali = 2463, e.ttadeva = 2335, e.ttagujarati = 2719, e.ttagurmukhi = 2591, e.tteharabic = 1657, e.ttehfinalarabic = 64359, e.ttehinitialarabic = 64360, e.ttehmedialarabic = 64361, e.tthabengali = 2464, e.tthadeva = 2336, e.tthagujarati = 2720, e.tthagurmukhi = 2592, e.tturned = 647, e.tuhiragana = 12388, e.tukatakana = 12484, e.tukatakanahalfwidth = 65410, e.tusmallhiragana = 12387, e.tusmallkatakana = 12483, e.tusmallkatakanahalfwidth = 65391, e.twelvecircle = 9323, e.twelveparen = 9343, e.twelveperiod = 9363, e.twelveroman = 8571, e.twentycircle = 9331, e.twentyhangzhou = 21316, e.twentyparen = 9351, e.twentyperiod = 9371, e.two = 50, e.twoarabic = 1634, e.twobengali = 2536, e.twocircle = 9313, e.twocircleinversesansserif = 10123, e.twodeva = 2408, e.twodotenleader = 8229, e.twodotleader = 8229, e.twodotleadervertical = 65072, e.twogujarati = 2792, e.twogurmukhi = 2664, e.twohackarabic = 1634, e.twohangzhou = 12322, e.twoideographicparen = 12833, e.twoinferior = 8322, e.twomonospace = 65298, e.twonumeratorbengali = 2549, e.twooldstyle = 63282, e.twoparen = 9333, e.twoperiod = 9353, e.twopersian = 1778, e.tworoman = 8561, e.twostroke = 443, e.twosuperior = 178, e.twothai = 3666, e.twothirds = 8532, e.u = 117, e.uacute = 250, e.ubar = 649, e.ubengali = 2441, e.ubopomofo = 12584, e.ubreve = 365, e.ucaron = 468, e.ucircle = 9444, e.ucircumflex = 251, e.ucircumflexbelow = 7799, e.ucyrillic = 1091, e.udattadeva = 2385, e.udblacute = 369, e.udblgrave = 533, e.udeva = 2313, e.udieresis = 252, e.udieresisacute = 472, e.udieresisbelow = 7795, e.udieresiscaron = 474, e.udieresiscyrillic = 1265, e.udieresisgrave = 476, e.udieresismacron = 470, e.udotbelow = 7909, e.ugrave = 249, e.ugujarati = 2697, e.ugurmukhi = 2569, e.uhiragana = 12358, e.uhookabove = 7911, e.uhorn = 432, e.uhornacute = 7913, e.uhorndotbelow = 7921, e.uhorngrave = 7915, e.uhornhookabove = 7917, e.uhorntilde = 7919, e.uhungarumlaut = 369, e.uhungarumlautcyrillic = 1267, e.uinvertedbreve = 535, e.ukatakana = 12454, e.ukatakanahalfwidth = 65395, e.ukcyrillic = 1145, e.ukorean = 12636, e.umacron = 363, e.umacroncyrillic = 1263, e.umacrondieresis = 7803, e.umatragurmukhi = 2625, e.umonospace = 65365, e.underscore = 95, e.underscoredbl = 8215, e.underscoremonospace = 65343, e.underscorevertical = 65075, e.underscorewavy = 65103, e.union = 8746, e.universal = 8704, e.uogonek = 371, e.uparen = 9392, e.upblock = 9600, e.upperdothebrew = 1476, e.upsilon = 965, e.upsilondieresis = 971, e.upsilondieresistonos = 944, e.upsilonlatin = 650, e.upsilontonos = 973, e.uptackbelowcmb = 797, e.uptackmod = 724, e.uragurmukhi = 2675, e.uring = 367, e.ushortcyrillic = 1118, e.usmallhiragana = 12357, e.usmallkatakana = 12453, e.usmallkatakanahalfwidth = 65385, e.ustraightcyrillic = 1199, e.ustraightstrokecyrillic = 1201, e.utilde = 361, e.utildeacute = 7801, e.utildebelow = 7797, e.uubengali = 2442, e.uudeva = 2314, e.uugujarati = 2698, e.uugurmukhi = 2570, e.uumatragurmukhi = 2626, e.uuvowelsignbengali = 2498, e.uuvowelsigndeva = 2370, e.uuvowelsigngujarati = 2754, e.uvowelsignbengali = 2497, e.uvowelsigndeva = 2369, e.uvowelsigngujarati = 2753, e.v = 118, e.vadeva = 2357, e.vagujarati = 2741, e.vagurmukhi = 2613, e.vakatakana = 12535, e.vav = 1493, e.vavdagesh = 64309, e.vavdagesh65 = 64309, e.vavdageshhebrew = 64309, e.vavhebrew = 1493, e.vavholam = 64331, e.vavholamhebrew = 64331, e.vavvavhebrew = 1520, e.vavyodhebrew = 1521, e.vcircle = 9445, e.vdotbelow = 7807, e.vecyrillic = 1074, e.veharabic = 1700, e.vehfinalarabic = 64363, e.vehinitialarabic = 64364, e.vehmedialarabic = 64365, e.vekatakana = 12537, e.venus = 9792, e.verticalbar = 124, e.verticallineabovecmb = 781, e.verticallinebelowcmb = 809, e.verticallinelowmod = 716, e.verticallinemod = 712, e.vewarmenian = 1406, e.vhook = 651, e.vikatakana = 12536, e.viramabengali = 2509, e.viramadeva = 2381, e.viramagujarati = 2765, e.visargabengali = 2435, e.visargadeva = 2307, e.visargagujarati = 2691, e.vmonospace = 65366, e.voarmenian = 1400, e.voicediterationhiragana = 12446, e.voicediterationkatakana = 12542, e.voicedmarkkana = 12443, e.voicedmarkkanahalfwidth = 65438, e.vokatakana = 12538, e.vparen = 9393, e.vtilde = 7805, e.vturned = 652, e.vuhiragana = 12436, e.vukatakana = 12532, e.w = 119, e.wacute = 7811, e.waekorean = 12633, e.wahiragana = 12431, e.wakatakana = 12527, e.wakatakanahalfwidth = 65436, e.wakorean = 12632, e.wasmallhiragana = 12430, e.wasmallkatakana = 12526, e.wattosquare = 13143, e.wavedash = 12316, e.wavyunderscorevertical = 65076, e.wawarabic = 1608, e.wawfinalarabic = 65262, e.wawhamzaabovearabic = 1572, e.wawhamzaabovefinalarabic = 65158, e.wbsquare = 13277, e.wcircle = 9446, e.wcircumflex = 373, e.wdieresis = 7813, e.wdotaccent = 7815, e.wdotbelow = 7817, e.wehiragana = 12433, e.weierstrass = 8472, e.wekatakana = 12529, e.wekorean = 12638, e.weokorean = 12637, e.wgrave = 7809, e.whitebullet = 9702, e.whitecircle = 9675, e.whitecircleinverse = 9689, e.whitecornerbracketleft = 12302, e.whitecornerbracketleftvertical = 65091, e.whitecornerbracketright = 12303, e.whitecornerbracketrightvertical = 65092, e.whitediamond = 9671, e.whitediamondcontainingblacksmalldiamond = 9672, e.whitedownpointingsmalltriangle = 9663, e.whitedownpointingtriangle = 9661, e.whiteleftpointingsmalltriangle = 9667, e.whiteleftpointingtriangle = 9665, e.whitelenticularbracketleft = 12310, e.whitelenticularbracketright = 12311, e.whiterightpointingsmalltriangle = 9657, e.whiterightpointingtriangle = 9655, e.whitesmallsquare = 9643, e.whitesmilingface = 9786, e.whitesquare = 9633, e.whitestar = 9734, e.whitetelephone = 9743, e.whitetortoiseshellbracketleft = 12312, e.whitetortoiseshellbracketright = 12313, e.whiteuppointingsmalltriangle = 9653, e.whiteuppointingtriangle = 9651, e.wihiragana = 12432, e.wikatakana = 12528, e.wikorean = 12639, e.wmonospace = 65367, e.wohiragana = 12434, e.wokatakana = 12530, e.wokatakanahalfwidth = 65382, e.won = 8361, e.wonmonospace = 65510, e.wowaenthai = 3623, e.wparen = 9394, e.wring = 7832, e.wsuperior = 695, e.wturned = 653, e.wynn = 447, e.x = 120, e.xabovecmb = 829, e.xbopomofo = 12562, e.xcircle = 9447, e.xdieresis = 7821, e.xdotaccent = 7819, e.xeharmenian = 1389, e.xi = 958, e.xmonospace = 65368, e.xparen = 9395, e.xsuperior = 739, e.y = 121, e.yaadosquare = 13134, e.yabengali = 2479, e.yacute = 253, e.yadeva = 2351, e.yaekorean = 12626, e.yagujarati = 2735, e.yagurmukhi = 2607, e.yahiragana = 12420, e.yakatakana = 12516, e.yakatakanahalfwidth = 65428, e.yakorean = 12625, e.yamakkanthai = 3662, e.yasmallhiragana = 12419, e.yasmallkatakana = 12515, e.yasmallkatakanahalfwidth = 65388, e.yatcyrillic = 1123, e.ycircle = 9448, e.ycircumflex = 375, e.ydieresis = 255, e.ydotaccent = 7823, e.ydotbelow = 7925, e.yeharabic = 1610, e.yehbarreearabic = 1746, e.yehbarreefinalarabic = 64431, e.yehfinalarabic = 65266, e.yehhamzaabovearabic = 1574, e.yehhamzaabovefinalarabic = 65162, e.yehhamzaaboveinitialarabic = 65163, e.yehhamzaabovemedialarabic = 65164, e.yehinitialarabic = 65267, e.yehmedialarabic = 65268, e.yehmeeminitialarabic = 64733, e.yehmeemisolatedarabic = 64600, e.yehnoonfinalarabic = 64660, e.yehthreedotsbelowarabic = 1745, e.yekorean = 12630, e.yen = 165, e.yenmonospace = 65509, e.yeokorean = 12629, e.yeorinhieuhkorean = 12678, e.yerahbenyomohebrew = 1450, e.yerahbenyomolefthebrew = 1450, e.yericyrillic = 1099, e.yerudieresiscyrillic = 1273, e.yesieungkorean = 12673, e.yesieungpansioskorean = 12675, e.yesieungsioskorean = 12674, e.yetivhebrew = 1434, e.ygrave = 7923, e.yhook = 436, e.yhookabove = 7927, e.yiarmenian = 1397, e.yicyrillic = 1111, e.yikorean = 12642, e.yinyang = 9775, e.yiwnarmenian = 1410, e.ymonospace = 65369, e.yod = 1497, e.yoddagesh = 64313, e.yoddageshhebrew = 64313, e.yodhebrew = 1497, e.yodyodhebrew = 1522, e.yodyodpatahhebrew = 64287, e.yohiragana = 12424, e.yoikorean = 12681, e.yokatakana = 12520, e.yokatakanahalfwidth = 65430, e.yokorean = 12635, e.yosmallhiragana = 12423, e.yosmallkatakana = 12519, e.yosmallkatakanahalfwidth = 65390, e.yotgreek = 1011, e.yoyaekorean = 12680, e.yoyakorean = 12679, e.yoyakthai = 3618, e.yoyingthai = 3597, e.yparen = 9396, e.ypogegrammeni = 890, e.ypogegrammenigreekcmb = 837, e.yr = 422, e.yring = 7833, e.ysuperior = 696, e.ytilde = 7929, e.yturned = 654, e.yuhiragana = 12422, e.yuikorean = 12684, e.yukatakana = 12518, e.yukatakanahalfwidth = 65429, e.yukorean = 12640, e.yusbigcyrillic = 1131, e.yusbigiotifiedcyrillic = 1133, e.yuslittlecyrillic = 1127, e.yuslittleiotifiedcyrillic = 1129, e.yusmallhiragana = 12421, e.yusmallkatakana = 12517, e.yusmallkatakanahalfwidth = 65389, e.yuyekorean = 12683, e.yuyeokorean = 12682, e.yyabengali = 2527, e.yyadeva = 2399, e.z = 122, e.zaarmenian = 1382, e.zacute = 378, e.zadeva = 2395, e.zagurmukhi = 2651, e.zaharabic = 1592, e.zahfinalarabic = 65222, e.zahinitialarabic = 65223, e.zahiragana = 12374, e.zahmedialarabic = 65224, e.zainarabic = 1586, e.zainfinalarabic = 65200, e.zakatakana = 12470, e.zaqefgadolhebrew = 1429, e.zaqefqatanhebrew = 1428, e.zarqahebrew = 1432, e.zayin = 1494, e.zayindagesh = 64310, e.zayindageshhebrew = 64310, e.zayinhebrew = 1494, e.zbopomofo = 12567, e.zcaron = 382, e.zcircle = 9449, e.zcircumflex = 7825, e.zcurl = 657, e.zdot = 380, e.zdotaccent = 380, e.zdotbelow = 7827, e.zecyrillic = 1079, e.zedescendercyrillic = 1177, e.zedieresiscyrillic = 1247, e.zehiragana = 12380, e.zekatakana = 12476, e.zero = 48, e.zeroarabic = 1632, e.zerobengali = 2534, e.zerodeva = 2406, e.zerogujarati = 2790, e.zerogurmukhi = 2662, e.zerohackarabic = 1632, e.zeroinferior = 8320, e.zeromonospace = 65296, e.zerooldstyle = 63280, e.zeropersian = 1776, e.zerosuperior = 8304, e.zerothai = 3664, e.zerowidthjoiner = 65279, e.zerowidthnonjoiner = 8204, e.zerowidthspace = 8203, e.zeta = 950, e.zhbopomofo = 12563, e.zhearmenian = 1386, e.zhebrevecyrillic = 1218, e.zhecyrillic = 1078, e.zhedescendercyrillic = 1175, e.zhedieresiscyrillic = 1245, e.zihiragana = 12376, e.zikatakana = 12472, e.zinorhebrew = 1454, e.zlinebelow = 7829, e.zmonospace = 65370, e.zohiragana = 12382, e.zokatakana = 12478, e.zparen = 9397, e.zretroflexhook = 656, e.zstroke = 438, e.zuhiragana = 12378, e.zukatakana = 12474, e[".notdef"] = 0, e.angbracketleftbig = 9001, e.angbracketleftBig = 9001, e.angbracketleftbigg = 9001, e.angbracketleftBigg = 9001, e.angbracketrightBig = 9002, e.angbracketrightbig = 9002, e.angbracketrightBigg = 9002, e.angbracketrightbigg = 9002, e.arrowhookleft = 8618, e.arrowhookright = 8617, e.arrowlefttophalf = 8636, e.arrowleftbothalf = 8637, e.arrownortheast = 8599, e.arrownorthwest = 8598, e.arrowrighttophalf = 8640, e.arrowrightbothalf = 8641, e.arrowsoutheast = 8600, e.arrowsouthwest = 8601, e.backslashbig = 8726, e.backslashBig = 8726, e.backslashBigg = 8726, e.backslashbigg = 8726, e.bardbl = 8214, e.bracehtipdownleft = 65079, e.bracehtipdownright = 65079, e.bracehtipupleft = 65080, e.bracehtipupright = 65080, e.braceleftBig = 123, e.braceleftbig = 123, e.braceleftbigg = 123, e.braceleftBigg = 123, e.bracerightBig = 125, e.bracerightbig = 125, e.bracerightbigg = 125, e.bracerightBigg = 125, e.bracketleftbig = 91, e.bracketleftBig = 91, e.bracketleftbigg = 91, e.bracketleftBigg = 91, e.bracketrightBig = 93, e.bracketrightbig = 93, e.bracketrightbigg = 93, e.bracketrightBigg = 93, e.ceilingleftbig = 8968, e.ceilingleftBig = 8968, e.ceilingleftBigg = 8968, e.ceilingleftbigg = 8968, e.ceilingrightbig = 8969, e.ceilingrightBig = 8969, e.ceilingrightbigg = 8969, e.ceilingrightBigg = 8969, e.circledotdisplay = 8857, e.circledottext = 8857, e.circlemultiplydisplay = 8855, e.circlemultiplytext = 8855, e.circleplusdisplay = 8853, e.circleplustext = 8853, e.contintegraldisplay = 8750, e.contintegraltext = 8750, e.coproductdisplay = 8720, e.coproducttext = 8720, e.floorleftBig = 8970, e.floorleftbig = 8970, e.floorleftbigg = 8970, e.floorleftBigg = 8970, e.floorrightbig = 8971, e.floorrightBig = 8971, e.floorrightBigg = 8971, e.floorrightbigg = 8971, e.hatwide = 770, e.hatwider = 770, e.hatwidest = 770, e.intercal = 7488, e.integraldisplay = 8747, e.integraltext = 8747, e.intersectiondisplay = 8898, e.intersectiontext = 8898, e.logicalanddisplay = 8743, e.logicalandtext = 8743, e.logicalordisplay = 8744, e.logicalortext = 8744, e.parenleftBig = 40, e.parenleftbig = 40, e.parenleftBigg = 40, e.parenleftbigg = 40, e.parenrightBig = 41, e.parenrightbig = 41, e.parenrightBigg = 41, e.parenrightbigg = 41, e.prime = 8242, e.productdisplay = 8719, e.producttext = 8719, e.radicalbig = 8730, e.radicalBig = 8730, e.radicalBigg = 8730, e.radicalbigg = 8730, e.radicalbt = 8730, e.radicaltp = 8730, e.radicalvertex = 8730, e.slashbig = 47, e.slashBig = 47, e.slashBigg = 47, e.slashbigg = 47, e.summationdisplay = 8721, e.summationtext = 8721, e.tildewide = 732, e.tildewider = 732, e.tildewidest = 732, e.uniondisplay = 8899, e.unionmultidisplay = 8846, e.unionmultitext = 8846, e.unionsqdisplay = 8852, e.unionsqtext = 8852, e.uniontext = 8899, e.vextenddouble = 8741, e.vextendsingle = 8739;
}), IB = Ce(function(e) {
  e.space = 32, e.a1 = 9985, e.a2 = 9986, e.a202 = 9987, e.a3 = 9988, e.a4 = 9742, e.a5 = 9990, e.a119 = 9991, e.a118 = 9992, e.a117 = 9993, e.a11 = 9755, e.a12 = 9758, e.a13 = 9996, e.a14 = 9997, e.a15 = 9998, e.a16 = 9999, e.a105 = 1e4, e.a17 = 10001, e.a18 = 10002, e.a19 = 10003, e.a20 = 10004, e.a21 = 10005, e.a22 = 10006, e.a23 = 10007, e.a24 = 10008, e.a25 = 10009, e.a26 = 10010, e.a27 = 10011, e.a28 = 10012, e.a6 = 10013, e.a7 = 10014, e.a8 = 10015, e.a9 = 10016, e.a10 = 10017, e.a29 = 10018, e.a30 = 10019, e.a31 = 10020, e.a32 = 10021, e.a33 = 10022, e.a34 = 10023, e.a35 = 9733, e.a36 = 10025, e.a37 = 10026, e.a38 = 10027, e.a39 = 10028, e.a40 = 10029, e.a41 = 10030, e.a42 = 10031, e.a43 = 10032, e.a44 = 10033, e.a45 = 10034, e.a46 = 10035, e.a47 = 10036, e.a48 = 10037, e.a49 = 10038, e.a50 = 10039, e.a51 = 10040, e.a52 = 10041, e.a53 = 10042, e.a54 = 10043, e.a55 = 10044, e.a56 = 10045, e.a57 = 10046, e.a58 = 10047, e.a59 = 10048, e.a60 = 10049, e.a61 = 10050, e.a62 = 10051, e.a63 = 10052, e.a64 = 10053, e.a65 = 10054, e.a66 = 10055, e.a67 = 10056, e.a68 = 10057, e.a69 = 10058, e.a70 = 10059, e.a71 = 9679, e.a72 = 10061, e.a73 = 9632, e.a74 = 10063, e.a203 = 10064, e.a75 = 10065, e.a204 = 10066, e.a76 = 9650, e.a77 = 9660, e.a78 = 9670, e.a79 = 10070, e.a81 = 9687, e.a82 = 10072, e.a83 = 10073, e.a84 = 10074, e.a97 = 10075, e.a98 = 10076, e.a99 = 10077, e.a100 = 10078, e.a101 = 10081, e.a102 = 10082, e.a103 = 10083, e.a104 = 10084, e.a106 = 10085, e.a107 = 10086, e.a108 = 10087, e.a112 = 9827, e.a111 = 9830, e.a110 = 9829, e.a109 = 9824, e.a120 = 9312, e.a121 = 9313, e.a122 = 9314, e.a123 = 9315, e.a124 = 9316, e.a125 = 9317, e.a126 = 9318, e.a127 = 9319, e.a128 = 9320, e.a129 = 9321, e.a130 = 10102, e.a131 = 10103, e.a132 = 10104, e.a133 = 10105, e.a134 = 10106, e.a135 = 10107, e.a136 = 10108, e.a137 = 10109, e.a138 = 10110, e.a139 = 10111, e.a140 = 10112, e.a141 = 10113, e.a142 = 10114, e.a143 = 10115, e.a144 = 10116, e.a145 = 10117, e.a146 = 10118, e.a147 = 10119, e.a148 = 10120, e.a149 = 10121, e.a150 = 10122, e.a151 = 10123, e.a152 = 10124, e.a153 = 10125, e.a154 = 10126, e.a155 = 10127, e.a156 = 10128, e.a157 = 10129, e.a158 = 10130, e.a159 = 10131, e.a160 = 10132, e.a161 = 8594, e.a163 = 8596, e.a164 = 8597, e.a196 = 10136, e.a165 = 10137, e.a192 = 10138, e.a166 = 10139, e.a167 = 10140, e.a168 = 10141, e.a169 = 10142, e.a170 = 10143, e.a171 = 10144, e.a172 = 10145, e.a173 = 10146, e.a162 = 10147, e.a174 = 10148, e.a175 = 10149, e.a176 = 10150, e.a177 = 10151, e.a178 = 10152, e.a179 = 10153, e.a193 = 10154, e.a180 = 10155, e.a199 = 10156, e.a181 = 10157, e.a200 = 10158, e.a182 = 10159, e.a201 = 10161, e.a183 = 10162, e.a184 = 10163, e.a197 = 10164, e.a185 = 10165, e.a194 = 10166, e.a198 = 10167, e.a186 = 10168, e.a195 = 10169, e.a187 = 10170, e.a188 = 10171, e.a189 = 10172, e.a190 = 10173, e.a191 = 10174, e.a89 = 10088, e.a90 = 10089, e.a93 = 10090, e.a94 = 10091, e.a91 = 10092, e.a92 = 10093, e.a205 = 10094, e.a85 = 10095, e.a206 = 10096, e.a86 = 10097, e.a87 = 10098, e.a88 = 10099, e.a95 = 10100, e.a96 = 10101, e[".notdef"] = 0;
}), cB = Ce(function(e) {
  e[63721] = 169, e[63193] = 169, e[63720] = 174, e[63194] = 174, e[63722] = 8482, e[63195] = 8482, e[63729] = 9127, e[63730] = 9128, e[63731] = 9129, e[63740] = 9131, e[63741] = 9132, e[63742] = 9133, e[63726] = 9121, e[63727] = 9122, e[63728] = 9123, e[63737] = 9124, e[63738] = 9125, e[63739] = 9126, e[63723] = 9115, e[63724] = 9116, e[63725] = 9117, e[63734] = 9118, e[63735] = 9119, e[63736] = 9120;
});
function lB(e) {
  return e >= 65520 && e <= 65535 ? 0 : e >= 62976 && e <= 63743 ? cB()[e] || e : e === 173 ? 45 : e;
}
function ss(e, A) {
  let t = A[e];
  if (t !== void 0)
    return t;
  if (!e)
    return -1;
  if (e[0] === "u") {
    const i = e.length;
    let s;
    if (i === 7 && e[1] === "n" && e[2] === "i")
      s = e.substring(3);
    else if (i >= 5 && i <= 7)
      s = e.substring(1);
    else
      return -1;
    if (s === s.toUpperCase() && (t = parseInt(s, 16), t >= 0))
      return t;
  }
  return -1;
}
const pr = [[0, 127], [128, 255], [256, 383], [384, 591], [592, 687, 7424, 7551, 7552, 7615], [688, 767, 42752, 42783], [768, 879, 7616, 7679], [880, 1023], [11392, 11519], [1024, 1279, 1280, 1327, 11744, 11775, 42560, 42655], [1328, 1423], [1424, 1535], [42240, 42559], [1536, 1791, 1872, 1919], [1984, 2047], [2304, 2431], [2432, 2559], [2560, 2687], [2688, 2815], [2816, 2943], [2944, 3071], [3072, 3199], [3200, 3327], [3328, 3455], [3584, 3711], [3712, 3839], [4256, 4351, 11520, 11567], [6912, 7039], [4352, 4607], [7680, 7935, 11360, 11391, 42784, 43007], [7936, 8191], [8192, 8303, 11776, 11903], [8304, 8351], [8352, 8399], [8400, 8447], [8448, 8527], [8528, 8591], [8592, 8703, 10224, 10239, 10496, 10623, 11008, 11263], [8704, 8959, 10752, 11007, 10176, 10223, 10624, 10751], [8960, 9215], [9216, 9279], [9280, 9311], [9312, 9471], [9472, 9599], [9600, 9631], [9632, 9727], [9728, 9983], [9984, 10175], [12288, 12351], [12352, 12447], [12448, 12543, 12784, 12799], [12544, 12591, 12704, 12735], [12592, 12687], [43072, 43135], [12800, 13055], [13056, 13311], [44032, 55215], [55296, 57343], [67840, 67871], [19968, 40959, 11904, 12031, 12032, 12255, 12272, 12287, 13312, 19903, 131072, 173791, 12688, 12703], [57344, 63743], [12736, 12783, 63744, 64255, 194560, 195103], [64256, 64335], [64336, 65023], [65056, 65071], [65040, 65055], [65104, 65135], [65136, 65279], [65280, 65519], [65520, 65535], [3840, 4095], [1792, 1871], [1920, 1983], [3456, 3583], [4096, 4255], [4608, 4991, 4992, 5023, 11648, 11743], [5024, 5119], [5120, 5759], [5760, 5791], [5792, 5887], [6016, 6143], [6144, 6319], [10240, 10495], [40960, 42127], [5888, 5919, 5920, 5951, 5952, 5983, 5984, 6015], [66304, 66351], [66352, 66383], [66560, 66639], [118784, 119039, 119040, 119295, 119296, 119375], [119808, 120831], [1044480, 1048573], [65024, 65039, 917760, 917999], [917504, 917631], [6400, 6479], [6480, 6527], [6528, 6623], [6656, 6687], [11264, 11359], [11568, 11647], [19904, 19967], [43008, 43055], [65536, 65663, 65664, 65791, 65792, 65855], [65856, 65935], [66432, 66463], [66464, 66527], [66640, 66687], [66688, 66735], [67584, 67647], [68096, 68191], [119552, 119647], [73728, 74751, 74752, 74879], [119648, 119679], [7040, 7103], [7168, 7247], [7248, 7295], [43136, 43231], [43264, 43311], [43312, 43359], [43520, 43615], [65936, 65999], [66e3, 66047], [66208, 66271, 66176, 66207, 67872, 67903], [127024, 127135, 126976, 127023]];
function CB(e, A = -1) {
  if (A !== -1) {
    const t = pr[A];
    for (let i = 0, s = t.length; i < s; i += 2)
      if (e >= t[i] && e <= t[i + 1])
        return A;
  }
  for (let t = 0, i = pr.length; t < i; t++) {
    const s = pr[t];
    for (let a = 0, n = s.length; a < n; a += 2)
      if (e >= s[a] && e <= s[a + 1])
        return t;
  }
  return -1;
}
const hB = new RegExp("^(\\s)|(\\p{Mn})|(\\p{Cf})$", "u"), cg = /* @__PURE__ */ new Map();
function BB(e) {
  const A = cg.get(e);
  if (A)
    return A;
  const t = e.match(hB), i = {
    isWhitespace: !!(t != null && t[1]),
    isZeroWidthDiacritic: !!(t != null && t[2]),
    isInvisibleFormatMark: !!(t != null && t[3])
  };
  return cg.set(e, i), i;
}
function QB() {
  cg.clear();
}
const j0 = !0, Ft = {
  FixedPitch: 1,
  Serif: 2,
  Symbolic: 4,
  Script: 8,
  Nonsymbolic: 32,
  Italic: 64,
  AllCap: 65536,
  SmallCap: 131072,
  ForceBold: 262144
}, Zo = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];
function Kc(e, A) {
  if (A[e] !== void 0)
    return e;
  const t = ss(e, A);
  if (t !== -1) {
    for (const i in A)
      if (A[i] === t)
        return i;
  }
  return vA("Unable to recover a standard glyph name for: " + e), e;
}
function vc(e, A, t) {
  const i = /* @__PURE__ */ Object.create(null);
  let s, a, n;
  const r = !!(e.flags & Ft.Symbolic);
  if (e.isInternalFont)
    for (n = A, a = 0; a < n.length; a++)
      s = t.indexOf(n[a]), i[a] = s >= 0 ? s : 0;
  else if (e.baseEncodingName)
    for (n = Vs(e.baseEncodingName), a = 0; a < n.length; a++)
      s = t.indexOf(n[a]), i[a] = s >= 0 ? s : 0;
  else if (r)
    for (a in A)
      i[a] = A[a];
  else
    for (n = fi, a = 0; a < n.length; a++)
      s = t.indexOf(n[a]), i[a] = s >= 0 ? s : 0;
  const g = e.differences;
  let o;
  if (g)
    for (a in g) {
      const I = g[a];
      if (s = t.indexOf(I), s === -1) {
        o || (o = si());
        const c = Kc(I, o);
        c !== I && (s = t.indexOf(c));
      }
      i[a] = s >= 0 ? s : 0;
    }
  return i;
}
function wa(e) {
  return e.replaceAll(/[,_]/g, "-").replaceAll(/\s/g, "");
}
const EB = Ce((e) => {
  e[8211] = 65074, e[8212] = 65073, e[8229] = 65072, e[8230] = 65049, e[12289] = 65041, e[12290] = 65042, e[12296] = 65087, e[12297] = 65088, e[12298] = 65085, e[12299] = 65086, e[12300] = 65089, e[12301] = 65090, e[12302] = 65091, e[12303] = 65092, e[12304] = 65083, e[12305] = 65084, e[12308] = 65081, e[12309] = 65082, e[12310] = 65047, e[12311] = 65048, e[65103] = 65076, e[65281] = 65045, e[65288] = 65077, e[65289] = 65078, e[65292] = 65040, e[65306] = 65043, e[65307] = 65044, e[65311] = 65046, e[65339] = 65095, e[65341] = 65096, e[65343] = 65075, e[65371] = 65079, e[65373] = 65080;
}), ir = Ce(function(e) {
  e["Times-Roman"] = "Times-Roman", e.Helvetica = "Helvetica", e.Courier = "Courier", e.Symbol = "Symbol", e["Times-Bold"] = "Times-Bold", e["Helvetica-Bold"] = "Helvetica-Bold", e["Courier-Bold"] = "Courier-Bold", e.ZapfDingbats = "ZapfDingbats", e["Times-Italic"] = "Times-Italic", e["Helvetica-Oblique"] = "Helvetica-Oblique", e["Courier-Oblique"] = "Courier-Oblique", e["Times-BoldItalic"] = "Times-BoldItalic", e["Helvetica-BoldOblique"] = "Helvetica-BoldOblique", e["Courier-BoldOblique"] = "Courier-BoldOblique", e.ArialNarrow = "Helvetica", e["ArialNarrow-Bold"] = "Helvetica-Bold", e["ArialNarrow-BoldItalic"] = "Helvetica-BoldOblique", e["ArialNarrow-Italic"] = "Helvetica-Oblique", e.ArialBlack = "Helvetica", e["ArialBlack-Bold"] = "Helvetica-Bold", e["ArialBlack-BoldItalic"] = "Helvetica-BoldOblique", e["ArialBlack-Italic"] = "Helvetica-Oblique", e["Arial-Black"] = "Helvetica", e["Arial-Black-Bold"] = "Helvetica-Bold", e["Arial-Black-BoldItalic"] = "Helvetica-BoldOblique", e["Arial-Black-Italic"] = "Helvetica-Oblique", e.Arial = "Helvetica", e["Arial-Bold"] = "Helvetica-Bold", e["Arial-BoldItalic"] = "Helvetica-BoldOblique", e["Arial-Italic"] = "Helvetica-Oblique", e.ArialMT = "Helvetica", e["Arial-BoldItalicMT"] = "Helvetica-BoldOblique", e["Arial-BoldMT"] = "Helvetica-Bold", e["Arial-ItalicMT"] = "Helvetica-Oblique", e["Arial-BoldItalicMT-BoldItalic"] = "Helvetica-BoldOblique", e["Arial-BoldMT-Bold"] = "Helvetica-Bold", e["Arial-ItalicMT-Italic"] = "Helvetica-Oblique", e.ArialUnicodeMS = "Helvetica", e["ArialUnicodeMS-Bold"] = "Helvetica-Bold", e["ArialUnicodeMS-BoldItalic"] = "Helvetica-BoldOblique", e["ArialUnicodeMS-Italic"] = "Helvetica-Oblique", e["Courier-BoldItalic"] = "Courier-BoldOblique", e["Courier-Italic"] = "Courier-Oblique", e.CourierNew = "Courier", e["CourierNew-Bold"] = "Courier-Bold", e["CourierNew-BoldItalic"] = "Courier-BoldOblique", e["CourierNew-Italic"] = "Courier-Oblique", e["CourierNewPS-BoldItalicMT"] = "Courier-BoldOblique", e["CourierNewPS-BoldMT"] = "Courier-Bold", e["CourierNewPS-ItalicMT"] = "Courier-Oblique", e.CourierNewPSMT = "Courier", e["Helvetica-BoldItalic"] = "Helvetica-BoldOblique", e["Helvetica-Italic"] = "Helvetica-Oblique", e["Symbol-Bold"] = "Symbol", e["Symbol-BoldItalic"] = "Symbol", e["Symbol-Italic"] = "Symbol", e.TimesNewRoman = "Times-Roman", e["TimesNewRoman-Bold"] = "Times-Bold", e["TimesNewRoman-BoldItalic"] = "Times-BoldItalic", e["TimesNewRoman-Italic"] = "Times-Italic", e.TimesNewRomanPS = "Times-Roman", e["TimesNewRomanPS-Bold"] = "Times-Bold", e["TimesNewRomanPS-BoldItalic"] = "Times-BoldItalic", e["TimesNewRomanPS-BoldItalicMT"] = "Times-BoldItalic", e["TimesNewRomanPS-BoldMT"] = "Times-Bold", e["TimesNewRomanPS-Italic"] = "Times-Italic", e["TimesNewRomanPS-ItalicMT"] = "Times-Italic", e.TimesNewRomanPSMT = "Times-Roman", e["TimesNewRomanPSMT-Bold"] = "Times-Bold", e["TimesNewRomanPSMT-BoldItalic"] = "Times-BoldItalic", e["TimesNewRomanPSMT-Italic"] = "Times-Italic";
}), fB = Ce(function(e) {
  e.Courier = "FoxitFixed.pfb", e["Courier-Bold"] = "FoxitFixedBold.pfb", e["Courier-BoldOblique"] = "FoxitFixedBoldItalic.pfb", e["Courier-Oblique"] = "FoxitFixedItalic.pfb", e.Helvetica = "LiberationSans-Regular.ttf", e["Helvetica-Bold"] = "LiberationSans-Bold.ttf", e["Helvetica-BoldOblique"] = "LiberationSans-BoldItalic.ttf", e["Helvetica-Oblique"] = "LiberationSans-Italic.ttf", e["Times-Roman"] = "FoxitSerif.pfb", e["Times-Bold"] = "FoxitSerifBold.pfb", e["Times-BoldItalic"] = "FoxitSerifBoldItalic.pfb", e["Times-Italic"] = "FoxitSerifItalic.pfb", e.Symbol = "FoxitSymbol.pfb", e.ZapfDingbats = "FoxitDingbats.pfb", e["LiberationSans-Regular"] = "LiberationSans-Regular.ttf", e["LiberationSans-Bold"] = "LiberationSans-Bold.ttf", e["LiberationSans-Italic"] = "LiberationSans-Italic.ttf", e["LiberationSans-BoldItalic"] = "LiberationSans-BoldItalic.ttf";
}), Tc = Ce(function(e) {
  e.Calibri = "Helvetica", e["Calibri-Bold"] = "Helvetica-Bold", e["Calibri-BoldItalic"] = "Helvetica-BoldOblique", e["Calibri-Italic"] = "Helvetica-Oblique", e.CenturyGothic = "Helvetica", e["CenturyGothic-Bold"] = "Helvetica-Bold", e["CenturyGothic-BoldItalic"] = "Helvetica-BoldOblique", e["CenturyGothic-Italic"] = "Helvetica-Oblique", e.ComicSansMS = "Comic Sans MS", e["ComicSansMS-Bold"] = "Comic Sans MS-Bold", e["ComicSansMS-BoldItalic"] = "Comic Sans MS-BoldItalic", e["ComicSansMS-Italic"] = "Comic Sans MS-Italic", e.GillSansMT = "Helvetica", e["GillSansMT-Bold"] = "Helvetica-Bold", e["GillSansMT-BoldItalic"] = "Helvetica-BoldOblique", e["GillSansMT-Italic"] = "Helvetica-Oblique", e.Impact = "Helvetica", e["ItcSymbol-Bold"] = "Helvetica-Bold", e["ItcSymbol-BoldItalic"] = "Helvetica-BoldOblique", e["ItcSymbol-Book"] = "Helvetica", e["ItcSymbol-BookItalic"] = "Helvetica-Oblique", e["ItcSymbol-Medium"] = "Helvetica", e["ItcSymbol-MediumItalic"] = "Helvetica-Oblique", e.LucidaConsole = "Courier", e["LucidaConsole-Bold"] = "Courier-Bold", e["LucidaConsole-BoldItalic"] = "Courier-BoldOblique", e["LucidaConsole-Italic"] = "Courier-Oblique", e["LucidaSans-Demi"] = "Helvetica-Bold", e["MS-Gothic"] = "MS Gothic", e["MS-Gothic-Bold"] = "MS Gothic-Bold", e["MS-Gothic-BoldItalic"] = "MS Gothic-BoldItalic", e["MS-Gothic-Italic"] = "MS Gothic-Italic", e["MS-Mincho"] = "MS Mincho", e["MS-Mincho-Bold"] = "MS Mincho-Bold", e["MS-Mincho-BoldItalic"] = "MS Mincho-BoldItalic", e["MS-Mincho-Italic"] = "MS Mincho-Italic", e["MS-PGothic"] = "MS PGothic", e["MS-PGothic-Bold"] = "MS PGothic-Bold", e["MS-PGothic-BoldItalic"] = "MS PGothic-BoldItalic", e["MS-PGothic-Italic"] = "MS PGothic-Italic", e["MS-PMincho"] = "MS PMincho", e["MS-PMincho-Bold"] = "MS PMincho-Bold", e["MS-PMincho-BoldItalic"] = "MS PMincho-BoldItalic", e["MS-PMincho-Italic"] = "MS PMincho-Italic", e.NuptialScript = "Times-Italic", e.SegoeUISymbol = "Helvetica";
}), Vg = Ce(function(e) {
  e["Adobe Jenson"] = !0, e["Adobe Text"] = !0, e.Albertus = !0, e.Aldus = !0, e.Alexandria = !0, e.Algerian = !0, e["American Typewriter"] = !0, e.Antiqua = !0, e.Apex = !0, e.Arno = !0, e.Aster = !0, e.Aurora = !0, e.Baskerville = !0, e.Bell = !0, e.Bembo = !0, e["Bembo Schoolbook"] = !0, e.Benguiat = !0, e["Berkeley Old Style"] = !0, e["Bernhard Modern"] = !0, e["Berthold City"] = !0, e.Bodoni = !0, e["Bauer Bodoni"] = !0, e["Book Antiqua"] = !0, e.Bookman = !0, e["Bordeaux Roman"] = !0, e["Californian FB"] = !0, e.Calisto = !0, e.Calvert = !0, e.Capitals = !0, e.Cambria = !0, e.Cartier = !0, e.Caslon = !0, e.Catull = !0, e.Centaur = !0, e["Century Old Style"] = !0, e["Century Schoolbook"] = !0, e.Chaparral = !0, e["Charis SIL"] = !0, e.Cheltenham = !0, e["Cholla Slab"] = !0, e.Clarendon = !0, e.Clearface = !0, e.Cochin = !0, e.Colonna = !0, e["Computer Modern"] = !0, e["Concrete Roman"] = !0, e.Constantia = !0, e["Cooper Black"] = !0, e.Corona = !0, e.Ecotype = !0, e.Egyptienne = !0, e.Elephant = !0, e.Excelsior = !0, e.Fairfield = !0, e["FF Scala"] = !0, e.Folkard = !0, e.Footlight = !0, e.FreeSerif = !0, e["Friz Quadrata"] = !0, e.Garamond = !0, e.Gentium = !0, e.Georgia = !0, e.Gloucester = !0, e["Goudy Old Style"] = !0, e["Goudy Schoolbook"] = !0, e["Goudy Pro Font"] = !0, e.Granjon = !0, e["Guardian Egyptian"] = !0, e.Heather = !0, e.Hercules = !0, e["High Tower Text"] = !0, e.Hiroshige = !0, e["Hoefler Text"] = !0, e["Humana Serif"] = !0, e.Imprint = !0, e["Ionic No. 5"] = !0, e.Janson = !0, e.Joanna = !0, e.Korinna = !0, e.Lexicon = !0, e.LiberationSerif = !0, e["Liberation Serif"] = !0, e["Linux Libertine"] = !0, e.Literaturnaya = !0, e.Lucida = !0, e["Lucida Bright"] = !0, e.Melior = !0, e.Memphis = !0, e.Miller = !0, e.Minion = !0, e.Modern = !0, e["Mona Lisa"] = !0, e["Mrs Eaves"] = !0, e["MS Serif"] = !0, e["Museo Slab"] = !0, e["New York"] = !0, e["Nimbus Roman"] = !0, e["NPS Rawlinson Roadway"] = !0, e.NuptialScript = !0, e.Palatino = !0, e.Perpetua = !0, e.Plantin = !0, e["Plantin Schoolbook"] = !0, e.Playbill = !0, e["Poor Richard"] = !0, e["Rawlinson Roadway"] = !0, e.Renault = !0, e.Requiem = !0, e.Rockwell = !0, e.Roman = !0, e["Rotis Serif"] = !0, e.Sabon = !0, e.Scala = !0, e.Seagull = !0, e.Sistina = !0, e.Souvenir = !0, e.STIX = !0, e["Stone Informal"] = !0, e["Stone Serif"] = !0, e.Sylfaen = !0, e.Times = !0, e.Trajan = !0, e.Trinité = !0, e["Trump Mediaeval"] = !0, e.Utopia = !0, e["Vale Type"] = !0, e["Bitstream Vera"] = !0, e["Vera Serif"] = !0, e.Versailles = !0, e.Wanted = !0, e.Weiss = !0, e["Wide Latin"] = !0, e.Windsor = !0, e.XITS = !0;
}), lg = Ce(function(e) {
  e.Dingbats = !0, e.Symbol = !0, e.ZapfDingbats = !0, e.Wingdings = !0, e["Wingdings-Bold"] = !0, e["Wingdings-Regular"] = !0;
}), jo = Ce(function(e) {
  e[2] = 10, e[3] = 32, e[4] = 33, e[5] = 34, e[6] = 35, e[7] = 36, e[8] = 37, e[9] = 38, e[10] = 39, e[11] = 40, e[12] = 41, e[13] = 42, e[14] = 43, e[15] = 44, e[16] = 45, e[17] = 46, e[18] = 47, e[19] = 48, e[20] = 49, e[21] = 50, e[22] = 51, e[23] = 52, e[24] = 53, e[25] = 54, e[26] = 55, e[27] = 56, e[28] = 57, e[29] = 58, e[30] = 894, e[31] = 60, e[32] = 61, e[33] = 62, e[34] = 63, e[35] = 64, e[36] = 65, e[37] = 66, e[38] = 67, e[39] = 68, e[40] = 69, e[41] = 70, e[42] = 71, e[43] = 72, e[44] = 73, e[45] = 74, e[46] = 75, e[47] = 76, e[48] = 77, e[49] = 78, e[50] = 79, e[51] = 80, e[52] = 81, e[53] = 82, e[54] = 83, e[55] = 84, e[56] = 85, e[57] = 86, e[58] = 87, e[59] = 88, e[60] = 89, e[61] = 90, e[62] = 91, e[63] = 92, e[64] = 93, e[65] = 94, e[66] = 95, e[67] = 96, e[68] = 97, e[69] = 98, e[70] = 99, e[71] = 100, e[72] = 101, e[73] = 102, e[74] = 103, e[75] = 104, e[76] = 105, e[77] = 106, e[78] = 107, e[79] = 108, e[80] = 109, e[81] = 110, e[82] = 111, e[83] = 112, e[84] = 113, e[85] = 114, e[86] = 115, e[87] = 116, e[88] = 117, e[89] = 118, e[90] = 119, e[91] = 120, e[92] = 121, e[93] = 122, e[94] = 123, e[95] = 124, e[96] = 125, e[97] = 126, e[98] = 196, e[99] = 197, e[100] = 199, e[101] = 201, e[102] = 209, e[103] = 214, e[104] = 220, e[105] = 225, e[106] = 224, e[107] = 226, e[108] = 228, e[109] = 227, e[110] = 229, e[111] = 231, e[112] = 233, e[113] = 232, e[114] = 234, e[115] = 235, e[116] = 237, e[117] = 236, e[118] = 238, e[119] = 239, e[120] = 241, e[121] = 243, e[122] = 242, e[123] = 244, e[124] = 246, e[125] = 245, e[126] = 250, e[127] = 249, e[128] = 251, e[129] = 252, e[130] = 8224, e[131] = 176, e[132] = 162, e[133] = 163, e[134] = 167, e[135] = 8226, e[136] = 182, e[137] = 223, e[138] = 174, e[139] = 169, e[140] = 8482, e[141] = 180, e[142] = 168, e[143] = 8800, e[144] = 198, e[145] = 216, e[146] = 8734, e[147] = 177, e[148] = 8804, e[149] = 8805, e[150] = 165, e[151] = 181, e[152] = 8706, e[153] = 8721, e[154] = 8719, e[156] = 8747, e[157] = 170, e[158] = 186, e[159] = 8486, e[160] = 230, e[161] = 248, e[162] = 191, e[163] = 161, e[164] = 172, e[165] = 8730, e[166] = 402, e[167] = 8776, e[168] = 8710, e[169] = 171, e[170] = 187, e[171] = 8230, e[179] = 8220, e[180] = 8221, e[181] = 8216, e[182] = 8217, e[200] = 193, e[203] = 205, e[207] = 211, e[210] = 218, e[223] = 711, e[224] = 321, e[225] = 322, e[226] = 352, e[227] = 353, e[228] = 381, e[229] = 382, e[233] = 221, e[234] = 253, e[252] = 263, e[253] = 268, e[254] = 269, e[258] = 258, e[260] = 260, e[261] = 261, e[265] = 280, e[266] = 281, e[267] = 282, e[268] = 283, e[269] = 313, e[275] = 323, e[276] = 324, e[278] = 328, e[283] = 344, e[284] = 345, e[285] = 346, e[286] = 347, e[292] = 367, e[295] = 377, e[296] = 378, e[298] = 380, e[305] = 963, e[306] = 964, e[307] = 966, e[308] = 8215, e[309] = 8252, e[310] = 8319, e[311] = 8359, e[312] = 8592, e[313] = 8593, e[337] = 9552, e[493] = 1039, e[494] = 1040, e[672] = 1488, e[673] = 1489, e[674] = 1490, e[675] = 1491, e[676] = 1492, e[677] = 1493, e[678] = 1494, e[679] = 1495, e[680] = 1496, e[681] = 1497, e[682] = 1498, e[683] = 1499, e[684] = 1500, e[685] = 1501, e[686] = 1502, e[687] = 1503, e[688] = 1504, e[689] = 1505, e[690] = 1506, e[691] = 1507, e[692] = 1508, e[693] = 1509, e[694] = 1510, e[695] = 1511, e[696] = 1512, e[697] = 1513, e[698] = 1514, e[705] = 1524, e[706] = 8362, e[710] = 64288, e[711] = 64298, e[759] = 1617, e[761] = 1776, e[763] = 1778, e[775] = 1652, e[777] = 1764, e[778] = 1780, e[779] = 1781, e[780] = 1782, e[782] = 771, e[783] = 64726, e[786] = 8363, e[788] = 8532, e[790] = 768, e[791] = 769, e[792] = 768, e[795] = 803, e[797] = 64336, e[798] = 64337, e[799] = 64342, e[800] = 64343, e[801] = 64344, e[802] = 64345, e[803] = 64362, e[804] = 64363, e[805] = 64364, e[2424] = 7821, e[2425] = 7822, e[2426] = 7823, e[2427] = 7824, e[2428] = 7825, e[2429] = 7826, e[2430] = 7827, e[2433] = 7682, e[2678] = 8045, e[2679] = 8046, e[2830] = 1552, e[2838] = 686, e[2840] = 751, e[2842] = 753, e[2843] = 754, e[2844] = 755, e[2846] = 757, e[2856] = 767, e[2857] = 848, e[2858] = 849, e[2862] = 853, e[2863] = 854, e[2864] = 855, e[2865] = 861, e[2866] = 862, e[2906] = 7460, e[2908] = 7462, e[2909] = 7463, e[2910] = 7464, e[2912] = 7466, e[2913] = 7467, e[2914] = 7468, e[2916] = 7470, e[2917] = 7471, e[2918] = 7472, e[2920] = 7474, e[2921] = 7475, e[2922] = 7476, e[2924] = 7478, e[2925] = 7479, e[2926] = 7480, e[2928] = 7482, e[2929] = 7483, e[2930] = 7484, e[2932] = 7486, e[2933] = 7487, e[2934] = 7488, e[2936] = 7490, e[2937] = 7491, e[2938] = 7492, e[2940] = 7494, e[2941] = 7495, e[2942] = 7496, e[2944] = 7498, e[2946] = 7500, e[2948] = 7502, e[2950] = 7504, e[2951] = 7505, e[2952] = 7506, e[2954] = 7508, e[2955] = 7509, e[2956] = 7510, e[2958] = 7512, e[2959] = 7513, e[2960] = 7514, e[2962] = 7516, e[2963] = 7517, e[2964] = 7518, e[2966] = 7520, e[2967] = 7521, e[2968] = 7522, e[2970] = 7524, e[2971] = 7525, e[2972] = 7526, e[2974] = 7528, e[2975] = 7529, e[2976] = 7530, e[2978] = 1537, e[2979] = 1538, e[2980] = 1539, e[2982] = 1549, e[2983] = 1551, e[2984] = 1552, e[2986] = 1554, e[2987] = 1555, e[2988] = 1556, e[2990] = 1623, e[2991] = 1624, e[2995] = 1775, e[2999] = 1791, e[3002] = 64290, e[3003] = 64291, e[3004] = 64292, e[3006] = 64294, e[3007] = 64295, e[3008] = 64296, e[3011] = 1900, e[3014] = 8223, e[3015] = 8244, e[3017] = 7532, e[3018] = 7533, e[3019] = 7534, e[3075] = 7590, e[3076] = 7591, e[3079] = 7594, e[3080] = 7595, e[3083] = 7598, e[3084] = 7599, e[3087] = 7602, e[3088] = 7603, e[3091] = 7606, e[3092] = 7607, e[3095] = 7610, e[3096] = 7611, e[3099] = 7614, e[3100] = 7615, e[3103] = 7618, e[3104] = 7619, e[3107] = 8337, e[3108] = 8338, e[3116] = 1884, e[3119] = 1885, e[3120] = 1885, e[3123] = 1886, e[3124] = 1886, e[3127] = 1887, e[3128] = 1887, e[3131] = 1888, e[3132] = 1888, e[3135] = 1889, e[3136] = 1889, e[3139] = 1890, e[3140] = 1890, e[3143] = 1891, e[3144] = 1891, e[3147] = 1892, e[3148] = 1892, e[3153] = 580, e[3154] = 581, e[3157] = 584, e[3158] = 585, e[3161] = 588, e[3162] = 589, e[3165] = 891, e[3166] = 892, e[3169] = 1274, e[3170] = 1275, e[3173] = 1278, e[3174] = 1279, e[3181] = 7622, e[3182] = 7623, e[3282] = 11799, e[3316] = 578, e[3379] = 42785, e[3393] = 1159, e[3416] = 8377;
}), uB = Ce(function(e) {
  e[227] = 322, e[264] = 261, e[291] = 346;
}), dB = Ce(function(e) {
  e[1] = 32, e[4] = 65, e[5] = 192, e[6] = 193, e[9] = 196, e[17] = 66, e[18] = 67, e[21] = 268, e[24] = 68, e[28] = 69, e[29] = 200, e[30] = 201, e[32] = 282, e[38] = 70, e[39] = 71, e[44] = 72, e[47] = 73, e[48] = 204, e[49] = 205, e[58] = 74, e[60] = 75, e[62] = 76, e[68] = 77, e[69] = 78, e[75] = 79, e[76] = 210, e[80] = 214, e[87] = 80, e[89] = 81, e[90] = 82, e[92] = 344, e[94] = 83, e[97] = 352, e[100] = 84, e[104] = 85, e[109] = 220, e[115] = 86, e[116] = 87, e[121] = 88, e[122] = 89, e[124] = 221, e[127] = 90, e[129] = 381, e[258] = 97, e[259] = 224, e[260] = 225, e[263] = 228, e[268] = 261, e[271] = 98, e[272] = 99, e[273] = 263, e[275] = 269, e[282] = 100, e[286] = 101, e[287] = 232, e[288] = 233, e[290] = 283, e[295] = 281, e[296] = 102, e[336] = 103, e[346] = 104, e[349] = 105, e[350] = 236, e[351] = 237, e[361] = 106, e[364] = 107, e[367] = 108, e[371] = 322, e[373] = 109, e[374] = 110, e[381] = 111, e[382] = 242, e[383] = 243, e[386] = 246, e[393] = 112, e[395] = 113, e[396] = 114, e[398] = 345, e[400] = 115, e[401] = 347, e[403] = 353, e[410] = 116, e[437] = 117, e[442] = 252, e[448] = 118, e[449] = 119, e[454] = 120, e[455] = 121, e[457] = 253, e[460] = 122, e[462] = 382, e[463] = 380, e[853] = 44, e[855] = 58, e[856] = 46, e[876] = 47, e[878] = 45, e[882] = 45, e[894] = 40, e[895] = 41, e[896] = 91, e[897] = 93, e[923] = 64, e[1004] = 48, e[1005] = 49, e[1006] = 50, e[1007] = 51, e[1008] = 52, e[1009] = 53, e[1010] = 54, e[1011] = 55, e[1012] = 56, e[1013] = 57, e[1081] = 37, e[1085] = 43, e[1086] = 45;
});
function Xo(e) {
  const A = wa(e);
  return ir()[A];
}
function Vo(e) {
  const A = wa(e);
  return !!(ir()[A] || Tc()[A] || Vg()[A] || lg()[A]);
}
class Us {
  constructor(A = []) {
    this._map = A;
  }
  get length() {
    return this._map.length;
  }
  forEach(A) {
    for (const t in this._map)
      A(t, this._map[t].charCodeAt(0));
  }
  has(A) {
    return this._map[A] !== void 0;
  }
  get(A) {
    return this._map[A];
  }
  charCodeOf(A) {
    const t = this._map;
    if (t.length <= 65536)
      return t.indexOf(A);
    for (const i in t)
      if (t[i] === A)
        return i | 0;
    return -1;
  }
  amend(A) {
    for (const t in A)
      this._map[t] = A[t];
  }
}
class Gt {
  constructor(A, t) {
    this.firstChar = A, this.lastChar = t;
  }
  get length() {
    return this.lastChar + 1 - this.firstChar;
  }
  forEach(A) {
    for (let t = this.firstChar, i = this.lastChar; t <= i; t++)
      A(t, t);
  }
  has(A) {
    return this.firstChar <= A && A <= this.lastChar;
  }
  get(A) {
    if (this.firstChar <= A && A <= this.lastChar)
      return String.fromCharCode(A);
  }
  charCodeOf(A) {
    return Number.isInteger(A) && A >= this.firstChar && A <= this.lastChar ? A : -1;
  }
  amend(A) {
    WA("Should not call amend()");
  }
}
class yr {
  constructor(A, t) {
    this.properties = t;
    const i = new jg(A, t, j0);
    this.cff = i.parse(), this.cff.duplicateFirstGlyph();
    const s = new ya(this.cff);
    this.seacs = this.cff.seacs;
    try {
      this.data = s.compile();
    } catch {
      k("Failed to compile font " + t.loadedName), this.data = A;
    }
    this._createBuiltInEncoding();
  }
  get numGlyphs() {
    return this.cff.charStrings.count;
  }
  getCharset() {
    return this.cff.charset.charset;
  }
  getGlyphMapping() {
    const A = this.cff, t = this.properties, {
      cidToGidMap: i,
      cMap: s
    } = t, a = A.charset.charset;
    let n, r;
    if (t.composite) {
      let o;
      if ((i == null ? void 0 : i.length) > 0) {
        o = /* @__PURE__ */ Object.create(null);
        for (let c = 0, l = i.length; c < l; c++) {
          const C = i[c];
          C !== void 0 && (o[C] = c);
        }
      }
      n = /* @__PURE__ */ Object.create(null);
      let I;
      if (A.isCIDFont)
        for (r = 0; r < a.length; r++) {
          const c = a[r];
          I = s.charCodeOf(c), (o == null ? void 0 : o[I]) !== void 0 && (I = o[I]), n[I] = r;
        }
      else
        for (r = 0; r < A.charStrings.count; r++)
          I = s.charCodeOf(r), n[I] = r;
      return n;
    }
    let g = A.encoding ? A.encoding.encoding : null;
    return t.isInternalFont && (g = t.defaultEncoding), n = vc(t, g, a), n;
  }
  hasGlyphId(A) {
    return this.cff.hasGlyphId(A);
  }
  _createBuiltInEncoding() {
    const {
      charset: A,
      encoding: t
    } = this.cff;
    if (!A || !t)
      return;
    const i = A.charset, s = t.encoding, a = [];
    for (const n in s) {
      const r = s[n];
      if (r >= 0) {
        const g = i[r];
        g && (a[n] = g);
      }
    }
    a.length > 0 && (this.properties.builtInEncoding = a);
  }
}
function Ci(e, A) {
  return (e[A] << 24 | e[A + 1] << 16 | e[A + 2] << 8 | e[A + 3]) >>> 0;
}
function Re(e, A) {
  return e[A] << 8 | e[A + 1];
}
function U0(e, A) {
  return (e[A] << 24 | e[A + 1] << 16) >> 16;
}
function _o(e, A) {
  return e[A] << 24 >> 24;
}
function Vi(e, A) {
  return U0(e, A) / 16384;
}
function Cg(e) {
  const A = e.length;
  let t = 32768;
  return A < 1240 ? t = 107 : A < 33900 && (t = 1131), t;
}
function xB(e, A, t) {
  const i = Re(e, A + 2) === 1 ? Ci(e, A + 8) : Ci(e, A + 16), s = Re(e, A + i);
  let a, n, r;
  if (s === 4) {
    Re(e, A + i + 2);
    const g = Re(e, A + i + 6) >> 1;
    for (n = A + i + 14, a = [], r = 0; r < g; r++, n += 2)
      a[r] = {
        end: Re(e, n)
      };
    for (n += 2, r = 0; r < g; r++, n += 2)
      a[r].start = Re(e, n);
    for (r = 0; r < g; r++, n += 2)
      a[r].idDelta = Re(e, n);
    for (r = 0; r < g; r++, n += 2) {
      let o = Re(e, n);
      if (o !== 0) {
        a[r].ids = [];
        for (let I = 0, c = a[r].end - a[r].start + 1; I < c; I++)
          a[r].ids[I] = Re(e, n + o), o += 2;
      }
    }
    return a;
  } else if (s === 12) {
    const g = Ci(e, A + i + 12);
    for (n = A + i + 16, a = [], r = 0; r < g; r++)
      A = Ci(e, n), a.push({
        start: A,
        end: Ci(e, n + 4),
        idDelta: Ci(e, n + 8) - A
      }), n += 12;
    return a;
  }
  throw new T(`unsupported cmap: ${s}`);
}
function mB(e, A, t, i) {
  var r, g, o;
  const s = {}, n = new jg(new Ee(e, A, t - A), s, i).parse();
  return {
    glyphs: n.charStrings.objects,
    subrs: (g = (r = n.topDict.privateDict) == null ? void 0 : r.subrsIndex) == null ? void 0 : g.objects,
    gsubrs: (o = n.globalSubrIndex) == null ? void 0 : o.objects,
    isCFFCIDFont: n.isCIDFont,
    fdSelect: n.fdSelect,
    fdArray: n.fdArray
  };
}
function pB(e, A, t) {
  let i, s;
  t ? (i = 4, s = Ci) : (i = 2, s = (r, g) => 2 * Re(r, g));
  const a = [];
  let n = s(A, 0);
  for (let r = i; r < A.length; r += i) {
    const g = s(A, r);
    a.push(e.subarray(n, g)), n = g;
  }
  return a;
}
function kn(e, A) {
  const t = A.codePointAt(0);
  let i = 0, s = 0, a = e.length - 1;
  for (; s < a; ) {
    const n = s + a + 1 >> 1;
    t < e[n].start ? a = n - 1 : s = n;
  }
  return e[s].start <= t && t <= e[s].end && (i = e[s].idDelta + (e[s].ids ? e[s].ids[t - e[s].start] : t) & 65535), {
    charCode: t,
    glyphId: i
  };
}
function qc(e, A, t) {
  function i(c, l) {
    A.add(_e.MOVE_TO, [c, l]);
  }
  function s(c, l) {
    A.add(_e.LINE_TO, [c, l]);
  }
  function a(c, l, C, h) {
    A.add(_e.QUADRATIC_CURVE_TO, [c, l, C, h]);
  }
  let n = 0;
  const r = U0(e, n);
  let g, o = 0, I = 0;
  if (n += 10, r < 0)
    do {
      g = Re(e, n);
      const c = Re(e, n + 2);
      n += 4;
      let l, C;
      g & 1 ? (g & 2 ? (l = U0(e, n), C = U0(e, n + 2)) : (l = Re(e, n), C = Re(e, n + 2)), n += 4) : g & 2 ? (l = _o(e, n++), C = _o(e, n++)) : (l = e[n++], C = e[n++]), g & 2 ? (o = l, I = C) : (o = 0, I = 0);
      let h = 1, B = 1, Q = 0, E = 0;
      g & 8 ? (h = B = Vi(e, n), n += 2) : g & 64 ? (h = Vi(e, n), B = Vi(e, n + 2), n += 4) : g & 128 && (h = Vi(e, n), Q = Vi(e, n + 2), E = Vi(e, n + 4), B = Vi(e, n + 6), n += 8);
      const f = t.glyphs[c];
      f && (A.add(_e.SAVE), A.add(_e.TRANSFORM, [h, Q, E, B, o, I]), qc(f, A, t), A.add(_e.RESTORE));
    } while (g & 32);
  else {
    const c = [];
    let l, C;
    for (l = 0; l < r; l++)
      c.push(Re(e, n)), n += 2;
    const h = Re(e, n);
    n += 2 + h;
    const B = c.at(-1) + 1, Q = [];
    for (; Q.length < B; ) {
      g = e[n++];
      let f = 1;
      for (g & 8 && (f += e[n++]); f-- > 0; )
        Q.push({
          flags: g
        });
    }
    for (l = 0; l < B; l++) {
      switch (Q[l].flags & 18) {
        case 0:
          o += U0(e, n), n += 2;
          break;
        case 2:
          o -= e[n++];
          break;
        case 18:
          o += e[n++];
          break;
      }
      Q[l].x = o;
    }
    for (l = 0; l < B; l++) {
      switch (Q[l].flags & 36) {
        case 0:
          I += U0(e, n), n += 2;
          break;
        case 4:
          I -= e[n++];
          break;
        case 36:
          I += e[n++];
          break;
      }
      Q[l].y = I;
    }
    let E = 0;
    for (n = 0; n < r; n++) {
      const f = c[n], d = Q.slice(E, f + 1);
      if (d[0].flags & 1)
        d.push(d[0]);
      else if (d.at(-1).flags & 1)
        d.unshift(d.at(-1));
      else {
        const u = {
          flags: 1,
          x: (d[0].x + d.at(-1).x) / 2,
          y: (d[0].y + d.at(-1).y) / 2
        };
        d.unshift(u), d.push(u);
      }
      for (i(d[0].x, d[0].y), l = 1, C = d.length; l < C; l++)
        d[l].flags & 1 ? s(d[l].x, d[l].y) : d[l + 1].flags & 1 ? (a(d[l].x, d[l].y, d[l + 1].x, d[l + 1].y), l++) : a(d[l].x, d[l].y, (d[l].x + d[l + 1].x) / 2, (d[l].y + d[l + 1].y) / 2);
      E = f + 1;
    }
  }
}
function hg(e, A, t, i) {
  function s(l, C) {
    A.add(_e.MOVE_TO, [l, C]);
  }
  function a(l, C) {
    A.add(_e.LINE_TO, [l, C]);
  }
  function n(l, C, h, B, Q, E) {
    A.add(_e.BEZIER_CURVE_TO, [l, C, h, B, Q, E]);
  }
  const r = [];
  let g = 0, o = 0, I = 0;
  function c(l) {
    var h;
    let C = 0;
    for (; C < l.length; ) {
      let B = !1, Q = l[C++], E, f, d, u, x, p, m, D, S;
      switch (Q) {
        case 1:
          I += r.length >> 1, B = !0;
          break;
        case 3:
          I += r.length >> 1, B = !0;
          break;
        case 4:
          o += r.pop(), s(g, o), B = !0;
          break;
        case 5:
          for (; r.length > 0; )
            g += r.shift(), o += r.shift(), a(g, o);
          break;
        case 6:
          for (; r.length > 0 && (g += r.shift(), a(g, o), r.length !== 0); )
            o += r.shift(), a(g, o);
          break;
        case 7:
          for (; r.length > 0 && (o += r.shift(), a(g, o), r.length !== 0); )
            g += r.shift(), a(g, o);
          break;
        case 8:
          for (; r.length > 0; )
            E = g + r.shift(), d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u + r.shift(), n(E, d, f, u, g, o);
          break;
        case 10:
          if (D = r.pop(), S = null, t.isCFFCIDFont) {
            const y = t.fdSelect.getFDIndex(i);
            if (y >= 0 && y < t.fdArray.length) {
              const H = t.fdArray[y];
              let G;
              (h = H.privateDict) != null && h.subrsIndex && (G = H.privateDict.subrsIndex.objects), G && (D += Cg(G), S = G[D]);
            } else
              k("Invalid fd index for glyph index.");
          } else
            S = t.subrs[D + t.subrsBias];
          S && c(S);
          break;
        case 11:
          return;
        case 12:
          switch (Q = l[C++], Q) {
            case 34:
              E = g + r.shift(), f = E + r.shift(), x = o + r.shift(), g = f + r.shift(), n(E, o, f, x, g, x), E = g + r.shift(), f = E + r.shift(), g = f + r.shift(), n(E, x, f, o, g, o);
              break;
            case 35:
              E = g + r.shift(), d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u + r.shift(), n(E, d, f, u, g, o), E = g + r.shift(), d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u + r.shift(), n(E, d, f, u, g, o), r.pop();
              break;
            case 36:
              E = g + r.shift(), x = o + r.shift(), f = E + r.shift(), p = x + r.shift(), g = f + r.shift(), n(E, x, f, p, g, p), E = g + r.shift(), f = E + r.shift(), m = p + r.shift(), g = f + r.shift(), n(E, p, f, m, g, o);
              break;
            case 37:
              const y = g, H = o;
              E = g + r.shift(), d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u + r.shift(), n(E, d, f, u, g, o), E = g + r.shift(), d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f, o = u, Math.abs(g - y) > Math.abs(o - H) ? g += r.shift() : o += r.shift(), n(E, d, f, u, g, o);
              break;
            default:
              throw new T(`unknown operator: 12 ${Q}`);
          }
          break;
        case 14:
          if (r.length >= 4) {
            const y = r.pop(), H = r.pop();
            o = r.pop(), g = r.pop(), A.add(_e.SAVE), A.add(_e.TRANSLATE, [g, o]);
            let G = kn(t.cmap, String.fromCharCode(t.glyphNameMap[fi[y]]));
            hg(t.glyphs[G.glyphId], A, t, G.glyphId), A.add(_e.RESTORE), G = kn(t.cmap, String.fromCharCode(t.glyphNameMap[fi[H]])), hg(t.glyphs[G.glyphId], A, t, G.glyphId);
          }
          return;
        case 18:
          I += r.length >> 1, B = !0;
          break;
        case 19:
          I += r.length >> 1, C += I + 7 >> 3, B = !0;
          break;
        case 20:
          I += r.length >> 1, C += I + 7 >> 3, B = !0;
          break;
        case 21:
          o += r.pop(), g += r.pop(), s(g, o), B = !0;
          break;
        case 22:
          g += r.pop(), s(g, o), B = !0;
          break;
        case 23:
          I += r.length >> 1, B = !0;
          break;
        case 24:
          for (; r.length > 2; )
            E = g + r.shift(), d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u + r.shift(), n(E, d, f, u, g, o);
          g += r.shift(), o += r.shift(), a(g, o);
          break;
        case 25:
          for (; r.length > 6; )
            g += r.shift(), o += r.shift(), a(g, o);
          E = g + r.shift(), d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u + r.shift(), n(E, d, f, u, g, o);
          break;
        case 26:
          for (r.length % 2 && (g += r.shift()); r.length > 0; )
            E = g, d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f, o = u + r.shift(), n(E, d, f, u, g, o);
          break;
        case 27:
          for (r.length % 2 && (o += r.shift()); r.length > 0; )
            E = g + r.shift(), d = o, f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u, n(E, d, f, u, g, o);
          break;
        case 28:
          r.push((l[C] << 24 | l[C + 1] << 16) >> 16), C += 2;
          break;
        case 29:
          D = r.pop() + t.gsubrsBias, S = t.gsubrs[D], S && c(S);
          break;
        case 30:
          for (; r.length > 0 && (E = g, d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u + (r.length === 1 ? r.shift() : 0), n(E, d, f, u, g, o), r.length !== 0); )
            E = g + r.shift(), d = o, f = E + r.shift(), u = d + r.shift(), o = u + r.shift(), g = f + (r.length === 1 ? r.shift() : 0), n(E, d, f, u, g, o);
          break;
        case 31:
          for (; r.length > 0 && (E = g + r.shift(), d = o, f = E + r.shift(), u = d + r.shift(), o = u + r.shift(), g = f + (r.length === 1 ? r.shift() : 0), n(E, d, f, u, g, o), r.length !== 0); )
            E = g, d = o + r.shift(), f = E + r.shift(), u = d + r.shift(), g = f + r.shift(), o = u + (r.length === 1 ? r.shift() : 0), n(E, d, f, u, g, o);
          break;
        default:
          if (Q < 32)
            throw new T(`unknown operator: ${Q}`);
          Q < 247 ? r.push(Q - 139) : Q < 251 ? r.push((Q - 247) * 256 + l[C++] + 108) : Q < 255 ? r.push(-(Q - 251) * 256 - l[C++] - 108) : (r.push((l[C] << 24 | l[C + 1] << 16 | l[C + 2] << 8 | l[C + 3]) / 65536), C += 4);
          break;
      }
      B && (r.length = 0);
    }
  }
  c(e);
}
const zo = [];
class yB {
  constructor() {
    et(this, "cmds", []);
  }
  add(A, t) {
    if (t)
      if (rt(t, null))
        this.cmds.push(A, ...t);
      else {
        k(`Commands.add - "${A}" has at least one non-number arg: "${t}".`);
        const i = t.map((s) => typeof s == "number" ? s : 0);
        this.cmds.push(A, ...i);
      }
    else
      this.cmds.push(A);
  }
}
class Pc {
  constructor(A) {
    this.fontMatrix = A, this.compiledGlyphs = /* @__PURE__ */ Object.create(null), this.compiledCharCodeToGlyphId = /* @__PURE__ */ Object.create(null);
  }
  getPathJs(A) {
    var n;
    const {
      charCode: t,
      glyphId: i
    } = kn(this.cmap, A);
    let s = this.compiledGlyphs[i], a;
    if (!s) {
      try {
        s = this.compileGlyph(this.glyphs[i], i);
      } catch (r) {
        s = zo, a = r;
      }
      this.compiledGlyphs[i] = s;
    }
    if ((n = this.compiledCharCodeToGlyphId)[t] ?? (n[t] = i), a)
      throw a;
    return s;
  }
  compileGlyph(A, t) {
    if (!A || A.length === 0 || A[0] === 14)
      return zo;
    let i = this.fontMatrix;
    if (this.isCFFCIDFont) {
      const a = this.fdSelect.getFDIndex(t);
      a >= 0 && a < this.fdArray.length ? i = this.fdArray[a].getByName("FontMatrix") || c0 : k("Invalid fd index for glyph index.");
    }
    const s = new yB();
    return s.add(_e.SAVE), s.add(_e.TRANSFORM, i.slice()), s.add(_e.SCALE), this.compileGlyphImpl(A, s, t), s.add(_e.RESTORE), s.cmds;
  }
  compileGlyphImpl() {
    WA("Children classes should implement this.");
  }
  hasBuiltPath(A) {
    const {
      charCode: t,
      glyphId: i
    } = kn(this.cmap, A);
    return this.compiledGlyphs[i] !== void 0 && this.compiledCharCodeToGlyphId[t] !== void 0;
  }
}
class wB extends Pc {
  constructor(A, t, i) {
    super(i || [488e-6, 0, 0, 488e-6, 0, 0]), this.glyphs = A, this.cmap = t;
  }
  compileGlyphImpl(A, t) {
    qc(A, t, this);
  }
}
class bB extends Pc {
  constructor(A, t, i, s) {
    super(i || [1e-3, 0, 0, 1e-3, 0, 0]), this.glyphs = A.glyphs, this.gsubrs = A.gsubrs || [], this.subrs = A.subrs || [], this.cmap = t, this.glyphNameMap = s || si(), this.gsubrsBias = Cg(this.gsubrs), this.subrsBias = Cg(this.subrs), this.isCFFCIDFont = A.isCFFCIDFont, this.fdSelect = A.fdSelect, this.fdArray = A.fdArray;
  }
  compileGlyphImpl(A, t, i) {
    hg(A, t, this, i);
  }
}
class DB {
  static create(A, t) {
    const i = new Uint8Array(A.data);
    let s, a, n, r, g, o;
    const I = Re(i, 4);
    for (let c = 0, l = 12; c < I; c++, l += 16) {
      const C = lt(i.subarray(l, l + 4)), h = Ci(i, l + 8), B = Ci(i, l + 12);
      switch (C) {
        case "cmap":
          s = xB(i, h);
          break;
        case "glyf":
          a = i.subarray(h, h + B);
          break;
        case "loca":
          n = i.subarray(h, h + B);
          break;
        case "head":
          o = Re(i, h + 18), g = Re(i, h + 50);
          break;
        case "CFF ":
          r = mB(i, h, h + B, t);
          break;
      }
    }
    if (a) {
      const c = o ? [1 / o, 0, 0, 1 / o, 0, 0] : A.fontMatrix;
      return new wB(pB(a, n, g), s, c);
    }
    return new bB(r, s, A.fontMatrix, A.glyphNameMap);
  }
}
const kB = Ce(function(e) {
  e.Courier = 600, e["Courier-Bold"] = 600, e["Courier-BoldOblique"] = 600, e["Courier-Oblique"] = 600, e.Helvetica = Ce(function(A) {
    A.space = 278, A.exclam = 278, A.quotedbl = 355, A.numbersign = 556, A.dollar = 556, A.percent = 889, A.ampersand = 667, A.quoteright = 222, A.parenleft = 333, A.parenright = 333, A.asterisk = 389, A.plus = 584, A.comma = 278, A.hyphen = 333, A.period = 278, A.slash = 278, A.zero = 556, A.one = 556, A.two = 556, A.three = 556, A.four = 556, A.five = 556, A.six = 556, A.seven = 556, A.eight = 556, A.nine = 556, A.colon = 278, A.semicolon = 278, A.less = 584, A.equal = 584, A.greater = 584, A.question = 556, A.at = 1015, A.A = 667, A.B = 667, A.C = 722, A.D = 722, A.E = 667, A.F = 611, A.G = 778, A.H = 722, A.I = 278, A.J = 500, A.K = 667, A.L = 556, A.M = 833, A.N = 722, A.O = 778, A.P = 667, A.Q = 778, A.R = 722, A.S = 667, A.T = 611, A.U = 722, A.V = 667, A.W = 944, A.X = 667, A.Y = 667, A.Z = 611, A.bracketleft = 278, A.backslash = 278, A.bracketright = 278, A.asciicircum = 469, A.underscore = 556, A.quoteleft = 222, A.a = 556, A.b = 556, A.c = 500, A.d = 556, A.e = 556, A.f = 278, A.g = 556, A.h = 556, A.i = 222, A.j = 222, A.k = 500, A.l = 222, A.m = 833, A.n = 556, A.o = 556, A.p = 556, A.q = 556, A.r = 333, A.s = 500, A.t = 278, A.u = 556, A.v = 500, A.w = 722, A.x = 500, A.y = 500, A.z = 500, A.braceleft = 334, A.bar = 260, A.braceright = 334, A.asciitilde = 584, A.exclamdown = 333, A.cent = 556, A.sterling = 556, A.fraction = 167, A.yen = 556, A.florin = 556, A.section = 556, A.currency = 556, A.quotesingle = 191, A.quotedblleft = 333, A.guillemotleft = 556, A.guilsinglleft = 333, A.guilsinglright = 333, A.fi = 500, A.fl = 500, A.endash = 556, A.dagger = 556, A.daggerdbl = 556, A.periodcentered = 278, A.paragraph = 537, A.bullet = 350, A.quotesinglbase = 222, A.quotedblbase = 333, A.quotedblright = 333, A.guillemotright = 556, A.ellipsis = 1e3, A.perthousand = 1e3, A.questiondown = 611, A.grave = 333, A.acute = 333, A.circumflex = 333, A.tilde = 333, A.macron = 333, A.breve = 333, A.dotaccent = 333, A.dieresis = 333, A.ring = 333, A.cedilla = 333, A.hungarumlaut = 333, A.ogonek = 333, A.caron = 333, A.emdash = 1e3, A.AE = 1e3, A.ordfeminine = 370, A.Lslash = 556, A.Oslash = 778, A.OE = 1e3, A.ordmasculine = 365, A.ae = 889, A.dotlessi = 278, A.lslash = 222, A.oslash = 611, A.oe = 944, A.germandbls = 611, A.Idieresis = 278, A.eacute = 556, A.abreve = 556, A.uhungarumlaut = 556, A.ecaron = 556, A.Ydieresis = 667, A.divide = 584, A.Yacute = 667, A.Acircumflex = 667, A.aacute = 556, A.Ucircumflex = 722, A.yacute = 500, A.scommaaccent = 500, A.ecircumflex = 556, A.Uring = 722, A.Udieresis = 722, A.aogonek = 556, A.Uacute = 722, A.uogonek = 556, A.Edieresis = 667, A.Dcroat = 722, A.commaaccent = 250, A.copyright = 737, A.Emacron = 667, A.ccaron = 500, A.aring = 556, A.Ncommaaccent = 722, A.lacute = 222, A.agrave = 556, A.Tcommaaccent = 611, A.Cacute = 722, A.atilde = 556, A.Edotaccent = 667, A.scaron = 500, A.scedilla = 500, A.iacute = 278, A.lozenge = 471, A.Rcaron = 722, A.Gcommaaccent = 778, A.ucircumflex = 556, A.acircumflex = 556, A.Amacron = 667, A.rcaron = 333, A.ccedilla = 500, A.Zdotaccent = 611, A.Thorn = 667, A.Omacron = 778, A.Racute = 722, A.Sacute = 667, A.dcaron = 643, A.Umacron = 722, A.uring = 556, A.threesuperior = 333, A.Ograve = 778, A.Agrave = 667, A.Abreve = 667, A.multiply = 584, A.uacute = 556, A.Tcaron = 611, A.partialdiff = 476, A.ydieresis = 500, A.Nacute = 722, A.icircumflex = 278, A.Ecircumflex = 667, A.adieresis = 556, A.edieresis = 556, A.cacute = 500, A.nacute = 556, A.umacron = 556, A.Ncaron = 722, A.Iacute = 278, A.plusminus = 584, A.brokenbar = 260, A.registered = 737, A.Gbreve = 778, A.Idotaccent = 278, A.summation = 600, A.Egrave = 667, A.racute = 333, A.omacron = 556, A.Zacute = 611, A.Zcaron = 611, A.greaterequal = 549, A.Eth = 722, A.Ccedilla = 722, A.lcommaaccent = 222, A.tcaron = 317, A.eogonek = 556, A.Uogonek = 722, A.Aacute = 667, A.Adieresis = 667, A.egrave = 556, A.zacute = 500, A.iogonek = 222, A.Oacute = 778, A.oacute = 556, A.amacron = 556, A.sacute = 500, A.idieresis = 278, A.Ocircumflex = 778, A.Ugrave = 722, A.Delta = 612, A.thorn = 556, A.twosuperior = 333, A.Odieresis = 778, A.mu = 556, A.igrave = 278, A.ohungarumlaut = 556, A.Eogonek = 667, A.dcroat = 556, A.threequarters = 834, A.Scedilla = 667, A.lcaron = 299, A.Kcommaaccent = 667, A.Lacute = 556, A.trademark = 1e3, A.edotaccent = 556, A.Igrave = 278, A.Imacron = 278, A.Lcaron = 556, A.onehalf = 834, A.lessequal = 549, A.ocircumflex = 556, A.ntilde = 556, A.Uhungarumlaut = 722, A.Eacute = 667, A.emacron = 556, A.gbreve = 556, A.onequarter = 834, A.Scaron = 667, A.Scommaaccent = 667, A.Ohungarumlaut = 778, A.degree = 400, A.ograve = 556, A.Ccaron = 722, A.ugrave = 556, A.radical = 453, A.Dcaron = 722, A.rcommaaccent = 333, A.Ntilde = 722, A.otilde = 556, A.Rcommaaccent = 722, A.Lcommaaccent = 556, A.Atilde = 667, A.Aogonek = 667, A.Aring = 667, A.Otilde = 778, A.zdotaccent = 500, A.Ecaron = 667, A.Iogonek = 278, A.kcommaaccent = 500, A.minus = 584, A.Icircumflex = 278, A.ncaron = 556, A.tcommaaccent = 278, A.logicalnot = 584, A.odieresis = 556, A.udieresis = 556, A.notequal = 549, A.gcommaaccent = 556, A.eth = 556, A.zcaron = 500, A.ncommaaccent = 556, A.onesuperior = 333, A.imacron = 278, A.Euro = 556;
  }), e["Helvetica-Bold"] = Ce(function(A) {
    A.space = 278, A.exclam = 333, A.quotedbl = 474, A.numbersign = 556, A.dollar = 556, A.percent = 889, A.ampersand = 722, A.quoteright = 278, A.parenleft = 333, A.parenright = 333, A.asterisk = 389, A.plus = 584, A.comma = 278, A.hyphen = 333, A.period = 278, A.slash = 278, A.zero = 556, A.one = 556, A.two = 556, A.three = 556, A.four = 556, A.five = 556, A.six = 556, A.seven = 556, A.eight = 556, A.nine = 556, A.colon = 333, A.semicolon = 333, A.less = 584, A.equal = 584, A.greater = 584, A.question = 611, A.at = 975, A.A = 722, A.B = 722, A.C = 722, A.D = 722, A.E = 667, A.F = 611, A.G = 778, A.H = 722, A.I = 278, A.J = 556, A.K = 722, A.L = 611, A.M = 833, A.N = 722, A.O = 778, A.P = 667, A.Q = 778, A.R = 722, A.S = 667, A.T = 611, A.U = 722, A.V = 667, A.W = 944, A.X = 667, A.Y = 667, A.Z = 611, A.bracketleft = 333, A.backslash = 278, A.bracketright = 333, A.asciicircum = 584, A.underscore = 556, A.quoteleft = 278, A.a = 556, A.b = 611, A.c = 556, A.d = 611, A.e = 556, A.f = 333, A.g = 611, A.h = 611, A.i = 278, A.j = 278, A.k = 556, A.l = 278, A.m = 889, A.n = 611, A.o = 611, A.p = 611, A.q = 611, A.r = 389, A.s = 556, A.t = 333, A.u = 611, A.v = 556, A.w = 778, A.x = 556, A.y = 556, A.z = 500, A.braceleft = 389, A.bar = 280, A.braceright = 389, A.asciitilde = 584, A.exclamdown = 333, A.cent = 556, A.sterling = 556, A.fraction = 167, A.yen = 556, A.florin = 556, A.section = 556, A.currency = 556, A.quotesingle = 238, A.quotedblleft = 500, A.guillemotleft = 556, A.guilsinglleft = 333, A.guilsinglright = 333, A.fi = 611, A.fl = 611, A.endash = 556, A.dagger = 556, A.daggerdbl = 556, A.periodcentered = 278, A.paragraph = 556, A.bullet = 350, A.quotesinglbase = 278, A.quotedblbase = 500, A.quotedblright = 500, A.guillemotright = 556, A.ellipsis = 1e3, A.perthousand = 1e3, A.questiondown = 611, A.grave = 333, A.acute = 333, A.circumflex = 333, A.tilde = 333, A.macron = 333, A.breve = 333, A.dotaccent = 333, A.dieresis = 333, A.ring = 333, A.cedilla = 333, A.hungarumlaut = 333, A.ogonek = 333, A.caron = 333, A.emdash = 1e3, A.AE = 1e3, A.ordfeminine = 370, A.Lslash = 611, A.Oslash = 778, A.OE = 1e3, A.ordmasculine = 365, A.ae = 889, A.dotlessi = 278, A.lslash = 278, A.oslash = 611, A.oe = 944, A.germandbls = 611, A.Idieresis = 278, A.eacute = 556, A.abreve = 556, A.uhungarumlaut = 611, A.ecaron = 556, A.Ydieresis = 667, A.divide = 584, A.Yacute = 667, A.Acircumflex = 722, A.aacute = 556, A.Ucircumflex = 722, A.yacute = 556, A.scommaaccent = 556, A.ecircumflex = 556, A.Uring = 722, A.Udieresis = 722, A.aogonek = 556, A.Uacute = 722, A.uogonek = 611, A.Edieresis = 667, A.Dcroat = 722, A.commaaccent = 250, A.copyright = 737, A.Emacron = 667, A.ccaron = 556, A.aring = 556, A.Ncommaaccent = 722, A.lacute = 278, A.agrave = 556, A.Tcommaaccent = 611, A.Cacute = 722, A.atilde = 556, A.Edotaccent = 667, A.scaron = 556, A.scedilla = 556, A.iacute = 278, A.lozenge = 494, A.Rcaron = 722, A.Gcommaaccent = 778, A.ucircumflex = 611, A.acircumflex = 556, A.Amacron = 722, A.rcaron = 389, A.ccedilla = 556, A.Zdotaccent = 611, A.Thorn = 667, A.Omacron = 778, A.Racute = 722, A.Sacute = 667, A.dcaron = 743, A.Umacron = 722, A.uring = 611, A.threesuperior = 333, A.Ograve = 778, A.Agrave = 722, A.Abreve = 722, A.multiply = 584, A.uacute = 611, A.Tcaron = 611, A.partialdiff = 494, A.ydieresis = 556, A.Nacute = 722, A.icircumflex = 278, A.Ecircumflex = 667, A.adieresis = 556, A.edieresis = 556, A.cacute = 556, A.nacute = 611, A.umacron = 611, A.Ncaron = 722, A.Iacute = 278, A.plusminus = 584, A.brokenbar = 280, A.registered = 737, A.Gbreve = 778, A.Idotaccent = 278, A.summation = 600, A.Egrave = 667, A.racute = 389, A.omacron = 611, A.Zacute = 611, A.Zcaron = 611, A.greaterequal = 549, A.Eth = 722, A.Ccedilla = 722, A.lcommaaccent = 278, A.tcaron = 389, A.eogonek = 556, A.Uogonek = 722, A.Aacute = 722, A.Adieresis = 722, A.egrave = 556, A.zacute = 500, A.iogonek = 278, A.Oacute = 778, A.oacute = 611, A.amacron = 556, A.sacute = 556, A.idieresis = 278, A.Ocircumflex = 778, A.Ugrave = 722, A.Delta = 612, A.thorn = 611, A.twosuperior = 333, A.Odieresis = 778, A.mu = 611, A.igrave = 278, A.ohungarumlaut = 611, A.Eogonek = 667, A.dcroat = 611, A.threequarters = 834, A.Scedilla = 667, A.lcaron = 400, A.Kcommaaccent = 722, A.Lacute = 611, A.trademark = 1e3, A.edotaccent = 556, A.Igrave = 278, A.Imacron = 278, A.Lcaron = 611, A.onehalf = 834, A.lessequal = 549, A.ocircumflex = 611, A.ntilde = 611, A.Uhungarumlaut = 722, A.Eacute = 667, A.emacron = 556, A.gbreve = 611, A.onequarter = 834, A.Scaron = 667, A.Scommaaccent = 667, A.Ohungarumlaut = 778, A.degree = 400, A.ograve = 611, A.Ccaron = 722, A.ugrave = 611, A.radical = 549, A.Dcaron = 722, A.rcommaaccent = 389, A.Ntilde = 722, A.otilde = 611, A.Rcommaaccent = 722, A.Lcommaaccent = 611, A.Atilde = 722, A.Aogonek = 722, A.Aring = 722, A.Otilde = 778, A.zdotaccent = 500, A.Ecaron = 667, A.Iogonek = 278, A.kcommaaccent = 556, A.minus = 584, A.Icircumflex = 278, A.ncaron = 611, A.tcommaaccent = 333, A.logicalnot = 584, A.odieresis = 611, A.udieresis = 611, A.notequal = 549, A.gcommaaccent = 611, A.eth = 611, A.zcaron = 500, A.ncommaaccent = 611, A.onesuperior = 333, A.imacron = 278, A.Euro = 556;
  }), e["Helvetica-BoldOblique"] = Ce(function(A) {
    A.space = 278, A.exclam = 333, A.quotedbl = 474, A.numbersign = 556, A.dollar = 556, A.percent = 889, A.ampersand = 722, A.quoteright = 278, A.parenleft = 333, A.parenright = 333, A.asterisk = 389, A.plus = 584, A.comma = 278, A.hyphen = 333, A.period = 278, A.slash = 278, A.zero = 556, A.one = 556, A.two = 556, A.three = 556, A.four = 556, A.five = 556, A.six = 556, A.seven = 556, A.eight = 556, A.nine = 556, A.colon = 333, A.semicolon = 333, A.less = 584, A.equal = 584, A.greater = 584, A.question = 611, A.at = 975, A.A = 722, A.B = 722, A.C = 722, A.D = 722, A.E = 667, A.F = 611, A.G = 778, A.H = 722, A.I = 278, A.J = 556, A.K = 722, A.L = 611, A.M = 833, A.N = 722, A.O = 778, A.P = 667, A.Q = 778, A.R = 722, A.S = 667, A.T = 611, A.U = 722, A.V = 667, A.W = 944, A.X = 667, A.Y = 667, A.Z = 611, A.bracketleft = 333, A.backslash = 278, A.bracketright = 333, A.asciicircum = 584, A.underscore = 556, A.quoteleft = 278, A.a = 556, A.b = 611, A.c = 556, A.d = 611, A.e = 556, A.f = 333, A.g = 611, A.h = 611, A.i = 278, A.j = 278, A.k = 556, A.l = 278, A.m = 889, A.n = 611, A.o = 611, A.p = 611, A.q = 611, A.r = 389, A.s = 556, A.t = 333, A.u = 611, A.v = 556, A.w = 778, A.x = 556, A.y = 556, A.z = 500, A.braceleft = 389, A.bar = 280, A.braceright = 389, A.asciitilde = 584, A.exclamdown = 333, A.cent = 556, A.sterling = 556, A.fraction = 167, A.yen = 556, A.florin = 556, A.section = 556, A.currency = 556, A.quotesingle = 238, A.quotedblleft = 500, A.guillemotleft = 556, A.guilsinglleft = 333, A.guilsinglright = 333, A.fi = 611, A.fl = 611, A.endash = 556, A.dagger = 556, A.daggerdbl = 556, A.periodcentered = 278, A.paragraph = 556, A.bullet = 350, A.quotesinglbase = 278, A.quotedblbase = 500, A.quotedblright = 500, A.guillemotright = 556, A.ellipsis = 1e3, A.perthousand = 1e3, A.questiondown = 611, A.grave = 333, A.acute = 333, A.circumflex = 333, A.tilde = 333, A.macron = 333, A.breve = 333, A.dotaccent = 333, A.dieresis = 333, A.ring = 333, A.cedilla = 333, A.hungarumlaut = 333, A.ogonek = 333, A.caron = 333, A.emdash = 1e3, A.AE = 1e3, A.ordfeminine = 370, A.Lslash = 611, A.Oslash = 778, A.OE = 1e3, A.ordmasculine = 365, A.ae = 889, A.dotlessi = 278, A.lslash = 278, A.oslash = 611, A.oe = 944, A.germandbls = 611, A.Idieresis = 278, A.eacute = 556, A.abreve = 556, A.uhungarumlaut = 611, A.ecaron = 556, A.Ydieresis = 667, A.divide = 584, A.Yacute = 667, A.Acircumflex = 722, A.aacute = 556, A.Ucircumflex = 722, A.yacute = 556, A.scommaaccent = 556, A.ecircumflex = 556, A.Uring = 722, A.Udieresis = 722, A.aogonek = 556, A.Uacute = 722, A.uogonek = 611, A.Edieresis = 667, A.Dcroat = 722, A.commaaccent = 250, A.copyright = 737, A.Emacron = 667, A.ccaron = 556, A.aring = 556, A.Ncommaaccent = 722, A.lacute = 278, A.agrave = 556, A.Tcommaaccent = 611, A.Cacute = 722, A.atilde = 556, A.Edotaccent = 667, A.scaron = 556, A.scedilla = 556, A.iacute = 278, A.lozenge = 494, A.Rcaron = 722, A.Gcommaaccent = 778, A.ucircumflex = 611, A.acircumflex = 556, A.Amacron = 722, A.rcaron = 389, A.ccedilla = 556, A.Zdotaccent = 611, A.Thorn = 667, A.Omacron = 778, A.Racute = 722, A.Sacute = 667, A.dcaron = 743, A.Umacron = 722, A.uring = 611, A.threesuperior = 333, A.Ograve = 778, A.Agrave = 722, A.Abreve = 722, A.multiply = 584, A.uacute = 611, A.Tcaron = 611, A.partialdiff = 494, A.ydieresis = 556, A.Nacute = 722, A.icircumflex = 278, A.Ecircumflex = 667, A.adieresis = 556, A.edieresis = 556, A.cacute = 556, A.nacute = 611, A.umacron = 611, A.Ncaron = 722, A.Iacute = 278, A.plusminus = 584, A.brokenbar = 280, A.registered = 737, A.Gbreve = 778, A.Idotaccent = 278, A.summation = 600, A.Egrave = 667, A.racute = 389, A.omacron = 611, A.Zacute = 611, A.Zcaron = 611, A.greaterequal = 549, A.Eth = 722, A.Ccedilla = 722, A.lcommaaccent = 278, A.tcaron = 389, A.eogonek = 556, A.Uogonek = 722, A.Aacute = 722, A.Adieresis = 722, A.egrave = 556, A.zacute = 500, A.iogonek = 278, A.Oacute = 778, A.oacute = 611, A.amacron = 556, A.sacute = 556, A.idieresis = 278, A.Ocircumflex = 778, A.Ugrave = 722, A.Delta = 612, A.thorn = 611, A.twosuperior = 333, A.Odieresis = 778, A.mu = 611, A.igrave = 278, A.ohungarumlaut = 611, A.Eogonek = 667, A.dcroat = 611, A.threequarters = 834, A.Scedilla = 667, A.lcaron = 400, A.Kcommaaccent = 722, A.Lacute = 611, A.trademark = 1e3, A.edotaccent = 556, A.Igrave = 278, A.Imacron = 278, A.Lcaron = 611, A.onehalf = 834, A.lessequal = 549, A.ocircumflex = 611, A.ntilde = 611, A.Uhungarumlaut = 722, A.Eacute = 667, A.emacron = 556, A.gbreve = 611, A.onequarter = 834, A.Scaron = 667, A.Scommaaccent = 667, A.Ohungarumlaut = 778, A.degree = 400, A.ograve = 611, A.Ccaron = 722, A.ugrave = 611, A.radical = 549, A.Dcaron = 722, A.rcommaaccent = 389, A.Ntilde = 722, A.otilde = 611, A.Rcommaaccent = 722, A.Lcommaaccent = 611, A.Atilde = 722, A.Aogonek = 722, A.Aring = 722, A.Otilde = 778, A.zdotaccent = 500, A.Ecaron = 667, A.Iogonek = 278, A.kcommaaccent = 556, A.minus = 584, A.Icircumflex = 278, A.ncaron = 611, A.tcommaaccent = 333, A.logicalnot = 584, A.odieresis = 611, A.udieresis = 611, A.notequal = 549, A.gcommaaccent = 611, A.eth = 611, A.zcaron = 500, A.ncommaaccent = 611, A.onesuperior = 333, A.imacron = 278, A.Euro = 556;
  }), e["Helvetica-Oblique"] = Ce(function(A) {
    A.space = 278, A.exclam = 278, A.quotedbl = 355, A.numbersign = 556, A.dollar = 556, A.percent = 889, A.ampersand = 667, A.quoteright = 222, A.parenleft = 333, A.parenright = 333, A.asterisk = 389, A.plus = 584, A.comma = 278, A.hyphen = 333, A.period = 278, A.slash = 278, A.zero = 556, A.one = 556, A.two = 556, A.three = 556, A.four = 556, A.five = 556, A.six = 556, A.seven = 556, A.eight = 556, A.nine = 556, A.colon = 278, A.semicolon = 278, A.less = 584, A.equal = 584, A.greater = 584, A.question = 556, A.at = 1015, A.A = 667, A.B = 667, A.C = 722, A.D = 722, A.E = 667, A.F = 611, A.G = 778, A.H = 722, A.I = 278, A.J = 500, A.K = 667, A.L = 556, A.M = 833, A.N = 722, A.O = 778, A.P = 667, A.Q = 778, A.R = 722, A.S = 667, A.T = 611, A.U = 722, A.V = 667, A.W = 944, A.X = 667, A.Y = 667, A.Z = 611, A.bracketleft = 278, A.backslash = 278, A.bracketright = 278, A.asciicircum = 469, A.underscore = 556, A.quoteleft = 222, A.a = 556, A.b = 556, A.c = 500, A.d = 556, A.e = 556, A.f = 278, A.g = 556, A.h = 556, A.i = 222, A.j = 222, A.k = 500, A.l = 222, A.m = 833, A.n = 556, A.o = 556, A.p = 556, A.q = 556, A.r = 333, A.s = 500, A.t = 278, A.u = 556, A.v = 500, A.w = 722, A.x = 500, A.y = 500, A.z = 500, A.braceleft = 334, A.bar = 260, A.braceright = 334, A.asciitilde = 584, A.exclamdown = 333, A.cent = 556, A.sterling = 556, A.fraction = 167, A.yen = 556, A.florin = 556, A.section = 556, A.currency = 556, A.quotesingle = 191, A.quotedblleft = 333, A.guillemotleft = 556, A.guilsinglleft = 333, A.guilsinglright = 333, A.fi = 500, A.fl = 500, A.endash = 556, A.dagger = 556, A.daggerdbl = 556, A.periodcentered = 278, A.paragraph = 537, A.bullet = 350, A.quotesinglbase = 222, A.quotedblbase = 333, A.quotedblright = 333, A.guillemotright = 556, A.ellipsis = 1e3, A.perthousand = 1e3, A.questiondown = 611, A.grave = 333, A.acute = 333, A.circumflex = 333, A.tilde = 333, A.macron = 333, A.breve = 333, A.dotaccent = 333, A.dieresis = 333, A.ring = 333, A.cedilla = 333, A.hungarumlaut = 333, A.ogonek = 333, A.caron = 333, A.emdash = 1e3, A.AE = 1e3, A.ordfeminine = 370, A.Lslash = 556, A.Oslash = 778, A.OE = 1e3, A.ordmasculine = 365, A.ae = 889, A.dotlessi = 278, A.lslash = 222, A.oslash = 611, A.oe = 944, A.germandbls = 611, A.Idieresis = 278, A.eacute = 556, A.abreve = 556, A.uhungarumlaut = 556, A.ecaron = 556, A.Ydieresis = 667, A.divide = 584, A.Yacute = 667, A.Acircumflex = 667, A.aacute = 556, A.Ucircumflex = 722, A.yacute = 500, A.scommaaccent = 500, A.ecircumflex = 556, A.Uring = 722, A.Udieresis = 722, A.aogonek = 556, A.Uacute = 722, A.uogonek = 556, A.Edieresis = 667, A.Dcroat = 722, A.commaaccent = 250, A.copyright = 737, A.Emacron = 667, A.ccaron = 500, A.aring = 556, A.Ncommaaccent = 722, A.lacute = 222, A.agrave = 556, A.Tcommaaccent = 611, A.Cacute = 722, A.atilde = 556, A.Edotaccent = 667, A.scaron = 500, A.scedilla = 500, A.iacute = 278, A.lozenge = 471, A.Rcaron = 722, A.Gcommaaccent = 778, A.ucircumflex = 556, A.acircumflex = 556, A.Amacron = 667, A.rcaron = 333, A.ccedilla = 500, A.Zdotaccent = 611, A.Thorn = 667, A.Omacron = 778, A.Racute = 722, A.Sacute = 667, A.dcaron = 643, A.Umacron = 722, A.uring = 556, A.threesuperior = 333, A.Ograve = 778, A.Agrave = 667, A.Abreve = 667, A.multiply = 584, A.uacute = 556, A.Tcaron = 611, A.partialdiff = 476, A.ydieresis = 500, A.Nacute = 722, A.icircumflex = 278, A.Ecircumflex = 667, A.adieresis = 556, A.edieresis = 556, A.cacute = 500, A.nacute = 556, A.umacron = 556, A.Ncaron = 722, A.Iacute = 278, A.plusminus = 584, A.brokenbar = 260, A.registered = 737, A.Gbreve = 778, A.Idotaccent = 278, A.summation = 600, A.Egrave = 667, A.racute = 333, A.omacron = 556, A.Zacute = 611, A.Zcaron = 611, A.greaterequal = 549, A.Eth = 722, A.Ccedilla = 722, A.lcommaaccent = 222, A.tcaron = 317, A.eogonek = 556, A.Uogonek = 722, A.Aacute = 667, A.Adieresis = 667, A.egrave = 556, A.zacute = 500, A.iogonek = 222, A.Oacute = 778, A.oacute = 556, A.amacron = 556, A.sacute = 500, A.idieresis = 278, A.Ocircumflex = 778, A.Ugrave = 722, A.Delta = 612, A.thorn = 556, A.twosuperior = 333, A.Odieresis = 778, A.mu = 556, A.igrave = 278, A.ohungarumlaut = 556, A.Eogonek = 667, A.dcroat = 556, A.threequarters = 834, A.Scedilla = 667, A.lcaron = 299, A.Kcommaaccent = 667, A.Lacute = 556, A.trademark = 1e3, A.edotaccent = 556, A.Igrave = 278, A.Imacron = 278, A.Lcaron = 556, A.onehalf = 834, A.lessequal = 549, A.ocircumflex = 556, A.ntilde = 556, A.Uhungarumlaut = 722, A.Eacute = 667, A.emacron = 556, A.gbreve = 556, A.onequarter = 834, A.Scaron = 667, A.Scommaaccent = 667, A.Ohungarumlaut = 778, A.degree = 400, A.ograve = 556, A.Ccaron = 722, A.ugrave = 556, A.radical = 453, A.Dcaron = 722, A.rcommaaccent = 333, A.Ntilde = 722, A.otilde = 556, A.Rcommaaccent = 722, A.Lcommaaccent = 556, A.Atilde = 667, A.Aogonek = 667, A.Aring = 667, A.Otilde = 778, A.zdotaccent = 500, A.Ecaron = 667, A.Iogonek = 278, A.kcommaaccent = 500, A.minus = 584, A.Icircumflex = 278, A.ncaron = 556, A.tcommaaccent = 278, A.logicalnot = 584, A.odieresis = 556, A.udieresis = 556, A.notequal = 549, A.gcommaaccent = 556, A.eth = 556, A.zcaron = 500, A.ncommaaccent = 556, A.onesuperior = 333, A.imacron = 278, A.Euro = 556;
  }), e.Symbol = Ce(function(A) {
    A.space = 250, A.exclam = 333, A.universal = 713, A.numbersign = 500, A.existential = 549, A.percent = 833, A.ampersand = 778, A.suchthat = 439, A.parenleft = 333, A.parenright = 333, A.asteriskmath = 500, A.plus = 549, A.comma = 250, A.minus = 549, A.period = 250, A.slash = 278, A.zero = 500, A.one = 500, A.two = 500, A.three = 500, A.four = 500, A.five = 500, A.six = 500, A.seven = 500, A.eight = 500, A.nine = 500, A.colon = 278, A.semicolon = 278, A.less = 549, A.equal = 549, A.greater = 549, A.question = 444, A.congruent = 549, A.Alpha = 722, A.Beta = 667, A.Chi = 722, A.Delta = 612, A.Epsilon = 611, A.Phi = 763, A.Gamma = 603, A.Eta = 722, A.Iota = 333, A.theta1 = 631, A.Kappa = 722, A.Lambda = 686, A.Mu = 889, A.Nu = 722, A.Omicron = 722, A.Pi = 768, A.Theta = 741, A.Rho = 556, A.Sigma = 592, A.Tau = 611, A.Upsilon = 690, A.sigma1 = 439, A.Omega = 768, A.Xi = 645, A.Psi = 795, A.Zeta = 611, A.bracketleft = 333, A.therefore = 863, A.bracketright = 333, A.perpendicular = 658, A.underscore = 500, A.radicalex = 500, A.alpha = 631, A.beta = 549, A.chi = 549, A.delta = 494, A.epsilon = 439, A.phi = 521, A.gamma = 411, A.eta = 603, A.iota = 329, A.phi1 = 603, A.kappa = 549, A.lambda = 549, A.mu = 576, A.nu = 521, A.omicron = 549, A.pi = 549, A.theta = 521, A.rho = 549, A.sigma = 603, A.tau = 439, A.upsilon = 576, A.omega1 = 713, A.omega = 686, A.xi = 493, A.psi = 686, A.zeta = 494, A.braceleft = 480, A.bar = 200, A.braceright = 480, A.similar = 549, A.Euro = 750, A.Upsilon1 = 620, A.minute = 247, A.lessequal = 549, A.fraction = 167, A.infinity = 713, A.florin = 500, A.club = 753, A.diamond = 753, A.heart = 753, A.spade = 753, A.arrowboth = 1042, A.arrowleft = 987, A.arrowup = 603, A.arrowright = 987, A.arrowdown = 603, A.degree = 400, A.plusminus = 549, A.second = 411, A.greaterequal = 549, A.multiply = 549, A.proportional = 713, A.partialdiff = 494, A.bullet = 460, A.divide = 549, A.notequal = 549, A.equivalence = 549, A.approxequal = 549, A.ellipsis = 1e3, A.arrowvertex = 603, A.arrowhorizex = 1e3, A.carriagereturn = 658, A.aleph = 823, A.Ifraktur = 686, A.Rfraktur = 795, A.weierstrass = 987, A.circlemultiply = 768, A.circleplus = 768, A.emptyset = 823, A.intersection = 768, A.union = 768, A.propersuperset = 713, A.reflexsuperset = 713, A.notsubset = 713, A.propersubset = 713, A.reflexsubset = 713, A.element = 713, A.notelement = 713, A.angle = 768, A.gradient = 713, A.registerserif = 790, A.copyrightserif = 790, A.trademarkserif = 890, A.product = 823, A.radical = 549, A.dotmath = 250, A.logicalnot = 713, A.logicaland = 603, A.logicalor = 603, A.arrowdblboth = 1042, A.arrowdblleft = 987, A.arrowdblup = 603, A.arrowdblright = 987, A.arrowdbldown = 603, A.lozenge = 494, A.angleleft = 329, A.registersans = 790, A.copyrightsans = 790, A.trademarksans = 786, A.summation = 713, A.parenlefttp = 384, A.parenleftex = 384, A.parenleftbt = 384, A.bracketlefttp = 384, A.bracketleftex = 384, A.bracketleftbt = 384, A.bracelefttp = 494, A.braceleftmid = 494, A.braceleftbt = 494, A.braceex = 494, A.angleright = 329, A.integral = 274, A.integraltp = 686, A.integralex = 686, A.integralbt = 686, A.parenrighttp = 384, A.parenrightex = 384, A.parenrightbt = 384, A.bracketrighttp = 384, A.bracketrightex = 384, A.bracketrightbt = 384, A.bracerighttp = 494, A.bracerightmid = 494, A.bracerightbt = 494, A.apple = 790;
  }), e["Times-Roman"] = Ce(function(A) {
    A.space = 250, A.exclam = 333, A.quotedbl = 408, A.numbersign = 500, A.dollar = 500, A.percent = 833, A.ampersand = 778, A.quoteright = 333, A.parenleft = 333, A.parenright = 333, A.asterisk = 500, A.plus = 564, A.comma = 250, A.hyphen = 333, A.period = 250, A.slash = 278, A.zero = 500, A.one = 500, A.two = 500, A.three = 500, A.four = 500, A.five = 500, A.six = 500, A.seven = 500, A.eight = 500, A.nine = 500, A.colon = 278, A.semicolon = 278, A.less = 564, A.equal = 564, A.greater = 564, A.question = 444, A.at = 921, A.A = 722, A.B = 667, A.C = 667, A.D = 722, A.E = 611, A.F = 556, A.G = 722, A.H = 722, A.I = 333, A.J = 389, A.K = 722, A.L = 611, A.M = 889, A.N = 722, A.O = 722, A.P = 556, A.Q = 722, A.R = 667, A.S = 556, A.T = 611, A.U = 722, A.V = 722, A.W = 944, A.X = 722, A.Y = 722, A.Z = 611, A.bracketleft = 333, A.backslash = 278, A.bracketright = 333, A.asciicircum = 469, A.underscore = 500, A.quoteleft = 333, A.a = 444, A.b = 500, A.c = 444, A.d = 500, A.e = 444, A.f = 333, A.g = 500, A.h = 500, A.i = 278, A.j = 278, A.k = 500, A.l = 278, A.m = 778, A.n = 500, A.o = 500, A.p = 500, A.q = 500, A.r = 333, A.s = 389, A.t = 278, A.u = 500, A.v = 500, A.w = 722, A.x = 500, A.y = 500, A.z = 444, A.braceleft = 480, A.bar = 200, A.braceright = 480, A.asciitilde = 541, A.exclamdown = 333, A.cent = 500, A.sterling = 500, A.fraction = 167, A.yen = 500, A.florin = 500, A.section = 500, A.currency = 500, A.quotesingle = 180, A.quotedblleft = 444, A.guillemotleft = 500, A.guilsinglleft = 333, A.guilsinglright = 333, A.fi = 556, A.fl = 556, A.endash = 500, A.dagger = 500, A.daggerdbl = 500, A.periodcentered = 250, A.paragraph = 453, A.bullet = 350, A.quotesinglbase = 333, A.quotedblbase = 444, A.quotedblright = 444, A.guillemotright = 500, A.ellipsis = 1e3, A.perthousand = 1e3, A.questiondown = 444, A.grave = 333, A.acute = 333, A.circumflex = 333, A.tilde = 333, A.macron = 333, A.breve = 333, A.dotaccent = 333, A.dieresis = 333, A.ring = 333, A.cedilla = 333, A.hungarumlaut = 333, A.ogonek = 333, A.caron = 333, A.emdash = 1e3, A.AE = 889, A.ordfeminine = 276, A.Lslash = 611, A.Oslash = 722, A.OE = 889, A.ordmasculine = 310, A.ae = 667, A.dotlessi = 278, A.lslash = 278, A.oslash = 500, A.oe = 722, A.germandbls = 500, A.Idieresis = 333, A.eacute = 444, A.abreve = 444, A.uhungarumlaut = 500, A.ecaron = 444, A.Ydieresis = 722, A.divide = 564, A.Yacute = 722, A.Acircumflex = 722, A.aacute = 444, A.Ucircumflex = 722, A.yacute = 500, A.scommaaccent = 389, A.ecircumflex = 444, A.Uring = 722, A.Udieresis = 722, A.aogonek = 444, A.Uacute = 722, A.uogonek = 500, A.Edieresis = 611, A.Dcroat = 722, A.commaaccent = 250, A.copyright = 760, A.Emacron = 611, A.ccaron = 444, A.aring = 444, A.Ncommaaccent = 722, A.lacute = 278, A.agrave = 444, A.Tcommaaccent = 611, A.Cacute = 667, A.atilde = 444, A.Edotaccent = 611, A.scaron = 389, A.scedilla = 389, A.iacute = 278, A.lozenge = 471, A.Rcaron = 667, A.Gcommaaccent = 722, A.ucircumflex = 500, A.acircumflex = 444, A.Amacron = 722, A.rcaron = 333, A.ccedilla = 444, A.Zdotaccent = 611, A.Thorn = 556, A.Omacron = 722, A.Racute = 667, A.Sacute = 556, A.dcaron = 588, A.Umacron = 722, A.uring = 500, A.threesuperior = 300, A.Ograve = 722, A.Agrave = 722, A.Abreve = 722, A.multiply = 564, A.uacute = 500, A.Tcaron = 611, A.partialdiff = 476, A.ydieresis = 500, A.Nacute = 722, A.icircumflex = 278, A.Ecircumflex = 611, A.adieresis = 444, A.edieresis = 444, A.cacute = 444, A.nacute = 500, A.umacron = 500, A.Ncaron = 722, A.Iacute = 333, A.plusminus = 564, A.brokenbar = 200, A.registered = 760, A.Gbreve = 722, A.Idotaccent = 333, A.summation = 600, A.Egrave = 611, A.racute = 333, A.omacron = 500, A.Zacute = 611, A.Zcaron = 611, A.greaterequal = 549, A.Eth = 722, A.Ccedilla = 667, A.lcommaaccent = 278, A.tcaron = 326, A.eogonek = 444, A.Uogonek = 722, A.Aacute = 722, A.Adieresis = 722, A.egrave = 444, A.zacute = 444, A.iogonek = 278, A.Oacute = 722, A.oacute = 500, A.amacron = 444, A.sacute = 389, A.idieresis = 278, A.Ocircumflex = 722, A.Ugrave = 722, A.Delta = 612, A.thorn = 500, A.twosuperior = 300, A.Odieresis = 722, A.mu = 500, A.igrave = 278, A.ohungarumlaut = 500, A.Eogonek = 611, A.dcroat = 500, A.threequarters = 750, A.Scedilla = 556, A.lcaron = 344, A.Kcommaaccent = 722, A.Lacute = 611, A.trademark = 980, A.edotaccent = 444, A.Igrave = 333, A.Imacron = 333, A.Lcaron = 611, A.onehalf = 750, A.lessequal = 549, A.ocircumflex = 500, A.ntilde = 500, A.Uhungarumlaut = 722, A.Eacute = 611, A.emacron = 444, A.gbreve = 500, A.onequarter = 750, A.Scaron = 556, A.Scommaaccent = 556, A.Ohungarumlaut = 722, A.degree = 400, A.ograve = 500, A.Ccaron = 667, A.ugrave = 500, A.radical = 453, A.Dcaron = 722, A.rcommaaccent = 333, A.Ntilde = 722, A.otilde = 500, A.Rcommaaccent = 667, A.Lcommaaccent = 611, A.Atilde = 722, A.Aogonek = 722, A.Aring = 722, A.Otilde = 722, A.zdotaccent = 444, A.Ecaron = 611, A.Iogonek = 333, A.kcommaaccent = 500, A.minus = 564, A.Icircumflex = 333, A.ncaron = 500, A.tcommaaccent = 278, A.logicalnot = 564, A.odieresis = 500, A.udieresis = 500, A.notequal = 549, A.gcommaaccent = 500, A.eth = 500, A.zcaron = 444, A.ncommaaccent = 500, A.onesuperior = 300, A.imacron = 278, A.Euro = 500;
  }), e["Times-Bold"] = Ce(function(A) {
    A.space = 250, A.exclam = 333, A.quotedbl = 555, A.numbersign = 500, A.dollar = 500, A.percent = 1e3, A.ampersand = 833, A.quoteright = 333, A.parenleft = 333, A.parenright = 333, A.asterisk = 500, A.plus = 570, A.comma = 250, A.hyphen = 333, A.period = 250, A.slash = 278, A.zero = 500, A.one = 500, A.two = 500, A.three = 500, A.four = 500, A.five = 500, A.six = 500, A.seven = 500, A.eight = 500, A.nine = 500, A.colon = 333, A.semicolon = 333, A.less = 570, A.equal = 570, A.greater = 570, A.question = 500, A.at = 930, A.A = 722, A.B = 667, A.C = 722, A.D = 722, A.E = 667, A.F = 611, A.G = 778, A.H = 778, A.I = 389, A.J = 500, A.K = 778, A.L = 667, A.M = 944, A.N = 722, A.O = 778, A.P = 611, A.Q = 778, A.R = 722, A.S = 556, A.T = 667, A.U = 722, A.V = 722, A.W = 1e3, A.X = 722, A.Y = 722, A.Z = 667, A.bracketleft = 333, A.backslash = 278, A.bracketright = 333, A.asciicircum = 581, A.underscore = 500, A.quoteleft = 333, A.a = 500, A.b = 556, A.c = 444, A.d = 556, A.e = 444, A.f = 333, A.g = 500, A.h = 556, A.i = 278, A.j = 333, A.k = 556, A.l = 278, A.m = 833, A.n = 556, A.o = 500, A.p = 556, A.q = 556, A.r = 444, A.s = 389, A.t = 333, A.u = 556, A.v = 500, A.w = 722, A.x = 500, A.y = 500, A.z = 444, A.braceleft = 394, A.bar = 220, A.braceright = 394, A.asciitilde = 520, A.exclamdown = 333, A.cent = 500, A.sterling = 500, A.fraction = 167, A.yen = 500, A.florin = 500, A.section = 500, A.currency = 500, A.quotesingle = 278, A.quotedblleft = 500, A.guillemotleft = 500, A.guilsinglleft = 333, A.guilsinglright = 333, A.fi = 556, A.fl = 556, A.endash = 500, A.dagger = 500, A.daggerdbl = 500, A.periodcentered = 250, A.paragraph = 540, A.bullet = 350, A.quotesinglbase = 333, A.quotedblbase = 500, A.quotedblright = 500, A.guillemotright = 500, A.ellipsis = 1e3, A.perthousand = 1e3, A.questiondown = 500, A.grave = 333, A.acute = 333, A.circumflex = 333, A.tilde = 333, A.macron = 333, A.breve = 333, A.dotaccent = 333, A.dieresis = 333, A.ring = 333, A.cedilla = 333, A.hungarumlaut = 333, A.ogonek = 333, A.caron = 333, A.emdash = 1e3, A.AE = 1e3, A.ordfeminine = 300, A.Lslash = 667, A.Oslash = 778, A.OE = 1e3, A.ordmasculine = 330, A.ae = 722, A.dotlessi = 278, A.lslash = 278, A.oslash = 500, A.oe = 722, A.germandbls = 556, A.Idieresis = 389, A.eacute = 444, A.abreve = 500, A.uhungarumlaut = 556, A.ecaron = 444, A.Ydieresis = 722, A.divide = 570, A.Yacute = 722, A.Acircumflex = 722, A.aacute = 500, A.Ucircumflex = 722, A.yacute = 500, A.scommaaccent = 389, A.ecircumflex = 444, A.Uring = 722, A.Udieresis = 722, A.aogonek = 500, A.Uacute = 722, A.uogonek = 556, A.Edieresis = 667, A.Dcroat = 722, A.commaaccent = 250, A.copyright = 747, A.Emacron = 667, A.ccaron = 444, A.aring = 500, A.Ncommaaccent = 722, A.lacute = 278, A.agrave = 500, A.Tcommaaccent = 667, A.Cacute = 722, A.atilde = 500, A.Edotaccent = 667, A.scaron = 389, A.scedilla = 389, A.iacute = 278, A.lozenge = 494, A.Rcaron = 722, A.Gcommaaccent = 778, A.ucircumflex = 556, A.acircumflex = 500, A.Amacron = 722, A.rcaron = 444, A.ccedilla = 444, A.Zdotaccent = 667, A.Thorn = 611, A.Omacron = 778, A.Racute = 722, A.Sacute = 556, A.dcaron = 672, A.Umacron = 722, A.uring = 556, A.threesuperior = 300, A.Ograve = 778, A.Agrave = 722, A.Abreve = 722, A.multiply = 570, A.uacute = 556, A.Tcaron = 667, A.partialdiff = 494, A.ydieresis = 500, A.Nacute = 722, A.icircumflex = 278, A.Ecircumflex = 667, A.adieresis = 500, A.edieresis = 444, A.cacute = 444, A.nacute = 556, A.umacron = 556, A.Ncaron = 722, A.Iacute = 389, A.plusminus = 570, A.brokenbar = 220, A.registered = 747, A.Gbreve = 778, A.Idotaccent = 389, A.summation = 600, A.Egrave = 667, A.racute = 444, A.omacron = 500, A.Zacute = 667, A.Zcaron = 667, A.greaterequal = 549, A.Eth = 722, A.Ccedilla = 722, A.lcommaaccent = 278, A.tcaron = 416, A.eogonek = 444, A.Uogonek = 722, A.Aacute = 722, A.Adieresis = 722, A.egrave = 444, A.zacute = 444, A.iogonek = 278, A.Oacute = 778, A.oacute = 500, A.amacron = 500, A.sacute = 389, A.idieresis = 278, A.Ocircumflex = 778, A.Ugrave = 722, A.Delta = 612, A.thorn = 556, A.twosuperior = 300, A.Odieresis = 778, A.mu = 556, A.igrave = 278, A.ohungarumlaut = 500, A.Eogonek = 667, A.dcroat = 556, A.threequarters = 750, A.Scedilla = 556, A.lcaron = 394, A.Kcommaaccent = 778, A.Lacute = 667, A.trademark = 1e3, A.edotaccent = 444, A.Igrave = 389, A.Imacron = 389, A.Lcaron = 667, A.onehalf = 750, A.lessequal = 549, A.ocircumflex = 500, A.ntilde = 556, A.Uhungarumlaut = 722, A.Eacute = 667, A.emacron = 444, A.gbreve = 500, A.onequarter = 750, A.Scaron = 556, A.Scommaaccent = 556, A.Ohungarumlaut = 778, A.degree = 400, A.ograve = 500, A.Ccaron = 722, A.ugrave = 556, A.radical = 549, A.Dcaron = 722, A.rcommaaccent = 444, A.Ntilde = 722, A.otilde = 500, A.Rcommaaccent = 722, A.Lcommaaccent = 667, A.Atilde = 722, A.Aogonek = 722, A.Aring = 722, A.Otilde = 778, A.zdotaccent = 444, A.Ecaron = 667, A.Iogonek = 389, A.kcommaaccent = 556, A.minus = 570, A.Icircumflex = 389, A.ncaron = 556, A.tcommaaccent = 333, A.logicalnot = 570, A.odieresis = 500, A.udieresis = 556, A.notequal = 549, A.gcommaaccent = 500, A.eth = 500, A.zcaron = 444, A.ncommaaccent = 556, A.onesuperior = 300, A.imacron = 278, A.Euro = 500;
  }), e["Times-BoldItalic"] = Ce(function(A) {
    A.space = 250, A.exclam = 389, A.quotedbl = 555, A.numbersign = 500, A.dollar = 500, A.percent = 833, A.ampersand = 778, A.quoteright = 333, A.parenleft = 333, A.parenright = 333, A.asterisk = 500, A.plus = 570, A.comma = 250, A.hyphen = 333, A.period = 250, A.slash = 278, A.zero = 500, A.one = 500, A.two = 500, A.three = 500, A.four = 500, A.five = 500, A.six = 500, A.seven = 500, A.eight = 500, A.nine = 500, A.colon = 333, A.semicolon = 333, A.less = 570, A.equal = 570, A.greater = 570, A.question = 500, A.at = 832, A.A = 667, A.B = 667, A.C = 667, A.D = 722, A.E = 667, A.F = 667, A.G = 722, A.H = 778, A.I = 389, A.J = 500, A.K = 667, A.L = 611, A.M = 889, A.N = 722, A.O = 722, A.P = 611, A.Q = 722, A.R = 667, A.S = 556, A.T = 611, A.U = 722, A.V = 667, A.W = 889, A.X = 667, A.Y = 611, A.Z = 611, A.bracketleft = 333, A.backslash = 278, A.bracketright = 333, A.asciicircum = 570, A.underscore = 500, A.quoteleft = 333, A.a = 500, A.b = 500, A.c = 444, A.d = 500, A.e = 444, A.f = 333, A.g = 500, A.h = 556, A.i = 278, A.j = 278, A.k = 500, A.l = 278, A.m = 778, A.n = 556, A.o = 500, A.p = 500, A.q = 500, A.r = 389, A.s = 389, A.t = 278, A.u = 556, A.v = 444, A.w = 667, A.x = 500, A.y = 444, A.z = 389, A.braceleft = 348, A.bar = 220, A.braceright = 348, A.asciitilde = 570, A.exclamdown = 389, A.cent = 500, A.sterling = 500, A.fraction = 167, A.yen = 500, A.florin = 500, A.section = 500, A.currency = 500, A.quotesingle = 278, A.quotedblleft = 500, A.guillemotleft = 500, A.guilsinglleft = 333, A.guilsinglright = 333, A.fi = 556, A.fl = 556, A.endash = 500, A.dagger = 500, A.daggerdbl = 500, A.periodcentered = 250, A.paragraph = 500, A.bullet = 350, A.quotesinglbase = 333, A.quotedblbase = 500, A.quotedblright = 500, A.guillemotright = 500, A.ellipsis = 1e3, A.perthousand = 1e3, A.questiondown = 500, A.grave = 333, A.acute = 333, A.circumflex = 333, A.tilde = 333, A.macron = 333, A.breve = 333, A.dotaccent = 333, A.dieresis = 333, A.ring = 333, A.cedilla = 333, A.hungarumlaut = 333, A.ogonek = 333, A.caron = 333, A.emdash = 1e3, A.AE = 944, A.ordfeminine = 266, A.Lslash = 611, A.Oslash = 722, A.OE = 944, A.ordmasculine = 300, A.ae = 722, A.dotlessi = 278, A.lslash = 278, A.oslash = 500, A.oe = 722, A.germandbls = 500, A.Idieresis = 389, A.eacute = 444, A.abreve = 500, A.uhungarumlaut = 556, A.ecaron = 444, A.Ydieresis = 611, A.divide = 570, A.Yacute = 611, A.Acircumflex = 667, A.aacute = 500, A.Ucircumflex = 722, A.yacute = 444, A.scommaaccent = 389, A.ecircumflex = 444, A.Uring = 722, A.Udieresis = 722, A.aogonek = 500, A.Uacute = 722, A.uogonek = 556, A.Edieresis = 667, A.Dcroat = 722, A.commaaccent = 250, A.copyright = 747, A.Emacron = 667, A.ccaron = 444, A.aring = 500, A.Ncommaaccent = 722, A.lacute = 278, A.agrave = 500, A.Tcommaaccent = 611, A.Cacute = 667, A.atilde = 500, A.Edotaccent = 667, A.scaron = 389, A.scedilla = 389, A.iacute = 278, A.lozenge = 494, A.Rcaron = 667, A.Gcommaaccent = 722, A.ucircumflex = 556, A.acircumflex = 500, A.Amacron = 667, A.rcaron = 389, A.ccedilla = 444, A.Zdotaccent = 611, A.Thorn = 611, A.Omacron = 722, A.Racute = 667, A.Sacute = 556, A.dcaron = 608, A.Umacron = 722, A.uring = 556, A.threesuperior = 300, A.Ograve = 722, A.Agrave = 667, A.Abreve = 667, A.multiply = 570, A.uacute = 556, A.Tcaron = 611, A.partialdiff = 494, A.ydieresis = 444, A.Nacute = 722, A.icircumflex = 278, A.Ecircumflex = 667, A.adieresis = 500, A.edieresis = 444, A.cacute = 444, A.nacute = 556, A.umacron = 556, A.Ncaron = 722, A.Iacute = 389, A.plusminus = 570, A.brokenbar = 220, A.registered = 747, A.Gbreve = 722, A.Idotaccent = 389, A.summation = 600, A.Egrave = 667, A.racute = 389, A.omacron = 500, A.Zacute = 611, A.Zcaron = 611, A.greaterequal = 549, A.Eth = 722, A.Ccedilla = 667, A.lcommaaccent = 278, A.tcaron = 366, A.eogonek = 444, A.Uogonek = 722, A.Aacute = 667, A.Adieresis = 667, A.egrave = 444, A.zacute = 389, A.iogonek = 278, A.Oacute = 722, A.oacute = 500, A.amacron = 500, A.sacute = 389, A.idieresis = 278, A.Ocircumflex = 722, A.Ugrave = 722, A.Delta = 612, A.thorn = 500, A.twosuperior = 300, A.Odieresis = 722, A.mu = 576, A.igrave = 278, A.ohungarumlaut = 500, A.Eogonek = 667, A.dcroat = 500, A.threequarters = 750, A.Scedilla = 556, A.lcaron = 382, A.Kcommaaccent = 667, A.Lacute = 611, A.trademark = 1e3, A.edotaccent = 444, A.Igrave = 389, A.Imacron = 389, A.Lcaron = 611, A.onehalf = 750, A.lessequal = 549, A.ocircumflex = 500, A.ntilde = 556, A.Uhungarumlaut = 722, A.Eacute = 667, A.emacron = 444, A.gbreve = 500, A.onequarter = 750, A.Scaron = 556, A.Scommaaccent = 556, A.Ohungarumlaut = 722, A.degree = 400, A.ograve = 500, A.Ccaron = 667, A.ugrave = 556, A.radical = 549, A.Dcaron = 722, A.rcommaaccent = 389, A.Ntilde = 722, A.otilde = 500, A.Rcommaaccent = 667, A.Lcommaaccent = 611, A.Atilde = 667, A.Aogonek = 667, A.Aring = 667, A.Otilde = 722, A.zdotaccent = 389, A.Ecaron = 667, A.Iogonek = 389, A.kcommaaccent = 500, A.minus = 606, A.Icircumflex = 389, A.ncaron = 556, A.tcommaaccent = 278, A.logicalnot = 606, A.odieresis = 500, A.udieresis = 556, A.notequal = 549, A.gcommaaccent = 500, A.eth = 500, A.zcaron = 389, A.ncommaaccent = 556, A.onesuperior = 300, A.imacron = 278, A.Euro = 500;
  }), e["Times-Italic"] = Ce(function(A) {
    A.space = 250, A.exclam = 333, A.quotedbl = 420, A.numbersign = 500, A.dollar = 500, A.percent = 833, A.ampersand = 778, A.quoteright = 333, A.parenleft = 333, A.parenright = 333, A.asterisk = 500, A.plus = 675, A.comma = 250, A.hyphen = 333, A.period = 250, A.slash = 278, A.zero = 500, A.one = 500, A.two = 500, A.three = 500, A.four = 500, A.five = 500, A.six = 500, A.seven = 500, A.eight = 500, A.nine = 500, A.colon = 333, A.semicolon = 333, A.less = 675, A.equal = 675, A.greater = 675, A.question = 500, A.at = 920, A.A = 611, A.B = 611, A.C = 667, A.D = 722, A.E = 611, A.F = 611, A.G = 722, A.H = 722, A.I = 333, A.J = 444, A.K = 667, A.L = 556, A.M = 833, A.N = 667, A.O = 722, A.P = 611, A.Q = 722, A.R = 611, A.S = 500, A.T = 556, A.U = 722, A.V = 611, A.W = 833, A.X = 611, A.Y = 556, A.Z = 556, A.bracketleft = 389, A.backslash = 278, A.bracketright = 389, A.asciicircum = 422, A.underscore = 500, A.quoteleft = 333, A.a = 500, A.b = 500, A.c = 444, A.d = 500, A.e = 444, A.f = 278, A.g = 500, A.h = 500, A.i = 278, A.j = 278, A.k = 444, A.l = 278, A.m = 722, A.n = 500, A.o = 500, A.p = 500, A.q = 500, A.r = 389, A.s = 389, A.t = 278, A.u = 500, A.v = 444, A.w = 667, A.x = 444, A.y = 444, A.z = 389, A.braceleft = 400, A.bar = 275, A.braceright = 400, A.asciitilde = 541, A.exclamdown = 389, A.cent = 500, A.sterling = 500, A.fraction = 167, A.yen = 500, A.florin = 500, A.section = 500, A.currency = 500, A.quotesingle = 214, A.quotedblleft = 556, A.guillemotleft = 500, A.guilsinglleft = 333, A.guilsinglright = 333, A.fi = 500, A.fl = 500, A.endash = 500, A.dagger = 500, A.daggerdbl = 500, A.periodcentered = 250, A.paragraph = 523, A.bullet = 350, A.quotesinglbase = 333, A.quotedblbase = 556, A.quotedblright = 556, A.guillemotright = 500, A.ellipsis = 889, A.perthousand = 1e3, A.questiondown = 500, A.grave = 333, A.acute = 333, A.circumflex = 333, A.tilde = 333, A.macron = 333, A.breve = 333, A.dotaccent = 333, A.dieresis = 333, A.ring = 333, A.cedilla = 333, A.hungarumlaut = 333, A.ogonek = 333, A.caron = 333, A.emdash = 889, A.AE = 889, A.ordfeminine = 276, A.Lslash = 556, A.Oslash = 722, A.OE = 944, A.ordmasculine = 310, A.ae = 667, A.dotlessi = 278, A.lslash = 278, A.oslash = 500, A.oe = 667, A.germandbls = 500, A.Idieresis = 333, A.eacute = 444, A.abreve = 500, A.uhungarumlaut = 500, A.ecaron = 444, A.Ydieresis = 556, A.divide = 675, A.Yacute = 556, A.Acircumflex = 611, A.aacute = 500, A.Ucircumflex = 722, A.yacute = 444, A.scommaaccent = 389, A.ecircumflex = 444, A.Uring = 722, A.Udieresis = 722, A.aogonek = 500, A.Uacute = 722, A.uogonek = 500, A.Edieresis = 611, A.Dcroat = 722, A.commaaccent = 250, A.copyright = 760, A.Emacron = 611, A.ccaron = 444, A.aring = 500, A.Ncommaaccent = 667, A.lacute = 278, A.agrave = 500, A.Tcommaaccent = 556, A.Cacute = 667, A.atilde = 500, A.Edotaccent = 611, A.scaron = 389, A.scedilla = 389, A.iacute = 278, A.lozenge = 471, A.Rcaron = 611, A.Gcommaaccent = 722, A.ucircumflex = 500, A.acircumflex = 500, A.Amacron = 611, A.rcaron = 389, A.ccedilla = 444, A.Zdotaccent = 556, A.Thorn = 611, A.Omacron = 722, A.Racute = 611, A.Sacute = 500, A.dcaron = 544, A.Umacron = 722, A.uring = 500, A.threesuperior = 300, A.Ograve = 722, A.Agrave = 611, A.Abreve = 611, A.multiply = 675, A.uacute = 500, A.Tcaron = 556, A.partialdiff = 476, A.ydieresis = 444, A.Nacute = 667, A.icircumflex = 278, A.Ecircumflex = 611, A.adieresis = 500, A.edieresis = 444, A.cacute = 444, A.nacute = 500, A.umacron = 500, A.Ncaron = 667, A.Iacute = 333, A.plusminus = 675, A.brokenbar = 275, A.registered = 760, A.Gbreve = 722, A.Idotaccent = 333, A.summation = 600, A.Egrave = 611, A.racute = 389, A.omacron = 500, A.Zacute = 556, A.Zcaron = 556, A.greaterequal = 549, A.Eth = 722, A.Ccedilla = 667, A.lcommaaccent = 278, A.tcaron = 300, A.eogonek = 444, A.Uogonek = 722, A.Aacute = 611, A.Adieresis = 611, A.egrave = 444, A.zacute = 389, A.iogonek = 278, A.Oacute = 722, A.oacute = 500, A.amacron = 500, A.sacute = 389, A.idieresis = 278, A.Ocircumflex = 722, A.Ugrave = 722, A.Delta = 612, A.thorn = 500, A.twosuperior = 300, A.Odieresis = 722, A.mu = 500, A.igrave = 278, A.ohungarumlaut = 500, A.Eogonek = 611, A.dcroat = 500, A.threequarters = 750, A.Scedilla = 500, A.lcaron = 300, A.Kcommaaccent = 667, A.Lacute = 556, A.trademark = 980, A.edotaccent = 444, A.Igrave = 333, A.Imacron = 333, A.Lcaron = 611, A.onehalf = 750, A.lessequal = 549, A.ocircumflex = 500, A.ntilde = 500, A.Uhungarumlaut = 722, A.Eacute = 611, A.emacron = 444, A.gbreve = 500, A.onequarter = 750, A.Scaron = 500, A.Scommaaccent = 500, A.Ohungarumlaut = 722, A.degree = 400, A.ograve = 500, A.Ccaron = 667, A.ugrave = 500, A.radical = 453, A.Dcaron = 722, A.rcommaaccent = 389, A.Ntilde = 667, A.otilde = 500, A.Rcommaaccent = 611, A.Lcommaaccent = 556, A.Atilde = 611, A.Aogonek = 611, A.Aring = 611, A.Otilde = 722, A.zdotaccent = 389, A.Ecaron = 611, A.Iogonek = 333, A.kcommaaccent = 444, A.minus = 675, A.Icircumflex = 333, A.ncaron = 500, A.tcommaaccent = 278, A.logicalnot = 675, A.odieresis = 500, A.udieresis = 500, A.notequal = 549, A.gcommaaccent = 500, A.eth = 500, A.zcaron = 389, A.ncommaaccent = 500, A.onesuperior = 300, A.imacron = 278, A.Euro = 500;
  }), e.ZapfDingbats = Ce(function(A) {
    A.space = 278, A.a1 = 974, A.a2 = 961, A.a202 = 974, A.a3 = 980, A.a4 = 719, A.a5 = 789, A.a119 = 790, A.a118 = 791, A.a117 = 690, A.a11 = 960, A.a12 = 939, A.a13 = 549, A.a14 = 855, A.a15 = 911, A.a16 = 933, A.a105 = 911, A.a17 = 945, A.a18 = 974, A.a19 = 755, A.a20 = 846, A.a21 = 762, A.a22 = 761, A.a23 = 571, A.a24 = 677, A.a25 = 763, A.a26 = 760, A.a27 = 759, A.a28 = 754, A.a6 = 494, A.a7 = 552, A.a8 = 537, A.a9 = 577, A.a10 = 692, A.a29 = 786, A.a30 = 788, A.a31 = 788, A.a32 = 790, A.a33 = 793, A.a34 = 794, A.a35 = 816, A.a36 = 823, A.a37 = 789, A.a38 = 841, A.a39 = 823, A.a40 = 833, A.a41 = 816, A.a42 = 831, A.a43 = 923, A.a44 = 744, A.a45 = 723, A.a46 = 749, A.a47 = 790, A.a48 = 792, A.a49 = 695, A.a50 = 776, A.a51 = 768, A.a52 = 792, A.a53 = 759, A.a54 = 707, A.a55 = 708, A.a56 = 682, A.a57 = 701, A.a58 = 826, A.a59 = 815, A.a60 = 789, A.a61 = 789, A.a62 = 707, A.a63 = 687, A.a64 = 696, A.a65 = 689, A.a66 = 786, A.a67 = 787, A.a68 = 713, A.a69 = 791, A.a70 = 785, A.a71 = 791, A.a72 = 873, A.a73 = 761, A.a74 = 762, A.a203 = 762, A.a75 = 759, A.a204 = 759, A.a76 = 892, A.a77 = 892, A.a78 = 788, A.a79 = 784, A.a81 = 438, A.a82 = 138, A.a83 = 277, A.a84 = 415, A.a97 = 392, A.a98 = 392, A.a99 = 668, A.a100 = 668, A.a89 = 390, A.a90 = 390, A.a93 = 317, A.a94 = 317, A.a91 = 276, A.a92 = 276, A.a205 = 509, A.a85 = 509, A.a206 = 410, A.a86 = 410, A.a87 = 234, A.a88 = 234, A.a95 = 334, A.a96 = 334, A.a101 = 732, A.a102 = 544, A.a103 = 544, A.a104 = 910, A.a106 = 667, A.a107 = 760, A.a108 = 760, A.a112 = 776, A.a111 = 595, A.a110 = 694, A.a109 = 626, A.a120 = 788, A.a121 = 788, A.a122 = 788, A.a123 = 788, A.a124 = 788, A.a125 = 788, A.a126 = 788, A.a127 = 788, A.a128 = 788, A.a129 = 788, A.a130 = 788, A.a131 = 788, A.a132 = 788, A.a133 = 788, A.a134 = 788, A.a135 = 788, A.a136 = 788, A.a137 = 788, A.a138 = 788, A.a139 = 788, A.a140 = 788, A.a141 = 788, A.a142 = 788, A.a143 = 788, A.a144 = 788, A.a145 = 788, A.a146 = 788, A.a147 = 788, A.a148 = 788, A.a149 = 788, A.a150 = 788, A.a151 = 788, A.a152 = 788, A.a153 = 788, A.a154 = 788, A.a155 = 788, A.a156 = 788, A.a157 = 788, A.a158 = 788, A.a159 = 788, A.a160 = 894, A.a161 = 838, A.a163 = 1016, A.a164 = 458, A.a196 = 748, A.a165 = 924, A.a192 = 748, A.a166 = 918, A.a167 = 927, A.a168 = 928, A.a169 = 928, A.a170 = 834, A.a171 = 873, A.a172 = 828, A.a173 = 924, A.a162 = 924, A.a174 = 917, A.a175 = 930, A.a176 = 931, A.a177 = 463, A.a178 = 883, A.a179 = 836, A.a193 = 836, A.a180 = 867, A.a199 = 867, A.a181 = 696, A.a200 = 696, A.a182 = 874, A.a201 = 874, A.a183 = 760, A.a184 = 946, A.a197 = 771, A.a185 = 865, A.a194 = 771, A.a198 = 888, A.a186 = 967, A.a195 = 888, A.a187 = 831, A.a188 = 873, A.a189 = 927, A.a190 = 970, A.a191 = 918;
  });
}), SB = Ce(function(e) {
  e.Courier = {
    ascent: 629,
    descent: -157,
    capHeight: 562,
    xHeight: -426
  }, e["Courier-Bold"] = {
    ascent: 629,
    descent: -157,
    capHeight: 562,
    xHeight: 439
  }, e["Courier-Oblique"] = {
    ascent: 629,
    descent: -157,
    capHeight: 562,
    xHeight: 426
  }, e["Courier-BoldOblique"] = {
    ascent: 629,
    descent: -157,
    capHeight: 562,
    xHeight: 426
  }, e.Helvetica = {
    ascent: 718,
    descent: -207,
    capHeight: 718,
    xHeight: 523
  }, e["Helvetica-Bold"] = {
    ascent: 718,
    descent: -207,
    capHeight: 718,
    xHeight: 532
  }, e["Helvetica-Oblique"] = {
    ascent: 718,
    descent: -207,
    capHeight: 718,
    xHeight: 523
  }, e["Helvetica-BoldOblique"] = {
    ascent: 718,
    descent: -207,
    capHeight: 718,
    xHeight: 532
  }, e["Times-Roman"] = {
    ascent: 683,
    descent: -217,
    capHeight: 662,
    xHeight: 450
  }, e["Times-Bold"] = {
    ascent: 683,
    descent: -217,
    capHeight: 676,
    xHeight: 461
  }, e["Times-Italic"] = {
    ascent: 683,
    descent: -217,
    capHeight: 653,
    xHeight: 441
  }, e["Times-BoldItalic"] = {
    ascent: 683,
    descent: -217,
    capHeight: 669,
    xHeight: 462
  }, e.Symbol = {
    ascent: Math.NaN,
    descent: Math.NaN,
    capHeight: Math.NaN,
    xHeight: Math.NaN
  }, e.ZapfDingbats = {
    ascent: Math.NaN,
    descent: Math.NaN,
    capHeight: Math.NaN,
    xHeight: Math.NaN
  };
}), FB = 1, Ta = 2, qa = 4, $o = 8, fs = 16, us = 32, RB = 64, ds = 1, Pa = 2, NB = 8, GB = 32, UB = 64, MB = 128, wr = 256;
class LB {
  constructor({
    glyfTable: A,
    isGlyphLocationsLong: t,
    locaTable: i,
    numGlyphs: s
  }) {
    this.glyphs = [];
    const a = new DataView(i.buffer, i.byteOffset, i.byteLength), n = new DataView(A.buffer, A.byteOffset, A.byteLength), r = t ? 4 : 2;
    let g = t ? a.getUint32(0) : 2 * a.getUint16(0), o = 0;
    for (let I = 0; I < s; I++) {
      o += r;
      const c = t ? a.getUint32(o) : 2 * a.getUint16(o);
      if (c === g) {
        this.glyphs.push(new $s({}));
        continue;
      }
      const l = $s.parse(g, n);
      this.glyphs.push(l), g = c;
    }
  }
  getSize() {
    return this.glyphs.reduce((A, t) => {
      const i = t.getSize();
      return A + (i + 3 & -4);
    }, 0);
  }
  write() {
    const A = this.getSize(), t = new DataView(new ArrayBuffer(A)), i = A > 131070, s = i ? 4 : 2, a = new DataView(new ArrayBuffer((this.glyphs.length + 1) * s));
    i ? a.setUint32(0, 0) : a.setUint16(0, 0);
    let n = 0, r = 0;
    for (const g of this.glyphs)
      n += g.write(n, t), n = n + 3 & -4, r += s, i ? a.setUint32(r, n) : a.setUint16(r, n >> 1);
    return {
      isLocationLong: i,
      loca: new Uint8Array(a.buffer),
      glyf: new Uint8Array(t.buffer)
    };
  }
  scale(A) {
    for (let t = 0, i = this.glyphs.length; t < i; t++)
      this.glyphs[t].scale(A[t]);
  }
}
class $s {
  constructor({
    header: A = null,
    simple: t = null,
    composites: i = null
  }) {
    this.header = A, this.simple = t, this.composites = i;
  }
  static parse(A, t) {
    const [i, s] = _g.parse(A, t);
    if (A += i, s.numberOfContours < 0) {
      const n = [];
      for (; ; ) {
        const [r, g] = $g.parse(A, t);
        if (A += r, n.push(g), !(g.flags & GB))
          break;
      }
      return new $s({
        header: s,
        composites: n
      });
    }
    const a = zg.parse(A, t, s.numberOfContours);
    return new $s({
      header: s,
      simple: a
    });
  }
  getSize() {
    if (!this.header)
      return 0;
    const A = this.simple ? this.simple.getSize() : this.composites.reduce((t, i) => t + i.getSize(), 0);
    return this.header.getSize() + A;
  }
  write(A, t) {
    if (!this.header)
      return 0;
    const i = A;
    if (A += this.header.write(A, t), this.simple)
      A += this.simple.write(A, t);
    else
      for (const s of this.composites)
        A += s.write(A, t);
    return A - i;
  }
  scale(A) {
    if (!this.header)
      return;
    const t = (this.header.xMin + this.header.xMax) / 2;
    if (this.header.scale(t, A), this.simple)
      this.simple.scale(t, A);
    else
      for (const i of this.composites)
        i.scale(t, A);
  }
}
class _g {
  constructor({
    numberOfContours: A,
    xMin: t,
    yMin: i,
    xMax: s,
    yMax: a
  }) {
    this.numberOfContours = A, this.xMin = t, this.yMin = i, this.xMax = s, this.yMax = a;
  }
  static parse(A, t) {
    return [10, new _g({
      numberOfContours: t.getInt16(A),
      xMin: t.getInt16(A + 2),
      yMin: t.getInt16(A + 4),
      xMax: t.getInt16(A + 6),
      yMax: t.getInt16(A + 8)
    })];
  }
  getSize() {
    return 10;
  }
  write(A, t) {
    return t.setInt16(A, this.numberOfContours), t.setInt16(A + 2, this.xMin), t.setInt16(A + 4, this.yMin), t.setInt16(A + 6, this.xMax), t.setInt16(A + 8, this.yMax), 10;
  }
  scale(A, t) {
    this.xMin = Math.round(A + (this.xMin - A) * t), this.xMax = Math.round(A + (this.xMax - A) * t);
  }
}
class HB {
  constructor({
    flags: A,
    xCoordinates: t,
    yCoordinates: i
  }) {
    this.xCoordinates = t, this.yCoordinates = i, this.flags = A;
  }
}
class zg {
  constructor({
    contours: A,
    instructions: t
  }) {
    this.contours = A, this.instructions = t;
  }
  static parse(A, t, i) {
    const s = [];
    for (let Q = 0; Q < i; Q++) {
      const E = t.getUint16(A);
      A += 2, s.push(E);
    }
    const a = s[i - 1] + 1, n = t.getUint16(A);
    A += 2;
    const r = new Uint8Array(t).slice(A, A + n);
    A += n;
    const g = [];
    for (let Q = 0; Q < a; A++, Q++) {
      let E = t.getUint8(A);
      if (g.push(E), E & $o) {
        const f = t.getUint8(++A);
        E ^= $o;
        for (let d = 0; d < f; d++)
          g.push(E);
        Q += f;
      }
    }
    const o = [];
    let I = [], c = [], l = [];
    const C = [];
    let h = 0, B = 0;
    for (let Q = 0; Q < a; Q++) {
      const E = g[Q];
      if (E & Ta) {
        const f = t.getUint8(A++);
        B += E & fs ? f : -f, I.push(B);
      } else E & fs || (B += t.getInt16(A), A += 2), I.push(B);
      s[h] === Q && (h++, o.push(I), I = []);
    }
    B = 0, h = 0;
    for (let Q = 0; Q < a; Q++) {
      const E = g[Q];
      if (E & qa) {
        const f = t.getUint8(A++);
        B += E & us ? f : -f, c.push(B);
      } else E & us || (B += t.getInt16(A), A += 2), c.push(B);
      l.push(E & FB | E & RB), s[h] === Q && (I = o[h], h++, C.push(new HB({
        flags: l,
        xCoordinates: I,
        yCoordinates: c
      })), c = [], l = []);
    }
    return new zg({
      contours: C,
      instructions: r
    });
  }
  getSize() {
    let A = this.contours.length * 2 + 2 + this.instructions.length, t = 0, i = 0;
    for (const s of this.contours) {
      A += s.flags.length;
      for (let a = 0, n = s.xCoordinates.length; a < n; a++) {
        const r = s.xCoordinates[a], g = s.yCoordinates[a];
        let o = Math.abs(r - t);
        o > 255 ? A += 2 : o > 0 && (A += 1), t = r, o = Math.abs(g - i), o > 255 ? A += 2 : o > 0 && (A += 1), i = g;
      }
    }
    return A;
  }
  write(A, t) {
    const i = A, s = [], a = [], n = [];
    let r = 0, g = 0;
    for (const o of this.contours) {
      for (let I = 0, c = o.xCoordinates.length; I < c; I++) {
        let l = o.flags[I];
        const C = o.xCoordinates[I];
        let h = C - r;
        if (h === 0)
          l |= fs, s.push(0);
        else {
          const Q = Math.abs(h);
          Q <= 255 ? (l |= h >= 0 ? Ta | fs : Ta, s.push(Q)) : s.push(h);
        }
        r = C;
        const B = o.yCoordinates[I];
        if (h = B - g, h === 0)
          l |= us, a.push(0);
        else {
          const Q = Math.abs(h);
          Q <= 255 ? (l |= h >= 0 ? qa | us : qa, a.push(Q)) : a.push(h);
        }
        g = B, n.push(l);
      }
      t.setUint16(A, s.length - 1), A += 2;
    }
    t.setUint16(A, this.instructions.length), A += 2, this.instructions.length && (new Uint8Array(t.buffer, 0, t.buffer.byteLength).set(this.instructions, A), A += this.instructions.length);
    for (const o of n)
      t.setUint8(A++, o);
    for (let o = 0, I = s.length; o < I; o++) {
      const c = s[o], l = n[o];
      l & Ta ? t.setUint8(A++, c) : l & fs || (t.setInt16(A, c), A += 2);
    }
    for (let o = 0, I = a.length; o < I; o++) {
      const c = a[o], l = n[o];
      l & qa ? t.setUint8(A++, c) : l & us || (t.setInt16(A, c), A += 2);
    }
    return A - i;
  }
  scale(A, t) {
    for (const i of this.contours)
      if (i.xCoordinates.length !== 0)
        for (let s = 0, a = i.xCoordinates.length; s < a; s++)
          i.xCoordinates[s] = Math.round(A + (i.xCoordinates[s] - A) * t);
  }
}
class $g {
  constructor({
    flags: A,
    glyphIndex: t,
    argument1: i,
    argument2: s,
    transf: a,
    instructions: n
  }) {
    this.flags = A, this.glyphIndex = t, this.argument1 = i, this.argument2 = s, this.transf = a, this.instructions = n;
  }
  static parse(A, t) {
    const i = A, s = [];
    let a = t.getUint16(A);
    const n = t.getUint16(A + 2);
    A += 4;
    let r, g;
    a & ds ? (a & Pa ? (r = t.getInt16(A), g = t.getInt16(A + 2)) : (r = t.getUint16(A), g = t.getUint16(A + 2)), A += 4, a ^= ds) : (a & Pa ? (r = t.getInt8(A), g = t.getInt8(A + 1)) : (r = t.getUint8(A), g = t.getUint8(A + 1)), A += 2), a & NB ? (s.push(t.getUint16(A)), A += 2) : a & UB ? (s.push(t.getUint16(A), t.getUint16(A + 2)), A += 4) : a & MB && (s.push(t.getUint16(A), t.getUint16(A + 2), t.getUint16(A + 4), t.getUint16(A + 6)), A += 8);
    let o = null;
    if (a & wr) {
      const I = t.getUint16(A);
      A += 2, o = new Uint8Array(t).slice(A, A + I), A += I;
    }
    return [A - i, new $g({
      flags: a,
      glyphIndex: n,
      argument1: r,
      argument2: g,
      transf: s,
      instructions: o
    })];
  }
  getSize() {
    let A = 4 + this.transf.length * 2;
    return this.flags & wr && (A += 2 + this.instructions.length), A += 2, this.flags & 2 ? this.argument1 >= -128 && this.argument1 <= 127 && this.argument2 >= -128 && this.argument2 <= 127 || (A += 2) : this.argument1 >= 0 && this.argument1 <= 255 && this.argument2 >= 0 && this.argument2 <= 255 || (A += 2), A;
  }
  write(A, t) {
    const i = A;
    return this.flags & Pa ? this.argument1 >= -128 && this.argument1 <= 127 && this.argument2 >= -128 && this.argument2 <= 127 || (this.flags |= ds) : this.argument1 >= 0 && this.argument1 <= 255 && this.argument2 >= 0 && this.argument2 <= 255 || (this.flags |= ds), t.setUint16(A, this.flags), t.setUint16(A + 2, this.glyphIndex), A += 4, this.flags & ds ? (this.flags & Pa ? (t.setInt16(A, this.argument1), t.setInt16(A + 2, this.argument2)) : (t.setUint16(A, this.argument1), t.setUint16(A + 2, this.argument2)), A += 4) : (t.setUint8(A, this.argument1), t.setUint8(A + 1, this.argument2), A += 2), this.flags & wr && (t.setUint16(A, this.instructions.length), A += 2, this.instructions.length && (new Uint8Array(t.buffer, 0, t.buffer.byteLength).set(this.instructions, A), A += this.instructions.length)), A - i;
  }
  scale(A, t) {
  }
}
function Wa(e, A, t) {
  e[A] = t >> 8 & 255, e[A + 1] = t & 255;
}
function br(e, A, t) {
  e[A] = t >> 24 & 255, e[A + 1] = t >> 16 & 255, e[A + 2] = t >> 8 & 255, e[A + 3] = t & 255;
}
function JB(e, A, t) {
  if (t instanceof Uint8Array)
    e.set(t, A);
  else if (typeof t == "string")
    for (let i = 0, s = t.length; i < s; i++)
      e[A++] = t.charCodeAt(i) & 255;
  else
    for (const i of t)
      e[A++] = i & 255;
}
const AI = 12, eI = 16;
class Aa {
  constructor(A) {
    this.sfnt = A, this.tables = /* @__PURE__ */ Object.create(null);
  }
  static getSearchParams(A, t) {
    let i = 1, s = 0;
    for (; (i ^ A) > i; )
      i <<= 1, s++;
    const a = i * t;
    return {
      range: a,
      entry: s,
      rangeShift: t * A - a
    };
  }
  toArray() {
    let A = this.sfnt;
    const t = this.tables, i = Object.keys(t);
    i.sort();
    const s = i.length;
    let a, n, r, g, o, I = AI + s * eI;
    const c = [I];
    for (a = 0; a < s; a++) {
      g = t[i[a]];
      const h = (g.length + 3 & -4) >>> 0;
      I += h, c.push(I);
    }
    const l = new Uint8Array(I);
    for (a = 0; a < s; a++)
      g = t[i[a]], JB(l, c[a], g);
    A === "true" && (A = ve(65536)), l[0] = A.charCodeAt(0) & 255, l[1] = A.charCodeAt(1) & 255, l[2] = A.charCodeAt(2) & 255, l[3] = A.charCodeAt(3) & 255, Wa(l, 4, s);
    const C = Aa.getSearchParams(s, 16);
    for (Wa(l, 6, C.range), Wa(l, 8, C.entry), Wa(l, 10, C.rangeShift), I = AI, a = 0; a < s; a++) {
      o = i[a], l[I] = o.charCodeAt(0) & 255, l[I + 1] = o.charCodeAt(1) & 255, l[I + 2] = o.charCodeAt(2) & 255, l[I + 3] = o.charCodeAt(3) & 255;
      let h = 0;
      for (n = c[a], r = c[a + 1]; n < r; n += 4) {
        const B = le(l, n);
        h = h + B >>> 0;
      }
      br(l, I + 4, h), br(l, I + 8, c[a]), br(l, I + 12, t[o].length), I += eI;
    }
    return l;
  }
  addTable(A, t) {
    if (A in this.tables)
      throw new Error("Table " + A + " already exists");
    this.tables[A] = t;
  }
}
const YB = !1, it = {
  hstem: [1],
  vstem: [3],
  vmoveto: [4],
  rlineto: [5],
  hlineto: [6],
  vlineto: [7],
  rrcurveto: [8],
  callsubr: [10],
  flex: [12, 35],
  drop: [12, 18],
  endchar: [14],
  rmoveto: [21],
  hmoveto: [22],
  vhcurveto: [30],
  hvcurveto: [31]
};
class KB {
  constructor() {
    this.width = 0, this.lsb = 0, this.flexing = !1, this.output = [], this.stack = [];
  }
  convert(A, t, i) {
    const s = A.length;
    let a = !1, n, r, g;
    for (let o = 0; o < s; o++) {
      let I = A[o];
      if (I < 32) {
        switch (I === 12 && (I = (I << 8) + A[++o]), I) {
          case 1: {
            this.stack = [];
            break;
          }
          case 3: {
            this.stack = [];
            break;
          }
          case 4:
            if (this.flexing) {
              if (this.stack.length < 1) {
                a = !0;
                break;
              }
              const B = this.stack.pop();
              this.stack.push(0, B);
              break;
            }
            a = this.executeCommand(1, it.vmoveto);
            break;
          case 5:
            a = this.executeCommand(2, it.rlineto);
            break;
          case 6:
            a = this.executeCommand(1, it.hlineto);
            break;
          case 7:
            a = this.executeCommand(1, it.vlineto);
            break;
          case 8:
            a = this.executeCommand(6, it.rrcurveto);
            break;
          case 9:
            this.stack = [];
            break;
          case 10:
            if (this.stack.length < 1) {
              a = !0;
              break;
            }
            if (g = this.stack.pop(), !t[g]) {
              a = !0;
              break;
            }
            a = this.convert(t[g], t, i);
            break;
          case 11:
            return a;
          case 13:
            if (this.stack.length < 2) {
              a = !0;
              break;
            }
            n = this.stack.pop(), r = this.stack.pop(), this.lsb = r, this.width = n, this.stack.push(n, r), a = this.executeCommand(2, it.hmoveto);
            break;
          case 14:
            this.output.push(it.endchar[0]);
            break;
          case 21:
            if (this.flexing)
              break;
            a = this.executeCommand(2, it.rmoveto);
            break;
          case 22:
            if (this.flexing) {
              this.stack.push(0);
              break;
            }
            a = this.executeCommand(1, it.hmoveto);
            break;
          case 30:
            a = this.executeCommand(4, it.vhcurveto);
            break;
          case 31:
            a = this.executeCommand(4, it.hvcurveto);
            break;
          case 3072:
            this.stack = [];
            break;
          case 3073: {
            this.stack = [];
            break;
          }
          case 3074: {
            this.stack = [];
            break;
          }
          case 3078:
            if (i) {
              const B = this.stack.at(-5);
              this.seac = this.stack.splice(-4, 4), this.seac[0] += this.lsb - B, a = this.executeCommand(0, it.endchar);
            } else
              a = this.executeCommand(4, it.endchar);
            break;
          case 3079:
            if (this.stack.length < 4) {
              a = !0;
              break;
            }
            this.stack.pop(), n = this.stack.pop();
            const c = this.stack.pop();
            r = this.stack.pop(), this.lsb = r, this.width = n, this.stack.push(n, r, c), a = this.executeCommand(3, it.rmoveto);
            break;
          case 3084:
            if (this.stack.length < 2) {
              a = !0;
              break;
            }
            const l = this.stack.pop(), C = this.stack.pop();
            this.stack.push(C / l);
            break;
          case 3088:
            if (this.stack.length < 2) {
              a = !0;
              break;
            }
            g = this.stack.pop();
            const h = this.stack.pop();
            if (g === 0 && h === 3) {
              const B = this.stack.splice(-17, 17);
              this.stack.push(B[2] + B[0], B[3] + B[1], B[4], B[5], B[6], B[7], B[8], B[9], B[10], B[11], B[12], B[13], B[14]), a = this.executeCommand(13, it.flex, !0), this.flexing = !1, this.stack.push(B[15], B[16]);
            } else g === 1 && h === 0 && (this.flexing = !0);
            break;
          case 3089:
            break;
          case 3105:
            this.stack = [];
            break;
          default:
            k('Unknown type 1 charstring command of "' + I + '"');
            break;
        }
        if (a)
          break;
        continue;
      } else I <= 246 ? I -= 139 : I <= 250 ? I = (I - 247) * 256 + A[++o] + 108 : I <= 254 ? I = -((I - 251) * 256) - A[++o] - 108 : I = (A[++o] & 255) << 24 | (A[++o] & 255) << 16 | (A[++o] & 255) << 8 | (A[++o] & 255) << 0;
      this.stack.push(I);
    }
    return a;
  }
  executeCommand(A, t, i) {
    const s = this.stack.length;
    if (A > s)
      return !0;
    const a = s - A;
    for (let n = a; n < s; n++) {
      let r = this.stack[n];
      Number.isInteger(r) ? this.output.push(28, r >> 8 & 255, r & 255) : (r = 65536 * r | 0, this.output.push(255, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, r & 255));
    }
    return this.output.push(...t), i ? this.stack.splice(a, A) : this.stack.length = 0, !1;
  }
}
const tI = 55665, vB = 4330;
function Ai(e) {
  return e >= 48 && e <= 57 || e >= 65 && e <= 70 || e >= 97 && e <= 102;
}
function iI(e, A, t) {
  if (t >= e.length)
    return new Uint8Array(0);
  const i = 52845, s = 22719;
  let a = A | 0, n, r;
  for (n = 0; n < t; n++)
    a = (e[n] + a) * i + s & 65535;
  const g = e.length - t, o = new Uint8Array(g);
  for (n = t, r = 0; r < g; n++, r++) {
    const I = e[n];
    o[r] = I ^ a >> 8, a = (I + a) * i + s & 65535;
  }
  return o;
}
function TB(e, A, t) {
  let a = A | 0;
  const n = e.length, r = n >>> 1, g = new Uint8Array(r);
  let o, I;
  for (o = 0, I = 0; o < n; o++) {
    const c = e[o];
    if (!Ai(c))
      continue;
    o++;
    let l;
    for (; o < n && !Ai(l = e[o]); )
      o++;
    if (o < n) {
      const C = parseInt(String.fromCharCode(c, l), 16);
      g[I++] = C ^ a >> 8, a = (C + a) * 52845 + 22719 & 65535;
    }
  }
  return g.slice(t, I);
}
function sI(e) {
  return e === 47 || e === 91 || e === 93 || e === 123 || e === 125 || e === 40 || e === 41;
}
class aI {
  constructor(A, t, i) {
    if (t) {
      const s = A.getBytes(), a = !((Ai(s[0]) || mt(s[0])) && Ai(s[1]) && Ai(s[2]) && Ai(s[3]) && Ai(s[4]) && Ai(s[5]) && Ai(s[6]) && Ai(s[7]));
      A = new Ee(a ? iI(s, tI, 4) : TB(s, tI, 4));
    }
    this.seacAnalysisEnabled = !!i, this.stream = A, this.nextChar();
  }
  readNumberArray() {
    this.getToken();
    const A = [];
    for (; ; ) {
      const t = this.getToken();
      if (t === null || t === "]" || t === "}")
        break;
      A.push(parseFloat(t || 0));
    }
    return A;
  }
  readNumber() {
    const A = this.getToken();
    return parseFloat(A || 0);
  }
  readInt() {
    const A = this.getToken();
    return parseInt(A || 0, 10) | 0;
  }
  readBoolean() {
    return this.getToken() === "true" ? 1 : 0;
  }
  nextChar() {
    return this.currentChar = this.stream.getByte();
  }
  prevChar() {
    return this.stream.skip(-2), this.currentChar = this.stream.getByte();
  }
  getToken() {
    let A = !1, t = this.currentChar;
    for (; ; ) {
      if (t === -1)
        return null;
      if (A)
        (t === 10 || t === 13) && (A = !1);
      else if (t === 37)
        A = !0;
      else if (!mt(t))
        break;
      t = this.nextChar();
    }
    if (sI(t))
      return this.nextChar(), String.fromCharCode(t);
    let i = "";
    do
      i += String.fromCharCode(t), t = this.nextChar();
    while (t >= 0 && !mt(t) && !sI(t));
    return i;
  }
  readCharStrings(A, t) {
    return t === -1 ? A : iI(A, vB, t);
  }
  extractFontProgram(A) {
    const t = this.stream, i = [], s = [], a = /* @__PURE__ */ Object.create(null);
    a.lenIV = 4;
    const n = {
      subrs: [],
      charstrings: [],
      properties: {
        privateData: a
      }
    };
    let r, g, o, I;
    for (; (r = this.getToken()) !== null; )
      if (r === "/")
        switch (r = this.getToken(), r) {
          case "CharStrings":
            for (this.getToken(), this.getToken(), this.getToken(), this.getToken(); r = this.getToken(), !(r === null || r === "end"); ) {
              if (r !== "/")
                continue;
              const l = this.getToken();
              g = this.readInt(), this.getToken(), o = g > 0 ? t.getBytes(g) : new Uint8Array(0), I = n.properties.privateData.lenIV;
              const C = this.readCharStrings(o, I);
              this.nextChar(), r = this.getToken(), r === "noaccess" ? this.getToken() : r === "/" && this.prevChar(), s.push({
                glyph: l,
                encoded: C
              });
            }
            break;
          case "Subrs":
            for (this.readInt(), this.getToken(); this.getToken() === "dup"; ) {
              const l = this.readInt();
              g = this.readInt(), this.getToken(), o = g > 0 ? t.getBytes(g) : new Uint8Array(0), I = n.properties.privateData.lenIV;
              const C = this.readCharStrings(o, I);
              this.nextChar(), r = this.getToken(), r === "noaccess" && this.getToken(), i[l] = C;
            }
            break;
          case "BlueValues":
          case "OtherBlues":
          case "FamilyBlues":
          case "FamilyOtherBlues":
            const c = this.readNumberArray();
            c.length > 0 && c.length % 2 === 0 && YB && (n.properties.privateData[r] = c);
            break;
          case "StemSnapH":
          case "StemSnapV":
            n.properties.privateData[r] = this.readNumberArray();
            break;
          case "StdHW":
          case "StdVW":
            n.properties.privateData[r] = this.readNumberArray()[0];
            break;
          case "BlueShift":
          case "lenIV":
          case "BlueFuzz":
          case "BlueScale":
          case "LanguageGroup":
            n.properties.privateData[r] = this.readNumber();
            break;
          case "ExpansionFactor":
            n.properties.privateData[r] = this.readNumber() || 0.06;
            break;
          case "ForceBold":
            n.properties.privateData[r] = this.readBoolean();
            break;
        }
    for (const {
      encoded: c,
      glyph: l
    } of s) {
      const C = new KB(), h = C.convert(c, i, this.seacAnalysisEnabled);
      let B = C.output;
      h && (B = [14]);
      const Q = {
        glyphName: l,
        charstring: B,
        width: C.width,
        lsb: C.lsb,
        seac: C.seac
      };
      if (l === ".notdef" ? n.charstrings.unshift(Q) : n.charstrings.push(Q), A.builtInEncoding) {
        const E = A.builtInEncoding.indexOf(l);
        E > -1 && A.widths[E] === void 0 && E >= A.firstChar && E <= A.lastChar && (A.widths[E] = C.width);
      }
    }
    return n;
  }
  extractFontHeader(A) {
    let t;
    for (; (t = this.getToken()) !== null; )
      if (t === "/")
        switch (t = this.getToken(), t) {
          case "FontMatrix":
            const i = this.readNumberArray();
            A.fontMatrix = i;
            break;
          case "Encoding":
            const s = this.getToken();
            let a;
            if (!/^\d+$/.test(s))
              a = Vs(s);
            else {
              a = [];
              const r = parseInt(s, 10) | 0;
              this.getToken();
              for (let g = 0; g < r; g++) {
                for (t = this.getToken(); t !== "dup" && t !== "def"; )
                  if (t = this.getToken(), t === null)
                    return;
                if (t === "def")
                  break;
                const o = this.readInt();
                this.getToken();
                const I = this.getToken();
                a[o] = I, this.getToken();
              }
            }
            A.builtInEncoding = a;
            break;
          case "FontBBox":
            const n = this.readNumberArray();
            A.ascent = Math.max(n[3], n[1]), A.descent = Math.min(n[1], n[3]), A.ascentScaled = !0;
            break;
        }
  }
}
function nI(e, A, t) {
  const i = e.length, s = A.length, a = i - s;
  let n = t, r = !1;
  for (; n < a; ) {
    let g = 0;
    for (; g < s && e[n + g] === A[g]; )
      g++;
    if (g >= s) {
      for (n += g; n < i && mt(e[n]); )
        n++;
      r = !0;
      break;
    }
    n++;
  }
  return {
    found: r,
    length: n
  };
}
function qB(e, A) {
  const t = [101, 101, 120, 101, 99], i = e.pos;
  let s, a, n;
  try {
    s = e.getBytes(A), a = s.length;
  } catch {
  }
  if (a === A && (n = nI(s, t, A - 2 * t.length), n.found && n.length === A))
    return {
      stream: new Ee(s),
      length: A
    };
  k('Invalid "Length1" property in Type1 font -- trying to recover.'), e.pos = i;
  const r = 2048;
  let g;
  for (; ; ) {
    const o = e.peekBytes(r);
    if (n = nI(o, t, 0), n.length === 0)
      break;
    if (e.pos += n.length, n.found) {
      g = e.pos - i;
      break;
    }
  }
  return e.pos = i, g ? {
    stream: new Ee(e.getBytes(g)),
    length: g
  } : (k('Unable to recover "Length1" property in Type1 font -- using as is.'), {
    stream: new Ee(e.getBytes(A)),
    length: A
  });
}
function PB(e, A) {
  const t = e.getBytes();
  if (t.length === 0)
    throw new T("getEexecBlock - no font program found.");
  return {
    stream: new Ee(t),
    length: t.length
  };
}
class WB {
  constructor(A, t, i) {
    let a = i.length1;
    i.length2;
    let n = t.peekBytes(6);
    const r = n[0] === 128 && n[1] === 1;
    r && (t.skip(6), a = n[5] << 24 | n[4] << 16 | n[3] << 8 | n[2]);
    const g = qB(t, a);
    new aI(g.stream, !1, j0).extractFontHeader(i), r && (n = t.getBytes(6), n[5] << 24 | n[4] << 16 | n[3] << 8 | n[2]);
    const I = PB(t), l = new aI(I.stream, !0, j0).extractFontProgram(i);
    for (const Q in l.properties)
      i[Q] = l.properties[Q];
    const C = l.charstrings, h = this.getType2Charstrings(C), B = this.getType2Subrs(l.subrs);
    this.charstrings = C, this.data = this.wrap(A, h, this.charstrings, B, i), this.seacs = this.getSeacs(l.charstrings);
  }
  get numGlyphs() {
    return this.charstrings.length + 1;
  }
  getCharset() {
    const A = [".notdef"];
    for (const {
      glyphName: t
    } of this.charstrings)
      A.push(t);
    return A;
  }
  getGlyphMapping(A) {
    const t = this.charstrings;
    if (A.composite) {
      const r = /* @__PURE__ */ Object.create(null);
      for (let g = 0, o = t.length; g < o; g++) {
        const I = A.cMap.charCodeOf(g);
        r[I] = g + 1;
      }
      return r;
    }
    const i = [".notdef"];
    let s, a;
    for (a = 0; a < t.length; a++)
      i.push(t[a].glyphName);
    const n = A.builtInEncoding;
    if (n) {
      s = /* @__PURE__ */ Object.create(null);
      for (const r in n)
        a = i.indexOf(n[r]), a >= 0 && (s[r] = a);
    }
    return vc(A, s, i);
  }
  hasGlyphId(A) {
    return A < 0 || A >= this.numGlyphs ? !1 : A === 0 ? !0 : this.charstrings[A - 1].charstring.length > 0;
  }
  getSeacs(A) {
    const t = [];
    for (let i = 0, s = A.length; i < s; i++) {
      const a = A[i];
      a.seac && (t[i + 1] = a.seac);
    }
    return t;
  }
  getType2Charstrings(A) {
    const t = [];
    for (const i of A)
      t.push(i.charstring);
    return t;
  }
  getType2Subrs(A) {
    let t = 0;
    const i = A.length;
    i < 1133 ? t = 107 : i < 33769 ? t = 1131 : t = 32768;
    const s = [];
    let a;
    for (a = 0; a < t; a++)
      s.push([11]);
    for (a = 0; a < i; a++)
      s.push(A[a]);
    return s;
  }
  wrap(A, t, i, s, a) {
    const n = new Hc();
    n.header = new Jc(1, 0, 4, 4), n.names = [A];
    const r = new _s();
    r.setByName("version", 391), r.setByName("Notice", 392), r.setByName("FullName", 393), r.setByName("FamilyName", 394), r.setByName("Weight", 395), r.setByName("Encoding", null), r.setByName("FontMatrix", a.fontMatrix), r.setByName("FontBBox", a.bbox), r.setByName("charset", null), r.setByName("CharStrings", null), r.setByName("Private", null), n.topDict = r;
    const g = new Xg();
    g.add("Version 0.11"), g.add("See original notice"), g.add(A), g.add(A), g.add("Medium"), n.strings = g, n.globalSubrIndex = new Ti();
    const o = t.length, I = [".notdef"];
    let c, l;
    for (c = 0; c < o; c++) {
      const f = i[c].glyphName;
      cn.indexOf(f) === -1 && g.add(f), I.push(f);
    }
    n.charset = new Gs(!1, 0, I);
    const C = new Ti();
    for (C.add([139, 14]), c = 0; c < o; c++)
      C.add(t[c]);
    n.charStrings = C;
    const h = new zs();
    h.setByName("Subrs", null);
    const B = ["BlueValues", "OtherBlues", "FamilyBlues", "FamilyOtherBlues", "StemSnapH", "StemSnapV", "BlueShift", "BlueFuzz", "BlueScale", "LanguageGroup", "ExpansionFactor", "ForceBold", "StdHW", "StdVW"];
    for (c = 0, l = B.length; c < l; c++) {
      const f = B[c];
      if (!(f in a.privateData))
        continue;
      const d = a.privateData[f];
      if (Array.isArray(d))
        for (let u = d.length - 1; u > 0; u--)
          d[u] -= d[u - 1];
      h.setByName(f, d);
    }
    n.topDict.privateDict = h;
    const Q = new Ti();
    for (c = 0, l = s.length; c < l; c++)
      Q.add(s[c]);
    return h.subrsIndex = Q, new ya(n).compile();
  }
}
const Ii = [[57344, 63743], [1048576, 1114109]], t0 = 1e3, rI = ["ascent", "bbox", "black", "bold", "charProcOperatorList", "composite", "cssFontInfo", "data", "defaultVMetrics", "defaultWidth", "descent", "fallbackName", "fontMatrix", "isInvalidPDFjsFont", "isType3Font", "italic", "loadedName", "mimetype", "missingFile", "name", "remeasure", "subtype", "systemFontInfo", "type", "vertical"], OB = ["cMap", "defaultEncoding", "differences", "isMonospace", "isSerifFont", "isSymbolicFont", "seacMap", "toFontChar", "toUnicode", "vmetrics", "widths"];
function Dr(e) {
  if (!e.fontMatrix || e.fontMatrix[0] === c0[0])
    return;
  const A = 1e-3 / e.fontMatrix[0], t = e.widths;
  for (const i in t)
    t[i] *= A;
  e.defaultWidth *= A;
}
function ZB(e, A, t) {
  if (e.isInternalFont || e.hasIncludedToUnicodeMap || e.hasEncoding || e.toUnicode instanceof Gt || !A || t.length === 0 || e.defaultEncoding === Xs)
    return;
  for (const n of t)
    if (!Oc(n))
      return;
  const i = Xs, s = [], a = si();
  for (const n in i) {
    const r = i[n];
    if (r === "")
      continue;
    const g = a[r];
    g !== void 0 && (s[n] = String.fromCharCode(g));
  }
  s.length > 0 && e.toUnicode.amend(s);
}
function jB(e, A) {
  if (e.isInternalFont || e.hasIncludedToUnicodeMap || A === e.defaultEncoding || e.toUnicode instanceof Gt)
    return;
  const t = [], i = si();
  for (const s in A) {
    if (e.hasEncoding && (e.baseEncodingName || e.differences[s] !== void 0))
      continue;
    const a = A[s], n = ss(a, i);
    n !== -1 && (t[s] = String.fromCharCode(n));
  }
  t.length > 0 && e.toUnicode.amend(t);
}
function gI(e) {
  if (!e.fallbackToUnicode || e.toUnicode instanceof Gt)
    return;
  const A = [];
  for (const t in e.fallbackToUnicode)
    e.toUnicode.has(t) || (A[t] = e.fallbackToUnicode[t]);
  A.length > 0 && e.toUnicode.amend(A);
}
class XB {
  constructor(A, t, i, s, a, n, r, g, o) {
    this.originalCharCode = A, this.fontChar = t, this.unicode = i, this.accent = s, this.width = a, this.vmetric = n, this.operatorListId = r, this.isSpace = g, this.isInFont = o;
  }
  get category() {
    return tA(this, "category", BB(this.unicode), !0);
  }
}
function _i(e, A) {
  return (e << 8) + A;
}
function xs(e, A, t) {
  e[A + 1] = t, e[A] = t >>> 8;
}
function ut(e, A) {
  const t = (e << 8) + A;
  return t & 32768 ? t - 65536 : t;
}
function VB(e, A, t) {
  e[A + 3] = t & 255, e[A + 2] = t >>> 8, e[A + 1] = t >>> 16, e[A] = t >>> 24;
}
function _B(e, A, t, i) {
  return (e << 24) + (A << 16) + (t << 8) + i;
}
function Ae(e) {
  return String.fromCharCode(e >> 8 & 255, e & 255);
}
function zi(e) {
  return e > 32767 ? e = 32767 : e < -32768 && (e = -32768), String.fromCharCode(e >> 8 & 255, e & 255);
}
function zB(e) {
  const A = e.peekBytes(4);
  return le(A, 0) === 65536 || lt(A) === "true";
}
function Wc(e) {
  const A = e.peekBytes(4);
  return lt(A) === "ttcf";
}
function $B(e) {
  const A = e.peekBytes(4);
  return lt(A) === "OTTO";
}
function AQ(e) {
  const A = e.peekBytes(2);
  return A[0] === 37 && A[1] === 33 || A[0] === 128 && A[1] === 1;
}
function eQ(e) {
  const A = e.peekBytes(4);
  return A[0] >= 1 && A[3] >= 1 && A[3] <= 4;
}
function tQ(e, {
  type: A,
  subtype: t,
  composite: i
}) {
  let s, a;
  return zB(e) || Wc(e) ? s = i ? "CIDFontType2" : "TrueType" : $B(e) ? s = i ? "CIDFontType2" : "OpenType" : AQ(e) ? i ? s = "CIDFontType0" : s = A === "MMType1" ? "MMType1" : "Type1" : eQ(e) ? i ? (s = "CIDFontType0", a = "CIDFontType0C") : (s = A === "MMType1" ? "MMType1" : "Type1", a = "Type1C") : (k("getFontFileType: Unable to detect correct font file Type/Subtype."), s = A, a = t), [s, a];
}
function Oa(e, A) {
  for (const t in A)
    e[+t] = A[t];
}
function kr(e, A, t) {
  const i = [];
  let s;
  for (let a = 0, n = e.length; a < n; a++)
    s = ss(e[a], A), s !== -1 && (i[a] = s);
  for (const a in t)
    s = ss(t[a], A), s !== -1 && (i[+a] = s);
  return i;
}
function iQ(e) {
  return e.platform === 1 && e.encoding === 0 && e.language === 0;
}
function Oc(e) {
  return e.platform === 3 && e.encoding === 1 && e.language === 1033;
}
function Sr(e, A, t = !1) {
  switch (A.length) {
    case 1:
      return A.charCodeAt(0);
    case 2:
      return A.charCodeAt(0) << 8 | A.charCodeAt(1);
  }
  const i = `Unsupported CID string (charCode ${e}): "${A}".`;
  if (t)
    throw new T(i);
  return k(i), A;
}
function oI(e, A, t, i) {
  const s = /* @__PURE__ */ Object.create(null), a = /* @__PURE__ */ new Map(), n = [], r = /* @__PURE__ */ new Set();
  let g = 0, I = Ii[g][0], c = Ii[g][1];
  const l = (C) => Ii[0][0] <= C && C <= Ii[0][1] || Ii[1][0] <= C && C <= Ii[1][1];
  for (const C in e) {
    let h = e[C];
    if (!A(h))
      continue;
    if (I > c) {
      if (g++, g >= Ii.length) {
        k("Ran out of space in font private use area.");
        break;
      }
      I = Ii[g][0], c = Ii[g][1];
    }
    const B = I++;
    h === 0 && (h = t);
    let Q = i.get(C);
    typeof Q == "string" && (Q = Q.codePointAt(0)), Q && !l(Q) && !r.has(h) && (a.set(Q, h), r.add(h)), s[B] = h, n[C] = B;
  }
  return {
    toFontChar: n,
    charCodeToGlyphId: s,
    toUnicodeExtraMap: a,
    nextAvailableFontCharCode: I
  };
}
function sQ(e, A, t) {
  const i = [];
  for (const n in e)
    e[n] >= t || i.push({
      fontCharCode: n | 0,
      glyphId: e[n]
    });
  if (A)
    for (const [n, r] of A)
      r >= t || i.push({
        fontCharCode: n,
        glyphId: r
      });
  i.length === 0 && i.push({
    fontCharCode: 0,
    glyphId: 0
  }), i.sort(function(r, g) {
    return r.fontCharCode - g.fontCharCode;
  });
  const s = [], a = i.length;
  for (let n = 0; n < a; ) {
    const r = i[n].fontCharCode, g = [i[n].glyphId];
    ++n;
    let o = r;
    for (; n < a && o + 1 === i[n].fontCharCode && (g.push(i[n].glyphId), ++o, ++n, o !== 65535); )
      ;
    s.push([r, o, g]);
  }
  return s;
}
function II(e, A, t) {
  const i = sQ(e, A, t), s = i.at(-1)[1] > 65535 ? 2 : 1;
  let a = "\0\0" + Ae(s) + "\0\0" + ve(4 + s * 8), n, r, g, o;
  for (n = i.length - 1; n >= 0 && !(i[n][0] <= 65535); --n)
    ;
  const I = n + 1;
  i[n][0] < 65535 && i[n][1] === 65535 && (i[n][1] = 65534);
  const c = i[n][1] < 65535 ? 1 : 0, l = I + c, C = Aa.getSearchParams(l, 2);
  let h = "", B = "", Q = "", E = "", f = "", d = 0, u, x, p, m;
  for (n = 0, r = I; n < r; n++) {
    u = i[n], x = u[0], p = u[1], h += Ae(x), B += Ae(p), m = u[2];
    let H = !0;
    for (g = 1, o = m.length; g < o; ++g)
      if (m[g] !== m[g - 1] + 1) {
        H = !1;
        break;
      }
    if (H) {
      const G = m[0];
      Q += Ae(G - x & 65535), E += Ae(0);
    } else {
      const G = (l - n) * 2 + d * 2;
      for (d += p - x + 1, Q += Ae(0), E += Ae(G), g = 0, o = m.length; g < o; ++g)
        f += Ae(m[g]);
    }
  }
  c > 0 && (B += "ÿÿ", h += "ÿÿ", Q += "\0", E += "\0\0");
  const D = "\0\0" + Ae(2 * l) + Ae(C.range) + Ae(C.entry) + Ae(C.rangeShift) + B + "\0\0" + h + Q + E + f;
  let S = "", y = "";
  if (s > 1) {
    for (a += `\0\0
` + ve(4 + s * 8 + 4 + D.length), S = "", n = 0, r = i.length; n < r; n++) {
      u = i[n], x = u[0], m = u[2];
      let H = m[0];
      for (g = 1, o = m.length; g < o; ++g)
        m[g] !== m[g - 1] + 1 && (p = u[0] + g - 1, S += ve(x) + ve(p) + ve(H), x = p + 1, H = m[g]);
      S += ve(x) + ve(u[1]) + ve(H);
    }
    y = "\0\f\0\0" + ve(S.length + 16) + "\0\0\0\0" + ve(S.length / 12);
  }
  return a + "\0" + Ae(D.length + 4) + D + y + S;
}
function aQ(e, A) {
  A.pos = (A.start || 0) + e.offset;
  const t = A.getUint16();
  A.skip(60);
  const i = A.getUint16();
  if (t < 4 && i & 768)
    return !1;
  const s = A.getUint16(), a = A.getUint16();
  return s > a || (A.skip(6), A.getUint16() === 0) ? !1 : (e.data[8] = e.data[9] = 0, !0);
}
function cI(e, A, t) {
  t || (t = {
    unitsPerEm: 0,
    yMax: 0,
    yMin: 0,
    ascent: 0,
    descent: 0
  });
  let i = 0, s = 0, a = 0, n = 0, r = null, g = 0, o = -1;
  if (A) {
    for (let E in A)
      if (E |= 0, (r > E || !r) && (r = E), g < E && (g = E), o = CB(E, o), o < 32)
        i |= 1 << o;
      else if (o < 64)
        s |= 1 << o - 32;
      else if (o < 96)
        a |= 1 << o - 64;
      else if (o < 123)
        n |= 1 << o - 96;
      else
        throw new T("Unicode ranges Bits > 123 are reserved for internal usage");
    g > 65535 && (g = 65535);
  } else
    r = 0, g = 255;
  const I = e.bbox || [0, 0, 0, 0], c = t.unitsPerEm || (e.fontMatrix ? 1 / Math.max(...e.fontMatrix.slice(0, 4).map(Math.abs)) : 1e3), l = e.ascentScaled ? 1 : c / t0, C = t.ascent || Math.round(l * (e.ascent || I[3]));
  let h = t.descent || Math.round(l * (e.descent || I[1]));
  h > 0 && e.descent > 0 && I[1] < 0 && (h = -h);
  const B = t.yMax || C, Q = -t.yMin || -h;
  return "\0$ô\0\0\0»\0\0\0»\0\0ß\x001\0\0\0\0" + String.fromCharCode(e.fixedPitch ? 9 : 0) + "\0\0\0\0\0\0" + ve(i) + ve(s) + ve(a) + ve(n) + "*21*" + Ae(e.italicAngle ? 1 : 0) + Ae(r || e.firstChar) + Ae(g || e.lastChar) + Ae(C) + Ae(h) + "\0d" + Ae(B) + Ae(Q) + "\0\0\0\0\0\0\0\0" + Ae(e.xHeight) + Ae(e.capHeight) + Ae(0) + Ae(r || e.firstChar) + "\0";
}
function lI(e) {
  const A = Math.floor(e.italicAngle * 65536);
  return "\0\0\0" + ve(A) + "\0\0\0\0" + ve(e.fixedPitch ? 1 : 0) + "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
}
function nQ(e) {
  return e.replaceAll(/[^\x21-\x7E]|[[\](){}<>/%]/g, "").slice(0, 63);
}
function Fr(e, A) {
  A || (A = [[], []]);
  const t = [A[0][0] || "Original licence", A[0][1] || e, A[0][2] || "Unknown", A[0][3] || "uniqueID", A[0][4] || e, A[0][5] || "Version 0.11", A[0][6] || nQ(e), A[0][7] || "Unknown", A[0][8] || "Unknown", A[0][9] || "Unknown"], i = [];
  let s, a, n, r, g;
  for (s = 0, a = t.length; s < a; s++) {
    g = A[1][s] || t[s];
    const Q = [];
    for (n = 0, r = g.length; n < r; n++)
      Q.push(Ae(g.charCodeAt(n)));
    i.push(Q.join(""));
  }
  const o = [t, i], I = ["\0", "\0"], c = ["\0\0", "\0"], l = ["\0\0", "	"], C = t.length * I.length;
  let h = "\0\0" + Ae(C) + Ae(C * 12 + 6), B = 0;
  for (s = 0, a = I.length; s < a; s++) {
    const Q = o[s];
    for (n = 0, r = Q.length; n < r; n++) {
      g = Q[n];
      const E = I[s] + c[s] + l[s] + Ae(n) + Ae(g.length) + Ae(B);
      h += E, B += g.length;
    }
  }
  return h += t.join("") + i.join(""), h;
}
class CI {
  constructor(A, t, i) {
    var o;
    this.name = A, this.psName = null, this.mimetype = null, this.disableFontFace = !1, this.loadedName = i.loadedName, this.isType3Font = i.isType3Font, this.missingFile = !1, this.cssFontInfo = i.cssFontInfo, this._charsCache = /* @__PURE__ */ Object.create(null), this._glyphCache = /* @__PURE__ */ Object.create(null);
    let s = !!(i.flags & Ft.Serif);
    if (!s && !i.isSimulatedFlags) {
      const I = A.replaceAll(/[,_]/g, "-").split("-", 1)[0], c = Vg();
      for (const l of I.split("+"))
        if (c[l]) {
          s = !0;
          break;
        }
    }
    this.isSerifFont = s, this.isSymbolicFont = !!(i.flags & Ft.Symbolic), this.isMonospace = !!(i.flags & Ft.FixedPitch);
    let {
      type: a,
      subtype: n
    } = i;
    this.type = a, this.subtype = n, this.systemFontInfo = i.systemFontInfo;
    const r = A.match(/^InvalidPDFjsFont_(.*)_\d+$/);
    if (this.isInvalidPDFjsFont = !!r, this.isInvalidPDFjsFont ? this.fallbackName = r[1] : this.isMonospace ? this.fallbackName = "monospace" : this.isSerifFont ? this.fallbackName = "serif" : this.fallbackName = "sans-serif", (o = this.systemFontInfo) != null && o.guessFallback && (this.systemFontInfo.guessFallback = !1, this.systemFontInfo.css += `,${this.fallbackName}`), this.differences = i.differences, this.widths = i.widths, this.defaultWidth = i.defaultWidth, this.composite = i.composite, this.cMap = i.cMap, this.capHeight = i.capHeight / t0, this.ascent = i.ascent / t0, this.descent = i.descent / t0, this.lineHeight = this.ascent - this.descent, this.fontMatrix = i.fontMatrix, this.bbox = i.bbox, this.defaultEncoding = i.defaultEncoding, this.toUnicode = i.toUnicode, this.toFontChar = [], i.type === "Type3") {
      for (let I = 0; I < 256; I++)
        this.toFontChar[I] = this.differences[I] || i.defaultEncoding[I];
      return;
    }
    if (this.cidEncoding = i.cidEncoding || "", this.vertical = !!i.vertical, this.vertical && (this.vmetrics = i.vmetrics, this.defaultVMetrics = i.defaultVMetrics), !t || t.isEmpty) {
      t && k('Font file is empty in "' + A + '" (' + this.loadedName + ")"), this.fallbackToSystemFont(i);
      return;
    }
    [a, n] = tQ(t, i), (a !== this.type || n !== this.subtype) && vA(`Inconsistent font file Type/SubType, expected: ${this.type}/${this.subtype} but found: ${a}/${n}.`);
    let g;
    try {
      switch (a) {
        case "MMType1":
          vA("MMType1 font (" + A + "), falling back to Type1.");
        case "Type1":
        case "CIDFontType0":
          this.mimetype = "font/opentype";
          const I = n === "Type1C" || n === "CIDFontType0C" ? new yr(t, i) : new WB(A, t, i);
          Dr(i), g = this.convert(A, I, i);
          break;
        case "OpenType":
        case "TrueType":
        case "CIDFontType2":
          this.mimetype = "font/opentype", g = this.checkAndRepair(A, t, i), this.isOpenType && (Dr(i), a = "OpenType");
          break;
        default:
          throw new T(`Font ${a} is not supported`);
      }
    } catch (I) {
      k(I), this.fallbackToSystemFont(i);
      return;
    }
    gI(i), this.data = g, this.type = a, this.subtype = n, this.fontMatrix = i.fontMatrix, this.widths = i.widths, this.defaultWidth = i.defaultWidth, this.toUnicode = i.toUnicode, this.seacMap = i.seacMap;
  }
  get renderer() {
    const A = DB.create(this, j0);
    return tA(this, "renderer", A);
  }
  exportData(A = !1) {
    const t = A ? [...rI, ...OB] : rI, i = /* @__PURE__ */ Object.create(null);
    let s, a;
    for (s of t)
      a = this[s], a !== void 0 && (i[s] = a);
    return i;
  }
  fallbackToSystemFont(A) {
    this.missingFile = !0;
    const {
      name: t,
      type: i
    } = this;
    let s = wa(t);
    const a = ir(), n = Tc(), r = !!a[s], g = !!(n[s] && a[n[s]]);
    s = a[s] || n[s] || s;
    const I = SB()[s];
    I && (isNaN(this.ascent) && (this.ascent = I.ascent / t0), isNaN(this.descent) && (this.descent = I.descent / t0), isNaN(this.capHeight) && (this.capHeight = I.capHeight / t0)), this.bold = /bold/gi.test(s), this.italic = /oblique|italic/gi.test(s), this.black = /Black/g.test(t);
    const c = /Narrow/g.test(t);
    if (this.remeasure = (!r || c) && Object.keys(this.widths).length > 0, (r || g) && i === "CIDFontType2" && this.cidEncoding.startsWith("Identity-")) {
      const l = A.cidToGidMap, C = [];
      if (Oa(C, jo()), /Arial-?Black/i.test(t) ? Oa(C, uB()) : /Calibri/i.test(t) && Oa(C, dB()), l) {
        for (const h in C) {
          const B = C[h];
          l[B] !== void 0 && (C[+h] = l[B]);
        }
        l.length !== this.toUnicode.length && A.hasIncludedToUnicodeMap && this.toUnicode instanceof Gt && this.toUnicode.forEach(function(h, B) {
          const Q = C[h];
          l[Q] === void 0 && (C[+h] = B);
        });
      }
      this.toUnicode instanceof Gt || this.toUnicode.forEach(function(h, B) {
        C[+h] = B;
      }), this.toFontChar = C, this.toUnicode = new Us(C);
    } else if (/Symbol/i.test(s))
      this.toFontChar = kr(Og, si(), this.differences);
    else if (/Dingbats/i.test(s))
      this.toFontChar = kr(Zg, IB(), this.differences);
    else if (r || g) {
      const l = kr(this.defaultEncoding, si(), this.differences);
      i === "CIDFontType2" && !this.cidEncoding.startsWith("Identity-") && !(this.toUnicode instanceof Gt) && this.toUnicode.forEach(function(C, h) {
        l[+C] = h;
      }), this.toFontChar = l;
    } else {
      const l = si(), C = [];
      this.toUnicode.forEach((h, B) => {
        if (!this.composite) {
          const Q = this.differences[h] || this.defaultEncoding[h], E = ss(Q, l);
          E !== -1 && (B = E);
        }
        C[+h] = B;
      }), this.composite && this.toUnicode instanceof Gt && /Tahoma|Verdana/i.test(t) && Oa(C, jo()), this.toFontChar = C;
    }
    gI(A), this.loadedName = s.split("-", 1)[0];
  }
  checkAndRepair(A, t, i) {
    var _, TA, oA;
    const s = ["OS/2", "cmap", "head", "hhea", "hmtx", "maxp", "name", "post", "loca", "glyf", "fpgm", "prep", "cvt ", "CFF "];
    function a(U, J) {
      const q = /* @__PURE__ */ Object.create(null);
      q["OS/2"] = null, q.cmap = null, q.head = null, q.hhea = null, q.hmtx = null, q.maxp = null, q.name = null, q.post = null;
      for (let Z = 0; Z < J; Z++) {
        const sA = n(U);
        s.includes(sA.tag) && sA.length !== 0 && (q[sA.tag] = sA);
      }
      return q;
    }
    function n(U) {
      const J = U.getString(4), q = U.getInt32() >>> 0, Z = U.getInt32() >>> 0, sA = U.getInt32() >>> 0, V = U.pos;
      U.pos = U.start || 0, U.skip(Z);
      const P = U.getBytes(sA);
      return U.pos = V, J === "head" && (P[8] = P[9] = P[10] = P[11] = 0, P[17] |= 32), {
        tag: J,
        checksum: q,
        length: sA,
        offset: Z,
        data: P
      };
    }
    function r(U) {
      return {
        version: U.getString(4),
        numTables: U.getUint16(),
        searchRange: U.getUint16(),
        entrySelector: U.getUint16(),
        rangeShift: U.getUint16()
      };
    }
    function g(U) {
      const J = U.getString(4);
      nt(J === "ttcf", "Must be a TrueType Collection font.");
      const q = U.getUint16(), Z = U.getUint16(), sA = U.getInt32() >>> 0, V = [];
      for (let M = 0; M < sA; M++)
        V.push(U.getInt32() >>> 0);
      const P = {
        ttcTag: J,
        majorVersion: q,
        minorVersion: Z,
        numFonts: sA,
        offsetTable: V
      };
      switch (q) {
        case 1:
          return P;
        case 2:
          return P.dsigTag = U.getInt32() >>> 0, P.dsigLength = U.getInt32() >>> 0, P.dsigOffset = U.getInt32() >>> 0, P;
      }
      throw new T(`Invalid TrueType Collection majorVersion: ${q}.`);
    }
    function o(U, J) {
      var P;
      const {
        numFonts: q,
        offsetTable: Z
      } = g(U), sA = J.split("+");
      let V;
      for (let M = 0; M < q; M++) {
        U.pos = (U.start || 0) + Z[M];
        const lA = r(U), uA = a(U, lA.numTables);
        if (!uA.name)
          throw new T('TrueType Collection font must contain a "name" table.');
        const [pA] = Q(uA.name);
        for (let QA = 0, EA = pA.length; QA < EA; QA++)
          for (let rA = 0, IA = pA[QA].length; rA < IA; rA++) {
            const yA = (P = pA[QA][rA]) == null ? void 0 : P.replaceAll(/\s/g, "");
            if (yA) {
              if (yA === J)
                return {
                  header: lA,
                  tables: uA
                };
              if (!(sA.length < 2))
                for (const aA of sA)
                  yA === aA && (V = {
                    name: aA,
                    header: lA,
                    tables: uA
                  });
            }
          }
      }
      if (V)
        return k(`TrueType Collection does not contain "${J}" font, falling back to "${V.name}" font instead.`), {
          header: V.header,
          tables: V.tables
        };
      throw new T(`TrueType Collection does not contain "${J}" font.`);
    }
    function I(U, J, q, Z) {
      if (!U)
        return k("No cmap table available."), {
          platformId: -1,
          encodingId: -1,
          mappings: [],
          hasShortCmap: !1
        };
      let sA, V = (J.start || 0) + U.offset;
      J.pos = V, J.skip(2);
      const P = J.getUint16();
      let M, lA = !1;
      for (let IA = 0; IA < P; IA++) {
        const yA = J.getUint16(), aA = J.getUint16(), bA = J.getInt32() >>> 0;
        let NA = !1;
        if (!((M == null ? void 0 : M.platformId) === yA && (M == null ? void 0 : M.encodingId) === aA)) {
          if (yA === 0 && (aA === 0 || aA === 1 || aA === 3))
            NA = !0;
          else if (yA === 1 && aA === 0)
            NA = !0;
          else if (yA === 3 && aA === 1 && (Z || !M))
            NA = !0, q || (lA = !0);
          else if (q && yA === 3 && aA === 0) {
            NA = !0;
            let de = !0;
            if (IA < P - 1) {
              const dA = J.peekBytes(2);
              _i(dA[0], dA[1]) < yA && (de = !1);
            }
            de && (lA = !0);
          }
          if (NA && (M = {
            platformId: yA,
            encodingId: aA,
            offset: bA
          }), lA)
            break;
        }
      }
      if (M && (J.pos = V + M.offset), !M || J.peekByte() === -1)
        return k("Could not find a preferred cmap table."), {
          platformId: -1,
          encodingId: -1,
          mappings: [],
          hasShortCmap: !1
        };
      const uA = J.getUint16();
      let pA = !1;
      const QA = [];
      let EA, rA;
      if (uA === 0) {
        for (J.skip(4), EA = 0; EA < 256; EA++) {
          const IA = J.getByte();
          IA && QA.push({
            charCode: EA,
            glyphId: IA
          });
        }
        pA = !0;
      } else if (uA === 2) {
        J.skip(4);
        const IA = [];
        let yA = 0;
        for (let bA = 0; bA < 256; bA++) {
          const NA = J.getUint16() >> 3;
          IA.push(NA), yA = Math.max(NA, yA);
        }
        const aA = [];
        for (let bA = 0; bA <= yA; bA++)
          aA.push({
            firstCode: J.getUint16(),
            entryCount: J.getUint16(),
            idDelta: ut(J.getByte(), J.getByte()),
            idRangePos: J.pos + J.getUint16()
          });
        for (let bA = 0; bA < 256; bA++)
          if (IA[bA] === 0)
            J.pos = aA[0].idRangePos + 2 * bA, rA = J.getUint16(), QA.push({
              charCode: bA,
              glyphId: rA
            });
          else {
            const NA = aA[IA[bA]];
            for (EA = 0; EA < NA.entryCount; EA++) {
              const de = (bA << 8) + EA + NA.firstCode;
              J.pos = NA.idRangePos + 2 * EA, rA = J.getUint16(), rA !== 0 && (rA = (rA + NA.idDelta) % 65536), QA.push({
                charCode: de,
                glyphId: rA
              });
            }
          }
      } else if (uA === 4) {
        J.skip(4);
        const IA = J.getUint16() >> 1;
        J.skip(6);
        const yA = [];
        let aA;
        for (aA = 0; aA < IA; aA++)
          yA.push({
            end: J.getUint16()
          });
        for (J.skip(2), aA = 0; aA < IA; aA++)
          yA[aA].start = J.getUint16();
        for (aA = 0; aA < IA; aA++)
          yA[aA].delta = J.getUint16();
        let bA = 0, NA;
        for (aA = 0; aA < IA; aA++) {
          sA = yA[aA];
          const dA = J.getUint16();
          if (!dA) {
            sA.offsetIndex = -1;
            continue;
          }
          NA = (dA >> 1) - (IA - aA), sA.offsetIndex = NA, bA = Math.max(bA, NA + sA.end - sA.start + 1);
        }
        const de = [];
        for (EA = 0; EA < bA; EA++)
          de.push(J.getUint16());
        for (aA = 0; aA < IA; aA++) {
          sA = yA[aA], V = sA.start;
          const dA = sA.end, KA = sA.delta;
          for (NA = sA.offsetIndex, EA = V; EA <= dA; EA++)
            EA !== 65535 && (rA = NA < 0 ? EA : de[NA + EA - V], rA = rA + KA & 65535, QA.push({
              charCode: EA,
              glyphId: rA
            }));
        }
      } else if (uA === 6) {
        J.skip(4);
        const IA = J.getUint16(), yA = J.getUint16();
        for (EA = 0; EA < yA; EA++) {
          rA = J.getUint16();
          const aA = IA + EA;
          QA.push({
            charCode: aA,
            glyphId: rA
          });
        }
      } else if (uA === 12) {
        J.skip(10);
        const IA = J.getInt32() >>> 0;
        for (EA = 0; EA < IA; EA++) {
          const yA = J.getInt32() >>> 0, aA = J.getInt32() >>> 0;
          let bA = J.getInt32() >>> 0;
          for (let NA = yA; NA <= aA; NA++)
            QA.push({
              charCode: NA,
              glyphId: bA++
            });
        }
      } else
        return k("cmap table has unsupported format: " + uA), {
          platformId: -1,
          encodingId: -1,
          mappings: [],
          hasShortCmap: !1
        };
      QA.sort(function(IA, yA) {
        return IA.charCode - yA.charCode;
      });
      for (let IA = 1; IA < QA.length; IA++)
        QA[IA - 1].charCode === QA[IA].charCode && (QA.splice(IA, 1), IA--);
      return {
        platformId: M.platformId,
        encodingId: M.encodingId,
        mappings: QA,
        hasShortCmap: pA
      };
    }
    function c(U, J, q, Z, sA, V) {
      if (!J) {
        q && (q.data = null);
        return;
      }
      U.pos = (U.start || 0) + J.offset, U.pos += 4, U.pos += 2, U.pos += 2, U.pos += 2, U.pos += 2, U.pos += 2, U.pos += 2, U.pos += 2, U.pos += 2, U.pos += 2;
      const P = U.getUint16();
      U.pos += 8, U.pos += 2;
      let M = U.getUint16();
      P !== 0 && (_i(Z.data[44], Z.data[45]) & 2 || (J.data[22] = 0, J.data[23] = 0)), M > sA && (vA(`The numOfMetrics (${M}) should not be greater than the numGlyphs (${sA}).`), M = sA, J.data[34] = (M & 65280) >> 8, J.data[35] = M & 255);
      const uA = sA - M - (q.length - M * 4 >> 1);
      if (uA > 0) {
        const pA = new Uint8Array(q.length + uA * 2);
        pA.set(q.data), V && (pA[q.length] = q.data[2], pA[q.length + 1] = q.data[3]), q.data = pA;
      }
    }
    function l(U, J, q, Z, sA, V) {
      const P = {
        length: 0,
        sizeOfInstructions: 0
      };
      if (J < 0 || J >= U.length || q > U.length || q - J <= 12)
        return P;
      const M = U.subarray(J, q), lA = ut(M[2], M[3]), uA = ut(M[4], M[5]), pA = ut(M[6], M[7]), QA = ut(M[8], M[9]);
      lA > pA && (xs(M, 2, pA), xs(M, 6, lA)), uA > QA && (xs(M, 4, QA), xs(M, 8, uA));
      const EA = ut(M[0], M[1]);
      if (EA < 0)
        return EA < -1 || (Z.set(M, sA), P.length = M.length), P;
      let rA, IA = 10, yA = 0;
      for (rA = 0; rA < EA; rA++)
        yA = (M[IA] << 8 | M[IA + 1]) + 1, IA += 2;
      const aA = IA, bA = M[IA] << 8 | M[IA + 1];
      P.sizeOfInstructions = bA, IA += 2 + bA;
      const NA = IA;
      let de = 0;
      for (rA = 0; rA < yA; rA++) {
        const KA = M[IA++];
        KA & 192 && (M[IA - 1] = KA & 63);
        let MA = 2;
        KA & 2 ? MA = 1 : KA & 16 && (MA = 0);
        let OA = 2;
        KA & 4 ? OA = 1 : KA & 32 && (OA = 0);
        const ge = MA + OA;
        if (de += ge, KA & 8) {
          const We = M[IA++];
          We === 0 && (M[IA - 1] ^= 8), rA += We, de += We * ge;
        }
      }
      if (de === 0)
        return P;
      let dA = IA + de;
      return dA > M.length ? P : !V && bA > 0 ? (Z.set(M.subarray(0, aA), sA), Z.set([0, 0], sA + aA), Z.set(M.subarray(NA, dA), sA + aA + 2), dA -= bA, M.length - dA > 3 && (dA = dA + 3 & -4), P.length = dA, P) : M.length - dA > 3 ? (dA = dA + 3 & -4, Z.set(M.subarray(0, dA), sA), P.length = dA, P) : (Z.set(M, sA), P.length = M.length, P);
    }
    function C(U, J, q) {
      const Z = U.data, sA = _B(Z[0], Z[1], Z[2], Z[3]);
      sA >> 16 !== 1 && (vA("Attempting to fix invalid version in head table: " + sA), Z[0] = 0, Z[1] = 1, Z[2] = 0, Z[3] = 0);
      const V = _i(Z[50], Z[51]);
      if (V < 0 || V > 1) {
        vA("Attempting to fix invalid indexToLocFormat in head table: " + V);
        const P = J + 1;
        if (q === P << 1)
          Z[50] = 0, Z[51] = 0;
        else if (q === P << 2)
          Z[50] = 0, Z[51] = 1;
        else
          throw new T("Could not fix indexToLocFormat: " + V);
      }
    }
    function h(U, J, q, Z, sA, V, P) {
      let M, lA, uA;
      Z ? (M = 4, lA = function(OA, ge) {
        return OA[ge] << 24 | OA[ge + 1] << 16 | OA[ge + 2] << 8 | OA[ge + 3];
      }, uA = function(OA, ge, We) {
        OA[ge] = We >>> 24 & 255, OA[ge + 1] = We >> 16 & 255, OA[ge + 2] = We >> 8 & 255, OA[ge + 3] = We & 255;
      }) : (M = 2, lA = function(OA, ge) {
        return OA[ge] << 9 | OA[ge + 1] << 1;
      }, uA = function(OA, ge, We) {
        OA[ge] = We >> 9 & 255, OA[ge + 1] = We >> 1 & 255;
      });
      const pA = V ? q + 1 : q, QA = M * (1 + pA), EA = new Uint8Array(QA);
      EA.set(U.data.subarray(0, QA)), U.data = EA;
      const rA = J.data, IA = rA.length, yA = new Uint8Array(IA);
      let aA, bA;
      const NA = [];
      for (aA = 0, bA = 0; aA < q + 1; aA++, bA += M) {
        let MA = lA(EA, bA);
        MA > IA && (MA = IA), NA.push({
          index: aA,
          offset: MA,
          endOffset: 0
        });
      }
      for (NA.sort((MA, OA) => MA.offset - OA.offset), aA = 0; aA < q; aA++)
        NA[aA].endOffset = NA[aA + 1].offset;
      for (NA.sort((MA, OA) => MA.index - OA.index), aA = 0; aA < q; aA++) {
        const {
          offset: MA,
          endOffset: OA
        } = NA[aA];
        if (MA !== 0 || OA !== 0)
          break;
        const ge = NA[aA + 1].offset;
        if (ge !== 0) {
          NA[aA].endOffset = ge;
          break;
        }
      }
      const de = NA.at(-2);
      de.offset !== 0 && de.endOffset === 0 && (de.endOffset = IA);
      const dA = /* @__PURE__ */ Object.create(null);
      let KA = 0;
      for (uA(EA, 0, KA), aA = 0, bA = M; aA < q; aA++, bA += M) {
        const MA = l(rA, NA[aA].offset, NA[aA].endOffset, yA, KA, sA), OA = MA.length;
        OA === 0 && (dA[aA] = !0), MA.sizeOfInstructions > P && (P = MA.sizeOfInstructions), KA += OA, uA(EA, bA, KA);
      }
      if (KA === 0) {
        const MA = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);
        for (aA = 0, bA = M; aA < pA; aA++, bA += M)
          uA(EA, bA, MA.length);
        J.data = MA;
      } else if (V) {
        const MA = lA(EA, M);
        yA.length > MA + KA ? J.data = yA.subarray(0, MA + KA) : (J.data = new Uint8Array(MA + KA), J.data.set(yA.subarray(0, KA))), J.data.set(yA.subarray(0, MA), KA), uA(U.data, EA.length - M, KA + MA);
      } else
        J.data = yA.subarray(0, KA);
      return {
        missingGlyphs: dA,
        maxSizeOfInstructions: P
      };
    }
    function B(U, J, q) {
      const Z = (t.start || 0) + U.offset;
      t.pos = Z;
      const sA = U.length, V = Z + sA, P = t.getInt32();
      t.skip(28);
      let M, lA = !0, uA;
      switch (P) {
        case 65536:
          M = Zo;
          break;
        case 131072:
          const pA = t.getUint16();
          if (pA !== q) {
            lA = !1;
            break;
          }
          const QA = [];
          for (uA = 0; uA < pA; ++uA) {
            const IA = t.getUint16();
            if (IA >= 32768) {
              lA = !1;
              break;
            }
            QA.push(IA);
          }
          if (!lA)
            break;
          const EA = [], rA = [];
          for (; t.pos < V; ) {
            const IA = t.getByte();
            for (rA.length = IA, uA = 0; uA < IA; ++uA)
              rA[uA] = String.fromCharCode(t.getByte());
            EA.push(rA.join(""));
          }
          for (M = [], uA = 0; uA < pA; ++uA) {
            const IA = QA[uA];
            if (IA < 258) {
              M.push(Zo[IA]);
              continue;
            }
            M.push(EA[IA - 258]);
          }
          break;
        case 196608:
          break;
        default:
          k("Unknown/unsupported post table version " + P), lA = !1, J.defaultEncoding && (M = J.defaultEncoding);
          break;
      }
      return J.glyphNames = M, lA;
    }
    function Q(U) {
      const J = (t.start || 0) + U.offset;
      t.pos = J;
      const q = [[], []], Z = [], sA = U.length, V = J + sA;
      if (t.getUint16() !== 0 || sA < 6)
        return [q, Z];
      const lA = t.getUint16(), uA = t.getUint16(), pA = 12;
      let QA, EA;
      for (QA = 0; QA < lA && t.pos + pA <= V; QA++) {
        const rA = {
          platform: t.getUint16(),
          encoding: t.getUint16(),
          language: t.getUint16(),
          name: t.getUint16(),
          length: t.getUint16(),
          offset: t.getUint16()
        };
        (iQ(rA) || Oc(rA)) && Z.push(rA);
      }
      for (QA = 0, EA = Z.length; QA < EA; QA++) {
        const rA = Z[QA];
        if (rA.length <= 0)
          continue;
        const IA = J + uA + rA.offset;
        if (IA + rA.length > V)
          continue;
        t.pos = IA;
        const yA = rA.name;
        if (rA.encoding) {
          let aA = "";
          for (let bA = 0, NA = rA.length; bA < NA; bA += 2)
            aA += String.fromCharCode(t.getUint16());
          q[1][yA] = aA;
        } else
          q[0][yA] = t.getString(rA.length);
      }
      return [q, Z];
    }
    const E = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];
    function f(U, J) {
      let q = U.data, Z = 0, sA, V, P, M, lA, uA = 0, pA = 0;
      const QA = [], EA = [], rA = [];
      let IA = J.tooComplexToFollowFunctions, yA = !1, aA = 0, bA = 0;
      for (let de = q.length; Z < de; ) {
        const dA = q[Z++];
        if (dA === 64)
          if (V = q[Z++], yA || bA)
            Z += V;
          else
            for (sA = 0; sA < V; sA++)
              QA.push(q[Z++]);
        else if (dA === 65)
          if (V = q[Z++], yA || bA)
            Z += V * 2;
          else
            for (sA = 0; sA < V; sA++)
              P = q[Z++], QA.push(P << 8 | q[Z++]);
        else if ((dA & 248) === 176)
          if (V = dA - 176 + 1, yA || bA)
            Z += V;
          else
            for (sA = 0; sA < V; sA++)
              QA.push(q[Z++]);
        else if ((dA & 248) === 184)
          if (V = dA - 184 + 1, yA || bA)
            Z += V * 2;
          else
            for (sA = 0; sA < V; sA++)
              P = q[Z++], QA.push(ut(P, q[Z++]));
        else if (dA === 43 && !IA) {
          if (!yA && !bA) {
            if (M = QA.at(-1), isNaN(M))
              vA("TT: CALL empty stack (or invalid entry).");
            else if (J.functionsUsed[M] = !0, M in J.functionsStackDeltas) {
              const KA = QA.length + J.functionsStackDeltas[M];
              if (KA < 0) {
                k("TT: CALL invalid functions stack delta."), J.hintsValid = !1;
                return;
              }
              QA.length = KA;
            } else if (M in J.functionsDefined && !rA.includes(M)) {
              if (EA.push({
                data: q,
                i: Z,
                stackTop: QA.length - 1
              }), rA.push(M), lA = J.functionsDefined[M], !lA) {
                k("TT: CALL non-existent function"), J.hintsValid = !1;
                return;
              }
              q = lA.data, Z = lA.i;
            }
          }
        } else if (dA === 44 && !IA)
          (yA || bA) && (k("TT: nested FDEFs not allowed"), IA = !0), yA = !0, pA = Z, M = QA.pop(), J.functionsDefined[M] = {
            data: q,
            i: Z
          };
        else if (dA === 45)
          if (yA)
            yA = !1, uA = Z;
          else {
            if (lA = EA.pop(), !lA) {
              k("TT: ENDF bad stack"), J.hintsValid = !1;
              return;
            }
            M = rA.pop(), q = lA.data, Z = lA.i, J.functionsStackDeltas[M] = QA.length - lA.stackTop;
          }
        else if (dA === 137)
          (yA || bA) && (k("TT: nested IDEFs not allowed"), IA = !0), yA = !0, pA = Z;
        else if (dA === 88)
          ++aA;
        else if (dA === 27)
          bA = aA;
        else if (dA === 89)
          bA === aA && (bA = 0), --aA;
        else if (dA === 28 && !yA && !bA) {
          const KA = QA.at(-1);
          KA > 0 && (Z += KA - 1);
        }
        if (!yA && !bA) {
          let KA = 0;
          for (dA <= 142 ? KA = E[dA] : dA >= 192 && dA <= 223 ? KA = -1 : dA >= 224 && (KA = -2), dA >= 113 && dA <= 117 && (V = QA.pop(), isNaN(V) || (KA = -V * 2)); KA < 0 && QA.length > 0; )
            QA.pop(), KA++;
          for (; KA > 0; )
            QA.push(NaN), KA--;
        }
      }
      J.tooComplexToFollowFunctions = IA;
      const NA = [q];
      Z > q.length && NA.push(new Uint8Array(Z - q.length)), pA > uA && (k("TT: complementing a missing function tail"), NA.push(new Uint8Array([34, 45]))), u(U, NA);
    }
    function d(U, J) {
      if (!U.tooComplexToFollowFunctions) {
        if (U.functionsDefined.length > J) {
          k("TT: more functions defined than expected"), U.hintsValid = !1;
          return;
        }
        for (let q = 0, Z = U.functionsUsed.length; q < Z; q++) {
          if (q > J) {
            k("TT: invalid function id: " + q), U.hintsValid = !1;
            return;
          }
          if (U.functionsUsed[q] && !U.functionsDefined[q]) {
            k("TT: undefined function: " + q), U.hintsValid = !1;
            return;
          }
        }
      }
    }
    function u(U, J) {
      if (J.length > 1) {
        let q = 0, Z, sA;
        for (Z = 0, sA = J.length; Z < sA; Z++)
          q += J[Z].length;
        q = q + 3 & -4;
        const V = new Uint8Array(q);
        let P = 0;
        for (Z = 0, sA = J.length; Z < sA; Z++)
          V.set(J[Z], P), P += J[Z].length;
        U.data = V, U.length = q;
      }
    }
    function x(U, J, q, Z) {
      const sA = {
        functionsDefined: [],
        functionsUsed: [],
        functionsStackDeltas: [],
        tooComplexToFollowFunctions: !1,
        hintsValid: !0
      };
      if (U && f(U, sA), J && f(J, sA), U && d(sA, Z), q && q.length & 1) {
        const V = new Uint8Array(q.length + 1);
        V.set(q.data), q.data = V;
      }
      return sA.hintsValid;
    }
    t = new Ee(new Uint8Array(t.getBytes()));
    let p, m;
    if (Wc(t)) {
      const U = o(t, this.name);
      p = U.header, m = U.tables;
    } else
      p = r(t), m = a(t, p.numTables);
    let D, S;
    const y = !m["CFF "];
    if (y) {
      if (!m.loca)
        throw new T('Required "loca" table is not found');
      m.glyf || (k('Required "glyf" table is not found -- trying to recover.'), m.glyf = {
        tag: "glyf",
        data: new Uint8Array(0)
      }), this.isOpenType = !1;
    } else {
      const U = i.composite && (((_ = i.cidToGidMap) == null ? void 0 : _.length) > 0 || !(i.cMap instanceof Z0));
      if (p.version === "OTTO" && !U || !m.head || !m.hhea || !m.maxp || !m.post)
        return S = new Ee(m["CFF "].data), D = new yr(S, i), Dr(i), this.convert(A, D, i);
      delete m.glyf, delete m.loca, delete m.fpgm, delete m.prep, delete m["cvt "], this.isOpenType = !0;
    }
    if (!m.maxp)
      throw new T('Required "maxp" table is not found');
    t.pos = (t.start || 0) + m.maxp.offset;
    let H = t.getInt32();
    const G = t.getUint16();
    if (H !== 65536 && H !== 20480) {
      if (m.maxp.length === 6)
        H = 20480;
      else if (m.maxp.length >= 32)
        H = 65536;
      else
        throw new T('"maxp" table has a wrong version number');
      VB(m.maxp.data, 0, H);
    }
    if (((TA = i.scaleFactors) == null ? void 0 : TA.length) === G && y) {
      const {
        scaleFactors: U
      } = i, J = _i(m.head.data[50], m.head.data[51]), q = new LB({
        glyfTable: m.glyf.data,
        isGlyphLocationsLong: J,
        locaTable: m.loca.data,
        numGlyphs: G
      });
      q.scale(U);
      const {
        glyf: Z,
        loca: sA,
        isLocationLong: V
      } = q.write();
      m.glyf.data = Z, m.loca.data = sA, V !== !!J && (m.head.data[50] = 0, m.head.data[51] = V ? 1 : 0);
      const P = m.hmtx.data;
      for (let M = 0; M < G; M++) {
        const lA = 4 * M, uA = Math.round(U[M] * _i(P[lA], P[lA + 1]));
        P[lA] = uA >> 8 & 255, P[lA + 1] = uA & 255;
        const pA = Math.round(U[M] * ut(P[lA + 2], P[lA + 3]));
        xs(P, lA + 2, pA);
      }
    }
    let v = G + 1, X = !0;
    v > 65535 && (X = !1, v = G, k("Not enough space in glyfs to duplicate first glyph."));
    let gA = 0, N = 0;
    H >= 65536 && m.maxp.length >= 32 && (t.pos += 8, t.getUint16() > 2 && (m.maxp.data[14] = 0, m.maxp.data[15] = 2), t.pos += 4, gA = t.getUint16(), t.pos += 4, N = t.getUint16()), m.maxp.data[4] = v >> 8, m.maxp.data[5] = v & 255;
    const F = x(m.fpgm, m.prep, m["cvt "], gA);
    if (F || (delete m.fpgm, delete m.prep, delete m["cvt "]), c(t, m.hhea, m.hmtx, m.head, v, X), !m.head)
      throw new T('Required "head" table is not found');
    C(m.head, G, y ? m.loca.length : 0);
    let eA = /* @__PURE__ */ Object.create(null);
    if (y) {
      const U = _i(m.head.data[50], m.head.data[51]), J = h(m.loca, m.glyf, G, U, F, X, N);
      eA = J.missingGlyphs, H >= 65536 && m.maxp.length >= 32 && (m.maxp.data[26] = J.maxSizeOfInstructions >> 8, m.maxp.data[27] = J.maxSizeOfInstructions & 255);
    }
    if (!m.hhea)
      throw new T('Required "hhea" table is not found');
    m.hhea.data[10] === 0 && m.hhea.data[11] === 0 && (m.hhea.data[10] = 255, m.hhea.data[11] = 255);
    const z = {
      unitsPerEm: _i(m.head.data[18], m.head.data[19]),
      yMax: ut(m.head.data[42], m.head.data[43]),
      yMin: ut(m.head.data[38], m.head.data[39]),
      ascent: ut(m.hhea.data[4], m.hhea.data[5]),
      descent: ut(m.hhea.data[6], m.hhea.data[7]),
      lineGap: ut(m.hhea.data[8], m.hhea.data[9])
    };
    this.ascent = z.ascent / z.unitsPerEm, this.descent = z.descent / z.unitsPerEm, this.lineGap = z.lineGap / z.unitsPerEm, (oA = this.cssFontInfo) != null && oA.lineHeight ? (this.lineHeight = this.cssFontInfo.metrics.lineHeight, this.lineGap = this.cssFontInfo.metrics.lineGap) : this.lineHeight = this.ascent - this.descent + this.lineGap, m.post && B(m.post, i, G), m.post = {
      tag: "post",
      data: lI(i)
    };
    const cA = /* @__PURE__ */ Object.create(null);
    function wA(U) {
      return !eA[U];
    }
    if (i.composite) {
      const U = i.cidToGidMap || [], J = U.length === 0;
      i.cMap.forEach(function(q, Z) {
        if (typeof Z == "string" && (Z = Sr(q, Z, !0)), Z > 65535)
          throw new T("Max size of CID is 65,535");
        let sA = -1;
        J ? sA = Z : U[Z] !== void 0 && (sA = U[Z]), sA >= 0 && sA < G && wA(sA) && (cA[q] = sA);
      });
    } else {
      const U = I(m.cmap, t, this.isSymbolicFont, i.hasEncoding), J = U.platformId, q = U.encodingId, Z = U.mappings;
      let sA = [], V = !1;
      if (i.hasEncoding && (i.baseEncodingName === "MacRomanEncoding" || i.baseEncodingName === "WinAnsiEncoding") && (sA = Vs(i.baseEncodingName)), i.hasEncoding && !this.isSymbolicFont && (J === 3 && q === 1 || J === 1 && q === 0)) {
        const P = si();
        for (let M = 0; M < 256; M++) {
          let lA;
          if (this.differences[M] !== void 0 ? lA = this.differences[M] : sA.length && sA[M] !== "" ? lA = sA[M] : lA = fi[M], !lA)
            continue;
          const uA = Kc(lA, P);
          let pA;
          if (J === 3 && q === 1 ? pA = P[uA] : J === 1 && q === 0 && (pA = Wg.indexOf(uA)), pA === void 0) {
            if (!i.glyphNames && i.hasIncludedToUnicodeMap && !(this.toUnicode instanceof Gt)) {
              const QA = this.toUnicode.get(M);
              QA && (pA = QA.codePointAt(0));
            }
            if (pA === void 0)
              continue;
          }
          for (const QA of Z)
            if (QA.charCode === pA) {
              cA[M] = QA.glyphId;
              break;
            }
        }
      } else if (J === 0) {
        for (const P of Z)
          cA[P.charCode] = P.glyphId;
        V = !0;
      } else if (J === 3 && q === 0)
        for (const P of Z) {
          let M = P.charCode;
          M >= 61440 && M <= 61695 && (M &= 255), cA[M] = P.glyphId;
        }
      else
        for (const P of Z)
          cA[P.charCode] = P.glyphId;
      if (i.glyphNames && (sA.length || this.differences.length))
        for (let P = 0; P < 256; ++P) {
          if (!V && cA[P] !== void 0)
            continue;
          const M = this.differences[P] || sA[P];
          if (!M)
            continue;
          const lA = i.glyphNames.indexOf(M);
          lA > 0 && wA(lA) && (cA[P] = lA);
        }
    }
    cA.length === 0 && (cA[0] = 0);
    let mA = v - 1;
    if (X || (mA = 0), !i.cssFontInfo) {
      const U = oI(cA, wA, mA, this.toUnicode);
      this.toFontChar = U.toFontChar, m.cmap = {
        tag: "cmap",
        data: II(U.charCodeToGlyphId, U.toUnicodeExtraMap, v)
      }, (!m["OS/2"] || !aQ(m["OS/2"], t)) && (m["OS/2"] = {
        tag: "OS/2",
        data: cI(i, U.charCodeToGlyphId, z)
      });
    }
    if (!y)
      try {
        S = new Ee(m["CFF "].data), D = new jg(S, i, j0).parse(), D.duplicateFirstGlyph();
        const J = new ya(D);
        m["CFF "].data = J.compile();
      } catch {
        k("Failed to compile font " + i.loadedName);
      }
    if (!m.name)
      m.name = {
        tag: "name",
        data: Fr(this.name)
      };
    else {
      const [U, J] = Q(m.name);
      m.name.data = Fr(A, U), this.psName = U[0][6] || null, i.composite || ZB(i, this.isSymbolicFont, J);
    }
    const DA = new Aa(p.version);
    for (const U in m)
      DA.addTable(U, m[U].data);
    return DA.toArray();
  }
  convert(A, t, i) {
    i.fixedPitch = !1, i.builtInEncoding && jB(i, i.builtInEncoding);
    let s = 1;
    t instanceof yr && (s = t.numGlyphs - 1);
    const a = t.getGlyphMapping(i);
    let n = null, r = a, g = null;
    i.cssFontInfo || (n = oI(a, t.hasGlyphId.bind(t), s, this.toUnicode), this.toFontChar = n.toFontChar, r = n.charCodeToGlyphId, g = n.toUnicodeExtraMap);
    const o = t.numGlyphs;
    function I(B, Q) {
      let E = null;
      for (const f in B)
        Q === B[f] && (E || (E = [])).push(f | 0);
      return E;
    }
    function c(B, Q) {
      for (const E in B)
        if (Q === B[E])
          return E | 0;
      return n.charCodeToGlyphId[n.nextAvailableFontCharCode] = Q, n.nextAvailableFontCharCode++;
    }
    const l = t.seacs;
    if (n && j0 && (l != null && l.length)) {
      const B = i.fontMatrix || c0, Q = t.getCharset(), E = /* @__PURE__ */ Object.create(null);
      for (let f in l) {
        f |= 0;
        const d = l[f], u = fi[d[2]], x = fi[d[3]], p = Q.indexOf(u), m = Q.indexOf(x);
        if (p < 0 || m < 0)
          continue;
        const D = {
          x: d[0] * B[0] + d[1] * B[2] + B[4],
          y: d[0] * B[1] + d[1] * B[3] + B[5]
        }, S = I(a, f);
        if (S)
          for (const y of S) {
            const H = n.charCodeToGlyphId, G = c(H, p), v = c(H, m);
            E[y] = {
              baseFontCharCode: G,
              accentFontCharCode: v,
              accentOffset: D
            };
          }
      }
      i.seacMap = E;
    }
    const C = i.fontMatrix ? 1 / Math.max(...i.fontMatrix.slice(0, 4).map(Math.abs)) : 1e3, h = new Aa("OTTO");
    return h.addTable("CFF ", t.data), h.addTable("OS/2", cI(i, r)), h.addTable("cmap", II(r, g, o)), h.addTable("head", "\0\0\0\0\0\0\0\0\0\0_<õ\0\0" + zi(C) + "\0\0\0\0\v~'\0\0\0\0\v~'\0\0" + zi(i.descent) + "ÿ" + zi(i.ascent) + Ae(i.italicAngle ? 2 : 0) + "\0\0\0\0\0\0\0"), h.addTable("hhea", "\0\0\0" + zi(i.ascent) + zi(i.descent) + "\0\0ÿÿ\0\0\0\0\0\0" + zi(i.capHeight) + zi(Math.tan(i.italicAngle) * i.xHeight) + "\0\0\0\0\0\0\0\0\0\0\0\0" + Ae(o)), h.addTable("hmtx", function() {
      const Q = t.charstrings, E = t.cff ? t.cff.widths : null;
      let f = "\0\0\0\0";
      for (let d = 1, u = o; d < u; d++) {
        let x = 0;
        if (Q) {
          const p = Q[d - 1];
          x = "width" in p ? p.width : 0;
        } else E && (x = Math.ceil(E[d] || 0));
        f += Ae(x) + Ae(0);
      }
      return f;
    }()), h.addTable("maxp", "\0\0P\0" + Ae(o)), h.addTable("name", Fr(A)), h.addTable("post", lI(i)), h.toArray();
  }
  get _spaceWidth() {
    const A = ["space", "minus", "one", "i", "I"];
    let t;
    for (const i of A) {
      if (i in this.widths) {
        t = this.widths[i];
        break;
      }
      const a = si()[i];
      let n = 0;
      if (this.composite && this.cMap.contains(a) && (n = this.cMap.lookup(a), typeof n == "string" && (n = Sr(a, n))), !n && this.toUnicode && (n = this.toUnicode.charCodeOf(a)), n <= 0 && (n = a), t = this.widths[n], t)
        break;
    }
    return tA(this, "_spaceWidth", t || this.defaultWidth);
  }
  _charToGlyph(A, t = !1) {
    var C, h, B;
    let i = this._glyphCache[A];
    if ((i == null ? void 0 : i.isSpace) === t)
      return i;
    let s, a, n, r = A;
    (C = this.cMap) != null && C.contains(A) && (r = this.cMap.lookup(A), typeof r == "string" && (r = Sr(A, r))), a = this.widths[r], typeof a != "number" && (a = this.defaultWidth);
    const g = (h = this.vmetrics) == null ? void 0 : h[r];
    let o = this.toUnicode.get(A) || A;
    typeof o == "number" && (o = String.fromCharCode(o));
    let I = this.toFontChar[A] !== void 0;
    if (s = this.toFontChar[A] || A, this.missingFile) {
      const Q = this.differences[A] || this.defaultEncoding[A];
      (Q === ".notdef" || Q === "") && this.type === "Type1" && (s = 32, Q === "" && (a || (a = this._spaceWidth), o = String.fromCharCode(s))), s = lB(s);
    }
    this.isType3Font && (n = s);
    let c = null;
    if ((B = this.seacMap) != null && B[A]) {
      I = !0;
      const Q = this.seacMap[A];
      s = Q.baseFontCharCode, c = {
        fontChar: String.fromCodePoint(Q.accentFontCharCode),
        offset: Q.accentOffset
      };
    }
    let l = "";
    if (typeof s == "number" && (s <= 1114111 ? l = String.fromCodePoint(s) : k(`charToGlyph - invalid fontCharCode: ${s}`)), this.missingFile && this.vertical && l.length === 1) {
      const Q = EB()[l.charCodeAt(0)];
      Q && (l = o = String.fromCharCode(Q));
    }
    return i = new XB(A, l, o, c, a, g, n, t, I), this._glyphCache[A] = i;
  }
  charsToGlyphs(A) {
    let t = this._charsCache[A];
    if (t)
      return t;
    if (t = [], this.cMap) {
      const i = /* @__PURE__ */ Object.create(null), s = A.length;
      let a = 0;
      for (; a < s; ) {
        this.cMap.readCharCode(A, a, i);
        const {
          charcode: n,
          length: r
        } = i;
        a += r;
        const g = this._charToGlyph(n, r === 1 && A.charCodeAt(a - 1) === 32);
        t.push(g);
      }
    } else
      for (let i = 0, s = A.length; i < s; ++i) {
        const a = A.charCodeAt(i), n = this._charToGlyph(a, a === 32);
        t.push(n);
      }
    return this._charsCache[A] = t;
  }
  getCharPositions(A) {
    const t = [];
    if (this.cMap) {
      const i = /* @__PURE__ */ Object.create(null);
      let s = 0;
      for (; s < A.length; ) {
        this.cMap.readCharCode(A, s, i);
        const a = i.length;
        t.push([s, s + a]), s += a;
      }
    } else
      for (let i = 0, s = A.length; i < s; ++i)
        t.push([i, i + 1]);
    return t;
  }
  get glyphCacheValues() {
    return Object.values(this._glyphCache);
  }
  encodeString(A) {
    const t = [], i = [], s = () => t.length % 2 === 1, a = this.toUnicode instanceof Gt ? (n) => this.toUnicode.charCodeOf(n) : (n) => this.toUnicode.charCodeOf(String.fromCodePoint(n));
    for (let n = 0, r = A.length; n < r; n++) {
      const g = A.codePointAt(n);
      if (g > 55295 && (g < 57344 || g > 65533) && n++, this.toUnicode) {
        const o = a(g);
        if (o !== -1) {
          s() && (t.push(i.join("")), i.length = 0);
          const I = this.cMap ? this.cMap.getCharCodeLength(o) : 1;
          for (let c = I - 1; c >= 0; c--)
            i.push(String.fromCharCode(o >> 8 * c & 255));
          continue;
        }
      }
      s() || (t.push(i.join("")), i.length = 0), i.push(String.fromCodePoint(g));
    }
    return t.push(i.join("")), t;
  }
}
class Rr {
  constructor(A) {
    this.error = A, this.loadedName = "g_font_error", this.missingFile = !0;
  }
  charsToGlyphs() {
    return [];
  }
  encodeString(A) {
    return [A];
  }
  exportData(A = !1) {
    return {
      error: this.error
    };
  }
}
const at = {
  FUNCTION_BASED: 1,
  AXIAL: 2,
  RADIAL: 3,
  FREE_FORM_MESH: 4,
  LATTICE_FORM_MESH: 5,
  COONS_PATCH_MESH: 6,
  TENSOR_PATCH_MESH: 7
};
class rQ {
  constructor() {
    WA("Cannot initialize Pattern.");
  }
  static parseShading(A, t, i, s, a) {
    const n = A instanceof JA ? A.dict : A, r = n.get("ShadingType");
    try {
      switch (r) {
        case at.AXIAL:
        case at.RADIAL:
          return new gQ(n, t, i, s, a);
        case at.FREE_FORM_MESH:
        case at.LATTICE_FORM_MESH:
        case at.COONS_PATCH_MESH:
        case at.TENSOR_PATCH_MESH:
          return new Bg(A, t, i, s, a);
        default:
          throw new T("Unsupported ShadingType: " + r);
      }
    } catch (g) {
      if (g instanceof Ie)
        throw g;
      return k(g), new lQ();
    }
  }
}
class X0 {
  getIR() {
    WA("Abstract method `getIR` called.");
  }
}
et(X0, "SMALL_NUMBER", 1e-6);
class gQ extends X0 {
  constructor(A, t, i, s, a) {
    super(), this.shadingType = A.get("ShadingType");
    let n = 0;
    if (this.shadingType === at.AXIAL ? n = 4 : this.shadingType === at.RADIAL && (n = 6), this.coordsArr = A.getArray("Coords"), !rt(this.coordsArr, n))
      throw new T("RadialAxialShading: Invalid /Coords array.");
    const r = LA.parse({
      cs: A.getRaw("CS") || A.getRaw("ColorSpace"),
      xref: t,
      resources: i,
      pdfFunctionFactory: s,
      localColorSpaceCache: a
    });
    this.bbox = ai(A.getArray("BBox"), null);
    let g = 0, o = 1;
    const I = A.getArray("Domain");
    rt(I, 2) && ([g, o] = I);
    let c = !1, l = !1;
    const C = A.getArray("Extend");
    if (NC(C, 2) && ([c, l] = C), this.shadingType === at.RADIAL && (!c || !l)) {
      const [z, cA, wA, mA, DA, _] = this.coordsArr, TA = Math.hypot(z - mA, cA - DA);
      wA <= _ + TA && _ <= wA + TA && k("Unsupported radial gradient.");
    }
    this.extendStart = c, this.extendEnd = l;
    const h = A.getRaw("Function"), B = s.createFromArray(h), Q = 840, E = (o - g) / Q, f = this.colorStops = [];
    if (g >= o || E <= 0) {
      vA("Bad shading domain.");
      return;
    }
    const d = new Float32Array(r.numComps), u = new Float32Array(1);
    let x, p = 0;
    u[0] = g, B(u, 0, d, 0);
    let m = r.getRgb(d, 0);
    const D = ye.makeHexColor(m[0], m[1], m[2]);
    f.push([0, D]);
    let S = 1;
    u[0] = g + E, B(u, 0, d, 0);
    let y = r.getRgb(d, 0), H = y[0] - m[0] + 1, G = y[1] - m[1] + 1, v = y[2] - m[2] + 1, X = y[0] - m[0] - 1, gA = y[1] - m[1] - 1, N = y[2] - m[2] - 1;
    for (let z = 2; z < Q; z++) {
      u[0] = g + z * E, B(u, 0, d, 0), x = r.getRgb(d, 0);
      const cA = z - p;
      if (H = Math.min(H, (x[0] - m[0] + 1) / cA), G = Math.min(G, (x[1] - m[1] + 1) / cA), v = Math.min(v, (x[2] - m[2] + 1) / cA), X = Math.max(X, (x[0] - m[0] - 1) / cA), gA = Math.max(gA, (x[1] - m[1] - 1) / cA), N = Math.max(N, (x[2] - m[2] - 1) / cA), !(X <= H && gA <= G && N <= v)) {
        const mA = ye.makeHexColor(y[0], y[1], y[2]);
        f.push([S / Q, mA]), H = x[0] - y[0] + 1, G = x[1] - y[1] + 1, v = x[2] - y[2] + 1, X = x[0] - y[0] - 1, gA = x[1] - y[1] - 1, N = x[2] - y[2] - 1, p = S, m = y;
      }
      S = z, y = x;
    }
    const F = ye.makeHexColor(y[0], y[1], y[2]);
    f.push([1, F]);
    let eA = "transparent";
    A.has("Background") && (x = r.getRgb(A.get("Background"), 0), eA = ye.makeHexColor(x[0], x[1], x[2])), c || (f.unshift([0, eA]), f[1][0] += X0.SMALL_NUMBER), l || (f.at(-1)[0] -= X0.SMALL_NUMBER, f.push([1, eA])), this.colorStops = f;
  }
  getIR() {
    const {
      coordsArr: A,
      shadingType: t
    } = this;
    let i, s, a, n, r;
    return t === at.AXIAL ? (s = [A[0], A[1]], a = [A[2], A[3]], n = null, r = null, i = "axial") : t === at.RADIAL ? (s = [A[0], A[1]], a = [A[3], A[4]], n = A[2], r = A[5], i = "radial") : WA(`getPattern type unknown: ${t}`), ["RadialAxial", i, this.bbox, this.colorStops, s, a, n, r];
  }
}
class oQ {
  constructor(A, t) {
    this.stream = A, this.context = t, this.buffer = 0, this.bufferLength = 0;
    const i = t.numComps;
    this.tmpCompsBuf = new Float32Array(i);
    const s = t.colorSpace.numComps;
    this.tmpCsCompsBuf = t.colorFn ? new Float32Array(s) : this.tmpCompsBuf;
  }
  get hasData() {
    if (this.stream.end)
      return this.stream.pos < this.stream.end;
    if (this.bufferLength > 0)
      return !0;
    const A = this.stream.getByte();
    return A < 0 ? !1 : (this.buffer = A, this.bufferLength = 8, !0);
  }
  readBits(A) {
    let t = this.buffer, i = this.bufferLength;
    if (A === 32) {
      if (i === 0)
        return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;
      t = t << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();
      const s = this.stream.getByte();
      return this.buffer = s & (1 << i) - 1, (t << 8 - i | (s & 255) >> i) >>> 0;
    }
    if (A === 8 && i === 0)
      return this.stream.getByte();
    for (; i < A; )
      t = t << 8 | this.stream.getByte(), i += 8;
    return i -= A, this.bufferLength = i, this.buffer = t & (1 << i) - 1, t >> i;
  }
  align() {
    this.buffer = 0, this.bufferLength = 0;
  }
  readFlag() {
    return this.readBits(this.context.bitsPerFlag);
  }
  readCoordinate() {
    const A = this.context.bitsPerCoordinate, t = this.readBits(A), i = this.readBits(A), s = this.context.decode, a = A < 32 ? 1 / ((1 << A) - 1) : 23283064365386963e-26;
    return [t * a * (s[1] - s[0]) + s[0], i * a * (s[3] - s[2]) + s[2]];
  }
  readComponents() {
    const A = this.context.numComps, t = this.context.bitsPerComponent, i = t < 32 ? 1 / ((1 << t) - 1) : 23283064365386963e-26, s = this.context.decode, a = this.tmpCompsBuf;
    for (let r = 0, g = 4; r < A; r++, g += 2) {
      const o = this.readBits(t);
      a[r] = o * i * (s[g + 1] - s[g]) + s[g];
    }
    const n = this.tmpCsCompsBuf;
    return this.context.colorFn && this.context.colorFn(a, 0, n, 0), this.context.colorSpace.getRgb(n, 0);
  }
}
let ln = /* @__PURE__ */ Object.create(null);
function IQ(e) {
  const A = [];
  for (let t = 0; t <= e; t++) {
    const i = t / e, s = 1 - i;
    A.push(new Float32Array([s ** 3, 3 * i * s ** 2, 3 * i ** 2 * s, i ** 3]));
  }
  return A;
}
function hI(e) {
  return ln[e] || (ln[e] = IQ(e));
}
function cQ() {
  ln = /* @__PURE__ */ Object.create(null);
}
const Tt = class Tt extends X0 {
  constructor(A, t, i, s, a) {
    if (super(), !(A instanceof JA))
      throw new T("Mesh data is not a stream");
    const n = A.dict;
    this.shadingType = n.get("ShadingType"), this.bbox = ai(n.getArray("BBox"), null);
    const r = LA.parse({
      cs: n.getRaw("CS") || n.getRaw("ColorSpace"),
      xref: t,
      resources: i,
      pdfFunctionFactory: s,
      localColorSpaceCache: a
    });
    this.background = n.has("Background") ? r.getRgb(n.get("Background"), 0) : null;
    const g = n.getRaw("Function"), o = g ? s.createFromArray(g) : null;
    this.coords = [], this.colors = [], this.figures = [];
    const I = {
      bitsPerCoordinate: n.get("BitsPerCoordinate"),
      bitsPerComponent: n.get("BitsPerComponent"),
      bitsPerFlag: n.get("BitsPerFlag"),
      decode: n.getArray("Decode"),
      colorFn: o,
      colorSpace: r,
      numComps: o ? 1 : r.numComps
    }, c = new oQ(A, I);
    let l = !1;
    switch (this.shadingType) {
      case at.FREE_FORM_MESH:
        this._decodeType4Shading(c);
        break;
      case at.LATTICE_FORM_MESH:
        const C = n.get("VerticesPerRow") | 0;
        if (C < 2)
          throw new T("Invalid VerticesPerRow");
        this._decodeType5Shading(c, C);
        break;
      case at.COONS_PATCH_MESH:
        this._decodeType6Shading(c), l = !0;
        break;
      case at.TENSOR_PATCH_MESH:
        this._decodeType7Shading(c), l = !0;
        break;
      default:
        WA("Unsupported mesh type.");
        break;
    }
    if (l) {
      this._updateBounds();
      for (let C = 0, h = this.figures.length; C < h; C++)
        this._buildFigureFromPatch(C);
    }
    this._updateBounds(), this._packData();
  }
  _decodeType4Shading(A) {
    const t = this.coords, i = this.colors, s = [];
    let a = 0;
    for (; A.hasData; ) {
      const n = A.readFlag(), r = A.readCoordinate(), g = A.readComponents();
      if (a === 0) {
        if (!(0 <= n && n <= 2))
          throw new T("Unknown type4 flag");
        switch (n) {
          case 0:
            a = 3;
            break;
          case 1:
            s.push(s.at(-2), s.at(-1)), a = 1;
            break;
          case 2:
            s.push(s.at(-3), s.at(-1)), a = 1;
            break;
        }
      }
      s.push(t.length), t.push(r), i.push(g), a--, A.align();
    }
    this.figures.push({
      type: "triangles",
      coords: new Int32Array(s),
      colors: new Int32Array(s)
    });
  }
  _decodeType5Shading(A, t) {
    const i = this.coords, s = this.colors, a = [];
    for (; A.hasData; ) {
      const n = A.readCoordinate(), r = A.readComponents();
      a.push(i.length), i.push(n), s.push(r);
    }
    this.figures.push({
      type: "lattice",
      coords: new Int32Array(a),
      colors: new Int32Array(a),
      verticesPerRow: t
    });
  }
  _decodeType6Shading(A) {
    const t = this.coords, i = this.colors, s = new Int32Array(16), a = new Int32Array(4);
    for (; A.hasData; ) {
      const n = A.readFlag();
      if (!(0 <= n && n <= 3))
        throw new T("Unknown type6 flag");
      const r = t.length;
      for (let C = 0, h = n !== 0 ? 8 : 12; C < h; C++)
        t.push(A.readCoordinate());
      const g = i.length;
      for (let C = 0, h = n !== 0 ? 2 : 4; C < h; C++)
        i.push(A.readComponents());
      let o, I, c, l;
      switch (n) {
        case 0:
          s[12] = r + 3, s[13] = r + 4, s[14] = r + 5, s[15] = r + 6, s[8] = r + 2, s[11] = r + 7, s[4] = r + 1, s[7] = r + 8, s[0] = r, s[1] = r + 11, s[2] = r + 10, s[3] = r + 9, a[2] = g + 1, a[3] = g + 2, a[0] = g, a[1] = g + 3;
          break;
        case 1:
          o = s[12], I = s[13], c = s[14], l = s[15], s[12] = l, s[13] = r + 0, s[14] = r + 1, s[15] = r + 2, s[8] = c, s[11] = r + 3, s[4] = I, s[7] = r + 4, s[0] = o, s[1] = r + 7, s[2] = r + 6, s[3] = r + 5, o = a[2], I = a[3], a[2] = I, a[3] = g, a[0] = o, a[1] = g + 1;
          break;
        case 2:
          o = s[15], I = s[11], s[12] = s[3], s[13] = r + 0, s[14] = r + 1, s[15] = r + 2, s[8] = s[7], s[11] = r + 3, s[4] = I, s[7] = r + 4, s[0] = o, s[1] = r + 7, s[2] = r + 6, s[3] = r + 5, o = a[3], a[2] = a[1], a[3] = g, a[0] = o, a[1] = g + 1;
          break;
        case 3:
          s[12] = s[0], s[13] = r + 0, s[14] = r + 1, s[15] = r + 2, s[8] = s[1], s[11] = r + 3, s[4] = s[2], s[7] = r + 4, s[0] = s[3], s[1] = r + 7, s[2] = r + 6, s[3] = r + 5, a[2] = a[0], a[3] = g, a[0] = a[1], a[1] = g + 1;
          break;
      }
      s[5] = t.length, t.push([(-4 * t[s[0]][0] - t[s[15]][0] + 6 * (t[s[4]][0] + t[s[1]][0]) - 2 * (t[s[12]][0] + t[s[3]][0]) + 3 * (t[s[13]][0] + t[s[7]][0])) / 9, (-4 * t[s[0]][1] - t[s[15]][1] + 6 * (t[s[4]][1] + t[s[1]][1]) - 2 * (t[s[12]][1] + t[s[3]][1]) + 3 * (t[s[13]][1] + t[s[7]][1])) / 9]), s[6] = t.length, t.push([(-4 * t[s[3]][0] - t[s[12]][0] + 6 * (t[s[2]][0] + t[s[7]][0]) - 2 * (t[s[0]][0] + t[s[15]][0]) + 3 * (t[s[4]][0] + t[s[14]][0])) / 9, (-4 * t[s[3]][1] - t[s[12]][1] + 6 * (t[s[2]][1] + t[s[7]][1]) - 2 * (t[s[0]][1] + t[s[15]][1]) + 3 * (t[s[4]][1] + t[s[14]][1])) / 9]), s[9] = t.length, t.push([(-4 * t[s[12]][0] - t[s[3]][0] + 6 * (t[s[8]][0] + t[s[13]][0]) - 2 * (t[s[0]][0] + t[s[15]][0]) + 3 * (t[s[11]][0] + t[s[1]][0])) / 9, (-4 * t[s[12]][1] - t[s[3]][1] + 6 * (t[s[8]][1] + t[s[13]][1]) - 2 * (t[s[0]][1] + t[s[15]][1]) + 3 * (t[s[11]][1] + t[s[1]][1])) / 9]), s[10] = t.length, t.push([(-4 * t[s[15]][0] - t[s[0]][0] + 6 * (t[s[11]][0] + t[s[14]][0]) - 2 * (t[s[12]][0] + t[s[3]][0]) + 3 * (t[s[2]][0] + t[s[8]][0])) / 9, (-4 * t[s[15]][1] - t[s[0]][1] + 6 * (t[s[11]][1] + t[s[14]][1]) - 2 * (t[s[12]][1] + t[s[3]][1]) + 3 * (t[s[2]][1] + t[s[8]][1])) / 9]), this.figures.push({
        type: "patch",
        coords: new Int32Array(s),
        colors: new Int32Array(a)
      });
    }
  }
  _decodeType7Shading(A) {
    const t = this.coords, i = this.colors, s = new Int32Array(16), a = new Int32Array(4);
    for (; A.hasData; ) {
      const n = A.readFlag();
      if (!(0 <= n && n <= 3))
        throw new T("Unknown type7 flag");
      const r = t.length;
      for (let C = 0, h = n !== 0 ? 12 : 16; C < h; C++)
        t.push(A.readCoordinate());
      const g = i.length;
      for (let C = 0, h = n !== 0 ? 2 : 4; C < h; C++)
        i.push(A.readComponents());
      let o, I, c, l;
      switch (n) {
        case 0:
          s[12] = r + 3, s[13] = r + 4, s[14] = r + 5, s[15] = r + 6, s[8] = r + 2, s[9] = r + 13, s[10] = r + 14, s[11] = r + 7, s[4] = r + 1, s[5] = r + 12, s[6] = r + 15, s[7] = r + 8, s[0] = r, s[1] = r + 11, s[2] = r + 10, s[3] = r + 9, a[2] = g + 1, a[3] = g + 2, a[0] = g, a[1] = g + 3;
          break;
        case 1:
          o = s[12], I = s[13], c = s[14], l = s[15], s[12] = l, s[13] = r + 0, s[14] = r + 1, s[15] = r + 2, s[8] = c, s[9] = r + 9, s[10] = r + 10, s[11] = r + 3, s[4] = I, s[5] = r + 8, s[6] = r + 11, s[7] = r + 4, s[0] = o, s[1] = r + 7, s[2] = r + 6, s[3] = r + 5, o = a[2], I = a[3], a[2] = I, a[3] = g, a[0] = o, a[1] = g + 1;
          break;
        case 2:
          o = s[15], I = s[11], s[12] = s[3], s[13] = r + 0, s[14] = r + 1, s[15] = r + 2, s[8] = s[7], s[9] = r + 9, s[10] = r + 10, s[11] = r + 3, s[4] = I, s[5] = r + 8, s[6] = r + 11, s[7] = r + 4, s[0] = o, s[1] = r + 7, s[2] = r + 6, s[3] = r + 5, o = a[3], a[2] = a[1], a[3] = g, a[0] = o, a[1] = g + 1;
          break;
        case 3:
          s[12] = s[0], s[13] = r + 0, s[14] = r + 1, s[15] = r + 2, s[8] = s[1], s[9] = r + 9, s[10] = r + 10, s[11] = r + 3, s[4] = s[2], s[5] = r + 8, s[6] = r + 11, s[7] = r + 4, s[0] = s[3], s[1] = r + 7, s[2] = r + 6, s[3] = r + 5, a[2] = a[0], a[3] = g, a[0] = a[1], a[1] = g + 1;
          break;
      }
      this.figures.push({
        type: "patch",
        coords: new Int32Array(s),
        colors: new Int32Array(a)
      });
    }
  }
  _buildFigureFromPatch(A) {
    const t = this.figures[A];
    nt(t.type === "patch", "Unexpected patch mesh figure");
    const i = this.coords, s = this.colors, a = t.coords, n = t.colors, r = Math.min(i[a[0]][0], i[a[3]][0], i[a[12]][0], i[a[15]][0]), g = Math.min(i[a[0]][1], i[a[3]][1], i[a[12]][1], i[a[15]][1]), o = Math.max(i[a[0]][0], i[a[3]][0], i[a[12]][0], i[a[15]][0]), I = Math.max(i[a[0]][1], i[a[3]][1], i[a[12]][1], i[a[15]][1]);
    let c = Math.ceil((o - r) * Tt.TRIANGLE_DENSITY / (this.bounds[2] - this.bounds[0]));
    c = Math.max(Tt.MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(Tt.MAX_SPLIT_PATCH_CHUNKS_AMOUNT, c));
    let l = Math.ceil((I - g) * Tt.TRIANGLE_DENSITY / (this.bounds[3] - this.bounds[1]));
    l = Math.max(Tt.MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(Tt.MAX_SPLIT_PATCH_CHUNKS_AMOUNT, l));
    const C = c + 1, h = new Int32Array((l + 1) * C), B = new Int32Array((l + 1) * C);
    let Q = 0;
    const E = new Uint8Array(3), f = new Uint8Array(3), d = s[n[0]], u = s[n[1]], x = s[n[2]], p = s[n[3]], m = hI(l), D = hI(c);
    for (let S = 0; S <= l; S++) {
      E[0] = (d[0] * (l - S) + x[0] * S) / l | 0, E[1] = (d[1] * (l - S) + x[1] * S) / l | 0, E[2] = (d[2] * (l - S) + x[2] * S) / l | 0, f[0] = (u[0] * (l - S) + p[0] * S) / l | 0, f[1] = (u[1] * (l - S) + p[1] * S) / l | 0, f[2] = (u[2] * (l - S) + p[2] * S) / l | 0;
      for (let y = 0; y <= c; y++, Q++) {
        if ((S === 0 || S === l) && (y === 0 || y === c))
          continue;
        let H = 0, G = 0, v = 0;
        for (let gA = 0; gA <= 3; gA++)
          for (let N = 0; N <= 3; N++, v++) {
            const F = m[S][gA] * D[y][N];
            H += i[a[v]][0] * F, G += i[a[v]][1] * F;
          }
        h[Q] = i.length, i.push([H, G]), B[Q] = s.length;
        const X = new Uint8Array(3);
        X[0] = (E[0] * (c - y) + f[0] * y) / c | 0, X[1] = (E[1] * (c - y) + f[1] * y) / c | 0, X[2] = (E[2] * (c - y) + f[2] * y) / c | 0, s.push(X);
      }
    }
    h[0] = a[0], B[0] = n[0], h[c] = a[3], B[c] = n[1], h[C * l] = a[12], B[C * l] = n[2], h[C * l + c] = a[15], B[C * l + c] = n[3], this.figures[A] = {
      type: "lattice",
      coords: h,
      colors: B,
      verticesPerRow: C
    };
  }
  _updateBounds() {
    let A = this.coords[0][0], t = this.coords[0][1], i = A, s = t;
    for (let a = 1, n = this.coords.length; a < n; a++) {
      const r = this.coords[a][0], g = this.coords[a][1];
      A = A > r ? r : A, t = t > g ? g : t, i = i < r ? r : i, s = s < g ? g : s;
    }
    this.bounds = [A, t, i, s];
  }
  _packData() {
    let A, t, i, s;
    const a = this.coords, n = new Float32Array(a.length * 2);
    for (A = 0, i = 0, t = a.length; A < t; A++) {
      const I = a[A];
      n[i++] = I[0], n[i++] = I[1];
    }
    this.coords = n;
    const r = this.colors, g = new Uint8Array(r.length * 3);
    for (A = 0, i = 0, t = r.length; A < t; A++) {
      const I = r[A];
      g[i++] = I[0], g[i++] = I[1], g[i++] = I[2];
    }
    this.colors = g;
    const o = this.figures;
    for (A = 0, t = o.length; A < t; A++) {
      const I = o[A], c = I.coords, l = I.colors;
      for (i = 0, s = c.length; i < s; i++)
        c[i] *= 2, l[i] *= 3;
    }
  }
  getIR() {
    const {
      bounds: A
    } = this;
    if (A[2] - A[0] === 0 || A[3] - A[1] === 0)
      throw new T(`Invalid MeshShading bounds: [${A}].`);
    return ["Mesh", this.shadingType, this.coords, this.colors, this.figures, A, this.bbox, this.background];
  }
};
et(Tt, "MIN_SPLIT_PATCH_CHUNKS_AMOUNT", 3), et(Tt, "MAX_SPLIT_PATCH_CHUNKS_AMOUNT", 20), et(Tt, "TRIANGLE_DENSITY", 20);
let Bg = Tt;
class lQ extends X0 {
  getIR() {
    return ["Dummy"];
  }
}
function BI(e, A, t) {
  const i = Yi(A.getArray("Matrix"), Zt), s = ai(A.getArray("BBox"), null);
  if (!s || s[2] - s[0] === 0 || s[3] - s[1] === 0)
    throw new T("Invalid getTilingPatternIR /BBox array.");
  const a = A.get("XStep");
  if (typeof a != "number")
    throw new T("Invalid getTilingPatternIR /XStep value.");
  const n = A.get("YStep");
  if (typeof n != "number")
    throw new T("Invalid getTilingPatternIR /YStep value.");
  const r = A.get("PaintType");
  if (!Number.isInteger(r))
    throw new T("Invalid getTilingPatternIR /PaintType value.");
  const g = A.get("TilingType");
  if (!Number.isInteger(g))
    throw new T("Invalid getTilingPatternIR /TilingType value.");
  return ["TilingPattern", t, e, i, s, a, n, r, g];
}
const CQ = [1.3877, 1, 1, 1, 0.97801, 0.92482, 0.89552, 0.91133, 0.81988, 0.97566, 0.98152, 0.93548, 0.93548, 1.2798, 0.85284, 0.92794, 1, 0.96134, 1.54657, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.82845, 0.82845, 0.85284, 0.85284, 0.85284, 0.75859, 0.92138, 0.83908, 0.7762, 0.73293, 0.87289, 0.73133, 0.7514, 0.81921, 0.87356, 0.95958, 0.59526, 0.75727, 0.69225, 1.04924, 0.9121, 0.86943, 0.79795, 0.88198, 0.77958, 0.70864, 0.81055, 0.90399, 0.88653, 0.96017, 0.82577, 0.77892, 0.78257, 0.97507, 1.54657, 0.97507, 0.85284, 0.89552, 0.90176, 0.88762, 0.8785, 0.75241, 0.8785, 0.90518, 0.95015, 0.77618, 0.8785, 0.88401, 0.91916, 0.86304, 0.88401, 0.91488, 0.8785, 0.8801, 0.8785, 0.8785, 0.91343, 0.7173, 1.04106, 0.8785, 0.85075, 0.95794, 0.82616, 0.85162, 0.79492, 0.88331, 1.69808, 0.88331, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.7801, 0.89552, 1.24487, 1.13254, 1.12401, 0.96839, 0.85284, 0.68787, 0.70645, 0.85592, 0.90747, 1.01466, 1.0088, 0.90323, 1, 1.07463, 1, 0.91056, 0.75806, 1.19118, 0.96839, 0.78864, 0.82845, 0.84133, 0.75859, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.77539, 0.73293, 0.73133, 0.73133, 0.73133, 0.73133, 0.95958, 0.95958, 0.95958, 0.95958, 0.88506, 0.9121, 0.86943, 0.86943, 0.86943, 0.86943, 0.86943, 0.85284, 0.87508, 0.90399, 0.90399, 0.90399, 0.90399, 0.77892, 0.79795, 0.90807, 0.88762, 0.88762, 0.88762, 0.88762, 0.88762, 0.88762, 0.8715, 0.75241, 0.90518, 0.90518, 0.90518, 0.90518, 0.88401, 0.88401, 0.88401, 0.88401, 0.8785, 0.8785, 0.8801, 0.8801, 0.8801, 0.8801, 0.8801, 0.90747, 0.89049, 0.8785, 0.8785, 0.8785, 0.8785, 0.85162, 0.8785, 0.85162, 0.83908, 0.88762, 0.83908, 0.88762, 0.83908, 0.88762, 0.73293, 0.75241, 0.73293, 0.75241, 0.73293, 0.75241, 0.73293, 0.75241, 0.87289, 0.83016, 0.88506, 0.93125, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.81921, 0.77618, 0.81921, 0.77618, 0.81921, 0.77618, 1, 1, 0.87356, 0.8785, 0.91075, 0.89608, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.76229, 0.90167, 0.59526, 0.91916, 1, 1, 0.86304, 0.69225, 0.88401, 1, 1, 0.70424, 0.79468, 0.91926, 0.88175, 0.70823, 0.94903, 0.9121, 0.8785, 1, 1, 0.9121, 0.8785, 0.87802, 0.88656, 0.8785, 0.86943, 0.8801, 0.86943, 0.8801, 0.86943, 0.8801, 0.87402, 0.89291, 0.77958, 0.91343, 1, 1, 0.77958, 0.91343, 0.70864, 0.7173, 0.70864, 0.7173, 0.70864, 0.7173, 0.70864, 0.7173, 1, 1, 0.81055, 0.75841, 0.81055, 1.06452, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.96017, 0.95794, 0.77892, 0.85162, 0.77892, 0.78257, 0.79492, 0.78257, 0.79492, 0.78257, 0.79492, 0.9297, 0.56892, 0.83908, 0.88762, 0.77539, 0.8715, 0.87508, 0.89049, 1, 1, 0.81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, 0.70674, 0.98387, 0.94721, 1.33431, 1.45894, 0.95161, 1.06303, 0.83908, 0.80352, 0.57184, 0.6965, 0.56289, 0.82001, 0.56029, 0.81235, 1.02988, 0.83908, 0.7762, 0.68156, 0.80367, 0.73133, 0.78257, 0.87356, 0.86943, 0.95958, 0.75727, 0.89019, 1.04924, 0.9121, 0.7648, 0.86943, 0.87356, 0.79795, 0.78275, 0.81055, 0.77892, 0.9762, 0.82577, 0.99819, 0.84896, 0.95958, 0.77892, 0.96108, 1.01407, 0.89049, 1.02988, 0.94211, 0.96108, 0.8936, 0.84021, 0.87842, 0.96399, 0.79109, 0.89049, 1.00813, 1.02988, 0.86077, 0.87445, 0.92099, 0.84723, 0.86513, 0.8801, 0.75638, 0.85714, 0.78216, 0.79586, 0.87965, 0.94211, 0.97747, 0.78287, 0.97926, 0.84971, 1.02988, 0.94211, 0.8801, 0.94211, 0.84971, 0.73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90264, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90518, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90548, 1, 1, 1, 1, 1, 1, 0.96017, 0.95794, 0.96017, 0.95794, 0.96017, 0.95794, 0.77892, 0.85162, 1, 1, 0.89552, 0.90527, 1, 0.90363, 0.92794, 0.92794, 0.92794, 0.92794, 0.87012, 0.87012, 0.87012, 0.89552, 0.89552, 1.42259, 0.71143, 1.06152, 1, 1, 1.03372, 1.03372, 0.97171, 1.4956, 2.2807, 0.93835, 0.83406, 0.91133, 0.84107, 0.91133, 1, 1, 1, 0.72021, 1, 1.23108, 0.83489, 0.88525, 0.88525, 0.81499, 0.90527, 1.81055, 0.90527, 1.81055, 1.31006, 1.53711, 0.94434, 1.08696, 1, 0.95018, 0.77192, 0.85284, 0.90747, 1.17534, 0.69825, 0.9716, 1.37077, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.08004, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90727, 0.90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], hQ = {
  lineHeight: 1.2207,
  lineGap: 0.2207
}, BQ = [1.3877, 1, 1, 1, 0.97801, 0.92482, 0.89552, 0.91133, 0.81988, 0.97566, 0.98152, 0.93548, 0.93548, 1.2798, 0.85284, 0.92794, 1, 0.96134, 1.56239, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.82845, 0.82845, 0.85284, 0.85284, 0.85284, 0.75859, 0.92138, 0.83908, 0.7762, 0.71805, 0.87289, 0.73133, 0.7514, 0.81921, 0.87356, 0.95958, 0.59526, 0.75727, 0.69225, 1.04924, 0.90872, 0.85938, 0.79795, 0.87068, 0.77958, 0.69766, 0.81055, 0.90399, 0.88653, 0.96068, 0.82577, 0.77892, 0.78257, 0.97507, 1.529, 0.97507, 0.85284, 0.89552, 0.90176, 0.94908, 0.86411, 0.74012, 0.86411, 0.88323, 0.95015, 0.86411, 0.86331, 0.88401, 0.91916, 0.86304, 0.88401, 0.9039, 0.86331, 0.86331, 0.86411, 0.86411, 0.90464, 0.70852, 1.04106, 0.86331, 0.84372, 0.95794, 0.82616, 0.84548, 0.79492, 0.88331, 1.69808, 0.88331, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.7801, 0.89552, 1.24487, 1.13254, 1.19129, 0.96839, 0.85284, 0.68787, 0.70645, 0.85592, 0.90747, 1.01466, 1.0088, 0.90323, 1, 1.07463, 1, 0.91056, 0.75806, 1.19118, 0.96839, 0.78864, 0.82845, 0.84133, 0.75859, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.77539, 0.71805, 0.73133, 0.73133, 0.73133, 0.73133, 0.95958, 0.95958, 0.95958, 0.95958, 0.88506, 0.90872, 0.85938, 0.85938, 0.85938, 0.85938, 0.85938, 0.85284, 0.87068, 0.90399, 0.90399, 0.90399, 0.90399, 0.77892, 0.79795, 0.90807, 0.94908, 0.94908, 0.94908, 0.94908, 0.94908, 0.94908, 0.85887, 0.74012, 0.88323, 0.88323, 0.88323, 0.88323, 0.88401, 0.88401, 0.88401, 0.88401, 0.8785, 0.86331, 0.86331, 0.86331, 0.86331, 0.86331, 0.86331, 0.90747, 0.89049, 0.86331, 0.86331, 0.86331, 0.86331, 0.84548, 0.86411, 0.84548, 0.83908, 0.94908, 0.83908, 0.94908, 0.83908, 0.94908, 0.71805, 0.74012, 0.71805, 0.74012, 0.71805, 0.74012, 0.71805, 0.74012, 0.87289, 0.79538, 0.88506, 0.92726, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.81921, 0.86411, 0.81921, 0.86411, 0.81921, 0.86411, 1, 1, 0.87356, 0.86331, 0.91075, 0.8777, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.76467, 0.90167, 0.59526, 0.91916, 1, 1, 0.86304, 0.69225, 0.88401, 1, 1, 0.70424, 0.77312, 0.91926, 0.88175, 0.70823, 0.94903, 0.90872, 0.86331, 1, 1, 0.90872, 0.86331, 0.86906, 0.88116, 0.86331, 0.85938, 0.86331, 0.85938, 0.86331, 0.85938, 0.86331, 0.87402, 0.86549, 0.77958, 0.90464, 1, 1, 0.77958, 0.90464, 0.69766, 0.70852, 0.69766, 0.70852, 0.69766, 0.70852, 0.69766, 0.70852, 1, 1, 0.81055, 0.75841, 0.81055, 1.06452, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.96068, 0.95794, 0.77892, 0.84548, 0.77892, 0.78257, 0.79492, 0.78257, 0.79492, 0.78257, 0.79492, 0.9297, 0.56892, 0.83908, 0.94908, 0.77539, 0.85887, 0.87068, 0.89049, 1, 1, 0.81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, 0.70088, 0.98387, 0.94721, 1.33431, 1.45894, 0.95161, 1.48387, 0.83908, 0.80352, 0.57118, 0.6965, 0.56347, 0.79179, 0.55853, 0.80346, 1.02988, 0.83908, 0.7762, 0.67174, 0.86036, 0.73133, 0.78257, 0.87356, 0.86441, 0.95958, 0.75727, 0.89019, 1.04924, 0.90872, 0.74889, 0.85938, 0.87891, 0.79795, 0.7957, 0.81055, 0.77892, 0.97447, 0.82577, 0.97466, 0.87179, 0.95958, 0.77892, 0.94252, 0.95612, 0.8753, 1.02988, 0.92733, 0.94252, 0.87411, 0.84021, 0.8728, 0.95612, 0.74081, 0.8753, 1.02189, 1.02988, 0.84814, 0.87445, 0.91822, 0.84723, 0.85668, 0.86331, 0.81344, 0.87581, 0.76422, 0.82046, 0.96057, 0.92733, 0.99375, 0.78022, 0.95452, 0.86015, 1.02988, 0.92733, 0.86331, 0.92733, 0.86015, 0.73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90631, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.88323, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.85174, 1, 1, 1, 1, 1, 1, 0.96068, 0.95794, 0.96068, 0.95794, 0.96068, 0.95794, 0.77892, 0.84548, 1, 1, 0.89552, 0.90527, 1, 0.90363, 0.92794, 0.92794, 0.92794, 0.89807, 0.87012, 0.87012, 0.87012, 0.89552, 0.89552, 1.42259, 0.71094, 1.06152, 1, 1, 1.03372, 1.03372, 0.97171, 1.4956, 2.2807, 0.92972, 0.83406, 0.91133, 0.83326, 0.91133, 1, 1, 1, 0.72021, 1, 1.23108, 0.83489, 0.88525, 0.88525, 0.81499, 0.90616, 1.81055, 0.90527, 1.81055, 1.3107, 1.53711, 0.94434, 1.08696, 1, 0.95018, 0.77192, 0.85284, 0.90747, 1.17534, 0.69825, 0.9716, 1.37077, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.08004, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90727, 0.90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], QQ = {
  lineHeight: 1.2207,
  lineGap: 0.2207
}, EQ = [1.3877, 1, 1, 1, 1.17223, 1.1293, 0.89552, 0.91133, 0.80395, 1.02269, 1.15601, 0.91056, 0.91056, 1.2798, 0.85284, 0.89807, 1, 0.90861, 1.39543, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.96309, 0.96309, 0.85284, 0.85284, 0.85284, 0.83319, 0.88071, 0.8675, 0.81552, 0.72346, 0.85193, 0.73206, 0.7522, 0.81105, 0.86275, 0.90685, 0.6377, 0.77892, 0.75593, 1.02638, 0.89249, 0.84118, 0.77452, 0.85374, 0.75186, 0.67789, 0.79776, 0.88844, 0.85066, 0.94309, 0.77818, 0.7306, 0.76659, 1.10369, 1.38313, 1.10369, 1.06139, 0.89552, 0.8739, 0.9245, 0.9245, 0.83203, 0.9245, 0.85865, 1.09842, 0.9245, 0.9245, 1.03297, 1.07692, 0.90918, 1.03297, 0.94959, 0.9245, 0.92274, 0.9245, 0.9245, 1.02933, 0.77832, 1.20562, 0.9245, 0.8916, 0.98986, 0.86621, 0.89453, 0.79004, 0.94152, 1.77256, 0.94152, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.91729, 0.89552, 1.17889, 1.13254, 1.16359, 0.92098, 0.85284, 0.68787, 0.71353, 0.84737, 0.90747, 1.0088, 1.0044, 0.87683, 1, 1.09091, 1, 0.92229, 0.739, 1.15642, 0.92098, 0.76288, 0.80504, 0.80972, 0.75859, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.76318, 0.72346, 0.73206, 0.73206, 0.73206, 0.73206, 0.90685, 0.90685, 0.90685, 0.90685, 0.86477, 0.89249, 0.84118, 0.84118, 0.84118, 0.84118, 0.84118, 0.85284, 0.84557, 0.88844, 0.88844, 0.88844, 0.88844, 0.7306, 0.77452, 0.86331, 0.9245, 0.9245, 0.9245, 0.9245, 0.9245, 0.9245, 0.84843, 0.83203, 0.85865, 0.85865, 0.85865, 0.85865, 0.82601, 0.82601, 0.82601, 0.82601, 0.94469, 0.9245, 0.92274, 0.92274, 0.92274, 0.92274, 0.92274, 0.90747, 0.86651, 0.9245, 0.9245, 0.9245, 0.9245, 0.89453, 0.9245, 0.89453, 0.8675, 0.9245, 0.8675, 0.9245, 0.8675, 0.9245, 0.72346, 0.83203, 0.72346, 0.83203, 0.72346, 0.83203, 0.72346, 0.83203, 0.85193, 0.8875, 0.86477, 0.99034, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.81105, 0.9245, 0.81105, 0.9245, 0.81105, 0.9245, 1, 1, 0.86275, 0.9245, 0.90872, 0.93591, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 1.03297, 0.90685, 0.82601, 0.77896, 1.05611, 0.6377, 1.07692, 1, 1, 0.90918, 0.75593, 1.03297, 1, 1, 0.76032, 0.9375, 0.98156, 0.93407, 0.77261, 1.11429, 0.89249, 0.9245, 1, 1, 0.89249, 0.9245, 0.92534, 0.86698, 0.9245, 0.84118, 0.92274, 0.84118, 0.92274, 0.84118, 0.92274, 0.8667, 0.86291, 0.75186, 1.02933, 1, 1, 0.75186, 1.02933, 0.67789, 0.77832, 0.67789, 0.77832, 0.67789, 0.77832, 0.67789, 0.77832, 1, 1, 0.79776, 0.97655, 0.79776, 1.23023, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.94309, 0.98986, 0.7306, 0.89453, 0.7306, 0.76659, 0.79004, 0.76659, 0.79004, 0.76659, 0.79004, 1.09231, 0.54873, 0.8675, 0.9245, 0.76318, 0.84843, 0.84557, 0.86651, 1, 1, 0.79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, 0.67009, 0.96334, 0.93695, 1.35191, 1.40909, 0.95161, 1.48387, 0.8675, 0.90861, 0.6192, 0.7363, 0.64824, 0.82411, 0.56321, 0.85696, 1.23516, 0.8675, 0.81552, 0.7286, 0.84134, 0.73206, 0.76659, 0.86275, 0.84369, 0.90685, 0.77892, 0.85871, 1.02638, 0.89249, 0.75828, 0.84118, 0.85984, 0.77452, 0.76466, 0.79776, 0.7306, 0.90782, 0.77818, 0.903, 0.87291, 0.90685, 0.7306, 0.99058, 1.03667, 0.94635, 1.23516, 0.9849, 0.99058, 0.92393, 0.8916, 0.942, 1.03667, 0.75026, 0.94635, 1.0297, 1.23516, 0.90918, 0.94048, 0.98217, 0.89746, 0.84153, 0.92274, 0.82507, 0.88832, 0.84438, 0.88178, 1.03525, 0.9849, 1.00225, 0.78086, 0.97248, 0.89404, 1.23516, 0.9849, 0.92274, 0.9849, 0.89404, 0.73206, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89693, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.85865, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90933, 1, 1, 1, 1, 1, 1, 0.94309, 0.98986, 0.94309, 0.98986, 0.94309, 0.98986, 0.7306, 0.89453, 1, 1, 0.89552, 0.90527, 1, 0.90186, 1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, 0.89552, 0.89552, 1.42259, 0.68994, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462, 0.97858, 0.82616, 0.91133, 0.83437, 0.91133, 1, 1, 1, 0.70508, 1, 1.23108, 0.79801, 0.84426, 0.84426, 0.774, 0.90572, 1.81055, 0.90749, 1.81055, 1.28809, 1.55469, 0.94434, 1.07806, 1, 0.97094, 0.7589, 0.85284, 0.90747, 1.19658, 0.69825, 0.97622, 1.33512, 0.90747, 0.90747, 0.85284, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.0336, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], fQ = {
  lineHeight: 1.2207,
  lineGap: 0.2207
}, uQ = [1.3877, 1, 1, 1, 1.17223, 1.1293, 0.89552, 0.91133, 0.80395, 1.02269, 1.15601, 0.91056, 0.91056, 1.2798, 0.85284, 0.89807, 1, 0.90861, 1.39016, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.96309, 0.96309, 0.85284, 0.85284, 0.85284, 0.83319, 0.88071, 0.8675, 0.81552, 0.73834, 0.85193, 0.73206, 0.7522, 0.81105, 0.86275, 0.90685, 0.6377, 0.77892, 0.75593, 1.02638, 0.89385, 0.85122, 0.77452, 0.86503, 0.75186, 0.68887, 0.79776, 0.88844, 0.85066, 0.94258, 0.77818, 0.7306, 0.76659, 1.10369, 1.39016, 1.10369, 1.06139, 0.89552, 0.8739, 0.86128, 0.94469, 0.8457, 0.94469, 0.89464, 1.09842, 0.84636, 0.94469, 1.03297, 1.07692, 0.90918, 1.03297, 0.95897, 0.94469, 0.9482, 0.94469, 0.94469, 1.04692, 0.78223, 1.20562, 0.94469, 0.90332, 0.98986, 0.86621, 0.90527, 0.79004, 0.94152, 1.77256, 0.94152, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.91729, 0.89552, 1.17889, 1.13254, 1.08707, 0.92098, 0.85284, 0.68787, 0.71353, 0.84737, 0.90747, 1.0088, 1.0044, 0.87683, 1, 1.09091, 1, 0.92229, 0.739, 1.15642, 0.92098, 0.76288, 0.80504, 0.80972, 0.75859, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.76318, 0.73834, 0.73206, 0.73206, 0.73206, 0.73206, 0.90685, 0.90685, 0.90685, 0.90685, 0.86477, 0.89385, 0.85122, 0.85122, 0.85122, 0.85122, 0.85122, 0.85284, 0.85311, 0.88844, 0.88844, 0.88844, 0.88844, 0.7306, 0.77452, 0.86331, 0.86128, 0.86128, 0.86128, 0.86128, 0.86128, 0.86128, 0.8693, 0.8457, 0.89464, 0.89464, 0.89464, 0.89464, 0.82601, 0.82601, 0.82601, 0.82601, 0.94469, 0.94469, 0.9482, 0.9482, 0.9482, 0.9482, 0.9482, 0.90747, 0.86651, 0.94469, 0.94469, 0.94469, 0.94469, 0.90527, 0.94469, 0.90527, 0.8675, 0.86128, 0.8675, 0.86128, 0.8675, 0.86128, 0.73834, 0.8457, 0.73834, 0.8457, 0.73834, 0.8457, 0.73834, 0.8457, 0.85193, 0.92454, 0.86477, 0.9921, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.81105, 0.84636, 0.81105, 0.84636, 0.81105, 0.84636, 1, 1, 0.86275, 0.94469, 0.90872, 0.95786, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 1.03297, 0.90685, 0.82601, 0.77741, 1.05611, 0.6377, 1.07692, 1, 1, 0.90918, 0.75593, 1.03297, 1, 1, 0.76032, 0.90452, 0.98156, 1.11842, 0.77261, 1.11429, 0.89385, 0.94469, 1, 1, 0.89385, 0.94469, 0.95877, 0.86901, 0.94469, 0.85122, 0.9482, 0.85122, 0.9482, 0.85122, 0.9482, 0.8667, 0.90016, 0.75186, 1.04692, 1, 1, 0.75186, 1.04692, 0.68887, 0.78223, 0.68887, 0.78223, 0.68887, 0.78223, 0.68887, 0.78223, 1, 1, 0.79776, 0.92188, 0.79776, 1.23023, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.94258, 0.98986, 0.7306, 0.90527, 0.7306, 0.76659, 0.79004, 0.76659, 0.79004, 0.76659, 0.79004, 1.09231, 0.54873, 0.8675, 0.86128, 0.76318, 0.8693, 0.85311, 0.86651, 1, 1, 0.79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, 0.67742, 0.96334, 0.93695, 1.35191, 1.40909, 0.95161, 1.48387, 0.86686, 0.90861, 0.62267, 0.74359, 0.65649, 0.85498, 0.56963, 0.88254, 1.23516, 0.8675, 0.81552, 0.75443, 0.84503, 0.73206, 0.76659, 0.86275, 0.85122, 0.90685, 0.77892, 0.85746, 1.02638, 0.89385, 0.75657, 0.85122, 0.86275, 0.77452, 0.74171, 0.79776, 0.7306, 0.95165, 0.77818, 0.89772, 0.88831, 0.90685, 0.7306, 0.98142, 1.02191, 0.96576, 1.23516, 0.99018, 0.98142, 0.9236, 0.89258, 0.94035, 1.02191, 0.78848, 0.96576, 0.9561, 1.23516, 0.90918, 0.92578, 0.95424, 0.89746, 0.83969, 0.9482, 0.80113, 0.89442, 0.85208, 0.86155, 0.98022, 0.99018, 1.00452, 0.81209, 0.99247, 0.89181, 1.23516, 0.99018, 0.9482, 0.99018, 0.89181, 0.73206, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.88844, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89464, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.96766, 1, 1, 1, 1, 1, 1, 0.94258, 0.98986, 0.94258, 0.98986, 0.94258, 0.98986, 0.7306, 0.90527, 1, 1, 0.89552, 0.90527, 1, 0.90186, 1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, 0.89552, 0.89552, 1.42259, 0.69043, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462, 0.99331, 0.82616, 0.91133, 0.84286, 0.91133, 1, 1, 1, 0.70508, 1, 1.23108, 0.79801, 0.84426, 0.84426, 0.774, 0.90527, 1.81055, 0.90527, 1.81055, 1.28809, 1.55469, 0.94434, 1.07806, 1, 0.97094, 0.7589, 0.85284, 0.90747, 1.19658, 0.69825, 0.97622, 1.33512, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.0336, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1.07185, 0.99413, 0.96334, 1.08065, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dQ = {
  lineHeight: 1.2207,
  lineGap: 0.2207
}, xQ = [0.76116, 1, 1, 1.0006, 0.99998, 0.99974, 0.99973, 0.99973, 0.99982, 0.99977, 1.00087, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.00003, 1.00003, 1.00003, 1.00026, 0.9999, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 0.99973, 0.99977, 1.00026, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 0.99998, 1.0006, 0.99998, 1.00003, 0.99973, 0.99998, 0.99973, 1.00026, 0.99973, 1.00026, 0.99973, 0.99998, 1.00026, 1.00026, 1.0006, 1.0006, 0.99973, 1.0006, 0.99982, 1.00026, 1.00026, 1.00026, 1.00026, 0.99959, 0.99973, 0.99998, 1.00026, 0.99973, 1.00022, 0.99973, 0.99973, 1, 0.99959, 1.00077, 0.99959, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.00077, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.99973, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 0.99973, 1.00026, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 1.03374, 0.99977, 1.00026, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.00042, 0.99973, 0.99973, 1.0006, 0.99977, 0.99973, 0.99973, 1.00026, 1.0006, 1.00026, 1.0006, 1.00026, 1.03828, 1.00026, 0.99999, 1.00026, 1.0006, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.9993, 0.9998, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016, 0.99977, 0.99959, 0.99977, 0.99959, 0.99977, 0.99959, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00026, 0.99998, 1.00026, 0.8121, 1.00026, 0.99998, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.00016, 1.00022, 1.00001, 0.99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, 0.99973, 0.99977, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 0.99973, 1.00026, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 1.00034, 0.99977, 1, 0.99997, 1.00026, 1.00078, 1.00036, 0.99973, 1.00013, 1.0006, 0.99977, 0.99977, 0.99988, 0.85148, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 0.99977, 1.00001, 0.99999, 0.99977, 1.00069, 1.00022, 0.99977, 1.00001, 0.99984, 1.00026, 1.00001, 1.00024, 1.00001, 0.9999, 1, 1.0006, 1.00001, 1.00041, 0.99962, 1.00026, 1.0006, 0.99995, 1.00041, 0.99942, 0.99973, 0.99927, 1.00082, 0.99902, 1.00026, 1.00087, 1.0006, 1.00069, 0.99973, 0.99867, 0.99973, 0.9993, 1.00026, 1.00049, 1.00056, 1, 0.99988, 0.99935, 0.99995, 0.99954, 1.00055, 0.99945, 1.00032, 1.0006, 0.99995, 1.00026, 0.99995, 1.00032, 1.00001, 1.00008, 0.99971, 1.00019, 0.9994, 1.00001, 1.0006, 1.00044, 0.99973, 1.00023, 1.00047, 1, 0.99942, 0.99561, 0.99989, 1.00035, 0.99977, 1.00035, 0.99977, 1.00019, 0.99944, 1.00001, 1.00021, 0.99926, 1.00035, 1.00035, 0.99942, 1.00048, 0.99999, 0.99977, 1.00022, 1.00035, 1.00001, 0.99977, 1.00026, 0.99989, 1.00057, 1.00001, 0.99936, 1.00052, 1.00012, 0.99996, 1.00043, 1, 1.00035, 0.9994, 0.99976, 1.00035, 0.99973, 1.00052, 1.00041, 1.00119, 1.00037, 0.99973, 1.00002, 0.99986, 1.00041, 1.00041, 0.99902, 0.9996, 1.00034, 0.99999, 1.00026, 0.99999, 1.00026, 0.99973, 1.00052, 0.99973, 1, 0.99973, 1.00041, 1.00075, 0.9994, 1.0003, 0.99999, 1, 1.00041, 0.99955, 1, 0.99915, 0.99973, 0.99973, 1.00026, 1.00119, 0.99955, 0.99973, 1.0006, 0.99911, 1.0006, 1.00026, 0.99972, 1.00026, 0.99902, 1.00041, 0.99973, 0.99999, 1, 1, 1.00038, 1.0005, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016, 1.00022, 1.00001, 0.99973, 1, 1, 0.99973, 1, 1, 0.99955, 1.0006, 1.0006, 1.0006, 1.0006, 1, 1, 1, 0.99973, 0.99973, 0.99972, 1, 1, 1.00106, 0.99999, 0.99998, 0.99998, 0.99999, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 0.99971, 1.00047, 1.00023, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, 0.99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1, 0.99561, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.99972, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], mQ = {
  lineHeight: 1.2,
  lineGap: 0.2
}, pQ = [0.76116, 1, 1, 1.0006, 0.99998, 0.99974, 0.99973, 0.99973, 0.99982, 0.99977, 1.00087, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.00003, 1.00003, 1.00003, 1.00026, 0.9999, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 0.99973, 0.99977, 1.00026, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 0.99998, 1.0006, 0.99998, 1.00003, 0.99973, 0.99998, 0.99973, 1.00026, 0.99973, 1.00026, 0.99973, 0.99998, 1.00026, 1.00026, 1.0006, 1.0006, 0.99973, 1.0006, 0.99982, 1.00026, 1.00026, 1.00026, 1.00026, 0.99959, 0.99973, 0.99998, 1.00026, 0.99973, 1.00022, 0.99973, 0.99973, 1, 0.99959, 1.00077, 0.99959, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.00077, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.99973, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 0.99973, 1.00026, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 1.0044, 0.99977, 1.00026, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99971, 0.99973, 0.99973, 1.0006, 0.99977, 0.99973, 0.99973, 1.00026, 1.0006, 1.00026, 1.0006, 1.00026, 1.01011, 1.00026, 0.99999, 1.00026, 1.0006, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.9993, 0.9998, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016, 0.99977, 0.99959, 0.99977, 0.99959, 0.99977, 0.99959, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00026, 0.99998, 1.00026, 0.8121, 1.00026, 0.99998, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.00016, 1.00022, 1.00001, 0.99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, 0.99973, 0.99977, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 0.99973, 1.00026, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99977, 1, 1, 1.00026, 0.99969, 0.99972, 0.99981, 0.9998, 1.0006, 0.99977, 0.99977, 1.00022, 0.91155, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 0.99977, 1.00001, 0.99999, 0.99977, 0.99966, 1.00022, 1.00032, 1.00001, 0.99944, 1.00026, 1.00001, 0.99968, 1.00001, 1.00047, 1, 1.0006, 1.00001, 0.99981, 1.00101, 1.00026, 1.0006, 0.99948, 0.99981, 1.00064, 0.99973, 0.99942, 1.00101, 1.00061, 1.00026, 1.00069, 1.0006, 1.00014, 0.99973, 1.01322, 0.99973, 1.00065, 1.00026, 1.00012, 0.99923, 1, 1.00064, 1.00076, 0.99948, 1.00055, 1.00063, 1.00007, 0.99943, 1.0006, 0.99948, 1.00026, 0.99948, 0.99943, 1.00001, 1.00001, 1.00029, 1.00038, 1.00035, 1.00001, 1.0006, 1.0006, 0.99973, 0.99978, 1.00001, 1.00057, 0.99989, 0.99967, 0.99964, 0.99967, 0.99977, 0.99999, 0.99977, 1.00038, 0.99977, 1.00001, 0.99973, 1.00066, 0.99967, 0.99967, 1.00041, 0.99998, 0.99999, 0.99977, 1.00022, 0.99967, 1.00001, 0.99977, 1.00026, 0.99964, 1.00031, 1.00001, 0.99999, 0.99999, 1, 1.00023, 1, 1, 0.99999, 1.00035, 1.00001, 0.99999, 0.99973, 0.99977, 0.99999, 1.00058, 0.99973, 0.99973, 0.99955, 0.9995, 1.00026, 1.00026, 1.00032, 0.99989, 1.00034, 0.99999, 1.00026, 1.00026, 1.00026, 0.99973, 0.45998, 0.99973, 1.00026, 0.99973, 1.00001, 0.99999, 0.99982, 0.99994, 0.99996, 1, 1.00042, 1.00044, 1.00029, 1.00023, 0.99973, 0.99973, 1.00026, 0.99949, 1.00002, 0.99973, 1.0006, 1.0006, 1.0006, 0.99975, 1.00026, 1.00026, 1.00032, 0.98685, 0.99973, 1.00026, 1, 1, 0.99966, 1.00044, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016, 1.00022, 1.00001, 0.99973, 1, 1, 0.99973, 1, 1, 0.99955, 1.0006, 1.0006, 1.0006, 1.0006, 1, 1, 1, 0.99973, 0.99973, 0.99972, 1, 1, 1.00106, 0.99999, 0.99998, 0.99998, 0.99999, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1, 0.99973, 0.99971, 0.99978, 1, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00098, 1, 1, 1, 1.00049, 1, 1, 0.99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1, 0.99561, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.99972, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], yQ = {
  lineHeight: 1.35,
  lineGap: 0.2
}, wQ = [0.76116, 1, 1, 1.0006, 1.0006, 1.00006, 0.99973, 0.99973, 0.99982, 1.00001, 1.00043, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1, 1.00003, 1.00003, 1.00003, 0.99973, 0.99987, 1.00001, 1.00001, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 1, 1.00001, 0.99973, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006, 1.0006, 1.0006, 0.99949, 0.99973, 0.99998, 0.99973, 0.99973, 1, 0.99973, 0.99973, 1.0006, 0.99973, 0.99973, 0.99924, 0.99924, 1, 0.99924, 0.99999, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.0006, 0.99973, 1, 0.99977, 1, 1, 1, 1.00005, 1.0009, 1.00005, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.0009, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.9998, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 1, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.06409, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 1, 0.99973, 1, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1.0288, 0.99977, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99924, 1.0006, 1.0006, 0.99946, 1.00034, 1, 0.99924, 1.00001, 1, 1, 0.99973, 0.99924, 0.99973, 0.99924, 0.99973, 1.06311, 0.99973, 1.00024, 0.99973, 0.99924, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00041, 0.9998, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1, 1.00016, 0.99977, 0.99998, 0.99977, 0.99998, 0.99977, 0.99998, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00026, 1.0006, 1.00026, 0.89547, 1.00026, 1.0006, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00016, 0.99977, 1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 0.99924, 0.99973, 1.00001, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 1, 1.00026, 1.0006, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 1.00001, 1, 1.00054, 0.99977, 1.00084, 1.00007, 0.99973, 1.00013, 0.99924, 1.00001, 1.00001, 0.99945, 0.91221, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 1.00001, 1.00001, 0.99999, 0.99977, 0.99933, 1.00022, 1.00054, 1.00001, 1.00065, 1.00026, 1.00001, 1.0001, 1.00001, 1.00052, 1, 1.0006, 1.00001, 0.99945, 0.99897, 0.99968, 0.99924, 1.00036, 0.99945, 0.99949, 1, 1.0006, 0.99897, 0.99918, 0.99968, 0.99911, 0.99924, 1, 0.99962, 1.01487, 1, 1.0005, 0.99973, 1.00012, 1.00043, 1, 0.99995, 0.99994, 1.00036, 0.99947, 1.00019, 1.00063, 1.00025, 0.99924, 1.00036, 0.99973, 1.00036, 1.00025, 1.00001, 1.00001, 1.00027, 1.0001, 1.00068, 1.00001, 1.0006, 1.0006, 1, 1.00008, 0.99957, 0.99972, 0.9994, 0.99954, 0.99975, 1.00051, 1.00001, 1.00019, 1.00001, 1.0001, 0.99986, 1.00001, 1.00001, 1.00038, 0.99954, 0.99954, 0.9994, 1.00066, 0.99999, 0.99977, 1.00022, 1.00054, 1.00001, 0.99977, 1.00026, 0.99975, 1.0001, 1.00001, 0.99993, 0.9995, 0.99955, 1.00016, 0.99978, 0.99974, 1.00019, 1.00022, 0.99955, 1.00053, 0.99973, 1.00089, 1.00005, 0.99967, 1.00048, 0.99973, 1.00002, 1.00034, 0.99973, 0.99973, 0.99964, 1.00006, 1.00066, 0.99947, 0.99973, 0.98894, 0.99973, 1, 0.44898, 1, 0.99946, 1, 1.00039, 1.00082, 0.99991, 0.99991, 0.99985, 1.00022, 1.00023, 1.00061, 1.00006, 0.99966, 0.99973, 0.99973, 0.99973, 1.00019, 1.0008, 1, 0.99924, 0.99924, 0.99924, 0.99983, 1.00044, 0.99973, 0.99964, 0.98332, 1, 0.99973, 1, 1, 0.99962, 0.99895, 1.00016, 0.99977, 1.00016, 0.99977, 1.00016, 0.99977, 1.00001, 1, 1, 1, 0.99973, 1, 1, 0.99955, 0.99924, 0.99924, 0.99924, 0.99924, 0.99998, 0.99998, 0.99998, 0.99973, 0.99973, 0.99972, 1, 1, 1.00267, 0.99999, 0.99998, 0.99998, 1, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 1.00423, 0.99925, 0.99999, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00049, 1, 1.00245, 1, 1, 1, 1, 0.96329, 1, 1.20985, 1.39713, 1.00003, 0.8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031, 1.00003, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.95317, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], bQ = {
  lineHeight: 1.35,
  lineGap: 0.2
}, DQ = [0.76116, 1, 1, 1.0006, 1.0006, 1.00006, 0.99973, 0.99973, 0.99982, 1.00001, 1.00043, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1, 1.00003, 1.00003, 1.00003, 0.99973, 0.99987, 1.00001, 1.00001, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 1, 1.00001, 0.99973, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006, 1.0006, 1.0006, 0.99949, 0.99973, 0.99998, 0.99973, 0.99973, 1, 0.99973, 0.99973, 1.0006, 0.99973, 0.99973, 0.99924, 0.99924, 1, 0.99924, 0.99999, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.0006, 0.99973, 1, 0.99977, 1, 1, 1, 1.00005, 1.0009, 1.00005, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.0009, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.9998, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 1, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.06409, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 1, 0.99973, 1, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1.04596, 0.99977, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99924, 1.0006, 1.0006, 1.00019, 1.00034, 1, 0.99924, 1.00001, 1, 1, 0.99973, 0.99924, 0.99973, 0.99924, 0.99973, 1.02572, 0.99973, 1.00005, 0.99973, 0.99924, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99999, 0.9998, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1, 1.00016, 0.99977, 0.99998, 0.99977, 0.99998, 0.99977, 0.99998, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00026, 1.0006, 1.00026, 0.84533, 1.00026, 1.0006, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00016, 0.99977, 1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 0.99924, 0.99973, 1.00001, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 1, 1.00026, 1.0006, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99928, 1, 0.99977, 1.00013, 1.00055, 0.99947, 0.99945, 0.99941, 0.99924, 1.00001, 1.00001, 1.0004, 0.91621, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 1.00001, 1.00005, 0.99999, 0.99977, 1.00015, 1.00022, 0.99977, 1.00001, 0.99973, 1.00026, 1.00001, 1.00019, 1.00001, 0.99946, 1, 1.0006, 1.00001, 0.99978, 1.00045, 0.99973, 0.99924, 1.00023, 0.99978, 0.99966, 1, 1.00065, 1.00045, 1.00019, 0.99973, 0.99973, 0.99924, 1, 1, 0.96499, 1, 1.00055, 0.99973, 1.00008, 1.00027, 1, 0.9997, 0.99995, 1.00023, 0.99933, 1.00019, 1.00015, 1.00031, 0.99924, 1.00023, 0.99973, 1.00023, 1.00031, 1.00001, 0.99928, 1.00029, 1.00092, 1.00035, 1.00001, 1.0006, 1.0006, 1, 0.99988, 0.99975, 1, 1.00082, 0.99561, 0.9996, 1.00035, 1.00001, 0.99962, 1.00001, 1.00092, 0.99964, 1.00001, 0.99963, 0.99999, 1.00035, 1.00035, 1.00082, 0.99962, 0.99999, 0.99977, 1.00022, 1.00035, 1.00001, 0.99977, 1.00026, 0.9996, 0.99967, 1.00001, 1.00034, 1.00074, 1.00054, 1.00053, 1.00063, 0.99971, 0.99962, 1.00035, 0.99975, 0.99977, 0.99973, 1.00043, 0.99953, 1.0007, 0.99915, 0.99973, 1.00008, 0.99892, 1.00073, 1.00073, 1.00114, 0.99915, 1.00073, 0.99955, 0.99973, 1.00092, 0.99973, 1, 0.99998, 1, 1.0003, 1, 1.00043, 1.00001, 0.99969, 1.0003, 1, 1.00035, 1.00001, 0.9995, 1, 1.00092, 0.99973, 0.99973, 0.99973, 1.0007, 0.9995, 1, 0.99924, 1.0006, 0.99924, 0.99972, 1.00062, 0.99973, 1.00114, 1.00073, 1, 0.99955, 1, 1, 1.00047, 0.99968, 1.00016, 0.99977, 1.00016, 0.99977, 1.00016, 0.99977, 1.00001, 1, 1, 1, 0.99973, 1, 1, 0.99955, 0.99924, 0.99924, 0.99924, 0.99924, 0.99998, 0.99998, 0.99998, 0.99973, 0.99973, 0.99972, 1, 1, 1.00267, 0.99999, 0.99998, 0.99998, 1, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 0.99971, 0.99925, 1.00023, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, 0.96329, 1, 1.20985, 1.39713, 1.00003, 0.8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.95317, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], kQ = {
  lineHeight: 1.2,
  lineGap: 0.2
}, ms = [365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 719, 722, 611, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611, 778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 785, 556, 556, 278, 722, 556, 556, 611, 278, 611, 278, 611, 385, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708, 723, 611, 778, 611, 778, 611, 778, 611, 1e3, 944, 722, 389, 722, 389, 722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479, 611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722, 556, 1e3, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 465, 722, 333, 853, 906, 474, 825, 927, 838, 278, 722, 722, 601, 719, 667, 611, 722, 778, 278, 722, 667, 833, 722, 644, 778, 722, 667, 600, 611, 667, 821, 667, 809, 802, 278, 667, 615, 451, 611, 278, 582, 615, 610, 556, 606, 475, 460, 611, 541, 278, 558, 556, 612, 556, 445, 611, 766, 619, 520, 684, 446, 582, 715, 576, 753, 845, 278, 582, 611, 582, 845, 667, 669, 885, 567, 711, 667, 278, 276, 556, 1094, 1062, 875, 610, 722, 622, 719, 722, 719, 722, 567, 712, 667, 904, 626, 719, 719, 610, 702, 833, 722, 778, 719, 667, 722, 611, 622, 854, 667, 730, 703, 1005, 1019, 870, 979, 719, 711, 1031, 719, 556, 618, 615, 417, 635, 556, 709, 497, 615, 615, 500, 635, 740, 604, 611, 604, 611, 556, 490, 556, 875, 556, 615, 581, 833, 844, 729, 854, 615, 552, 854, 583, 556, 556, 611, 417, 552, 556, 278, 281, 278, 969, 906, 611, 500, 615, 556, 604, 778, 611, 487, 447, 944, 778, 944, 778, 944, 778, 667, 556, 333, 333, 556, 1e3, 1e3, 552, 278, 278, 278, 278, 500, 500, 500, 556, 556, 350, 1e3, 1e3, 240, 479, 333, 333, 604, 333, 167, 396, 556, 556, 1094, 556, 885, 489, 1115, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333, 333, 333], ps = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], ys = [365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 740, 722, 611, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611, 778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 782, 556, 556, 278, 722, 556, 556, 611, 278, 611, 278, 611, 396, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708, 723, 611, 778, 611, 778, 611, 778, 611, 1e3, 944, 722, 389, 722, 389, 722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479, 611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722, 556, 1e3, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 722, 333, 854, 906, 473, 844, 930, 847, 278, 722, 722, 610, 671, 667, 611, 722, 778, 278, 722, 667, 833, 722, 657, 778, 718, 667, 590, 611, 667, 822, 667, 829, 781, 278, 667, 620, 479, 611, 278, 591, 620, 621, 556, 610, 479, 492, 611, 558, 278, 566, 556, 603, 556, 450, 611, 712, 605, 532, 664, 409, 591, 704, 578, 773, 834, 278, 591, 611, 591, 834, 667, 667, 886, 614, 719, 667, 278, 278, 556, 1094, 1042, 854, 622, 719, 677, 719, 722, 708, 722, 614, 722, 667, 927, 643, 719, 719, 615, 687, 833, 722, 778, 719, 667, 722, 611, 677, 781, 667, 729, 708, 979, 989, 854, 1e3, 708, 719, 1042, 729, 556, 619, 604, 534, 618, 556, 736, 510, 611, 611, 507, 622, 740, 604, 611, 611, 611, 556, 889, 556, 885, 556, 646, 583, 889, 935, 707, 854, 594, 552, 865, 589, 556, 556, 611, 469, 563, 556, 278, 278, 278, 969, 906, 611, 507, 619, 556, 611, 778, 611, 575, 467, 944, 778, 944, 778, 944, 778, 667, 556, 333, 333, 556, 1e3, 1e3, 552, 278, 278, 278, 278, 500, 500, 500, 556, 556, 350, 1e3, 1e3, 240, 479, 333, 333, 604, 333, 167, 396, 556, 556, 1104, 556, 885, 516, 1146, 1e3, 768, 600, 834, 834, 834, 834, 999, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333, 333, 333], ws = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], bs = [365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556, 667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 625, 722, 556, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556, 778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278, 278, 222, 278, 278, 733, 444, 500, 222, 667, 500, 500, 556, 222, 556, 222, 556, 281, 556, 400, 556, 222, 722, 556, 722, 556, 722, 556, 615, 723, 556, 778, 556, 778, 556, 778, 556, 1e3, 944, 722, 333, 722, 333, 722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 354, 611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667, 556, 1e3, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 667, 278, 789, 846, 389, 794, 865, 775, 222, 667, 667, 570, 671, 667, 611, 722, 778, 278, 667, 667, 833, 722, 648, 778, 725, 667, 600, 611, 667, 837, 667, 831, 761, 278, 667, 570, 439, 555, 222, 550, 570, 571, 500, 556, 439, 463, 555, 542, 222, 500, 492, 548, 500, 447, 556, 670, 573, 486, 603, 374, 550, 652, 546, 728, 779, 222, 550, 556, 550, 779, 667, 667, 843, 544, 708, 667, 278, 278, 500, 1066, 982, 844, 589, 715, 639, 724, 667, 651, 667, 544, 704, 667, 917, 614, 715, 715, 589, 686, 833, 722, 778, 725, 667, 722, 611, 639, 795, 667, 727, 673, 920, 923, 805, 886, 651, 694, 1022, 682, 556, 562, 522, 493, 553, 556, 688, 465, 556, 556, 472, 564, 686, 550, 556, 556, 556, 500, 833, 500, 835, 500, 572, 518, 830, 851, 621, 736, 526, 492, 752, 534, 556, 556, 556, 378, 496, 500, 222, 222, 222, 910, 828, 556, 472, 565, 500, 556, 778, 556, 492, 339, 944, 722, 944, 722, 944, 722, 667, 500, 333, 333, 556, 1e3, 1e3, 552, 222, 222, 222, 222, 333, 333, 333, 556, 556, 350, 1e3, 1e3, 188, 354, 333, 333, 500, 333, 167, 365, 556, 556, 1094, 556, 885, 323, 1083, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 998, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 584, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285], Ds = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], ks = [365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1e3, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556, 667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 615, 722, 556, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556, 778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278, 278, 222, 278, 278, 735, 444, 500, 222, 667, 500, 500, 556, 222, 556, 222, 556, 292, 556, 334, 556, 222, 722, 556, 722, 556, 722, 556, 604, 723, 556, 778, 556, 778, 556, 778, 556, 1e3, 944, 722, 333, 722, 333, 722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 375, 611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667, 556, 1e3, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 667, 278, 784, 838, 384, 774, 855, 752, 222, 667, 667, 551, 668, 667, 611, 722, 778, 278, 667, 668, 833, 722, 650, 778, 722, 667, 618, 611, 667, 798, 667, 835, 748, 278, 667, 578, 446, 556, 222, 547, 578, 575, 500, 557, 446, 441, 556, 556, 222, 500, 500, 576, 500, 448, 556, 690, 569, 482, 617, 395, 547, 648, 525, 713, 781, 222, 547, 556, 547, 781, 667, 667, 865, 542, 719, 667, 278, 278, 500, 1057, 1010, 854, 583, 722, 635, 719, 667, 656, 667, 542, 677, 667, 923, 604, 719, 719, 583, 656, 833, 722, 778, 719, 667, 722, 611, 635, 760, 667, 740, 667, 917, 938, 792, 885, 656, 719, 1010, 722, 556, 573, 531, 365, 583, 556, 669, 458, 559, 559, 438, 583, 688, 552, 556, 542, 556, 500, 458, 500, 823, 500, 573, 521, 802, 823, 625, 719, 521, 510, 750, 542, 556, 556, 556, 365, 510, 500, 222, 278, 222, 906, 812, 556, 438, 559, 500, 552, 778, 556, 489, 411, 944, 722, 944, 722, 944, 722, 667, 500, 333, 333, 556, 1e3, 1e3, 552, 222, 222, 222, 222, 333, 333, 333, 556, 556, 350, 1e3, 1e3, 188, 354, 333, 333, 500, 333, 167, 365, 556, 556, 1094, 556, 885, 323, 1073, 1e3, 768, 600, 834, 834, 834, 834, 1e3, 500, 1e3, 500, 1e3, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1e3, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285], Ss = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], SQ = [1.36898, 1, 1, 0.72706, 0.80479, 0.83734, 0.98894, 0.99793, 0.9897, 0.93884, 0.86209, 0.94292, 0.94292, 1.16661, 1.02058, 0.93582, 0.96694, 0.93582, 1.19137, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.78076, 0.78076, 1.02058, 1.02058, 1.02058, 0.72851, 0.78966, 0.90838, 0.83637, 0.82391, 0.96376, 0.80061, 0.86275, 0.8768, 0.95407, 1.0258, 0.73901, 0.85022, 0.83655, 1.0156, 0.95546, 0.92179, 0.87107, 0.92179, 0.82114, 0.8096, 0.89713, 0.94438, 0.95353, 0.94083, 0.91905, 0.90406, 0.9446, 0.94292, 1.18777, 0.94292, 1.02058, 0.89903, 0.90088, 0.94938, 0.97898, 0.81093, 0.97571, 0.94938, 1.024, 0.9577, 0.95933, 0.98621, 1.0474, 0.97455, 0.98981, 0.9672, 0.95933, 0.9446, 0.97898, 0.97407, 0.97646, 0.78036, 1.10208, 0.95442, 0.95298, 0.97579, 0.9332, 0.94039, 0.938, 0.80687, 1.01149, 0.80687, 1.02058, 0.80479, 0.99793, 0.99793, 0.99793, 0.99793, 1.01149, 1.00872, 0.90088, 0.91882, 1.0213, 0.8361, 1.02058, 0.62295, 0.54324, 0.89022, 1.08595, 1, 1, 0.90088, 1, 0.97455, 0.93582, 0.90088, 1, 1.05686, 0.8361, 0.99642, 0.99642, 0.99642, 0.72851, 0.90838, 0.90838, 0.90838, 0.90838, 0.90838, 0.90838, 0.868, 0.82391, 0.80061, 0.80061, 0.80061, 0.80061, 1.0258, 1.0258, 1.0258, 1.0258, 0.97484, 0.95546, 0.92179, 0.92179, 0.92179, 0.92179, 0.92179, 1.02058, 0.92179, 0.94438, 0.94438, 0.94438, 0.94438, 0.90406, 0.86958, 0.98225, 0.94938, 0.94938, 0.94938, 0.94938, 0.94938, 0.94938, 0.9031, 0.81093, 0.94938, 0.94938, 0.94938, 0.94938, 0.98621, 0.98621, 0.98621, 0.98621, 0.93969, 0.95933, 0.9446, 0.9446, 0.9446, 0.9446, 0.9446, 1.08595, 0.9446, 0.95442, 0.95442, 0.95442, 0.95442, 0.94039, 0.97898, 0.94039, 0.90838, 0.94938, 0.90838, 0.94938, 0.90838, 0.94938, 0.82391, 0.81093, 0.82391, 0.81093, 0.82391, 0.81093, 0.82391, 0.81093, 0.96376, 0.84313, 0.97484, 0.97571, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.8768, 0.9577, 0.8768, 0.9577, 0.8768, 0.9577, 1, 1, 0.95407, 0.95933, 0.97069, 0.95933, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 0.887, 1.01591, 0.73901, 1.0474, 1, 1, 0.97455, 0.83655, 0.98981, 1, 1, 0.83655, 0.73977, 0.83655, 0.73903, 0.84638, 1.033, 0.95546, 0.95933, 1, 1, 0.95546, 0.95933, 0.8271, 0.95417, 0.95933, 0.92179, 0.9446, 0.92179, 0.9446, 0.92179, 0.9446, 0.936, 0.91964, 0.82114, 0.97646, 1, 1, 0.82114, 0.97646, 0.8096, 0.78036, 0.8096, 0.78036, 1, 1, 0.8096, 0.78036, 1, 1, 0.89713, 0.77452, 0.89713, 1.10208, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94083, 0.97579, 0.90406, 0.94039, 0.90406, 0.9446, 0.938, 0.9446, 0.938, 0.9446, 0.938, 1, 0.99793, 0.90838, 0.94938, 0.868, 0.9031, 0.92179, 0.9446, 1, 1, 0.89713, 1.10208, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90989, 0.9358, 0.91945, 0.83181, 0.75261, 0.87992, 0.82976, 0.96034, 0.83689, 0.97268, 1.0078, 0.90838, 0.83637, 0.8019, 0.90157, 0.80061, 0.9446, 0.95407, 0.92436, 1.0258, 0.85022, 0.97153, 1.0156, 0.95546, 0.89192, 0.92179, 0.92361, 0.87107, 0.96318, 0.89713, 0.93704, 0.95638, 0.91905, 0.91709, 0.92796, 1.0258, 0.93704, 0.94836, 1.0373, 0.95933, 1.0078, 0.95871, 0.94836, 0.96174, 0.92601, 0.9498, 0.98607, 0.95776, 0.95933, 1.05453, 1.0078, 0.98275, 0.9314, 0.95617, 0.91701, 1.05993, 0.9446, 0.78367, 0.9553, 1, 0.86832, 1.0128, 0.95871, 0.99394, 0.87548, 0.96361, 0.86774, 1.0078, 0.95871, 0.9446, 0.95871, 0.86774, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.94083, 0.97579, 0.94083, 0.97579, 0.94083, 0.97579, 0.90406, 0.94039, 0.96694, 1, 0.89903, 1, 1, 1, 0.93582, 0.93582, 0.93582, 1, 0.908, 0.908, 0.918, 0.94219, 0.94219, 0.96544, 1, 1.285, 1, 1, 0.81079, 0.81079, 1, 1, 0.74854, 1, 1, 1, 1, 0.99793, 1, 1, 1, 0.65, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.17173, 1, 0.80535, 0.76169, 1.02058, 1.0732, 1.05486, 1, 1, 1.30692, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.16161, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], FQ = {
  lineHeight: 1.2,
  lineGap: 0.2
}, RQ = [1.36898, 1, 1, 0.66227, 0.80779, 0.81625, 0.97276, 0.97276, 0.97733, 0.92222, 0.83266, 0.94292, 0.94292, 1.16148, 1.02058, 0.93582, 0.96694, 0.93582, 1.17337, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.78076, 0.78076, 1.02058, 1.02058, 1.02058, 0.71541, 0.76813, 0.85576, 0.80591, 0.80729, 0.94299, 0.77512, 0.83655, 0.86523, 0.92222, 0.98621, 0.71743, 0.81698, 0.79726, 0.98558, 0.92222, 0.90637, 0.83809, 0.90637, 0.80729, 0.76463, 0.86275, 0.90699, 0.91605, 0.9154, 0.85308, 0.85458, 0.90531, 0.94292, 1.21296, 0.94292, 1.02058, 0.89903, 1.18616, 0.99613, 0.91677, 0.78216, 0.91677, 0.90083, 0.98796, 0.9135, 0.92168, 0.95381, 0.98981, 0.95298, 0.95381, 0.93459, 0.92168, 0.91513, 0.92004, 0.91677, 0.95077, 0.748, 1.04502, 0.91677, 0.92061, 0.94236, 0.89544, 0.89364, 0.9, 0.80687, 0.8578, 0.80687, 1.02058, 0.80779, 0.97276, 0.97276, 0.97276, 0.97276, 0.8578, 0.99973, 1.18616, 0.91339, 1.08074, 0.82891, 1.02058, 0.55509, 0.71526, 0.89022, 1.08595, 1, 1, 1.18616, 1, 0.96736, 0.93582, 1.18616, 1, 1.04864, 0.82711, 0.99043, 0.99043, 0.99043, 0.71541, 0.85576, 0.85576, 0.85576, 0.85576, 0.85576, 0.85576, 0.845, 0.80729, 0.77512, 0.77512, 0.77512, 0.77512, 0.98621, 0.98621, 0.98621, 0.98621, 0.95961, 0.92222, 0.90637, 0.90637, 0.90637, 0.90637, 0.90637, 1.02058, 0.90251, 0.90699, 0.90699, 0.90699, 0.90699, 0.85458, 0.83659, 0.94951, 0.99613, 0.99613, 0.99613, 0.99613, 0.99613, 0.99613, 0.85811, 0.78216, 0.90083, 0.90083, 0.90083, 0.90083, 0.95381, 0.95381, 0.95381, 0.95381, 0.9135, 0.92168, 0.91513, 0.91513, 0.91513, 0.91513, 0.91513, 1.08595, 0.91677, 0.91677, 0.91677, 0.91677, 0.91677, 0.89364, 0.92332, 0.89364, 0.85576, 0.99613, 0.85576, 0.99613, 0.85576, 0.99613, 0.80729, 0.78216, 0.80729, 0.78216, 0.80729, 0.78216, 0.80729, 0.78216, 0.94299, 0.76783, 0.95961, 0.91677, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.86523, 0.9135, 0.86523, 0.9135, 0.86523, 0.9135, 1, 1, 0.92222, 0.92168, 0.92222, 0.92168, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.86036, 0.97096, 0.71743, 0.98981, 1, 1, 0.95298, 0.79726, 0.95381, 1, 1, 0.79726, 0.6894, 0.79726, 0.74321, 0.81691, 1.0006, 0.92222, 0.92168, 1, 1, 0.92222, 0.92168, 0.79464, 0.92098, 0.92168, 0.90637, 0.91513, 0.90637, 0.91513, 0.90637, 0.91513, 0.909, 0.87514, 0.80729, 0.95077, 1, 1, 0.80729, 0.95077, 0.76463, 0.748, 0.76463, 0.748, 1, 1, 0.76463, 0.748, 1, 1, 0.86275, 0.72651, 0.86275, 1.04502, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.9154, 0.94236, 0.85458, 0.89364, 0.85458, 0.90531, 0.9, 0.90531, 0.9, 0.90531, 0.9, 1, 0.97276, 0.85576, 0.99613, 0.845, 0.85811, 0.90251, 0.91677, 1, 1, 0.86275, 1.04502, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.00899, 1.30628, 0.85576, 0.80178, 0.66862, 0.7927, 0.69323, 0.88127, 0.72459, 0.89711, 0.95381, 0.85576, 0.80591, 0.7805, 0.94729, 0.77512, 0.90531, 0.92222, 0.90637, 0.98621, 0.81698, 0.92655, 0.98558, 0.92222, 0.85359, 0.90637, 0.90976, 0.83809, 0.94523, 0.86275, 0.83509, 0.93157, 0.85308, 0.83392, 0.92346, 0.98621, 0.83509, 0.92886, 0.91324, 0.92168, 0.95381, 0.90646, 0.92886, 0.90557, 0.86847, 0.90276, 0.91324, 0.86842, 0.92168, 0.99531, 0.95381, 0.9224, 0.85408, 0.92699, 0.86847, 1.0051, 0.91513, 0.80487, 0.93481, 1, 0.88159, 1.05214, 0.90646, 0.97355, 0.81539, 0.89398, 0.85923, 0.95381, 0.90646, 0.91513, 0.90646, 0.85923, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9154, 0.94236, 0.9154, 0.94236, 0.9154, 0.94236, 0.85458, 0.89364, 0.96694, 1, 0.89903, 1, 1, 1, 0.91782, 0.91782, 0.91782, 1, 0.896, 0.896, 0.896, 0.9332, 0.9332, 0.95973, 1, 1.26, 1, 1, 0.80479, 0.80178, 1, 1, 0.85633, 1, 1, 1, 1, 0.97276, 1, 1, 1, 0.698, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.14542, 1, 0.79199, 0.78694, 1.02058, 1.03493, 1.05486, 1, 1, 1.23026, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.20006, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], NQ = {
  lineHeight: 1.2,
  lineGap: 0.2
}, GQ = [1.36898, 1, 1, 0.65507, 0.84943, 0.85639, 0.88465, 0.88465, 0.86936, 0.88307, 0.86948, 0.85283, 0.85283, 1.06383, 1.02058, 0.75945, 0.9219, 0.75945, 1.17337, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.75945, 0.75945, 1.02058, 1.02058, 1.02058, 0.69046, 0.70926, 0.85158, 0.77812, 0.76852, 0.89591, 0.70466, 0.76125, 0.80094, 0.86822, 0.83864, 0.728, 0.77212, 0.79475, 0.93637, 0.87514, 0.8588, 0.76013, 0.8588, 0.72421, 0.69866, 0.77598, 0.85991, 0.80811, 0.87832, 0.78112, 0.77512, 0.8562, 1.0222, 1.18417, 1.0222, 1.27014, 0.89903, 1.15012, 0.93859, 0.94399, 0.846, 0.94399, 0.81453, 1.0186, 0.94219, 0.96017, 1.03075, 1.02175, 0.912, 1.03075, 0.96998, 0.96017, 0.93859, 0.94399, 0.94399, 0.95493, 0.746, 1.12658, 0.94578, 0.91, 0.979, 0.882, 0.882, 0.83, 0.85034, 0.83537, 0.85034, 1.02058, 0.70869, 0.88465, 0.88465, 0.88465, 0.88465, 0.83537, 0.90083, 1.15012, 0.9161, 0.94565, 0.73541, 1.02058, 0.53609, 0.69353, 0.79519, 1.08595, 1, 1, 1.15012, 1, 0.91974, 0.75945, 1.15012, 1, 0.9446, 0.73361, 0.9005, 0.9005, 0.9005, 0.62864, 0.85158, 0.85158, 0.85158, 0.85158, 0.85158, 0.85158, 0.773, 0.76852, 0.70466, 0.70466, 0.70466, 0.70466, 0.83864, 0.83864, 0.83864, 0.83864, 0.90561, 0.87514, 0.8588, 0.8588, 0.8588, 0.8588, 0.8588, 1.02058, 0.85751, 0.85991, 0.85991, 0.85991, 0.85991, 0.77512, 0.76013, 0.88075, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 0.8075, 0.846, 0.81453, 0.81453, 0.81453, 0.81453, 0.82424, 0.82424, 0.82424, 0.82424, 0.9278, 0.96017, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 1.08595, 0.8562, 0.94578, 0.94578, 0.94578, 0.94578, 0.882, 0.94578, 0.882, 0.85158, 0.93859, 0.85158, 0.93859, 0.85158, 0.93859, 0.76852, 0.846, 0.76852, 0.846, 0.76852, 0.846, 0.76852, 0.846, 0.89591, 0.8544, 0.90561, 0.94399, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.80094, 0.94219, 0.80094, 0.94219, 0.80094, 0.94219, 1, 1, 0.86822, 0.96017, 0.86822, 0.96017, 0.83864, 0.82424, 0.83864, 0.82424, 0.83864, 0.82424, 0.83864, 1.03075, 0.83864, 0.82424, 0.81402, 1.02738, 0.728, 1.02175, 1, 1, 0.912, 0.79475, 1.03075, 1, 1, 0.79475, 0.83911, 0.79475, 0.66266, 0.80553, 1.06676, 0.87514, 0.96017, 1, 1, 0.87514, 0.96017, 0.86865, 0.87396, 0.96017, 0.8588, 0.93859, 0.8588, 0.93859, 0.8588, 0.93859, 0.867, 0.84759, 0.72421, 0.95493, 1, 1, 0.72421, 0.95493, 0.69866, 0.746, 0.69866, 0.746, 1, 1, 0.69866, 0.746, 1, 1, 0.77598, 0.88417, 0.77598, 1.12658, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.87832, 0.979, 0.77512, 0.882, 0.77512, 0.8562, 0.83, 0.8562, 0.83, 0.8562, 0.83, 1, 0.88465, 0.85158, 0.93859, 0.773, 0.8075, 0.85751, 0.8562, 1, 1, 0.77598, 1.12658, 1.15012, 1.15012, 1.15012, 1.15012, 1.15012, 1.15313, 1.15012, 1.15012, 1.15012, 1.08106, 1.03901, 0.85158, 0.77025, 0.62264, 0.7646, 0.65351, 0.86026, 0.69461, 0.89947, 1.03075, 0.85158, 0.77812, 0.76449, 0.88836, 0.70466, 0.8562, 0.86822, 0.8588, 0.83864, 0.77212, 0.85308, 0.93637, 0.87514, 0.82352, 0.8588, 0.85701, 0.76013, 0.89058, 0.77598, 0.8156, 0.82565, 0.78112, 0.77899, 0.89386, 0.83864, 0.8156, 0.9486, 0.92388, 0.96186, 1.03075, 0.91123, 0.9486, 0.93298, 0.878, 0.93942, 0.92388, 0.84596, 0.96186, 0.95119, 1.03075, 0.922, 0.88787, 0.95829, 0.88, 0.93559, 0.93859, 0.78815, 0.93758, 1, 0.89217, 1.03737, 0.91123, 0.93969, 0.77487, 0.85769, 0.86799, 1.03075, 0.91123, 0.93859, 0.91123, 0.86799, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.87832, 0.979, 0.87832, 0.979, 0.87832, 0.979, 0.77512, 0.882, 0.9219, 1, 0.89903, 1, 1, 1, 0.87321, 0.87321, 0.87321, 1, 1.027, 1.027, 1.027, 0.86847, 0.86847, 0.79121, 1, 1.124, 1, 1, 0.73572, 0.73572, 1, 1, 0.85034, 1, 1, 1, 1, 0.88465, 1, 1, 1, 0.669, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04828, 1, 0.74948, 0.75187, 1.02058, 0.98391, 1.02119, 1, 1, 1.06233, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05233, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], UQ = {
  lineHeight: 1.2,
  lineGap: 0.2
}, MQ = [1.36898, 1, 1, 0.76305, 0.82784, 0.94935, 0.89364, 0.92241, 0.89073, 0.90706, 0.98472, 0.85283, 0.85283, 1.0664, 1.02058, 0.74505, 0.9219, 0.74505, 1.23456, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.74505, 0.74505, 1.02058, 1.02058, 1.02058, 0.73002, 0.72601, 0.91755, 0.8126, 0.80314, 0.92222, 0.73764, 0.79726, 0.83051, 0.90284, 0.86023, 0.74, 0.8126, 0.84869, 0.96518, 0.91115, 0.8858, 0.79761, 0.8858, 0.74498, 0.73914, 0.81363, 0.89591, 0.83659, 0.89633, 0.85608, 0.8111, 0.90531, 1.0222, 1.22736, 1.0222, 1.27014, 0.89903, 0.90088, 0.86667, 1.0231, 0.896, 1.01411, 0.90083, 1.05099, 1.00512, 0.99793, 1.05326, 1.09377, 0.938, 1.06226, 1.00119, 0.99793, 0.98714, 1.0231, 1.01231, 0.98196, 0.792, 1.19137, 0.99074, 0.962, 1.01915, 0.926, 0.942, 0.856, 0.85034, 0.92006, 0.85034, 1.02058, 0.69067, 0.92241, 0.92241, 0.92241, 0.92241, 0.92006, 0.9332, 0.90088, 0.91882, 0.93484, 0.75339, 1.02058, 0.56866, 0.54324, 0.79519, 1.08595, 1, 1, 0.90088, 1, 0.95325, 0.74505, 0.90088, 1, 0.97198, 0.75339, 0.91009, 0.91009, 0.91009, 0.66466, 0.91755, 0.91755, 0.91755, 0.91755, 0.91755, 0.91755, 0.788, 0.80314, 0.73764, 0.73764, 0.73764, 0.73764, 0.86023, 0.86023, 0.86023, 0.86023, 0.92915, 0.91115, 0.8858, 0.8858, 0.8858, 0.8858, 0.8858, 1.02058, 0.8858, 0.89591, 0.89591, 0.89591, 0.89591, 0.8111, 0.79611, 0.89713, 0.86667, 0.86667, 0.86667, 0.86667, 0.86667, 0.86667, 0.86936, 0.896, 0.90083, 0.90083, 0.90083, 0.90083, 0.84224, 0.84224, 0.84224, 0.84224, 0.97276, 0.99793, 0.98714, 0.98714, 0.98714, 0.98714, 0.98714, 1.08595, 0.89876, 0.99074, 0.99074, 0.99074, 0.99074, 0.942, 1.0231, 0.942, 0.91755, 0.86667, 0.91755, 0.86667, 0.91755, 0.86667, 0.80314, 0.896, 0.80314, 0.896, 0.80314, 0.896, 0.80314, 0.896, 0.92222, 0.93372, 0.92915, 1.01411, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.83051, 1.00512, 0.83051, 1.00512, 0.83051, 1.00512, 1, 1, 0.90284, 0.99793, 0.90976, 0.99793, 0.86023, 0.84224, 0.86023, 0.84224, 0.86023, 0.84224, 0.86023, 1.05326, 0.86023, 0.84224, 0.82873, 1.07469, 0.74, 1.09377, 1, 1, 0.938, 0.84869, 1.06226, 1, 1, 0.84869, 0.83704, 0.84869, 0.81441, 0.85588, 1.08927, 0.91115, 0.99793, 1, 1, 0.91115, 0.99793, 0.91887, 0.90991, 0.99793, 0.8858, 0.98714, 0.8858, 0.98714, 0.8858, 0.98714, 0.894, 0.91434, 0.74498, 0.98196, 1, 1, 0.74498, 0.98196, 0.73914, 0.792, 0.73914, 0.792, 1, 1, 0.73914, 0.792, 1, 1, 0.81363, 0.904, 0.81363, 1.19137, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89633, 1.01915, 0.8111, 0.942, 0.8111, 0.90531, 0.856, 0.90531, 0.856, 0.90531, 0.856, 1, 0.92241, 0.91755, 0.86667, 0.788, 0.86936, 0.8858, 0.89876, 1, 1, 0.81363, 1.19137, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90388, 1.03901, 0.92138, 0.78105, 0.7154, 0.86169, 0.80513, 0.94007, 0.82528, 0.98612, 1.06226, 0.91755, 0.8126, 0.81884, 0.92819, 0.73764, 0.90531, 0.90284, 0.8858, 0.86023, 0.8126, 0.91172, 0.96518, 0.91115, 0.83089, 0.8858, 0.87791, 0.79761, 0.89297, 0.81363, 0.88157, 0.89992, 0.85608, 0.81992, 0.94307, 0.86023, 0.88157, 0.95308, 0.98699, 0.99793, 1.06226, 0.95817, 0.95308, 0.97358, 0.928, 0.98088, 0.98699, 0.92761, 0.99793, 0.96017, 1.06226, 0.986, 0.944, 0.95978, 0.938, 0.96705, 0.98714, 0.80442, 0.98972, 1, 0.89762, 1.04552, 0.95817, 0.99007, 0.87064, 0.91879, 0.88888, 1.06226, 0.95817, 0.98714, 0.95817, 0.88888, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89633, 1.01915, 0.89633, 1.01915, 0.89633, 1.01915, 0.8111, 0.942, 0.9219, 1, 0.89903, 1, 1, 1, 0.93173, 0.93173, 0.93173, 1, 1.06304, 1.06304, 1.06904, 0.89903, 0.89903, 0.80549, 1, 1.156, 1, 1, 0.76575, 0.76575, 1, 1, 0.72458, 1, 1, 1, 1, 0.92241, 1, 1, 1, 0.619, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.07257, 1, 0.74705, 0.71119, 1.02058, 1.024, 1.02119, 1, 1, 1.1536, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05638, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], LQ = {
  lineHeight: 1.2,
  lineGap: 0.2
}, HQ = [1.76738, 1, 1, 0.99297, 0.9824, 1.04016, 1.06497, 1.03424, 0.97529, 1.17647, 1.23203, 1.1085, 1.1085, 1.16939, 1.2107, 0.9754, 1.21408, 0.9754, 1.59578, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 0.81378, 0.81378, 1.2107, 1.2107, 1.2107, 0.71703, 0.97847, 0.97363, 0.88776, 0.8641, 1.02096, 0.79795, 0.85132, 0.914, 1.06085, 1.1406, 0.8007, 0.89858, 0.83693, 1.14889, 1.09398, 0.97489, 0.92094, 0.97489, 0.90399, 0.84041, 0.95923, 1.00135, 1, 1.06467, 0.98243, 0.90996, 0.99361, 1.1085, 1.56942, 1.1085, 1.2107, 0.74627, 0.94282, 0.96752, 1.01519, 0.86304, 1.01359, 0.97278, 1.15103, 1.01359, 0.98561, 1.02285, 1.02285, 1.00527, 1.02285, 1.0302, 0.99041, 1.0008, 1.01519, 1.01359, 1.02258, 0.79104, 1.16862, 0.99041, 0.97454, 1.02511, 0.99298, 0.96752, 0.95801, 0.94856, 1.16579, 0.94856, 1.2107, 0.9824, 1.03424, 1.03424, 1, 1.03424, 1.16579, 0.8727, 1.3871, 1.18622, 1.10818, 1.04478, 1.2107, 1.18622, 0.75155, 0.94994, 1.28826, 1.21408, 1.21408, 0.91056, 1, 0.91572, 0.9754, 0.64663, 1.18328, 1.24866, 1.04478, 1.14169, 1.15749, 1.17389, 0.71703, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.93506, 0.8641, 0.79795, 0.79795, 0.79795, 0.79795, 1.1406, 1.1406, 1.1406, 1.1406, 1.02096, 1.09398, 0.97426, 0.97426, 0.97426, 0.97426, 0.97426, 1.2107, 0.97489, 1.00135, 1.00135, 1.00135, 1.00135, 0.90996, 0.92094, 1.02798, 0.96752, 0.96752, 0.96752, 0.96752, 0.96752, 0.96752, 0.93136, 0.86304, 0.97278, 0.97278, 0.97278, 0.97278, 1.02285, 1.02285, 1.02285, 1.02285, 0.97122, 0.99041, 1, 1, 1, 1, 1, 1.28826, 1.0008, 0.99041, 0.99041, 0.99041, 0.99041, 0.96752, 1.01519, 0.96752, 0.97363, 0.96752, 0.97363, 0.96752, 0.97363, 0.96752, 0.8641, 0.86304, 0.8641, 0.86304, 0.8641, 0.86304, 0.8641, 0.86304, 1.02096, 1.03057, 1.02096, 1.03517, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.914, 1.01359, 0.914, 1.01359, 0.914, 1.01359, 1, 1, 1.06085, 0.98561, 1.06085, 1.00879, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 0.97138, 1.08692, 0.8007, 1.02285, 1, 1, 1.00527, 0.83693, 1.02285, 1, 1, 0.83693, 0.9455, 0.83693, 0.90418, 0.83693, 1.13005, 1.09398, 0.99041, 1, 1, 1.09398, 0.99041, 0.96692, 1.09251, 0.99041, 0.97489, 1.0008, 0.97489, 1.0008, 0.97489, 1.0008, 0.93994, 0.97931, 0.90399, 1.02258, 1, 1, 0.90399, 1.02258, 0.84041, 0.79104, 0.84041, 0.79104, 0.84041, 0.79104, 0.84041, 0.79104, 1, 1, 0.95923, 1.07034, 0.95923, 1.16862, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.06467, 1.02511, 0.90996, 0.96752, 0.90996, 0.99361, 0.95801, 0.99361, 0.95801, 0.99361, 0.95801, 1.07733, 1.03424, 0.97363, 0.96752, 0.93506, 0.93136, 0.97489, 1.0008, 1, 1, 0.95923, 1.16862, 1.15103, 1.15103, 1.01173, 1.03959, 0.75953, 0.81378, 0.79912, 1.15103, 1.21994, 0.95161, 0.87815, 1.01149, 0.81525, 0.7676, 0.98167, 1.01134, 1.02546, 0.84097, 1.03089, 1.18102, 0.97363, 0.88776, 0.85134, 0.97826, 0.79795, 0.99361, 1.06085, 0.97489, 1.1406, 0.89858, 1.0388, 1.14889, 1.09398, 0.86039, 0.97489, 1.0595, 0.92094, 0.94793, 0.95923, 0.90996, 0.99346, 0.98243, 1.02112, 0.95493, 1.1406, 0.90996, 1.03574, 1.02597, 1.0008, 1.18102, 1.06628, 1.03574, 1.0192, 1.01932, 1.00886, 0.97531, 1.0106, 1.0008, 1.13189, 1.18102, 1.02277, 0.98683, 1.0016, 0.99561, 1.07237, 1.0008, 0.90434, 0.99921, 0.93803, 0.8965, 1.23085, 1.06628, 1.04983, 0.96268, 1.0499, 0.98439, 1.18102, 1.06628, 1.0008, 1.06628, 0.98439, 0.79795, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09466, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.97278, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.02065, 1, 1, 1, 1, 1, 1, 1.06467, 1.02511, 1.06467, 1.02511, 1.06467, 1.02511, 0.90996, 0.96752, 1, 1.21408, 0.89903, 1, 1, 0.75155, 1.04394, 1.04394, 1.04394, 1.04394, 0.98633, 0.98633, 0.98633, 0.73047, 0.73047, 1.20642, 0.91211, 1.25635, 1.222, 1.02956, 1.03372, 1.03372, 0.96039, 1.24633, 1, 1.12454, 0.93503, 1.03424, 1.19687, 1.03424, 1, 1, 1, 0.771, 1, 1, 1.15749, 1.15749, 1.15749, 1.10948, 0.86279, 0.94434, 0.86279, 0.94434, 0.86182, 1, 1, 1.16897, 1, 0.96085, 0.90137, 1.2107, 1.18416, 1.13973, 0.69825, 0.9716, 2.10339, 1.29004, 1.29004, 1.21172, 1.29004, 1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18874, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.09193, 1.09193, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], JQ = {
  lineHeight: 1.33008,
  lineGap: 0
}, YQ = [1.76738, 1, 1, 0.98946, 1.03959, 1.04016, 1.02809, 1.036, 0.97639, 1.10953, 1.23203, 1.11144, 1.11144, 1.16939, 1.21237, 0.9754, 1.21261, 0.9754, 1.59754, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 0.81378, 0.81378, 1.21237, 1.21237, 1.21237, 0.73541, 0.97847, 0.97363, 0.89723, 0.87897, 1.0426, 0.79429, 0.85292, 0.91149, 1.05815, 1.1406, 0.79631, 0.90128, 0.83853, 1.04396, 1.10615, 0.97552, 0.94436, 0.97552, 0.88641, 0.80527, 0.96083, 1.00135, 1, 1.06777, 0.9817, 0.91142, 0.99361, 1.11144, 1.57293, 1.11144, 1.21237, 0.74627, 1.31818, 1.06585, 0.97042, 0.83055, 0.97042, 0.93503, 1.1261, 0.97042, 0.97922, 1.14236, 0.94552, 1.01054, 1.14236, 1.02471, 0.97922, 0.94165, 0.97042, 0.97042, 1.0276, 0.78929, 1.1261, 0.97922, 0.95874, 1.02197, 0.98507, 0.96752, 0.97168, 0.95107, 1.16579, 0.95107, 1.21237, 1.03959, 1.036, 1.036, 1, 1.036, 1.16579, 0.87357, 1.31818, 1.18754, 1.26781, 1.05356, 1.21237, 1.18622, 0.79487, 0.94994, 1.29004, 1.24047, 1.24047, 1.31818, 1, 0.91484, 0.9754, 1.31818, 1.1349, 1.24866, 1.05356, 1.13934, 1.15574, 1.17389, 0.73541, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.94385, 0.87897, 0.79429, 0.79429, 0.79429, 0.79429, 1.1406, 1.1406, 1.1406, 1.1406, 1.0426, 1.10615, 0.97552, 0.97552, 0.97552, 0.97552, 0.97552, 1.21237, 0.97552, 1.00135, 1.00135, 1.00135, 1.00135, 0.91142, 0.94436, 0.98721, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585, 0.96705, 0.83055, 0.93503, 0.93503, 0.93503, 0.93503, 1.14236, 1.14236, 1.14236, 1.14236, 0.93125, 0.97922, 0.94165, 0.94165, 0.94165, 0.94165, 0.94165, 1.29004, 0.94165, 0.97922, 0.97922, 0.97922, 0.97922, 0.96752, 0.97042, 0.96752, 0.97363, 1.06585, 0.97363, 1.06585, 0.97363, 1.06585, 0.87897, 0.83055, 0.87897, 0.83055, 0.87897, 0.83055, 0.87897, 0.83055, 1.0426, 1.0033, 1.0426, 0.97042, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.91149, 0.97042, 0.91149, 0.97042, 0.91149, 0.97042, 1, 1, 1.05815, 0.97922, 1.05815, 0.97922, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 0.97441, 1.04302, 0.79631, 1.01582, 1, 1, 1.01054, 0.83853, 1.14236, 1, 1, 0.83853, 1.09125, 0.83853, 0.90418, 0.83853, 1.19508, 1.10615, 0.97922, 1, 1, 1.10615, 0.97922, 1.01034, 1.10466, 0.97922, 0.97552, 0.94165, 0.97552, 0.94165, 0.97552, 0.94165, 0.91602, 0.91981, 0.88641, 1.0276, 1, 1, 0.88641, 1.0276, 0.80527, 0.78929, 0.80527, 0.78929, 0.80527, 0.78929, 0.80527, 0.78929, 1, 1, 0.96083, 1.05403, 0.95923, 1.16862, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.06777, 1.02197, 0.91142, 0.96752, 0.91142, 0.99361, 0.97168, 0.99361, 0.97168, 0.99361, 0.97168, 1.23199, 1.036, 0.97363, 1.06585, 0.94385, 0.96705, 0.97552, 0.94165, 1, 1, 0.96083, 1.1261, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 0.95161, 1.27126, 1.00811, 0.83284, 0.77702, 0.99137, 0.95253, 1.0347, 0.86142, 1.07205, 1.14236, 0.97363, 0.89723, 0.86869, 1.09818, 0.79429, 0.99361, 1.05815, 0.97552, 1.1406, 0.90128, 1.06662, 1.04396, 1.10615, 0.84918, 0.97552, 1.04694, 0.94436, 0.98015, 0.96083, 0.91142, 1.00356, 0.9817, 1.01945, 0.98999, 1.1406, 0.91142, 1.04961, 0.9898, 1.00639, 1.14236, 1.07514, 1.04961, 0.99607, 1.02897, 1.008, 0.9898, 0.95134, 1.00639, 1.11121, 1.14236, 1.00518, 0.97981, 1.02186, 1, 1.08578, 0.94165, 0.99314, 0.98387, 0.93028, 0.93377, 1.35125, 1.07514, 1.10687, 0.93491, 1.04232, 1.00351, 1.14236, 1.07514, 0.94165, 1.07514, 1.00351, 0.79429, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09097, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.93503, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.96609, 1, 1, 1, 1, 1, 1, 1.06777, 1.02197, 1.06777, 1.02197, 1.06777, 1.02197, 0.91142, 0.96752, 1, 1.21261, 0.89903, 1, 1, 0.75155, 1.04745, 1.04745, 1.04745, 1.04394, 0.98633, 0.98633, 0.98633, 0.72959, 0.72959, 1.20502, 0.91406, 1.26514, 1.222, 1.02956, 1.03372, 1.03372, 0.96039, 1.24633, 1, 1.09125, 0.93327, 1.03336, 1.16541, 1.036, 1, 1, 1, 0.771, 1, 1, 1.15574, 1.15574, 1.15574, 1.15574, 0.86364, 0.94434, 0.86279, 0.94434, 0.86224, 1, 1, 1.16798, 1, 0.96085, 0.90068, 1.21237, 1.18416, 1.13904, 0.69825, 0.9716, 2.10339, 1.29004, 1.29004, 1.21339, 1.29004, 1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18775, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.13269, 1.13269, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], KQ = {
  lineHeight: 1.33008,
  lineGap: 0
}, vQ = [1.76738, 1, 1, 0.98946, 1.14763, 1.05365, 1.06234, 0.96927, 0.92586, 1.15373, 1.18414, 0.91349, 0.91349, 1.07403, 1.17308, 0.78383, 1.20088, 0.78383, 1.42531, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.78383, 0.78383, 1.17308, 1.17308, 1.17308, 0.77349, 0.94565, 0.94729, 0.85944, 0.88506, 0.9858, 0.74817, 0.80016, 0.88449, 0.98039, 0.95782, 0.69238, 0.89898, 0.83231, 0.98183, 1.03989, 0.96924, 0.86237, 0.96924, 0.80595, 0.74524, 0.86091, 0.95402, 0.94143, 0.98448, 0.8858, 0.83089, 0.93285, 1.0949, 1.39016, 1.0949, 1.45994, 0.74627, 1.04839, 0.97454, 0.97454, 0.87207, 0.97454, 0.87533, 1.06151, 0.97454, 1.00176, 1.16484, 1.08132, 0.98047, 1.16484, 1.02989, 1.01054, 0.96225, 0.97454, 0.97454, 1.06598, 0.79004, 1.16344, 1.00351, 0.94629, 0.9973, 0.91016, 0.96777, 0.9043, 0.91082, 0.92481, 0.91082, 1.17308, 0.95748, 0.96927, 0.96927, 1, 0.96927, 0.92481, 0.80597, 1.04839, 1.23393, 1.1781, 0.9245, 1.17308, 1.20808, 0.63218, 0.94261, 1.24822, 1.09971, 1.09971, 1.04839, 1, 0.85273, 0.78032, 1.04839, 1.09971, 1.22326, 0.9245, 1.09836, 1.13525, 1.15222, 0.70424, 0.94729, 0.94729, 0.94729, 0.94729, 0.94729, 0.94729, 0.85498, 0.88506, 0.74817, 0.74817, 0.74817, 0.74817, 0.95782, 0.95782, 0.95782, 0.95782, 0.9858, 1.03989, 0.96924, 0.96924, 0.96924, 0.96924, 0.96924, 1.17308, 0.96924, 0.95402, 0.95402, 0.95402, 0.95402, 0.83089, 0.86237, 0.88409, 0.97454, 0.97454, 0.97454, 0.97454, 0.97454, 0.97454, 0.92916, 0.87207, 0.87533, 0.87533, 0.87533, 0.87533, 0.93146, 0.93146, 0.93146, 0.93146, 0.93854, 1.01054, 0.96225, 0.96225, 0.96225, 0.96225, 0.96225, 1.24822, 0.8761, 1.00351, 1.00351, 1.00351, 1.00351, 0.96777, 0.97454, 0.96777, 0.94729, 0.97454, 0.94729, 0.97454, 0.94729, 0.97454, 0.88506, 0.87207, 0.88506, 0.87207, 0.88506, 0.87207, 0.88506, 0.87207, 0.9858, 0.95391, 0.9858, 0.97454, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.88449, 0.97454, 0.88449, 0.97454, 0.88449, 0.97454, 1, 1, 0.98039, 1.00176, 0.98039, 1.00176, 0.95782, 0.93146, 0.95782, 0.93146, 0.95782, 0.93146, 0.95782, 1.16484, 0.95782, 0.93146, 0.84421, 1.12761, 0.69238, 1.08132, 1, 1, 0.98047, 0.83231, 1.16484, 1, 1, 0.84723, 1.04861, 0.84723, 0.78755, 0.83231, 1.23736, 1.03989, 1.01054, 1, 1, 1.03989, 1.01054, 0.9857, 1.03849, 1.01054, 0.96924, 0.96225, 0.96924, 0.96225, 0.96924, 0.96225, 0.92383, 0.90171, 0.80595, 1.06598, 1, 1, 0.80595, 1.06598, 0.74524, 0.79004, 0.74524, 0.79004, 0.74524, 0.79004, 0.74524, 0.79004, 1, 1, 0.86091, 1.02759, 0.85771, 1.16344, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.98448, 0.9973, 0.83089, 0.96777, 0.83089, 0.93285, 0.9043, 0.93285, 0.9043, 0.93285, 0.9043, 1.31868, 0.96927, 0.94729, 0.97454, 0.85498, 0.92916, 0.96924, 0.8761, 1, 1, 0.86091, 1.16344, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 0.81965, 0.81965, 0.94729, 0.78032, 0.71022, 0.90883, 0.84171, 0.99877, 0.77596, 1.05734, 1.2, 0.94729, 0.85944, 0.82791, 0.9607, 0.74817, 0.93285, 0.98039, 0.96924, 0.95782, 0.89898, 0.98316, 0.98183, 1.03989, 0.78614, 0.96924, 0.97642, 0.86237, 0.86075, 0.86091, 0.83089, 0.90082, 0.8858, 0.97296, 1.01284, 0.95782, 0.83089, 1.0976, 1.04, 1.03342, 1.2, 1.0675, 1.0976, 0.98205, 1.03809, 1.05097, 1.04, 0.95364, 1.03342, 1.05401, 1.2, 1.02148, 1.0119, 1.04724, 1.0127, 1.02732, 0.96225, 0.8965, 0.97783, 0.93574, 0.94818, 1.30679, 1.0675, 1.11826, 0.99821, 1.0557, 1.0326, 1.2, 1.0675, 0.96225, 1.0675, 1.0326, 0.74817, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.03754, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.87533, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.98705, 1, 1, 1, 1, 1, 1, 0.98448, 0.9973, 0.98448, 0.9973, 0.98448, 0.9973, 0.83089, 0.96777, 1, 1.20088, 0.89903, 1, 1, 0.75155, 0.94945, 0.94945, 0.94945, 0.94945, 1.12317, 1.12317, 1.12317, 0.67603, 0.67603, 1.15621, 0.73584, 1.21191, 1.22135, 1.06483, 0.94868, 0.94868, 0.95996, 1.24633, 1, 1.07497, 0.87709, 0.96927, 1.01473, 0.96927, 1, 1, 1, 0.77295, 1, 1, 1.09836, 1.09836, 1.09836, 1.01522, 0.86321, 0.94434, 0.8649, 0.94434, 0.86182, 1, 1, 1.083, 1, 0.91578, 0.86438, 1.17308, 1.18416, 1.14589, 0.69825, 0.97622, 1.96791, 1.24822, 1.24822, 1.17308, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.17984, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10742, 1.10742, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], TQ = {
  lineHeight: 1.33008,
  lineGap: 0
}, qQ = [1.76738, 1, 1, 0.98594, 1.02285, 1.10454, 1.06234, 0.96927, 0.92037, 1.19985, 1.2046, 0.90616, 0.90616, 1.07152, 1.1714, 0.78032, 1.20088, 0.78032, 1.40246, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.78032, 0.78032, 1.1714, 1.1714, 1.1714, 0.80597, 0.94084, 0.96706, 0.85944, 0.85734, 0.97093, 0.75842, 0.79936, 0.88198, 0.9831, 0.95782, 0.71387, 0.86969, 0.84636, 1.07796, 1.03584, 0.96924, 0.83968, 0.96924, 0.82826, 0.79649, 0.85771, 0.95132, 0.93119, 0.98965, 0.88433, 0.8287, 0.93365, 1.08612, 1.3638, 1.08612, 1.45786, 0.74627, 0.80499, 0.91484, 1.05707, 0.92383, 1.05882, 0.9403, 1.12654, 1.05882, 1.01756, 1.09011, 1.09011, 0.99414, 1.09011, 1.034, 1.01756, 1.05356, 1.05707, 1.05882, 1.04399, 0.84863, 1.21968, 1.01756, 0.95801, 1.00068, 0.91797, 0.96777, 0.9043, 0.90351, 0.92105, 0.90351, 1.1714, 0.85337, 0.96927, 0.96927, 0.99912, 0.96927, 0.92105, 0.80597, 1.2434, 1.20808, 1.05937, 0.90957, 1.1714, 1.20808, 0.75155, 0.94261, 1.24644, 1.09971, 1.09971, 0.84751, 1, 0.85273, 0.78032, 0.61584, 1.05425, 1.17914, 0.90957, 1.08665, 1.11593, 1.14169, 0.73381, 0.96706, 0.96706, 0.96706, 0.96706, 0.96706, 0.96706, 0.86035, 0.85734, 0.75842, 0.75842, 0.75842, 0.75842, 0.95782, 0.95782, 0.95782, 0.95782, 0.97093, 1.03584, 0.96924, 0.96924, 0.96924, 0.96924, 0.96924, 1.1714, 0.96924, 0.95132, 0.95132, 0.95132, 0.95132, 0.8287, 0.83968, 0.89049, 0.91484, 0.91484, 0.91484, 0.91484, 0.91484, 0.91484, 0.93575, 0.92383, 0.9403, 0.9403, 0.9403, 0.9403, 0.8717, 0.8717, 0.8717, 0.8717, 1.00527, 1.01756, 1.05356, 1.05356, 1.05356, 1.05356, 1.05356, 1.24644, 0.95923, 1.01756, 1.01756, 1.01756, 1.01756, 0.96777, 1.05707, 0.96777, 0.96706, 0.91484, 0.96706, 0.91484, 0.96706, 0.91484, 0.85734, 0.92383, 0.85734, 0.92383, 0.85734, 0.92383, 0.85734, 0.92383, 0.97093, 1.0969, 0.97093, 1.05882, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.88198, 1.05882, 0.88198, 1.05882, 0.88198, 1.05882, 1, 1, 0.9831, 1.01756, 0.9831, 1.01756, 0.95782, 0.8717, 0.95782, 0.8717, 0.95782, 0.8717, 0.95782, 1.09011, 0.95782, 0.8717, 0.84784, 1.11551, 0.71387, 1.09011, 1, 1, 0.99414, 0.84636, 1.09011, 1, 1, 0.84636, 1.0536, 0.84636, 0.94298, 0.84636, 1.23297, 1.03584, 1.01756, 1, 1, 1.03584, 1.01756, 1.00323, 1.03444, 1.01756, 0.96924, 1.05356, 0.96924, 1.05356, 0.96924, 1.05356, 0.93066, 0.98293, 0.82826, 1.04399, 1, 1, 0.82826, 1.04399, 0.79649, 0.84863, 0.79649, 0.84863, 0.79649, 0.84863, 0.79649, 0.84863, 1, 1, 0.85771, 1.17318, 0.85771, 1.21968, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.98965, 1.00068, 0.8287, 0.96777, 0.8287, 0.93365, 0.9043, 0.93365, 0.9043, 0.93365, 0.9043, 1.08571, 0.96927, 0.96706, 0.91484, 0.86035, 0.93575, 0.96924, 0.95923, 1, 1, 0.85771, 1.21968, 1.11437, 1.11437, 0.93109, 0.91202, 0.60411, 0.84164, 0.55572, 1.01173, 0.97361, 0.81818, 0.81818, 0.96635, 0.78032, 0.72727, 0.92366, 0.98601, 1.03405, 0.77968, 1.09799, 1.2, 0.96706, 0.85944, 0.85638, 0.96491, 0.75842, 0.93365, 0.9831, 0.96924, 0.95782, 0.86969, 0.94152, 1.07796, 1.03584, 0.78437, 0.96924, 0.98715, 0.83968, 0.83491, 0.85771, 0.8287, 0.94492, 0.88433, 0.9287, 1.0098, 0.95782, 0.8287, 1.0625, 0.98248, 1.03424, 1.2, 1.01071, 1.0625, 0.95246, 1.03809, 1.04912, 0.98248, 1.00221, 1.03424, 1.05443, 1.2, 1.04785, 0.99609, 1.00169, 1.05176, 0.99346, 1.05356, 0.9087, 1.03004, 0.95542, 0.93117, 1.23362, 1.01071, 1.07831, 1.02512, 1.05205, 1.03502, 1.2, 1.01071, 1.05356, 1.01071, 1.03502, 0.75842, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.03719, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9403, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04021, 1, 1, 1, 1, 1, 1, 0.98965, 1.00068, 0.98965, 1.00068, 0.98965, 1.00068, 0.8287, 0.96777, 1, 1.20088, 0.89903, 1, 1, 0.75155, 1.03077, 1.03077, 1.03077, 1.03077, 1.13196, 1.13196, 1.13196, 0.67428, 0.67428, 1.16039, 0.73291, 1.20996, 1.22135, 1.06483, 0.94868, 0.94868, 0.95996, 1.24633, 1, 1.07497, 0.87796, 0.96927, 1.01518, 0.96927, 1, 1, 1, 0.77295, 1, 1, 1.10539, 1.10539, 1.11358, 1.06967, 0.86279, 0.94434, 0.86279, 0.94434, 0.86182, 1, 1, 1.083, 1, 0.91578, 0.86507, 1.1714, 1.18416, 1.14589, 0.69825, 0.97622, 1.9697, 1.24822, 1.24822, 1.17238, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18083, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10938, 1.10938, 1, 1, 1, 1.05425, 1.09971, 1.09971, 1.09971, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], PQ = {
  lineHeight: 1.33008,
  lineGap: 0
}, WQ = Ce(function(e) {
  e["MyriadPro-Regular"] = e["PdfJS-Fallback-Regular"] = {
    name: "LiberationSans-Regular",
    factors: MQ,
    baseWidths: ks,
    baseMapping: Ss,
    metrics: LQ
  }, e["MyriadPro-Bold"] = e["PdfJS-Fallback-Bold"] = {
    name: "LiberationSans-Bold",
    factors: SQ,
    baseWidths: ms,
    baseMapping: ps,
    metrics: FQ
  }, e["MyriadPro-It"] = e["MyriadPro-Italic"] = e["PdfJS-Fallback-Italic"] = {
    name: "LiberationSans-Italic",
    factors: GQ,
    baseWidths: bs,
    baseMapping: Ds,
    metrics: UQ
  }, e["MyriadPro-BoldIt"] = e["MyriadPro-BoldItalic"] = e["PdfJS-Fallback-BoldItalic"] = {
    name: "LiberationSans-BoldItalic",
    factors: RQ,
    baseWidths: ys,
    baseMapping: ws,
    metrics: NQ
  }, e.ArialMT = e.Arial = e["Arial-Regular"] = {
    name: "LiberationSans-Regular",
    baseWidths: ks,
    baseMapping: Ss
  }, e["Arial-BoldMT"] = e["Arial-Bold"] = {
    name: "LiberationSans-Bold",
    baseWidths: ms,
    baseMapping: ps
  }, e["Arial-ItalicMT"] = e["Arial-Italic"] = {
    name: "LiberationSans-Italic",
    baseWidths: bs,
    baseMapping: Ds
  }, e["Arial-BoldItalicMT"] = e["Arial-BoldItalic"] = {
    name: "LiberationSans-BoldItalic",
    baseWidths: ys,
    baseMapping: ws
  }, e["Calibri-Regular"] = {
    name: "LiberationSans-Regular",
    factors: uQ,
    baseWidths: ks,
    baseMapping: Ss,
    metrics: dQ
  }, e["Calibri-Bold"] = {
    name: "LiberationSans-Bold",
    factors: CQ,
    baseWidths: ms,
    baseMapping: ps,
    metrics: hQ
  }, e["Calibri-Italic"] = {
    name: "LiberationSans-Italic",
    factors: EQ,
    baseWidths: bs,
    baseMapping: Ds,
    metrics: fQ
  }, e["Calibri-BoldItalic"] = {
    name: "LiberationSans-BoldItalic",
    factors: BQ,
    baseWidths: ys,
    baseMapping: ws,
    metrics: QQ
  }, e["Segoeui-Regular"] = {
    name: "LiberationSans-Regular",
    factors: qQ,
    baseWidths: ks,
    baseMapping: Ss,
    metrics: PQ
  }, e["Segoeui-Bold"] = {
    name: "LiberationSans-Bold",
    factors: HQ,
    baseWidths: ms,
    baseMapping: ps,
    metrics: JQ
  }, e["Segoeui-Italic"] = {
    name: "LiberationSans-Italic",
    factors: vQ,
    baseWidths: bs,
    baseMapping: Ds,
    metrics: TQ
  }, e["Segoeui-BoldItalic"] = {
    name: "LiberationSans-BoldItalic",
    factors: YQ,
    baseWidths: ys,
    baseMapping: ws,
    metrics: KQ
  }, e["Helvetica-Regular"] = e.Helvetica = {
    name: "LiberationSans-Regular",
    factors: DQ,
    baseWidths: ks,
    baseMapping: Ss,
    metrics: kQ
  }, e["Helvetica-Bold"] = {
    name: "LiberationSans-Bold",
    factors: xQ,
    baseWidths: ms,
    baseMapping: ps,
    metrics: mQ
  }, e["Helvetica-Italic"] = {
    name: "LiberationSans-Italic",
    factors: wQ,
    baseWidths: bs,
    baseMapping: Ds,
    metrics: bQ
  }, e["Helvetica-BoldItalic"] = {
    name: "LiberationSans-BoldItalic",
    factors: pQ,
    baseWidths: ys,
    baseMapping: ws,
    metrics: yQ
  };
});
function Ao(e) {
  const A = wa(e);
  return WQ()[A];
}
function OQ(e) {
  const A = Ao(e);
  if (!A)
    return null;
  const {
    baseWidths: t,
    baseMapping: i,
    factors: s
  } = A, a = s ? t.map((o, I) => o * s[I]) : t;
  let n = -2, r;
  const g = [];
  for (const [o, I] of i.map((c, l) => [c, l]).sort(([c], [l]) => c - l))
    o !== -1 && (o === n + 1 ? (r.push(a[I]), n += 1) : (n = o, r = [a[I]], g.push(o, r)));
  return g;
}
function Zc(e) {
  const A = OQ(e), t = new R(null);
  t.set("BaseFont", L.get(e)), t.set("Type", L.get("Font")), t.set("Subtype", L.get("CIDFontType2")), t.set("Encoding", L.get("Identity-H")), t.set("CIDToGIDMap", L.get("Identity")), t.set("W", A), t.set("FirstChar", A[0]), t.set("LastChar", A.at(-2) + A.at(-1).length - 1);
  const i = new R(null);
  t.set("FontDescriptor", i);
  const s = new R(null);
  return s.set("Ordering", "Identity"), s.set("Registry", "Adobe"), s.set("Supplement", 0), t.set("CIDSystemInfo", s), t;
}
class ZQ {
  constructor(A) {
    this.lexer = A, this.operators = [], this.token = null, this.prev = null;
  }
  nextToken() {
    this.prev = this.token, this.token = this.lexer.getToken();
  }
  accept(A) {
    return this.token.type === A ? (this.nextToken(), !0) : !1;
  }
  expect(A) {
    if (this.accept(A))
      return !0;
    throw new T(`Unexpected symbol: found ${this.token.type} expected ${A}.`);
  }
  parse() {
    return this.nextToken(), this.expect(Ve.LBRACE), this.parseBlock(), this.expect(Ve.RBRACE), this.operators;
  }
  parseBlock() {
    for (; ; )
      if (this.accept(Ve.NUMBER))
        this.operators.push(this.prev.value);
      else if (this.accept(Ve.OPERATOR))
        this.operators.push(this.prev.value);
      else if (this.accept(Ve.LBRACE))
        this.parseCondition();
      else
        return;
  }
  parseCondition() {
    const A = this.operators.length;
    if (this.operators.push(null, null), this.parseBlock(), this.expect(Ve.RBRACE), this.accept(Ve.IF))
      this.operators[A] = this.operators.length, this.operators[A + 1] = "jz";
    else if (this.accept(Ve.LBRACE)) {
      const t = this.operators.length;
      this.operators.push(null, null);
      const i = this.operators.length;
      this.parseBlock(), this.expect(Ve.RBRACE), this.expect(Ve.IFELSE), this.operators[t] = this.operators.length, this.operators[t + 1] = "j", this.operators[A] = i, this.operators[A + 1] = "jz";
    } else
      throw new T("PS Function: error parsing conditional.");
  }
}
const Ve = {
  LBRACE: 0,
  RBRACE: 1,
  NUMBER: 2,
  OPERATOR: 3,
  IF: 4,
  IFELSE: 5
};
class dt {
  static get opCache() {
    return tA(this, "opCache", /* @__PURE__ */ Object.create(null));
  }
  constructor(A, t) {
    this.type = A, this.value = t;
  }
  static getOperator(A) {
    var t;
    return (t = dt.opCache)[A] || (t[A] = new dt(Ve.OPERATOR, A));
  }
  static get LBRACE() {
    return tA(this, "LBRACE", new dt(Ve.LBRACE, "{"));
  }
  static get RBRACE() {
    return tA(this, "RBRACE", new dt(Ve.RBRACE, "}"));
  }
  static get IF() {
    return tA(this, "IF", new dt(Ve.IF, "IF"));
  }
  static get IFELSE() {
    return tA(this, "IFELSE", new dt(Ve.IFELSE, "IFELSE"));
  }
}
class jQ {
  constructor(A) {
    this.stream = A, this.nextChar(), this.strBuf = [];
  }
  nextChar() {
    return this.currentChar = this.stream.getByte();
  }
  getToken() {
    let A = !1, t = this.currentChar;
    for (; ; ) {
      if (t < 0)
        return Me;
      if (A)
        (t === 10 || t === 13) && (A = !1);
      else if (t === 37)
        A = !0;
      else if (!mt(t))
        break;
      t = this.nextChar();
    }
    switch (t | 0) {
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 43:
      case 45:
      case 46:
        return new dt(Ve.NUMBER, this.getNumber());
      case 123:
        return this.nextChar(), dt.LBRACE;
      case 125:
        return this.nextChar(), dt.RBRACE;
    }
    const i = this.strBuf;
    for (i.length = 0, i[0] = String.fromCharCode(t); (t = this.nextChar()) >= 0 && (t >= 65 && t <= 90 || t >= 97 && t <= 122); )
      i.push(String.fromCharCode(t));
    const s = i.join("");
    switch (s.toLowerCase()) {
      case "if":
        return dt.IF;
      case "ifelse":
        return dt.IFELSE;
      default:
        return dt.getOperator(s);
    }
  }
  getNumber() {
    let A = this.currentChar;
    const t = this.strBuf;
    for (t.length = 0, t[0] = String.fromCharCode(A); (A = this.nextChar()) >= 0 && (A >= 48 && A <= 57 || A === 45 || A === 46); )
      t.push(String.fromCharCode(A));
    const i = parseFloat(t.join(""));
    if (isNaN(i))
      throw new T(`Invalid floating point number: ${i}`);
    return i;
  }
}
class ls {
  constructor(A) {
    this._onlyRefs = (A == null ? void 0 : A.onlyRefs) === !0, this._onlyRefs || (this._nameRefMap = /* @__PURE__ */ new Map(), this._imageMap = /* @__PURE__ */ new Map()), this._imageCache = new It();
  }
  getByName(A) {
    this._onlyRefs && WA("Should not call `getByName` method.");
    const t = this._nameRefMap.get(A);
    return t ? this.getByRef(t) : this._imageMap.get(A) || null;
  }
  getByRef(A) {
    return this._imageCache.get(A) || null;
  }
  set(A, t, i) {
    WA("Abstract method `set` called.");
  }
}
class QI extends ls {
  set(A, t = null, i) {
    if (typeof A != "string")
      throw new Error('LocalImageCache.set - expected "name" argument.');
    if (t) {
      if (this._imageCache.has(t))
        return;
      this._nameRefMap.set(A, t), this._imageCache.put(t, i);
      return;
    }
    this._imageMap.has(A) || this._imageMap.set(A, i);
  }
}
class jc extends ls {
  set(A = null, t = null, i) {
    if (typeof A != "string" && !t)
      throw new Error('LocalColorSpaceCache.set - expected "name" and/or "ref" argument.');
    if (t) {
      if (this._imageCache.has(t))
        return;
      A !== null && this._nameRefMap.set(A, t), this._imageCache.put(t, i);
      return;
    }
    this._imageMap.has(A) || this._imageMap.set(A, i);
  }
}
class XQ extends ls {
  constructor(A) {
    super({
      onlyRefs: !0
    });
  }
  set(A = null, t, i) {
    if (!t)
      throw new Error('LocalFunctionCache.set - expected "ref" argument.');
    this._imageCache.has(t) || this._imageCache.put(t, i);
  }
}
class EI extends ls {
  set(A, t = null, i) {
    if (typeof A != "string")
      throw new Error('LocalGStateCache.set - expected "name" argument.');
    if (t) {
      if (this._imageCache.has(t))
        return;
      this._nameRefMap.set(A, t), this._imageCache.put(t, i);
      return;
    }
    this._imageMap.has(A) || this._imageMap.set(A, i);
  }
}
class VQ extends ls {
  constructor(A) {
    super({
      onlyRefs: !0
    });
  }
  set(A = null, t, i) {
    if (!t)
      throw new Error('LocalTilingPatternCache.set - expected "ref" argument.');
    this._imageCache.has(t) || this._imageCache.put(t, i);
  }
}
class _Q extends ls {
  constructor(A) {
    super({
      onlyRefs: !0
    });
  }
  set(A = null, t, i) {
    if (!t)
      throw new Error('RegionalImageCache.set - expected "ref" argument.');
    this._imageCache.has(t) || this._imageCache.put(t, i);
  }
}
var $0, d0, Xc, Eg;
const li = class li {
  constructor() {
    jA(this, d0);
    jA(this, $0, new Ge());
    this._refCache = new It(), this._imageCache = new It();
  }
  shouldCache(A, t) {
    let i = this._refCache.get(A);
    return i || (i = /* @__PURE__ */ new Set(), this._refCache.put(A, i)), i.add(t), !(i.size < li.NUM_PAGES_THRESHOLD || !this._imageCache.has(A) && PA(this, d0, Eg));
  }
  addDecodeFailed(A) {
    PA(this, $0).put(A);
  }
  hasDecodeFailed(A) {
    return PA(this, $0).has(A);
  }
  addByteSize(A, t) {
    const i = this._imageCache.get(A);
    i && (i.byteSize || (i.byteSize = t));
  }
  getData(A, t) {
    const i = this._refCache.get(A);
    if (!i || i.size < li.NUM_PAGES_THRESHOLD)
      return null;
    const s = this._imageCache.get(A);
    return s ? (i.add(t), s) : null;
  }
  setData(A, t) {
    if (!this._refCache.has(A))
      throw new Error('GlobalImageCache.setData - expected "shouldCache" to have been called.');
    if (!this._imageCache.has(A)) {
      if (PA(this, d0, Eg)) {
        k("GlobalImageCache.setData - cache limit reached.");
        return;
      }
      this._imageCache.put(A, t);
    }
  }
  clear(A = !1) {
    A || (PA(this, $0).clear(), this._refCache.clear()), this._imageCache.clear();
  }
};
$0 = new WeakMap(), d0 = new WeakSet(), Xc = function() {
  let A = 0;
  for (const t of this._imageCache)
    A += t.byteSize;
  return A;
}, Eg = function() {
  return !(this._imageCache.size < li.MIN_IMAGES_TO_CACHE || PA(this, d0, Xc) < li.MAX_BYTE_SIZE);
}, et(li, "NUM_PAGES_THRESHOLD", 2), et(li, "MIN_IMAGES_TO_CACHE", 10), et(li, "MAX_BYTE_SIZE", 5 * BC);
let Qg = li;
class Vc {
  constructor({
    xref: A,
    isEvalSupported: t = !0
  }) {
    this.xref = A, this.isEvalSupported = t !== !1;
  }
  create(A) {
    const t = this.getCached(A);
    if (t)
      return t;
    const i = fI.parse({
      xref: this.xref,
      isEvalSupported: this.isEvalSupported,
      fn: A instanceof nA ? this.xref.fetch(A) : A
    });
    return this._cache(A, i), i;
  }
  createFromArray(A) {
    const t = this.getCached(A);
    if (t)
      return t;
    const i = fI.parseArray({
      xref: this.xref,
      isEvalSupported: this.isEvalSupported,
      fnObj: A instanceof nA ? this.xref.fetch(A) : A
    });
    return this._cache(A, i), i;
  }
  getCached(A) {
    var i;
    let t;
    if (A instanceof nA ? t = A : A instanceof R ? t = A.objId : A instanceof JA && (t = (i = A.dict) == null ? void 0 : i.objId), t) {
      const s = this._localFunctionCache.getByRef(t);
      if (s)
        return s;
    }
    return null;
  }
  _cache(A, t) {
    var s;
    if (!t)
      throw new Error('PDFFunctionFactory._cache - expected "parsedFunction" argument.');
    let i;
    A instanceof nA ? i = A : A instanceof R ? i = A.objId : A instanceof JA && (i = (s = A.dict) == null ? void 0 : s.objId), i && this._localFunctionCache.set(null, i, t);
  }
  get _localFunctionCache() {
    return tA(this, "_localFunctionCache", new XQ());
  }
}
function bt(e) {
  return Array.isArray(e) ? rt(e, null) ? e : e.map((A) => +A) : null;
}
class fI {
  static getSampleArray(A, t, i, s) {
    let a, n, r = 1;
    for (a = 0, n = A.length; a < n; a++)
      r *= A[a];
    r *= t;
    const g = new Array(r);
    let o = 0, I = 0;
    const c = 1 / (2 ** i - 1), l = s.getBytes((r * i + 7) / 8);
    let C = 0;
    for (a = 0; a < r; a++) {
      for (; o < i; )
        I <<= 8, I |= l[C++], o += 8;
      o -= i, g[a] = (I >> o) * c, I &= (1 << o) - 1;
    }
    return g;
  }
  static parse({
    xref: A,
    isEvalSupported: t,
    fn: i
  }) {
    const s = i.dict || i;
    switch (s.get("FunctionType")) {
      case 0:
        return this.constructSampled({
          xref: A,
          isEvalSupported: t,
          fn: i,
          dict: s
        });
      case 1:
        break;
      case 2:
        return this.constructInterpolated({
          xref: A,
          isEvalSupported: t,
          dict: s
        });
      case 3:
        return this.constructStiched({
          xref: A,
          isEvalSupported: t,
          dict: s
        });
      case 4:
        return this.constructPostScript({
          xref: A,
          isEvalSupported: t,
          fn: i,
          dict: s
        });
    }
    throw new T("Unknown type of function");
  }
  static parseArray({
    xref: A,
    isEvalSupported: t,
    fnObj: i
  }) {
    if (!Array.isArray(i))
      return this.parse({
        xref: A,
        isEvalSupported: t,
        fn: i
      });
    const s = [];
    for (const a of i)
      s.push(this.parse({
        xref: A,
        isEvalSupported: t,
        fn: A.fetchIfRef(a)
      }));
    return function(a, n, r, g) {
      for (let o = 0, I = s.length; o < I; o++)
        s[o](a, n, r, g + o);
    };
  }
  static constructSampled({
    xref: A,
    isEvalSupported: t,
    fn: i,
    dict: s
  }) {
    function a(E) {
      const f = E.length, d = [];
      let u = 0;
      for (let x = 0; x < f; x += 2)
        d[u++] = [E[x], E[x + 1]];
      return d;
    }
    function n(E, f, d, u, x) {
      return u + (E - f) * ((x - u) / (d - f));
    }
    let r = bt(s.getArray("Domain")), g = bt(s.getArray("Range"));
    if (!r || !g)
      throw new T("No domain or range");
    const o = r.length / 2, I = g.length / 2;
    r = a(r), g = a(g);
    const c = bt(s.getArray("Size")), l = s.get("BitsPerSample"), C = s.get("Order") || 1;
    C !== 1 && vA("No support for cubic spline interpolation: " + C);
    let h = bt(s.getArray("Encode"));
    if (h)
      h = a(h);
    else {
      h = [];
      for (let E = 0; E < o; ++E)
        h.push([0, c[E] - 1]);
    }
    let B = bt(s.getArray("Decode"));
    B = B ? a(B) : g;
    const Q = this.getSampleArray(c, I, l, i);
    return function(f, d, u, x) {
      const p = 1 << o, m = new Float64Array(p), D = new Uint32Array(p);
      let S, y;
      for (y = 0; y < p; y++)
        m[y] = 1;
      let H = I, G = 1;
      for (S = 0; S < o; ++S) {
        const v = r[S][0], X = r[S][1], gA = Math.min(Math.max(f[d + S], v), X);
        let N = n(gA, v, X, h[S][0], h[S][1]);
        const F = c[S];
        N = Math.min(Math.max(N, 0), F - 1);
        const eA = N < F - 1 ? Math.floor(N) : N - 1, z = eA + 1 - N, cA = N - eA, wA = eA * H, mA = wA + H;
        for (y = 0; y < p; y++)
          y & G ? (m[y] *= cA, D[y] += mA) : (m[y] *= z, D[y] += wA);
        H *= F, G <<= 1;
      }
      for (y = 0; y < I; ++y) {
        let v = 0;
        for (S = 0; S < p; S++)
          v += Q[D[S] + y] * m[S];
        v = n(v, 0, 1, B[y][0], B[y][1]), u[x + y] = Math.min(Math.max(v, g[y][0]), g[y][1]);
      }
    };
  }
  static constructInterpolated({
    xref: A,
    isEvalSupported: t,
    dict: i
  }) {
    const s = bt(i.getArray("C0")) || [0], a = bt(i.getArray("C1")) || [1], n = i.get("N"), r = [];
    for (let o = 0, I = s.length; o < I; ++o)
      r.push(a[o] - s[o]);
    const g = r.length;
    return function(I, c, l, C) {
      const h = n === 1 ? I[c] : I[c] ** n;
      for (let B = 0; B < g; ++B)
        l[C + B] = s[B] + h * r[B];
    };
  }
  static constructStiched({
    xref: A,
    isEvalSupported: t,
    dict: i
  }) {
    const s = bt(i.getArray("Domain"));
    if (!s)
      throw new T("No domain");
    if (s.length / 2 !== 1)
      throw new T("Bad domain for stiched function");
    const n = [];
    for (const I of i.get("Functions"))
      n.push(this.parse({
        xref: A,
        isEvalSupported: t,
        fn: A.fetchIfRef(I)
      }));
    const r = bt(i.getArray("Bounds")), g = bt(i.getArray("Encode")), o = new Float32Array(1);
    return function(c, l, C, h) {
      const Q = function(D, S, y) {
        return D > y ? D = y : D < S && (D = S), D;
      }(c[l], s[0], s[1]), E = r.length;
      let f;
      for (f = 0; f < E && !(Q < r[f]); ++f)
        ;
      let d = s[0];
      f > 0 && (d = r[f - 1]);
      let u = s[1];
      f < r.length && (u = r[f]);
      const x = g[2 * f], p = g[2 * f + 1];
      o[0] = d === u ? x : x + (Q - d) * (p - x) / (u - d), n[f](o, 0, C, h);
    };
  }
  static constructPostScript({
    xref: A,
    isEvalSupported: t,
    fn: i,
    dict: s
  }) {
    const a = bt(s.getArray("Domain")), n = bt(s.getArray("Range"));
    if (!a)
      throw new T("No domain.");
    if (!n)
      throw new T("No range.");
    const r = new jQ(i), o = new ZQ(r).parse();
    if (t && ht.isEvalSupported) {
      const E = new a1().compile(o, a, n);
      if (E)
        return new Function("src", "srcOffset", "dest", "destOffset", E);
    }
    vA("Unable to compile PS function");
    const I = n.length >> 1, c = a.length >> 1, l = new zQ(o), C = /* @__PURE__ */ Object.create(null);
    let B = 2048 * 4;
    const Q = new Float32Array(c);
    return function(f, d, u, x) {
      let p, m, D = "";
      const S = Q;
      for (p = 0; p < c; p++)
        m = f[d + p], S[p] = m, D += m + "_";
      const y = C[D];
      if (y !== void 0) {
        u.set(y, x);
        return;
      }
      const H = new Float32Array(I), G = l.execute(S), v = G.length - I;
      for (p = 0; p < I; p++) {
        m = G[v + p];
        let X = n[p * 2];
        m < X ? m = X : (X = n[p * 2 + 1], m > X && (m = X)), H[p] = m;
      }
      B > 0 && (B--, C[D] = H), u.set(H, x);
    };
  }
}
function Nr(e) {
  let A;
  if (e instanceof R)
    A = e;
  else if (e instanceof JA)
    A = e.dict;
  else
    return !1;
  return A.has("FunctionType");
}
const Ws = class Ws {
  constructor(A) {
    this.stack = A ? Array.from(A) : [];
  }
  push(A) {
    if (this.stack.length >= Ws.MAX_STACK_SIZE)
      throw new Error("PostScript function stack overflow.");
    this.stack.push(A);
  }
  pop() {
    if (this.stack.length <= 0)
      throw new Error("PostScript function stack underflow.");
    return this.stack.pop();
  }
  copy(A) {
    if (this.stack.length + A >= Ws.MAX_STACK_SIZE)
      throw new Error("PostScript function stack overflow.");
    const t = this.stack;
    for (let i = t.length - A, s = A - 1; s >= 0; s--, i++)
      t.push(t[i]);
  }
  index(A) {
    this.push(this.stack[this.stack.length - A - 1]);
  }
  roll(A, t) {
    const i = this.stack, s = i.length - A, a = i.length - 1, n = s + (t - Math.floor(t / A) * A);
    for (let r = s, g = a; r < g; r++, g--) {
      const o = i[r];
      i[r] = i[g], i[g] = o;
    }
    for (let r = s, g = n - 1; r < g; r++, g--) {
      const o = i[r];
      i[r] = i[g], i[g] = o;
    }
    for (let r = n, g = a; r < g; r++, g--) {
      const o = i[r];
      i[r] = i[g], i[g] = o;
    }
  }
};
et(Ws, "MAX_STACK_SIZE", 100);
let fg = Ws;
class zQ {
  constructor(A) {
    this.operators = A;
  }
  execute(A) {
    const t = new fg(A);
    let i = 0;
    const s = this.operators, a = s.length;
    let n, r, g;
    for (; i < a; ) {
      if (n = s[i++], typeof n == "number") {
        t.push(n);
        continue;
      }
      switch (n) {
        case "jz":
          g = t.pop(), r = t.pop(), r || (i = g);
          break;
        case "j":
          r = t.pop(), i = r;
          break;
        case "abs":
          r = t.pop(), t.push(Math.abs(r));
          break;
        case "add":
          g = t.pop(), r = t.pop(), t.push(r + g);
          break;
        case "and":
          g = t.pop(), r = t.pop(), typeof r == "boolean" && typeof g == "boolean" ? t.push(r && g) : t.push(r & g);
          break;
        case "atan":
          g = t.pop(), r = t.pop(), r = Math.atan2(r, g) / Math.PI * 180, r < 0 && (r += 360), t.push(r);
          break;
        case "bitshift":
          g = t.pop(), r = t.pop(), r > 0 ? t.push(r << g) : t.push(r >> g);
          break;
        case "ceiling":
          r = t.pop(), t.push(Math.ceil(r));
          break;
        case "copy":
          r = t.pop(), t.copy(r);
          break;
        case "cos":
          r = t.pop(), t.push(Math.cos(r % 360 / 180 * Math.PI));
          break;
        case "cvi":
          r = t.pop() | 0, t.push(r);
          break;
        case "cvr":
          break;
        case "div":
          g = t.pop(), r = t.pop(), t.push(r / g);
          break;
        case "dup":
          t.copy(1);
          break;
        case "eq":
          g = t.pop(), r = t.pop(), t.push(r === g);
          break;
        case "exch":
          t.roll(2, 1);
          break;
        case "exp":
          g = t.pop(), r = t.pop(), t.push(r ** g);
          break;
        case "false":
          t.push(!1);
          break;
        case "floor":
          r = t.pop(), t.push(Math.floor(r));
          break;
        case "ge":
          g = t.pop(), r = t.pop(), t.push(r >= g);
          break;
        case "gt":
          g = t.pop(), r = t.pop(), t.push(r > g);
          break;
        case "idiv":
          g = t.pop(), r = t.pop(), t.push(r / g | 0);
          break;
        case "index":
          r = t.pop(), t.index(r);
          break;
        case "le":
          g = t.pop(), r = t.pop(), t.push(r <= g);
          break;
        case "ln":
          r = t.pop(), t.push(Math.log(r));
          break;
        case "log":
          r = t.pop(), t.push(Math.log10(r));
          break;
        case "lt":
          g = t.pop(), r = t.pop(), t.push(r < g);
          break;
        case "mod":
          g = t.pop(), r = t.pop(), t.push(r % g);
          break;
        case "mul":
          g = t.pop(), r = t.pop(), t.push(r * g);
          break;
        case "ne":
          g = t.pop(), r = t.pop(), t.push(r !== g);
          break;
        case "neg":
          r = t.pop(), t.push(-r);
          break;
        case "not":
          r = t.pop(), typeof r == "boolean" ? t.push(!r) : t.push(~r);
          break;
        case "or":
          g = t.pop(), r = t.pop(), typeof r == "boolean" && typeof g == "boolean" ? t.push(r || g) : t.push(r | g);
          break;
        case "pop":
          t.pop();
          break;
        case "roll":
          g = t.pop(), r = t.pop(), t.roll(r, g);
          break;
        case "round":
          r = t.pop(), t.push(Math.round(r));
          break;
        case "sin":
          r = t.pop(), t.push(Math.sin(r % 360 / 180 * Math.PI));
          break;
        case "sqrt":
          r = t.pop(), t.push(Math.sqrt(r));
          break;
        case "sub":
          g = t.pop(), r = t.pop(), t.push(r - g);
          break;
        case "true":
          t.push(!0);
          break;
        case "truncate":
          r = t.pop(), r = r < 0 ? Math.ceil(r) : Math.floor(r), t.push(r);
          break;
        case "xor":
          g = t.pop(), r = t.pop(), typeof r == "boolean" && typeof g == "boolean" ? t.push(r !== g) : t.push(r ^ g);
          break;
        default:
          throw new T(`Unknown operator ${n}`);
      }
    }
    return t.stack;
  }
}
class Cs {
  constructor(A) {
    this.type = A;
  }
  visit(A) {
    WA("abstract method");
  }
}
class $Q extends Cs {
  constructor(A, t, i) {
    super("args"), this.index = A, this.min = t, this.max = i;
  }
  visit(A) {
    A.visitArgument(this);
  }
}
class l0 extends Cs {
  constructor(A) {
    super("literal"), this.number = A, this.min = A, this.max = A;
  }
  visit(A) {
    A.visitLiteral(this);
  }
}
class eo extends Cs {
  constructor(A, t, i, s, a) {
    super("binary"), this.op = A, this.arg1 = t, this.arg2 = i, this.min = s, this.max = a;
  }
  visit(A) {
    A.visitBinaryOperation(this);
  }
}
class A1 extends Cs {
  constructor(A, t) {
    super("max"), this.arg = A, this.min = A.min, this.max = t;
  }
  visit(A) {
    A.visitMin(this);
  }
}
class uI extends Cs {
  constructor(A, t, i) {
    super("var"), this.index = A, this.min = t, this.max = i;
  }
  visit(A) {
    A.visitVariable(this);
  }
}
class dI extends Cs {
  constructor(A, t) {
    super("definition"), this.variable = A, this.arg = t;
  }
  visit(A) {
    A.visitVariableDefinition(this);
  }
}
class xI {
  constructor() {
    this.parts = [];
  }
  visitArgument(A) {
    this.parts.push("Math.max(", A.min, ", Math.min(", A.max, ", src[srcOffset + ", A.index, "]))");
  }
  visitVariable(A) {
    this.parts.push("v", A.index);
  }
  visitLiteral(A) {
    this.parts.push(A.number);
  }
  visitBinaryOperation(A) {
    this.parts.push("("), A.arg1.visit(this), this.parts.push(" ", A.op, " "), A.arg2.visit(this), this.parts.push(")");
  }
  visitVariableDefinition(A) {
    this.parts.push("var "), A.variable.visit(this), this.parts.push(" = "), A.arg.visit(this), this.parts.push(";");
  }
  visitMin(A) {
    this.parts.push("Math.min("), A.arg.visit(this), this.parts.push(", ", A.max, ")");
  }
  toString() {
    return this.parts.join("");
  }
}
function e1(e, A) {
  return A.type === "literal" && A.number === 0 ? e : e.type === "literal" && e.number === 0 ? A : A.type === "literal" && e.type === "literal" ? new l0(e.number + A.number) : new eo("+", e, A, e.min + A.min, e.max + A.max);
}
function t1(e, A) {
  if (A.type === "literal") {
    if (A.number === 0)
      return new l0(0);
    if (A.number === 1)
      return e;
    if (e.type === "literal")
      return new l0(e.number * A.number);
  }
  if (e.type === "literal") {
    if (e.number === 0)
      return new l0(0);
    if (e.number === 1)
      return A;
  }
  const t = Math.min(e.min * A.min, e.min * A.max, e.max * A.min, e.max * A.max), i = Math.max(e.min * A.min, e.min * A.max, e.max * A.min, e.max * A.max);
  return new eo("*", e, A, t, i);
}
function i1(e, A) {
  if (A.type === "literal") {
    if (A.number === 0)
      return e;
    if (e.type === "literal")
      return new l0(e.number - A.number);
  }
  return A.type === "binary" && A.op === "-" && e.type === "literal" && e.number === 1 && A.arg1.type === "literal" && A.arg1.number === 1 ? A.arg2 : new eo("-", e, A, e.min - A.max, e.max - A.min);
}
function s1(e, A) {
  return e.min >= A ? new l0(A) : e.max <= A ? e : new A1(e, A);
}
class a1 {
  compile(A, t, i) {
    const s = [], a = [], n = t.length >> 1, r = i.length >> 1;
    let g = 0, o, I, c, l, C, h, B, Q;
    for (let f = 0; f < n; f++)
      s.push(new $Q(f, t[f * 2], t[f * 2 + 1]));
    for (let f = 0, d = A.length; f < d; f++) {
      if (Q = A[f], typeof Q == "number") {
        s.push(new l0(Q));
        continue;
      }
      switch (Q) {
        case "add":
          if (s.length < 2)
            return null;
          l = s.pop(), c = s.pop(), s.push(e1(c, l));
          break;
        case "cvr":
          if (s.length < 1)
            return null;
          break;
        case "mul":
          if (s.length < 2)
            return null;
          l = s.pop(), c = s.pop(), s.push(t1(c, l));
          break;
        case "sub":
          if (s.length < 2)
            return null;
          l = s.pop(), c = s.pop(), s.push(i1(c, l));
          break;
        case "exch":
          if (s.length < 2)
            return null;
          C = s.pop(), h = s.pop(), s.push(C, h);
          break;
        case "pop":
          if (s.length < 1)
            return null;
          s.pop();
          break;
        case "index":
          if (s.length < 1 || (c = s.pop(), c.type !== "literal") || (o = c.number, o < 0 || !Number.isInteger(o) || s.length < o))
            return null;
          if (C = s[s.length - o - 1], C.type === "literal" || C.type === "var") {
            s.push(C);
            break;
          }
          B = new uI(g++, C.min, C.max), s[s.length - o - 1] = B, s.push(B), a.push(new dI(B, C));
          break;
        case "dup":
          if (s.length < 1)
            return null;
          if (typeof A[f + 1] == "number" && A[f + 2] === "gt" && A[f + 3] === f + 7 && A[f + 4] === "jz" && A[f + 5] === "pop" && A[f + 6] === A[f + 1]) {
            c = s.pop(), s.push(s1(c, A[f + 1])), f += 6;
            break;
          }
          if (C = s.at(-1), C.type === "literal" || C.type === "var") {
            s.push(C);
            break;
          }
          B = new uI(g++, C.min, C.max), s[s.length - 1] = B, s.push(B), a.push(new dI(B, C));
          break;
        case "roll":
          if (s.length < 2 || (l = s.pop(), c = s.pop(), l.type !== "literal" || c.type !== "literal") || (I = l.number, o = c.number, o <= 0 || !Number.isInteger(o) || !Number.isInteger(I) || s.length < o))
            return null;
          if (I = (I % o + o) % o, I === 0)
            break;
          s.push(...s.splice(s.length - o, o - I));
          break;
        default:
          return null;
      }
    }
    if (s.length !== r)
      return null;
    const E = [];
    for (const f of a) {
      const d = new xI();
      f.visit(d), E.push(d.toString());
    }
    for (let f = 0, d = s.length; f < d; f++) {
      const u = s[f], x = new xI();
      u.visit(x);
      const p = i[f * 2], m = i[f * 2 + 1], D = [x.toString()];
      p > u.min && (D.unshift("Math.max(", p, ", "), D.push(")")), m < u.max && (D.unshift("Math.min(", m, ", "), D.push(")")), D.unshift("dest[destOffset + ", f, "] = "), D.push(";"), E.push(D.join(""));
    }
    return E.join(`
`);
  }
}
const n1 = ["BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "S", "B", "S", "WS", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "B", "B", "B", "S", "WS", "ON", "ON", "ET", "ET", "ET", "ON", "ON", "ON", "ON", "ON", "ES", "CS", "ES", "CS", "CS", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "CS", "ON", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "ON", "ON", "ON", "BN", "BN", "BN", "BN", "BN", "BN", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "CS", "ON", "ET", "ET", "ET", "ET", "ON", "ON", "ON", "ON", "L", "ON", "ON", "BN", "ON", "ON", "ET", "ET", "EN", "EN", "ON", "L", "ON", "ON", "ON", "EN", "L", "ON", "ON", "ON", "ON", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "ON", "L", "L", "L", "L", "L", "L", "L", "L"], r1 = ["AN", "AN", "AN", "AN", "AN", "AN", "ON", "ON", "AL", "ET", "ET", "AL", "CS", "AL", "ON", "ON", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "ET", "AN", "AN", "AL", "AL", "AL", "NSM", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "ON", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "NSM", "NSM", "ON", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "AL", "AL", "AL", "AL", "AL", "AL"];
function mI(e) {
  return (e & 1) !== 0;
}
function g1(e) {
  return (e & 1) === 0;
}
function o1(e, A, t) {
  let i, s;
  for (i = A, s = e.length; i < s; ++i)
    if (e[i] !== t)
      return i;
  return i;
}
function I1(e, A, t, i) {
  for (let s = A; s < t; ++s)
    e[s] = i;
}
function pI(e, A, t) {
  for (let i = A, s = t - 1; i < s; ++i, --s) {
    const a = e[i];
    e[i] = e[s], e[s] = a;
  }
}
function Gr(e, A, t = !1) {
  let i = "ltr";
  return t ? i = "ttb" : A || (i = "rtl"), {
    str: e,
    dir: i
  };
}
const ki = [], _A = [];
function _c(e, A = -1, t = !1) {
  let i = !0;
  const s = e.length;
  if (s === 0 || t)
    return Gr(e, i, t);
  ki.length = s, _A.length = s;
  let a = 0, n, r;
  for (n = 0; n < s; ++n) {
    ki[n] = e.charAt(n);
    const E = e.charCodeAt(n);
    let f = "L";
    E <= 255 ? f = n1[E] : 1424 <= E && E <= 1524 ? f = "R" : 1536 <= E && E <= 1791 ? (f = r1[E & 255], f || k("Bidi: invalid Unicode character " + E.toString(16))) : (1792 <= E && E <= 2220 || 64336 <= E && E <= 65023 || 65136 <= E && E <= 65279) && (f = "AL"), (f === "R" || f === "AL" || f === "AN") && a++, _A[n] = f;
  }
  if (a === 0)
    return i = !0, Gr(e, i);
  A === -1 && (a / s < 0.3 && s > 4 ? (i = !0, A = 0) : (i = !1, A = 1));
  const g = [];
  for (n = 0; n < s; ++n)
    g[n] = A;
  const o = mI(A) ? "R" : "L", I = o, c = I;
  let l = I;
  for (n = 0; n < s; ++n)
    _A[n] === "NSM" ? _A[n] = l : l = _A[n];
  l = I;
  let C;
  for (n = 0; n < s; ++n)
    C = _A[n], C === "EN" ? _A[n] = l === "AL" ? "AN" : "EN" : (C === "R" || C === "L" || C === "AL") && (l = C);
  for (n = 0; n < s; ++n)
    C = _A[n], C === "AL" && (_A[n] = "R");
  for (n = 1; n < s - 1; ++n)
    _A[n] === "ES" && _A[n - 1] === "EN" && _A[n + 1] === "EN" && (_A[n] = "EN"), _A[n] === "CS" && (_A[n - 1] === "EN" || _A[n - 1] === "AN") && _A[n + 1] === _A[n - 1] && (_A[n] = _A[n - 1]);
  for (n = 0; n < s; ++n)
    if (_A[n] === "EN") {
      for (let E = n - 1; E >= 0 && _A[E] === "ET"; --E)
        _A[E] = "EN";
      for (let E = n + 1; E < s && _A[E] === "ET"; ++E)
        _A[E] = "EN";
    }
  for (n = 0; n < s; ++n)
    C = _A[n], (C === "WS" || C === "ES" || C === "ET" || C === "CS") && (_A[n] = "ON");
  for (l = I, n = 0; n < s; ++n)
    C = _A[n], C === "EN" ? _A[n] = l === "L" ? "L" : "EN" : (C === "R" || C === "L") && (l = C);
  for (n = 0; n < s; ++n)
    if (_A[n] === "ON") {
      const E = o1(_A, n + 1, "ON");
      let f = I;
      n > 0 && (f = _A[n - 1]);
      let d = c;
      E + 1 < s && (d = _A[E + 1]), f !== "L" && (f = "R"), d !== "L" && (d = "R"), f === d && I1(_A, n, E, f), n = E - 1;
    }
  for (n = 0; n < s; ++n)
    _A[n] === "ON" && (_A[n] = o);
  for (n = 0; n < s; ++n)
    C = _A[n], g1(g[n]) ? C === "R" ? g[n] += 1 : (C === "AN" || C === "EN") && (g[n] += 2) : (C === "L" || C === "AN" || C === "EN") && (g[n] += 1);
  let h = -1, B = 99, Q;
  for (n = 0, r = g.length; n < r; ++n)
    Q = g[n], h < Q && (h = Q), B > Q && mI(Q) && (B = Q);
  for (Q = h; Q >= B; --Q) {
    let E = -1;
    for (n = 0, r = g.length; n < r; ++n)
      g[n] < Q ? E >= 0 && (pI(ki, E, n), E = -1) : E < 0 && (E = n);
    E >= 0 && pI(ki, E, g.length);
  }
  for (n = 0, r = ki.length; n < r; ++n) {
    const E = ki[n];
    (E === "<" || E === ">") && (ki[n] = "");
  }
  return Gr(ki.join(""), i);
}
const i0 = {
  style: "normal",
  weight: "normal"
}, s0 = {
  style: "normal",
  weight: "bold"
}, a0 = {
  style: "italic",
  weight: "normal"
}, n0 = {
  style: "italic",
  weight: "bold"
}, Ys = /* @__PURE__ */ new Map([["Times-Roman", {
  local: ["Times New Roman", "Times-Roman", "Times", "Liberation Serif", "Nimbus Roman", "Nimbus Roman L", "Tinos", "Thorndale", "TeX Gyre Termes", "FreeSerif", "Linux Libertine O", "Libertinus Serif", "DejaVu Serif", "Bitstream Vera Serif", "Ubuntu"],
  style: i0,
  ultimate: "serif"
}], ["Times-Bold", {
  alias: "Times-Roman",
  style: s0,
  ultimate: "serif"
}], ["Times-Italic", {
  alias: "Times-Roman",
  style: a0,
  ultimate: "serif"
}], ["Times-BoldItalic", {
  alias: "Times-Roman",
  style: n0,
  ultimate: "serif"
}], ["Helvetica", {
  local: ["Helvetica", "Helvetica Neue", "Arial", "Arial Nova", "Liberation Sans", "Arimo", "Nimbus Sans", "Nimbus Sans L", "A030", "TeX Gyre Heros", "FreeSans", "DejaVu Sans", "Albany", "Bitstream Vera Sans", "Arial Unicode MS", "Microsoft Sans Serif", "Apple Symbols", "Cantarell"],
  path: "LiberationSans-Regular.ttf",
  style: i0,
  ultimate: "sans-serif"
}], ["Helvetica-Bold", {
  alias: "Helvetica",
  path: "LiberationSans-Bold.ttf",
  style: s0,
  ultimate: "sans-serif"
}], ["Helvetica-Oblique", {
  alias: "Helvetica",
  path: "LiberationSans-Italic.ttf",
  style: a0,
  ultimate: "sans-serif"
}], ["Helvetica-BoldOblique", {
  alias: "Helvetica",
  path: "LiberationSans-BoldItalic.ttf",
  style: n0,
  ultimate: "sans-serif"
}], ["Courier", {
  local: ["Courier", "Courier New", "Liberation Mono", "Nimbus Mono", "Nimbus Mono L", "Cousine", "Cumberland", "TeX Gyre Cursor", "FreeMono", "Linux Libertine Mono O", "Libertinus Mono"],
  style: i0,
  ultimate: "monospace"
}], ["Courier-Bold", {
  alias: "Courier",
  style: s0,
  ultimate: "monospace"
}], ["Courier-Oblique", {
  alias: "Courier",
  style: a0,
  ultimate: "monospace"
}], ["Courier-BoldOblique", {
  alias: "Courier",
  style: n0,
  ultimate: "monospace"
}], ["ArialBlack", {
  local: ["Arial Black"],
  style: {
    style: "normal",
    weight: "900"
  },
  fallback: "Helvetica-Bold"
}], ["ArialBlack-Bold", {
  alias: "ArialBlack"
}], ["ArialBlack-Italic", {
  alias: "ArialBlack",
  style: {
    style: "italic",
    weight: "900"
  },
  fallback: "Helvetica-BoldOblique"
}], ["ArialBlack-BoldItalic", {
  alias: "ArialBlack-Italic"
}], ["ArialNarrow", {
  local: ["Arial Narrow", "Liberation Sans Narrow", "Helvetica Condensed", "Nimbus Sans Narrow", "TeX Gyre Heros Cn"],
  style: i0,
  fallback: "Helvetica"
}], ["ArialNarrow-Bold", {
  alias: "ArialNarrow",
  style: s0,
  fallback: "Helvetica-Bold"
}], ["ArialNarrow-Italic", {
  alias: "ArialNarrow",
  style: a0,
  fallback: "Helvetica-Oblique"
}], ["ArialNarrow-BoldItalic", {
  alias: "ArialNarrow",
  style: n0,
  fallback: "Helvetica-BoldOblique"
}], ["Calibri", {
  local: ["Calibri", "Carlito"],
  style: i0,
  fallback: "Helvetica"
}], ["Calibri-Bold", {
  alias: "Calibri",
  style: s0,
  fallback: "Helvetica-Bold"
}], ["Calibri-Italic", {
  alias: "Calibri",
  style: a0,
  fallback: "Helvetica-Oblique"
}], ["Calibri-BoldItalic", {
  alias: "Calibri",
  style: n0,
  fallback: "Helvetica-BoldOblique"
}], ["Wingdings", {
  local: ["Wingdings", "URW Dingbats"],
  style: i0
}], ["Wingdings-Regular", {
  alias: "Wingdings"
}], ["Wingdings-Bold", {
  alias: "Wingdings"
}]]), c1 = /* @__PURE__ */ new Map([["Arial-Black", "ArialBlack"]]);
function l1(e) {
  switch (e) {
    case s0:
      return "Bold";
    case a0:
      return "Italic";
    case n0:
      return "Bold Italic";
    default:
      if ((e == null ? void 0 : e.weight) === "bold")
        return "Bold";
      if ((e == null ? void 0 : e.style) === "italic")
        return "Italic";
  }
  return "";
}
function yI(e) {
  const A = /* @__PURE__ */ new Set(["thin", "extralight", "ultralight", "demilight", "semilight", "light", "book", "regular", "normal", "medium", "demibold", "semibold", "bold", "extrabold", "ultrabold", "black", "heavy", "extrablack", "ultrablack", "roman", "italic", "oblique", "ultracondensed", "extracondensed", "condensed", "semicondensed", "normal", "semiexpanded", "expanded", "extraexpanded", "ultraexpanded", "bolditalic"]);
  return e.split(/[- ,+]+/g).filter((t) => !A.has(t.toLowerCase())).join(" ");
}
function ug({
  alias: e,
  local: A,
  path: t,
  fallback: i,
  style: s,
  ultimate: a
}, n, r, g = !0, o = !0, I = "") {
  const c = {
    style: null,
    ultimate: null
  };
  if (A) {
    const l = I ? ` ${I}` : "";
    for (const C of A)
      n.push(`local(${C}${l})`);
  }
  if (e) {
    const l = Ys.get(e), C = I || l1(s);
    Object.assign(c, ug(l, n, r, g && !i, o && !t, C));
  }
  if (s && (c.style = s), a && (c.ultimate = a), g && i) {
    const l = Ys.get(i), {
      ultimate: C
    } = ug(l, n, r, g, o && !t, I);
    c.ultimate || (c.ultimate = C);
  }
  return o && t && r && n.push(`url(${r}${t})`), c;
}
function wI(e, A, t, i, s, a) {
  if (i.startsWith("InvalidPDFjsFont_"))
    return null;
  (a === "TrueType" || a === "Type1") && /^[A-Z]{6}\+/.test(i) && (i = i.slice(7)), i = wa(i);
  const n = i;
  let r = e.get(n);
  if (r)
    return r;
  let g = Ys.get(i);
  if (!g) {
    for (const [Q, E] of c1)
      if (i.startsWith(Q)) {
        i = `${E}${i.substring(Q.length)}`, g = Ys.get(i);
        break;
      }
  }
  let o = !1;
  g || (g = Ys.get(s), o = !0);
  const I = `${A.getDocId()}_s${A.createFontId()}`;
  if (!g) {
    if (!Vr(i))
      return k(`Cannot substitute the font because of its name: ${i}`), e.set(n, null), null;
    const Q = /bold/gi.test(i), E = /oblique|italic/gi.test(i), f = Q && E && n0 || Q && s0 || E && a0 || i0;
    return r = {
      css: `"${yI(i)}",${I}`,
      guessFallback: !0,
      loadedName: I,
      baseFontName: i,
      src: `local(${i})`,
      style: f
    }, e.set(n, r), r;
  }
  const c = [];
  o && Vr(i) && c.push(`local(${i})`);
  const {
    style: l,
    ultimate: C
  } = ug(g, c, t), h = C === null, B = h ? "" : `,${C}`;
  return r = {
    css: `"${yI(i)}",${I}${B}`,
    guessFallback: h,
    loadedName: I,
    baseFontName: i,
    src: c.join(","),
    style: l
  }, e.set(n, r), r;
}
const bI = 2048, C1 = 65537, DI = 128;
var St, Ea, jn, zc;
const Gi = class Gi {
  constructor(A, t) {
    jA(this, jn);
    this._imgData = A, this._isMask = t;
  }
  static get canUseImageDecoder() {
    return tA(this, "canUseImageDecoder", PA(this, Ea) ? ImageDecoder.isTypeSupported("image/bmp") : Promise.resolve(!1));
  }
  static needsToBeResized(A, t) {
    if (A <= PA(this, St) && t <= PA(this, St))
      return !1;
    const {
      MAX_DIM: i
    } = this;
    if (A > i || t > i)
      return !0;
    const s = A * t;
    if (this._hasMaxArea)
      return s > this.MAX_AREA;
    if (s < PA(this, St) ** 2)
      return !1;
    if (this._areGoodDims(A, t))
      return wt(this, St, Math.max(PA(this, St), Math.floor(Math.sqrt(A * t)))), !1;
    wt(this, St, this._guessMax(PA(this, St), i, DI, 0));
    const a = this.MAX_AREA = PA(this, St) ** 2;
    return s > a;
  }
  static get MAX_DIM() {
    return tA(this, "MAX_DIM", this._guessMax(bI, C1, 0, 1));
  }
  static get MAX_AREA() {
    return this._hasMaxArea = !0, tA(this, "MAX_AREA", this._guessMax(PA(this, St), this.MAX_DIM, DI, 0) ** 2);
  }
  static set MAX_AREA(A) {
    A >= 0 && (this._hasMaxArea = !0, tA(this, "MAX_AREA", A));
  }
  static setOptions({
    canvasMaxAreaInBytes: A = -1,
    isImageDecoderSupported: t = !1
  }) {
    this._hasMaxArea || (this.MAX_AREA = A >> 2), wt(this, Ea, t);
  }
  static _areGoodDims(A, t) {
    try {
      const i = new OffscreenCanvas(A, t), s = i.getContext("2d");
      s.fillRect(0, 0, 1, 1);
      const a = s.getImageData(0, 0, 1, 1).data[3];
      return i.width = i.height = 1, a !== 0;
    } catch {
      return !1;
    }
  }
  static _guessMax(A, t, i, s) {
    for (; A + i + 1 < t; ) {
      const a = Math.floor((A + t) / 2), n = s || a;
      this._areGoodDims(a, n) ? A = a : t = a;
    }
    return A;
  }
  static async createImage(A, t = !1) {
    return new Gi(A, t)._createImage();
  }
  async _createImage() {
    const {
      _imgData: A
    } = this, {
      width: t,
      height: i
    } = A;
    if (t * i * 4 > Zr) {
      const f = BA(this, jn, zc).call(this);
      if (f)
        return f;
    }
    const s = this._encodeBMP();
    let a, n;
    await Gi.canUseImageDecoder ? (a = new ImageDecoder({
      data: s,
      type: "image/bmp",
      preferAnimation: !1,
      transfer: [s.buffer]
    }), n = a.decode().catch((f) => (k(`BMP image decoding failed: ${f}`), createImageBitmap(new Blob([this._encodeBMP().buffer], {
      type: "image/bmp"
    })))).finally(() => {
      a.close();
    })) : n = createImageBitmap(new Blob([s.buffer], {
      type: "image/bmp"
    }));
    const {
      MAX_AREA: r,
      MAX_DIM: g
    } = Gi, o = Math.max(t / g, i / g, Math.sqrt(t * i / r)), I = Math.max(o, 2), c = Math.round(10 * (o + 1.25)) / 10 / I, l = Math.floor(Math.log2(c)), C = new Array(l + 2).fill(2);
    C[0] = I, C.splice(-1, 1, c / (1 << l));
    let h = t, B = i;
    const Q = await n;
    let E = Q.image || Q;
    for (const f of C) {
      const d = h, u = B;
      h = Math.floor(h / f) - 1, B = Math.floor(B / f) - 1;
      const x = new OffscreenCanvas(h, B);
      x.getContext("2d").drawImage(E, 0, 0, d, u, 0, 0, h, B), E.close(), E = x.transferToImageBitmap();
    }
    return A.data = null, A.bitmap = E, A.width = h, A.height = B, A;
  }
  _encodeBMP() {
    const {
      width: A,
      height: t,
      kind: i
    } = this._imgData;
    let s = this._imgData.data, a, n = new Uint8Array(0), r = n, g = 0;
    switch (i) {
      case Ue.GRAYSCALE_1BPP: {
        a = 1, n = new Uint8Array(this._isMask ? [255, 255, 255, 255, 0, 0, 0, 0] : [0, 0, 0, 0, 255, 255, 255, 255]);
        const B = A + 7 >> 3, Q = B + 3 & -4;
        if (B !== Q) {
          const E = new Uint8Array(Q * t);
          let f = 0;
          for (let d = 0, u = t * B; d < u; d += B, f += Q)
            E.set(s.subarray(d, d + B), f);
          s = E;
        }
        break;
      }
      case Ue.RGB_24BPP: {
        if (a = 24, A & 3) {
          const B = 3 * A, Q = B + 3 & -4, E = Q - B, f = new Uint8Array(Q * t);
          let d = 0;
          for (let u = 0, x = t * B; u < x; u += B) {
            const p = s.subarray(u, u + B);
            for (let m = 0; m < B; m += 3)
              f[d++] = p[m + 2], f[d++] = p[m + 1], f[d++] = p[m];
            d += E;
          }
          s = f;
        } else
          for (let B = 0, Q = s.length; B < Q; B += 3) {
            const E = s[B];
            s[B] = s[B + 2], s[B + 2] = E;
          }
        break;
      }
      case Ue.RGBA_32BPP:
        a = 32, g = 3, r = new Uint8Array(68);
        const h = new DataView(r.buffer);
        ht.isLittleEndian ? (h.setUint32(0, 255, !0), h.setUint32(4, 65280, !0), h.setUint32(8, 16711680, !0), h.setUint32(12, 4278190080, !0)) : (h.setUint32(0, 4278190080, !0), h.setUint32(4, 16711680, !0), h.setUint32(8, 65280, !0), h.setUint32(12, 255, !0));
        break;
      default:
        throw new Error("invalid format");
    }
    let o = 0;
    const I = 40 + r.length, c = 14 + I + n.length + s.length, l = new Uint8Array(c), C = new DataView(l.buffer);
    return C.setUint16(o, 19778, !0), o += 2, C.setUint32(o, c, !0), o += 4, C.setUint32(o, 0, !0), o += 4, C.setUint32(o, 14 + I + n.length, !0), o += 4, C.setUint32(o, I, !0), o += 4, C.setInt32(o, A, !0), o += 4, C.setInt32(o, -t, !0), o += 4, C.setUint16(o, 1, !0), o += 2, C.setUint16(o, a, !0), o += 2, C.setUint32(o, g, !0), o += 4, C.setUint32(o, 0, !0), o += 4, C.setInt32(o, 0, !0), o += 4, C.setInt32(o, 0, !0), o += 4, C.setUint32(o, n.length / 4, !0), o += 4, C.setUint32(o, 0, !0), o += 4, l.set(r, o), o += r.length, l.set(n, o), o += n.length, l.set(s, o), l;
  }
};
St = new WeakMap(), Ea = new WeakMap(), jn = new WeakSet(), zc = function() {
  const {
    _imgData: A
  } = this, {
    data: t,
    width: i,
    height: s,
    kind: a
  } = A, n = i * s * 4, r = Math.ceil(Math.log2(n / Zr)), g = i >> r, o = s >> r;
  let I, c = s;
  try {
    I = new Uint8Array(n);
  } catch {
    let u = Math.floor(Math.log2(n + 1));
    for (; ; )
      try {
        I = new Uint8Array(2 ** u - 1);
        break;
      } catch {
        u -= 1;
      }
    c = Math.floor((2 ** u - 1) / (i * 4));
    const x = i * c * 4;
    x < I.length && (I = new Uint8Array(x));
  }
  const l = new Uint32Array(I.buffer), C = new Uint32Array(g * o);
  let h = 0, B = 0;
  const Q = Math.ceil(s / c), E = s % c === 0 ? s : s % c;
  for (let u = 0; u < Q; u++) {
    const x = u < Q - 1 ? c : E;
    ({
      srcPos: h
    } = Fc({
      kind: a,
      src: t,
      dest: l,
      width: i,
      height: x,
      inverseDecode: this._isMask,
      srcPos: h
    }));
    for (let p = 0, m = x >> r; p < m; p++) {
      const D = l.subarray((p << r) * i);
      for (let S = 0; S < g; S++)
        C[B++] = D[S << r];
    }
  }
  if (Gi.needsToBeResized(g, o))
    return A.data = C, A.width = g, A.height = o, A.kind = Ue.RGBA_32BPP, null;
  const f = new OffscreenCanvas(g, o);
  return f.getContext("2d", {
    willReadFrequently: !0
  }).putImageData(new ImageData(new Uint8ClampedArray(C.buffer), g, o), 0, 0), A.data = null, A.bitmap = f.transferToImageBitmap(), A.width = g, A.height = o, A;
}, jA(Gi, St, bI), jA(Gi, Ea, ht.isImageDecoderSupported);
let ei = Gi;
const kI = 3285377520, Dt = 4294901760, $t = 65535;
class h1 {
  constructor(A) {
    this.h1 = A ? A & 4294967295 : kI, this.h2 = A ? A & 4294967295 : kI;
  }
  update(A) {
    let t, i;
    if (typeof A == "string") {
      t = new Uint8Array(A.length * 2), i = 0;
      for (let B = 0, Q = A.length; B < Q; B++) {
        const E = A.charCodeAt(B);
        E <= 255 ? t[i++] = E : (t[i++] = E >>> 8, t[i++] = E & 255);
      }
    } else if (ArrayBuffer.isView(A))
      t = A.slice(), i = t.byteLength;
    else
      throw new Error("Invalid data format, must be a string or TypedArray.");
    const s = i >> 2, a = i - s * 4, n = new Uint32Array(t.buffer, 0, s);
    let r = 0, g = 0, o = this.h1, I = this.h2;
    const c = 3432918353, l = 461845907, C = c & $t, h = l & $t;
    for (let B = 0; B < s; B++)
      B & 1 ? (r = n[B], r = r * c & Dt | r * C & $t, r = r << 15 | r >>> 17, r = r * l & Dt | r * h & $t, o ^= r, o = o << 13 | o >>> 19, o = o * 5 + 3864292196) : (g = n[B], g = g * c & Dt | g * C & $t, g = g << 15 | g >>> 17, g = g * l & Dt | g * h & $t, I ^= g, I = I << 13 | I >>> 19, I = I * 5 + 3864292196);
    switch (r = 0, a) {
      case 3:
        r ^= t[s * 4 + 2] << 16;
      case 2:
        r ^= t[s * 4 + 1] << 8;
      case 1:
        r ^= t[s * 4], r = r * c & Dt | r * C & $t, r = r << 15 | r >>> 17, r = r * l & Dt | r * h & $t, s & 1 ? o ^= r : I ^= r;
    }
    this.h1 = o, this.h2 = I;
  }
  hexdigest() {
    let A = this.h1, t = this.h2;
    return A ^= t >>> 1, A = A * 3981806797 & Dt | A * 36045 & $t, t = t * 4283543511 & Dt | ((t << 16 | A >>> 16) * 2950163797 & Dt) >>> 16, A ^= t >>> 1, A = A * 444984403 & Dt | A * 60499 & $t, t = t * 3301882366 & Dt | ((t << 16 | A >>> 16) * 3120437893 & Dt) >>> 16, A ^= t >>> 1, (A >>> 0).toString(16).padStart(8, "0") + (t >>> 0).toString(16).padStart(8, "0");
  }
}
function sr(e, A, t, i, s) {
  let a = e;
  for (let n = 0, r = A.length - 1; n < r; n++) {
    const g = A[n];
    a = a[g] || (a[g] = []);
  }
  a[A.at(-1)] = {
    checkFn: t,
    iterateFn: i,
    processFn: s
  };
}
const as = [];
sr(as, [w.save, w.transform, w.paintInlineImageXObject, w.restore], null, function(A, t) {
  const i = A.fnArray, s = A.iCurr - 3, a = (t - s) % 4;
  switch (a) {
    case 0:
      return i[t] === w.save;
    case 1:
      return i[t] === w.transform;
    case 2:
      return i[t] === w.paintInlineImageXObject;
    case 3:
      return i[t] === w.restore;
  }
  throw new Error(`iterateInlineImageGroup - invalid pos: ${a}`);
}, function(A, t) {
  const r = A.fnArray, g = A.argsArray, o = A.iCurr, I = o - 3, c = o - 2, l = o - 1, C = Math.min(Math.floor((t - I) / 4), 200);
  if (C < 10)
    return t - (t - I) % 4;
  let h = 0;
  const B = [];
  let Q = 0, E = 1, f = 1;
  for (let D = 0; D < C; D++) {
    const S = g[c + (D << 2)], y = g[l + (D << 2)][0];
    E + y.width > 1e3 && (h = Math.max(h, E), f += Q + 2 * 1, E = 0, Q = 0), B.push({
      transform: S,
      x: E,
      y: f,
      w: y.width,
      h: y.height
    }), E += y.width + 2 * 1, Q = Math.max(Q, y.height);
  }
  const d = Math.max(h, E) + 1, u = f + Q + 1, x = new Uint8Array(d * u * 4), p = d << 2;
  for (let D = 0; D < C; D++) {
    const S = g[l + (D << 2)][0].data, y = B[D].w << 2;
    let H = 0, G = B[D].x + B[D].y * d << 2;
    x.set(S.subarray(0, y), G - p);
    for (let v = 0, X = B[D].h; v < X; v++)
      x.set(S.subarray(H, H + y), G), H += y, G += p;
    for (x.set(S.subarray(H - y, H), G); G >= 0; )
      S[G - 4] = S[G], S[G - 3] = S[G + 1], S[G - 2] = S[G + 2], S[G - 1] = S[G + 3], S[G + y] = S[G + y - 4], S[G + y + 1] = S[G + y - 3], S[G + y + 2] = S[G + y - 2], S[G + y + 3] = S[G + y - 1], G -= p;
  }
  const m = {
    width: d,
    height: u
  };
  if (A.isOffscreenCanvasSupported) {
    const D = new OffscreenCanvas(d, u);
    D.getContext("2d").putImageData(new ImageData(new Uint8ClampedArray(x.buffer), d, u), 0, 0), m.bitmap = D.transferToImageBitmap(), m.data = null;
  } else
    m.kind = Ue.RGBA_32BPP, m.data = x;
  return r.splice(I, C * 4, w.paintInlineImageXObjectGroup), g.splice(I, C * 4, [m, B]), I + 1;
});
sr(as, [w.save, w.transform, w.paintImageMaskXObject, w.restore], null, function(A, t) {
  const i = A.fnArray, s = A.iCurr - 3, a = (t - s) % 4;
  switch (a) {
    case 0:
      return i[t] === w.save;
    case 1:
      return i[t] === w.transform;
    case 2:
      return i[t] === w.paintImageMaskXObject;
    case 3:
      return i[t] === w.restore;
  }
  throw new Error(`iterateImageMaskGroup - invalid pos: ${a}`);
}, function(A, t) {
  const n = A.fnArray, r = A.argsArray, g = A.iCurr, o = g - 3, I = g - 2, c = g - 1;
  let l = Math.floor((t - o) / 4);
  if (l < 10)
    return t - (t - o) % 4;
  let C = !1, h, B;
  const Q = r[c][0], E = r[I][0], f = r[I][1], d = r[I][2], u = r[I][3];
  if (f === d) {
    C = !0, h = I + 4;
    let x = c + 4;
    for (let p = 1; p < l; p++, h += 4, x += 4)
      if (B = r[h], r[x][0] !== Q || B[0] !== E || B[1] !== f || B[2] !== d || B[3] !== u) {
        p < 10 ? C = !1 : l = p;
        break;
      }
  }
  if (C) {
    l = Math.min(l, 1e3);
    const x = new Float32Array(l * 2);
    h = I;
    for (let p = 0; p < l; p++, h += 4)
      B = r[h], x[p << 1] = B[4], x[(p << 1) + 1] = B[5];
    n.splice(o, l * 4, w.paintImageMaskXObjectRepeat), r.splice(o, l * 4, [Q, E, f, d, u, x]);
  } else {
    l = Math.min(l, 100);
    const x = [];
    for (let p = 0; p < l; p++) {
      B = r[I + (p << 2)];
      const m = r[c + (p << 2)][0];
      x.push({
        data: m.data,
        width: m.width,
        height: m.height,
        interpolate: m.interpolate,
        count: m.count,
        transform: B
      });
    }
    n.splice(o, l * 4, w.paintImageMaskXObjectGroup), r.splice(o, l * 4, [x]);
  }
  return o + 1;
});
sr(as, [w.save, w.transform, w.paintImageXObject, w.restore], function(e) {
  const A = e.argsArray, t = e.iCurr - 2;
  return A[t][1] === 0 && A[t][2] === 0;
}, function(A, t) {
  const i = A.fnArray, s = A.argsArray, a = A.iCurr - 3, n = (t - a) % 4;
  switch (n) {
    case 0:
      return i[t] === w.save;
    case 1:
      if (i[t] !== w.transform)
        return !1;
      const r = A.iCurr - 2, g = s[r][0], o = s[r][3];
      return !(s[t][0] !== g || s[t][1] !== 0 || s[t][2] !== 0 || s[t][3] !== o);
    case 2:
      if (i[t] !== w.paintImageXObject)
        return !1;
      const I = A.iCurr - 1, c = s[I][0];
      return s[t][0] === c;
    case 3:
      return i[t] === w.restore;
  }
  throw new Error(`iterateImageGroup - invalid pos: ${n}`);
}, function(e, A) {
  const s = e.fnArray, a = e.argsArray, n = e.iCurr, r = n - 3, g = n - 2, o = n - 1, I = a[o][0], c = a[g][0], l = a[g][3], C = Math.min(Math.floor((A - r) / 4), 1e3);
  if (C < 3)
    return A - (A - r) % 4;
  const h = new Float32Array(C * 2);
  let B = g;
  for (let E = 0; E < C; E++, B += 4) {
    const f = a[B];
    h[E << 1] = f[4], h[(E << 1) + 1] = f[5];
  }
  const Q = [I, c, l, h];
  return s.splice(r, C * 4, w.paintImageXObjectRepeat), a.splice(r, C * 4, Q), r + 1;
});
sr(as, [w.beginText, w.setFont, w.setTextMatrix, w.showText, w.endText], null, function(A, t) {
  const i = A.fnArray, s = A.argsArray, a = A.iCurr - 4, n = (t - a) % 5;
  switch (n) {
    case 0:
      return i[t] === w.beginText;
    case 1:
      return i[t] === w.setFont;
    case 2:
      return i[t] === w.setTextMatrix;
    case 3:
      if (i[t] !== w.showText)
        return !1;
      const r = A.iCurr - 3, g = s[r][0], o = s[r][1];
      return !(s[t][0] !== g || s[t][1] !== o);
    case 4:
      return i[t] === w.endText;
  }
  throw new Error(`iterateShowTextGroup - invalid pos: ${n}`);
}, function(e, A) {
  const s = e.fnArray, a = e.argsArray, n = e.iCurr, r = n - 4, g = n - 3, o = n - 2, I = n - 1, c = n, l = a[g][0], C = a[g][1];
  let h = Math.min(Math.floor((A - r) / 5), 1e3);
  if (h < 3)
    return A - (A - r) % 5;
  let B = r;
  r >= 4 && s[r - 4] === s[g] && s[r - 3] === s[o] && s[r - 2] === s[I] && s[r - 1] === s[c] && a[r - 4][0] === l && a[r - 4][1] === C && (h++, B -= 5);
  let Q = B + 4;
  for (let E = 1; E < h; E++)
    s.splice(Q, 3), a.splice(Q, 3), Q += 2;
  return Q + 1;
});
class $c {
  constructor(A) {
    this.queue = A;
  }
  _optimize() {
  }
  push(A, t) {
    this.queue.fnArray.push(A), this.queue.argsArray.push(t), this._optimize();
  }
  flush() {
  }
  reset() {
  }
}
class B1 extends $c {
  constructor(A) {
    super(A), this.state = null, this.context = {
      iCurr: 0,
      fnArray: A.fnArray,
      argsArray: A.argsArray,
      isOffscreenCanvasSupported: !1
    }, this.match = null, this.lastProcessed = 0;
  }
  set isOffscreenCanvasSupported(A) {
    this.context.isOffscreenCanvasSupported = A;
  }
  _optimize() {
    const A = this.queue.fnArray;
    let t = this.lastProcessed, i = A.length, s = this.state, a = this.match;
    if (!s && !a && t + 1 === i && !as[A[t]]) {
      this.lastProcessed = i;
      return;
    }
    const n = this.context;
    for (; t < i; ) {
      if (a) {
        if ((0, a.iterateFn)(n, t)) {
          t++;
          continue;
        }
        if (t = (0, a.processFn)(n, t + 1), i = A.length, a = null, s = null, t >= i)
          break;
      }
      if (s = (s || as)[A[t]], !s || Array.isArray(s)) {
        t++;
        continue;
      }
      if (n.iCurr = t, t++, s.checkFn && !(0, s.checkFn)(n)) {
        s = null;
        continue;
      }
      a = s, s = null;
    }
    this.state = s, this.match = a, this.lastProcessed = t;
  }
  flush() {
    for (; this.match; ) {
      const A = this.queue.fnArray.length;
      this.lastProcessed = (0, this.match.processFn)(this.context, A), this.match = null, this.state = null, this._optimize();
    }
  }
  reset() {
    this.state = null, this.match = null, this.lastProcessed = 0;
  }
}
const Ui = class Ui {
  constructor(A = 0, t) {
    this._streamSink = t, this.fnArray = [], this.argsArray = [], this.optimizer = t && !(A & st.OPLIST) ? new B1(this) : new $c(this), this.dependencies = /* @__PURE__ */ new Set(), this._totalLength = 0, this.weight = 0, this._resolved = t ? null : Promise.resolve();
  }
  set isOffscreenCanvasSupported(A) {
    this.optimizer.isOffscreenCanvasSupported = A;
  }
  get length() {
    return this.argsArray.length;
  }
  get ready() {
    return this._resolved || this._streamSink.ready;
  }
  get totalLength() {
    return this._totalLength + this.length;
  }
  addOp(A, t) {
    this.optimizer.push(A, t), this.weight++, this._streamSink && (this.weight >= Ui.CHUNK_SIZE ? this.flush() : this.weight >= Ui.CHUNK_SIZE_ABOUT && (A === w.restore || A === w.endText) && this.flush());
  }
  addImageOps(A, t, i) {
    i !== void 0 && this.addOp(w.beginMarkedContentProps, ["OC", i]), this.addOp(A, t), i !== void 0 && this.addOp(w.endMarkedContent, []);
  }
  addDependency(A) {
    this.dependencies.has(A) || (this.dependencies.add(A), this.addOp(w.dependency, [A]));
  }
  addDependencies(A) {
    for (const t of A)
      this.addDependency(t);
  }
  addOpList(A) {
    if (!(A instanceof Ui)) {
      k('addOpList - ignoring invalid "opList" parameter.');
      return;
    }
    for (const t of A.dependencies)
      this.dependencies.add(t);
    for (let t = 0, i = A.length; t < i; t++)
      this.addOp(A.fnArray[t], A.argsArray[t]);
  }
  getIR() {
    return {
      fnArray: this.fnArray,
      argsArray: this.argsArray,
      length: this.length
    };
  }
  get _transfers() {
    var a;
    const A = [], {
      fnArray: t,
      argsArray: i,
      length: s
    } = this;
    for (let n = 0; n < s; n++)
      switch (t[n]) {
        case w.paintInlineImageXObject:
        case w.paintInlineImageXObjectGroup:
        case w.paintImageMaskXObject:
          const r = i[n][0];
          !r.cached && ((a = r.data) == null ? void 0 : a.buffer) instanceof ArrayBuffer && A.push(r.data.buffer);
          break;
      }
    return A;
  }
  flush(A = !1, t = null) {
    this.optimizer.flush();
    const i = this.length;
    this._totalLength += i, this._streamSink.enqueue({
      fnArray: this.fnArray,
      argsArray: this.argsArray,
      lastChunk: A,
      separateAnnots: t,
      length: i
    }, 1, this._transfers), this.dependencies.clear(), this.fnArray.length = 0, this.argsArray.length = 0, this.weight = 0, this.optimizer.reset();
  }
};
et(Ui, "CHUNK_SIZE", 1e3), et(Ui, "CHUNK_SIZE_ABOUT", Ui.CHUNK_SIZE - 5);
let Ct = Ui;
function Q1(e, A, t, i) {
  return e = A + e * t, e < 0 ? e = 0 : e > i && (e = i), e;
}
function SI(e, A, t, i, s, a) {
  const n = s * a;
  let r;
  A <= 8 ? r = new Uint8Array(n) : A <= 16 ? r = new Uint16Array(n) : r = new Uint32Array(n);
  const g = t / s, o = i / a;
  let I, c, l, C = 0, h;
  const B = new Uint16Array(s), Q = t;
  for (I = 0; I < s; I++)
    B[I] = Math.floor(I * g);
  for (I = 0; I < a; I++)
    for (l = Math.floor(I * o) * Q, c = 0; c < s; c++)
      h = l + B[c], r[C++] = e[h];
  return r;
}
var fa, dg;
const v0 = class v0 {
  constructor({
    xref: A,
    res: t,
    image: i,
    isInline: s = !1,
    smask: a = null,
    mask: n = null,
    isMask: r = !1,
    pdfFunctionFactory: g,
    localColorSpaceCache: o
  }) {
    jA(this, fa);
    var Q, E;
    this.image = i;
    const I = i.dict, c = I.get("F", "Filter");
    let l;
    if (c instanceof L)
      l = c.name;
    else if (Array.isArray(c)) {
      const f = A.fetchIfRef(c[0]);
      f instanceof L && (l = f.name);
    }
    switch (l) {
      case "JPXDecode":
        ({
          width: i.width,
          height: i.height,
          componentsCount: i.numComps,
          bitsPerComponent: i.bitsPerComponent
        } = tr.parseImageProperties(i.stream)), i.stream.reset(), this.jpxDecoderOptions = {
          numComponents: 0,
          isIndexedColormap: !1,
          smaskInData: I.has("SMaskInData")
        };
        break;
      case "JBIG2Decode":
        i.bitsPerComponent = 1, i.numComps = 1;
        break;
    }
    let C = I.get("W", "Width"), h = I.get("H", "Height");
    if (Number.isInteger(i.width) && i.width > 0 && Number.isInteger(i.height) && i.height > 0 && (i.width !== C || i.height !== h) && (k("PDFImage - using the Width/Height of the image data, rather than the image dictionary."), C = i.width, h = i.height), C < 1 || h < 1)
      throw new T(`Invalid image width: ${C} or height: ${h}`);
    this.width = C, this.height = h, this.interpolate = I.get("I", "Interpolate"), this.imageMask = I.get("IM", "ImageMask") || !1, this.matte = I.get("Matte") || !1;
    let B = i.bitsPerComponent;
    if (!B && (B = I.get("BPC", "BitsPerComponent"), !B))
      if (this.imageMask)
        B = 1;
      else
        throw new T(`Bits per component missing in image: ${this.imageMask}`);
    if (this.bpc = B, !this.imageMask) {
      let f = I.getRaw("CS") || I.getRaw("ColorSpace");
      const d = !!f;
      if (d)
        (Q = this.jpxDecoderOptions) != null && Q.smaskInData && (f = L.get("DeviceRGBA"));
      else if (this.jpxDecoderOptions)
        f = L.get("DeviceRGBA");
      else
        switch (i.numComps) {
          case 1:
            f = L.get("DeviceGray");
            break;
          case 3:
            f = L.get("DeviceRGB");
            break;
          case 4:
            f = L.get("DeviceCMYK");
            break;
          default:
            throw new Error(`Images with ${i.numComps} color components not supported.`);
        }
      this.colorSpace = LA.parse({
        cs: f,
        xref: A,
        resources: s ? t : null,
        pdfFunctionFactory: g,
        localColorSpaceCache: o
      }), this.numComps = this.colorSpace.numComps, this.jpxDecoderOptions && (this.jpxDecoderOptions.numComponents = d ? this.numComp : 0, this.jpxDecoderOptions.isIndexedColormap = this.colorSpace.name === "Indexed");
    }
    if (this.decode = I.getArray("D", "Decode"), this.needsDecode = !1, this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode, B) || r && !LA.isDefaultDecode(this.decode, 1))) {
      this.needsDecode = !0;
      const f = (1 << B) - 1;
      this.decodeCoefficients = [], this.decodeAddends = [];
      const d = ((E = this.colorSpace) == null ? void 0 : E.name) === "Indexed";
      for (let u = 0, x = 0; u < this.decode.length; u += 2, ++x) {
        const p = this.decode[u], m = this.decode[u + 1];
        this.decodeCoefficients[x] = d ? (m - p) / f : m - p, this.decodeAddends[x] = d ? p : f * p;
      }
    }
    a ? this.smask = new v0({
      xref: A,
      res: t,
      image: a,
      isInline: s,
      pdfFunctionFactory: g,
      localColorSpaceCache: o
    }) : n && (n instanceof JA ? n.dict.get("IM", "ImageMask") ? this.mask = new v0({
      xref: A,
      res: t,
      image: n,
      isInline: s,
      isMask: !0,
      pdfFunctionFactory: g,
      localColorSpaceCache: o
    }) : k("Ignoring /Mask in image without /ImageMask.") : this.mask = n);
  }
  static async buildImage({
    xref: A,
    res: t,
    image: i,
    isInline: s = !1,
    pdfFunctionFactory: a,
    localColorSpaceCache: n
  }) {
    const r = i;
    let g = null, o = null;
    const I = i.dict.get("SMask"), c = i.dict.get("Mask");
    return I ? I instanceof JA ? g = I : k("Unsupported /SMask format.") : c && (c instanceof JA || Array.isArray(c) ? o = c : k("Unsupported /Mask format.")), new v0({
      xref: A,
      res: t,
      image: r,
      isInline: s,
      smask: g,
      mask: o,
      pdfFunctionFactory: a,
      localColorSpaceCache: n
    });
  }
  static createRawMask({
    imgArray: A,
    width: t,
    height: i,
    imageIsFromDecodeStream: s,
    inverseDecode: a,
    interpolate: n
  }) {
    const r = (t + 7 >> 3) * i, g = A.byteLength, o = r === g;
    let I, c;
    if (s && (!a || o) ? I = A : a ? (I = new Uint8Array(r), I.set(A), I.fill(255, g)) : I = new Uint8Array(A), a)
      for (c = 0; c < g; c++)
        I[c] ^= 255;
    return {
      data: I,
      width: t,
      height: i,
      interpolate: n
    };
  }
  static async createMask({
    imgArray: A,
    width: t,
    height: i,
    imageIsFromDecodeStream: s,
    inverseDecode: a,
    interpolate: n,
    isOffscreenCanvasSupported: r = !1
  }) {
    const g = t === 1 && i === 1 && a === (A.length === 0 || !!(A[0] & 128));
    if (g)
      return {
        isSingleOpaquePixel: g
      };
    if (r) {
      if (ei.needsToBeResized(t, i)) {
        const C = new Uint8ClampedArray(t * i * 4);
        return ng({
          src: A,
          dest: C,
          width: t,
          height: i,
          nonBlackColor: 0,
          inverseDecode: a
        }), ei.createImage({
          kind: Ue.RGBA_32BPP,
          data: C,
          width: t,
          height: i,
          interpolate: n
        });
      }
      const o = new OffscreenCanvas(t, i), I = o.getContext("2d"), c = I.createImageData(t, i);
      ng({
        src: A,
        dest: c.data,
        width: t,
        height: i,
        nonBlackColor: 0,
        inverseDecode: a
      }), I.putImageData(c, 0, 0);
      const l = o.transferToImageBitmap();
      return {
        data: null,
        width: t,
        height: i,
        interpolate: n,
        bitmap: l
      };
    }
    return this.createRawMask({
      imgArray: A,
      width: t,
      height: i,
      inverseDecode: a,
      imageIsFromDecodeStream: s,
      interpolate: n
    });
  }
  get drawWidth() {
    var A, t;
    return Math.max(this.width, ((A = this.smask) == null ? void 0 : A.width) || 0, ((t = this.mask) == null ? void 0 : t.width) || 0);
  }
  get drawHeight() {
    var A, t;
    return Math.max(this.height, ((A = this.smask) == null ? void 0 : A.height) || 0, ((t = this.mask) == null ? void 0 : t.height) || 0);
  }
  decodeBuffer(A) {
    const t = this.bpc, i = this.numComps, s = this.decodeAddends, a = this.decodeCoefficients, n = (1 << t) - 1;
    let r, g;
    if (t === 1) {
      for (r = 0, g = A.length; r < g; r++)
        A[r] = +!A[r];
      return;
    }
    let o = 0;
    for (r = 0, g = this.width * this.height; r < g; r++)
      for (let I = 0; I < i; I++)
        A[o] = Q1(A[o], s[I], a[I], n), o++;
  }
  getComponents(A) {
    const t = this.bpc;
    if (t === 8)
      return A;
    const i = this.width, s = this.height, a = this.numComps, n = i * s * a;
    let r = 0, g;
    t <= 8 ? g = new Uint8Array(n) : t <= 16 ? g = new Uint16Array(n) : g = new Uint32Array(n);
    const o = i * a, I = (1 << t) - 1;
    let c = 0, l, C;
    if (t === 1) {
      let h, B, Q;
      for (let E = 0; E < s; E++) {
        for (B = c + (o & -8), Q = c + o; c < B; )
          C = A[r++], g[c] = C >> 7 & 1, g[c + 1] = C >> 6 & 1, g[c + 2] = C >> 5 & 1, g[c + 3] = C >> 4 & 1, g[c + 4] = C >> 3 & 1, g[c + 5] = C >> 2 & 1, g[c + 6] = C >> 1 & 1, g[c + 7] = C & 1, c += 8;
        if (c < Q)
          for (C = A[r++], h = 128; c < Q; )
            g[c++] = +!!(C & h), h >>= 1;
      }
    } else {
      let h = 0;
      for (C = 0, c = 0, l = n; c < l; ++c) {
        for (c % o === 0 && (C = 0, h = 0); h < t; )
          C = C << 8 | A[r++], h += 8;
        const B = h - t;
        let Q = C >> B;
        Q < 0 ? Q = 0 : Q > I && (Q = I), g[c] = Q, C &= (1 << B) - 1, h = B;
      }
    }
    return g;
  }
  async fillOpacity(A, t, i, s, a) {
    const n = this.smask, r = this.mask;
    let g, o, I, c, l, C;
    if (n)
      o = n.width, I = n.height, g = new Uint8ClampedArray(o * I), await n.fillGrayBuffer(g), (o !== t || I !== i) && (g = SI(g, n.bpc, o, I, t, i));
    else if (r)
      if (r instanceof v0) {
        for (o = r.width, I = r.height, g = new Uint8ClampedArray(o * I), r.numComps = 1, await r.fillGrayBuffer(g), c = 0, l = o * I; c < l; ++c)
          g[c] = 255 - g[c];
        (o !== t || I !== i) && (g = SI(g, r.bpc, o, I, t, i));
      } else if (Array.isArray(r)) {
        g = new Uint8ClampedArray(t * i);
        const h = this.numComps;
        for (c = 0, l = t * i; c < l; ++c) {
          let B = 0;
          const Q = c * h;
          for (C = 0; C < h; ++C) {
            const E = a[Q + C], f = C * 2;
            if (E < r[f] || E > r[f + 1]) {
              B = 255;
              break;
            }
          }
          g[c] = B;
        }
      } else
        throw new T("Unknown mask format.");
    if (g)
      for (c = 0, C = 3, l = t * s; c < l; ++c, C += 4)
        A[C] = g[c];
    else
      for (c = 0, C = 3, l = t * s; c < l; ++c, C += 4)
        A[C] = 255;
  }
  undoPreblend(A, t, i) {
    var I;
    const s = (I = this.smask) == null ? void 0 : I.matte;
    if (!s)
      return;
    const a = this.colorSpace.getRgb(s, 0), n = a[0], r = a[1], g = a[2], o = t * i * 4;
    for (let c = 0; c < o; c += 4) {
      const l = A[c + 3];
      if (l === 0) {
        A[c] = 255, A[c + 1] = 255, A[c + 2] = 255;
        continue;
      }
      const C = 255 / l;
      A[c] = (A[c] - n) * C + n, A[c + 1] = (A[c + 1] - r) * C + r, A[c + 2] = (A[c + 2] - g) * C + g;
    }
  }
  async createImageData(A = !1, t = !1) {
    const i = this.drawWidth, s = this.drawHeight, a = {
      width: i,
      height: s,
      interpolate: this.interpolate,
      kind: 0,
      data: null
    }, n = this.numComps, r = this.width, g = this.height, o = this.bpc, I = r * n * o + 7 >> 3, c = t && ei.needsToBeResized(i, s);
    if (!this.smask && !this.mask && this.colorSpace.name === "DeviceRGBA") {
      a.kind = Ue.RGBA_32BPP;
      const x = a.data = await this.getImageBytes(g * r * 4, {});
      return t ? c ? ei.createImage(a, !1) : this.createBitmap(Ue.RGBA_32BPP, i, s, x) : a;
    }
    if (!A) {
      let x;
      if (this.colorSpace.name === "DeviceGray" && o === 1 ? x = Ue.GRAYSCALE_1BPP : this.colorSpace.name === "DeviceRGB" && o === 8 && !this.needsDecode && (x = Ue.RGB_24BPP), x && !this.smask && !this.mask && i === r && s === g) {
        const p = await BA(this, fa, dg).call(this, r, g);
        if (p)
          return p;
        const m = await this.getImageBytes(g * I, {});
        if (t)
          return c ? ei.createImage({
            data: m,
            kind: x,
            width: i,
            height: s,
            interpolate: this.interpolate
          }, this.needsDecode) : this.createBitmap(x, r, g, m);
        if (a.kind = x, a.data = m, this.needsDecode) {
          nt(x === Ue.GRAYSCALE_1BPP, "PDFImage.createImageData: The image must be grayscale.");
          const D = a.data;
          for (let S = 0, y = D.length; S < y; S++)
            D[S] ^= 255;
        }
        return a;
      }
      if (this.image instanceof is && !this.smask && !this.mask && !this.needsDecode) {
        let p = g * I;
        if (t && !c) {
          let m = !1;
          switch (this.colorSpace.name) {
            case "DeviceGray":
              p *= 4, m = !0;
              break;
            case "DeviceRGB":
              p = p / 3 * 4, m = !0;
              break;
            case "DeviceCMYK":
              m = !0;
              break;
          }
          if (m) {
            const D = await BA(this, fa, dg).call(this, i, s);
            if (D)
              return D;
            const S = await this.getImageBytes(p, {
              drawWidth: i,
              drawHeight: s,
              forceRGBA: !0
            });
            return this.createBitmap(Ue.RGBA_32BPP, i, s, S);
          }
        } else
          switch (this.colorSpace.name) {
            case "DeviceGray":
              p *= 3;
            case "DeviceRGB":
            case "DeviceCMYK":
              return a.kind = Ue.RGB_24BPP, a.data = await this.getImageBytes(p, {
                drawWidth: i,
                drawHeight: s,
                forceRGB: !0
              }), c ? ei.createImage(a) : a;
          }
      }
    }
    const l = await this.getImageBytes(g * I, {
      internal: !0
    }), C = 0 | l.length / I * s / g, h = this.getComponents(l);
    let B, Q, E, f, d, u;
    if (t && !c && (E = new OffscreenCanvas(i, s), f = E.getContext("2d"), d = f.createImageData(i, s), u = d.data), a.kind = Ue.RGBA_32BPP, !A && !this.smask && !this.mask ? (!t || c ? (a.kind = Ue.RGB_24BPP, u = new Uint8ClampedArray(i * s * 3), B = 0) : (new Uint32Array(u.buffer).fill(ht.isLittleEndian ? 4278190080 : 255), B = 1), Q = !1) : ((!t || c) && (u = new Uint8ClampedArray(i * s * 4)), B = 1, Q = !0, await this.fillOpacity(u, i, s, C, h)), this.needsDecode && this.decodeBuffer(h), this.colorSpace.fillRgb(u, r, g, i, s, C, o, h, B), Q && this.undoPreblend(u, i, C), t && !c) {
      f.putImageData(d, 0, 0);
      const x = E.transferToImageBitmap();
      return {
        data: null,
        width: i,
        height: s,
        bitmap: x,
        interpolate: this.interpolate
      };
    }
    return a.data = u, c ? ei.createImage(a) : a;
  }
  async fillGrayBuffer(A) {
    const t = this.numComps;
    if (t !== 1)
      throw new T(`Reading gray scale from a color image: ${t}`);
    const i = this.width, s = this.height, a = this.bpc, n = i * t * a + 7 >> 3, r = await this.getImageBytes(s * n, {
      internal: !0
    }), g = this.getComponents(r);
    let o, I;
    if (a === 1) {
      if (I = i * s, this.needsDecode)
        for (o = 0; o < I; ++o)
          A[o] = g[o] - 1 & 255;
      else
        for (o = 0; o < I; ++o)
          A[o] = -g[o] & 255;
      return;
    }
    this.needsDecode && this.decodeBuffer(g), I = i * s;
    const c = 255 / ((1 << a) - 1);
    for (o = 0; o < I; ++o)
      A[o] = c * g[o];
  }
  createBitmap(A, t, i, s) {
    const a = new OffscreenCanvas(t, i), n = a.getContext("2d");
    let r;
    A === Ue.RGBA_32BPP ? r = new ImageData(s, t, i) : (r = n.createImageData(t, i), Fc({
      kind: A,
      src: s,
      dest: new Uint32Array(r.data.buffer),
      width: t,
      height: i,
      inverseDecode: this.needsDecode
    })), n.putImageData(r, 0, 0);
    const g = a.transferToImageBitmap();
    return {
      data: null,
      width: t,
      height: i,
      bitmap: g,
      interpolate: this.interpolate
    };
  }
  async getImageBytes(A, {
    drawWidth: t,
    drawHeight: i,
    forceRGBA: s = !1,
    forceRGB: a = !1,
    internal: n = !1
  }) {
    this.image.reset(), this.image.drawWidth = t || this.width, this.image.drawHeight = i || this.height, this.image.forceRGBA = !!s, this.image.forceRGB = !!a;
    const r = await this.image.getImageData(A, this.jpxDecoderOptions);
    return n || this.image instanceof $e ? r : (nt(r instanceof Uint8Array, 'PDFImage.getImageBytes: Unsupported "imageBytes" type.'), new Uint8Array(r));
  }
};
fa = new WeakSet(), dg = async function(A, t) {
  const i = await this.image.getTransferableImage();
  return i ? {
    data: null,
    width: A,
    height: t,
    bitmap: i,
    interpolate: this.interpolate
  } : null;
};
let H0 = v0;
const Al = Object.freeze({
  maxImageSize: -1,
  disableFontFace: !1,
  ignoreErrors: !1,
  isEvalSupported: !0,
  isOffscreenCanvasSupported: !1,
  isImageDecoderSupported: !1,
  canvasMaxAreaInBytes: -1,
  fontExtraProperties: !1,
  useSystemFonts: !0,
  cMapUrl: null,
  standardFontDataUrl: null
}), FI = {
  TILING: 1,
  SHADING: 2
}, E1 = 10, RI = Promise.resolve();
function el(e, A = !1) {
  if (Array.isArray(e)) {
    for (const t of e) {
      const i = el(t, !0);
      if (i)
        return i;
    }
    return k(`Unsupported blend mode Array: ${e}`), "source-over";
  }
  if (!(e instanceof L))
    return A ? null : "source-over";
  switch (e.name) {
    case "Normal":
    case "Compatible":
      return "source-over";
    case "Multiply":
      return "multiply";
    case "Screen":
      return "screen";
    case "Overlay":
      return "overlay";
    case "Darken":
      return "darken";
    case "Lighten":
      return "lighten";
    case "ColorDodge":
      return "color-dodge";
    case "ColorBurn":
      return "color-burn";
    case "HardLight":
      return "hard-light";
    case "SoftLight":
      return "soft-light";
    case "Difference":
      return "difference";
    case "Exclusion":
      return "exclusion";
    case "Hue":
      return "hue";
    case "Saturation":
      return "saturation";
    case "Color":
      return "color";
    case "Luminosity":
      return "luminosity";
  }
  return A ? null : (k(`Unsupported blend mode: ${e.name}`), "source-over");
}
function Ur(e, A) {
  var t;
  A.objId && e.addDependency(A.objId), e.addImageOps(A.fn, A.args, A.optionalContent), A.fn === w.paintImageMaskXObject && ((t = A.args[0]) == null ? void 0 : t.count) > 0 && A.args[0].count++;
}
const T0 = class T0 {
  constructor() {
    this.reset();
  }
  check() {
    return ++this.checked < T0.CHECK_TIME_EVERY ? !1 : (this.checked = 0, this.endTime <= Date.now());
  }
  reset() {
    this.endTime = Date.now() + T0.TIME_SLOT_DURATION_MS, this.checked = 0;
  }
};
et(T0, "TIME_SLOT_DURATION_MS", 20), et(T0, "CHECK_TIME_EVERY", 100);
let Sn = T0;
var ua, xg;
const Xn = class Xn {
  constructor({
    xref: A,
    handler: t,
    pageIndex: i,
    idFactory: s,
    fontCache: a,
    builtInCMapCache: n,
    standardFontDataCache: r,
    globalImageCache: g,
    systemFontCache: o,
    options: I = null
  }) {
    jA(this, ua);
    this.xref = A, this.handler = t, this.pageIndex = i, this.idFactory = s, this.fontCache = a, this.builtInCMapCache = n, this.standardFontDataCache = r, this.globalImageCache = g, this.systemFontCache = o, this.options = I || Al, this.type3FontRefs = null, this._regionalImageCache = new _Q(), this._fetchBuiltInCMapBound = this.fetchBuiltInCMap.bind(this), ei.setOptions(this.options), is.setOptions(this.options);
  }
  get _pdfFunctionFactory() {
    const A = new Vc({
      xref: this.xref,
      isEvalSupported: this.options.isEvalSupported
    });
    return tA(this, "_pdfFunctionFactory", A);
  }
  get parsingType3Font() {
    return !!this.type3FontRefs;
  }
  clone(A = null) {
    const t = Object.create(this);
    return t.options = Object.assign(/* @__PURE__ */ Object.create(null), this.options, A), t;
  }
  hasBlendModes(A, t) {
    if (!(A instanceof R) || A.objId && t.has(A.objId))
      return !1;
    const i = new Ge(t);
    A.objId && i.put(A.objId);
    const s = [A], a = this.xref;
    for (; s.length; ) {
      const n = s.shift(), r = n.get("ExtGState");
      if (r instanceof R)
        for (let o of r.getRawValues()) {
          if (o instanceof nA) {
            if (i.has(o))
              continue;
            try {
              o = a.fetch(o);
            } catch (c) {
              i.put(o), vA(`hasBlendModes - ignoring ExtGState: "${c}".`);
              continue;
            }
          }
          if (!(o instanceof R))
            continue;
          o.objId && i.put(o.objId);
          const I = o.get("BM");
          if (I instanceof L) {
            if (I.name !== "Normal")
              return !0;
            continue;
          }
          if (I !== void 0 && Array.isArray(I)) {
            for (const c of I)
              if (c instanceof L && c.name !== "Normal")
                return !0;
          }
        }
      const g = n.get("XObject");
      if (g instanceof R)
        for (let o of g.getRawValues()) {
          if (o instanceof nA) {
            if (i.has(o))
              continue;
            try {
              o = a.fetch(o);
            } catch (c) {
              i.put(o), vA(`hasBlendModes - ignoring XObject: "${c}".`);
              continue;
            }
          }
          if (!(o instanceof JA))
            continue;
          o.dict.objId && i.put(o.dict.objId);
          const I = o.dict.get("Resources");
          I instanceof R && (I.objId && i.has(I.objId) || (s.push(I), I.objId && i.put(I.objId)));
        }
    }
    for (const n of i)
      t.put(n);
    return !1;
  }
  async fetchBuiltInCMap(A) {
    const t = this.builtInCMapCache.get(A);
    if (t)
      return t;
    let i;
    return this.options.cMapUrl !== null ? i = {
      cMapData: await BA(this, ua, xg).call(this, `${this.options.cMapUrl}${A}.bcmap`),
      isCompressed: !0
    } : i = await this.handler.sendWithPromise("FetchBuiltInCMap", {
      name: A
    }), this.builtInCMapCache.set(A, i), i;
  }
  async fetchStandardFontData(A) {
    const t = this.standardFontDataCache.get(A);
    if (t)
      return new Ee(t);
    if (this.options.useSystemFonts && A !== "Symbol" && A !== "ZapfDingbats")
      return null;
    const i = fB(), s = i[A];
    let a;
    try {
      this.options.standardFontDataUrl !== null ? a = await BA(this, ua, xg).call(this, `${this.options.standardFontDataUrl}${s}`) : a = await this.handler.sendWithPromise("FetchStandardFontData", {
        filename: s
      });
    } catch (n) {
      return k(n), null;
    }
    return this.standardFontDataCache.set(A, a), new Ee(a);
  }
  async buildFormXObject(A, t, i, s, a, n, r) {
    const g = t.dict, o = Yi(g.getArray("Matrix"), null), I = ai(g.getArray("BBox"), null);
    let c, l;
    g.has("OC") && (c = await this.parseMarkedContentProps(g.get("OC"), A)), c !== void 0 && s.addOp(w.beginMarkedContentProps, ["OC", c]);
    const C = g.get("Group");
    if (C) {
      l = {
        matrix: o,
        bbox: I,
        smask: i,
        isolated: !1,
        knockout: !1
      };
      const B = C.get("S");
      let Q = null;
      if (xe(B, "Transparency") && (l.isolated = C.get("I") || !1, l.knockout = C.get("K") || !1, C.has("CS"))) {
        const E = C.getRaw("CS"), f = LA.getCached(E, this.xref, r);
        f ? Q = f : Q = await this.parseColorSpace({
          cs: E,
          resources: A,
          localColorSpaceCache: r
        });
      }
      i != null && i.backdrop && (Q || (Q = LA.singletons.rgb), i.backdrop = Q.getRgb(i.backdrop, 0)), s.addOp(w.beginGroup, [l]);
    }
    const h = C ? [o, null] : [o, I];
    s.addOp(w.paintFormXObjectBegin, h), await this.getOperatorList({
      stream: t,
      task: a,
      resources: g.get("Resources") || A,
      operatorList: s,
      initialState: n
    }), s.addOp(w.paintFormXObjectEnd, []), C && s.addOp(w.endGroup, [l]), c !== void 0 && s.addOp(w.endMarkedContent, []);
  }
  _sendImgData(A, t, i = !1) {
    const s = t ? [t.bitmap || t.data.buffer] : null;
    return this.parsingType3Font || i ? this.handler.send("commonobj", [A, "Image", t], s) : this.handler.send("obj", [A, this.pageIndex, "Image", t], s);
  }
  async buildPaintImageXObject({
    resources: A,
    image: t,
    isInline: i = !1,
    operatorList: s,
    cacheKey: a,
    localImageCache: n,
    localColorSpaceCache: r
  }) {
    const g = t.dict, o = g.objId, I = g.get("W", "Width"), c = g.get("H", "Height");
    if (!(I && typeof I == "number") || !(c && typeof c == "number")) {
      k("Image dimensions are missing, or not numbers.");
      return;
    }
    const l = this.options.maxImageSize;
    if (l !== -1 && I * c > l) {
      const u = "Image exceeded maximum allowed size and was removed.";
      if (this.options.ignoreErrors) {
        k(u);
        return;
      }
      throw new Error(u);
    }
    let C;
    g.has("OC") && (C = await this.parseMarkedContentProps(g.get("OC"), A));
    const h = g.get("IM", "ImageMask") || !1;
    let B, Q;
    if (h) {
      const u = g.get("I", "Interpolate"), x = I + 7 >> 3, p = t.getBytes(x * c), m = g.getArray("D", "Decode");
      if (this.parsingType3Font) {
        if (B = H0.createRawMask({
          imgArray: p,
          width: I,
          height: c,
          imageIsFromDecodeStream: t instanceof $e,
          inverseDecode: (m == null ? void 0 : m[0]) > 0,
          interpolate: u
        }), B.cached = !!a, Q = [B], s.addImageOps(w.paintImageMaskXObject, Q, C), a) {
          const S = {
            fn: w.paintImageMaskXObject,
            args: Q,
            optionalContent: C
          };
          n.set(a, o, S), o && this._regionalImageCache.set(null, o, S);
        }
        return;
      }
      if (B = await H0.createMask({
        imgArray: p,
        width: I,
        height: c,
        imageIsFromDecodeStream: t instanceof $e,
        inverseDecode: (m == null ? void 0 : m[0]) > 0,
        interpolate: u,
        isOffscreenCanvasSupported: this.options.isOffscreenCanvasSupported
      }), B.isSingleOpaquePixel) {
        if (s.addImageOps(w.paintSolidColorImageMask, [], C), a) {
          const S = {
            fn: w.paintSolidColorImageMask,
            args: [],
            optionalContent: C
          };
          n.set(a, o, S), o && this._regionalImageCache.set(null, o, S);
        }
        return;
      }
      const D = `mask_${this.idFactory.createObjId()}`;
      if (s.addDependency(D), B.dataLen = B.bitmap ? B.width * B.height * 4 : B.data.length, this._sendImgData(D, B), Q = [{
        data: D,
        width: B.width,
        height: B.height,
        interpolate: B.interpolate,
        count: 1
      }], s.addImageOps(w.paintImageMaskXObject, Q, C), a) {
        const S = {
          objId: D,
          fn: w.paintImageMaskXObject,
          args: Q,
          optionalContent: C
        };
        n.set(a, o, S), o && this._regionalImageCache.set(null, o, S);
      }
      return;
    }
    if (i && I + c < 200 && !g.has("SMask") && !g.has("Mask")) {
      try {
        B = await new H0({
          xref: this.xref,
          res: A,
          image: t,
          isInline: i,
          pdfFunctionFactory: this._pdfFunctionFactory,
          localColorSpaceCache: r
        }).createImageData(!0, !1), s.isOffscreenCanvasSupported = this.options.isOffscreenCanvasSupported, s.addImageOps(w.paintInlineImageXObject, [B], C);
      } catch (u) {
        const x = `Unable to decode inline image: "${u}".`;
        if (!this.options.ignoreErrors)
          throw new Error(x);
        k(x);
      }
      return;
    }
    let f = `img_${this.idFactory.createObjId()}`, d = !1;
    if (this.parsingType3Font ? f = `${this.idFactory.getDocId()}_type3_${f}` : a && o && (d = this.globalImageCache.shouldCache(o, this.pageIndex), d && (nt(!i, "Cannot cache an inline image globally."), f = `${this.idFactory.getDocId()}_${f}`)), s.addDependency(f), Q = [f, I, c], s.addImageOps(w.paintImageXObject, Q, C), d) {
      if (this.globalImageCache.hasDecodeFailed(o)) {
        this.globalImageCache.setData(o, {
          objId: f,
          fn: w.paintImageXObject,
          args: Q,
          optionalContent: C,
          byteSize: 0
        }), this._sendImgData(f, null, d);
        return;
      }
      if (I * c > 25e4 || g.has("SMask") || g.has("Mask")) {
        const u = await this.handler.sendWithPromise("commonobj", [f, "CopyLocalImage", {
          imageRef: o
        }]);
        if (u) {
          this.globalImageCache.setData(o, {
            objId: f,
            fn: w.paintImageXObject,
            args: Q,
            optionalContent: C,
            byteSize: 0
          }), this.globalImageCache.addByteSize(o, u);
          return;
        }
      }
    }
    if (H0.buildImage({
      xref: this.xref,
      res: A,
      image: t,
      isInline: i,
      pdfFunctionFactory: this._pdfFunctionFactory,
      localColorSpaceCache: r
    }).then(async (u) => (B = await u.createImageData(!1, this.options.isOffscreenCanvasSupported), B.dataLen = B.bitmap ? B.width * B.height * 4 : B.data.length, B.ref = o, d && this.globalImageCache.addByteSize(o, B.dataLen), this._sendImgData(f, B, d))).catch((u) => (k(`Unable to decode image "${f}": "${u}".`), o && this.globalImageCache.addDecodeFailed(o), this._sendImgData(f, null, d))), a) {
      const u = {
        objId: f,
        fn: w.paintImageXObject,
        args: Q,
        optionalContent: C
      };
      n.set(a, o, u), o && (this._regionalImageCache.set(null, o, u), d && this.globalImageCache.setData(o, {
        objId: f,
        fn: w.paintImageXObject,
        args: Q,
        optionalContent: C,
        byteSize: 0
      }));
    }
  }
  handleSMask(A, t, i, s, a, n) {
    const r = A.get("G"), g = {
      subtype: A.get("S").name,
      backdrop: A.get("BC")
    }, o = A.get("TR");
    if (Nr(o)) {
      const I = this._pdfFunctionFactory.create(o), c = new Uint8Array(256), l = new Float32Array(1);
      for (let C = 0; C < 256; C++)
        l[0] = C / 255, I(l, 0, l, 0), c[C] = l[0] * 255 | 0;
      g.transferMap = c;
    }
    return this.buildFormXObject(t, r, g, i, s, a.state.clone(), n);
  }
  handleTransferFunction(A) {
    let t;
    if (Array.isArray(A))
      t = A;
    else if (Nr(A))
      t = [A];
    else
      return null;
    const i = [];
    let s = 0, a = 0;
    for (const n of t) {
      const r = this.xref.fetchIfRef(n);
      if (s++, xe(r, "Identity")) {
        i.push(null);
        continue;
      } else if (!Nr(r))
        return null;
      const g = this._pdfFunctionFactory.create(r), o = new Uint8Array(256), I = new Float32Array(1);
      for (let c = 0; c < 256; c++)
        I[0] = c / 255, g(I, 0, I, 0), o[c] = I[0] * 255 | 0;
      i.push(o), a++;
    }
    return !(s === 1 || s === 4) || a === 0 ? null : i;
  }
  handleTilingType(A, t, i, s, a, n, r, g) {
    const o = new Ct(), I = R.merge({
      xref: this.xref,
      dictArray: [a.get("Resources"), i]
    });
    return this.getOperatorList({
      stream: s,
      task: r,
      resources: I,
      operatorList: o
    }).then(function() {
      const c = o.getIR(), l = BI(c, a, t);
      n.addDependencies(o.dependencies), n.addOp(A, l), a.objId && g.set(null, a.objId, {
        operatorListIR: c,
        dict: a
      });
    }).catch((c) => {
      if (!(c instanceof je)) {
        if (this.options.ignoreErrors) {
          k(`handleTilingType - ignoring pattern: "${c}".`);
          return;
        }
        throw c;
      }
    });
  }
  async handleSetFont(A, t, i, s, a, n, r = null, g = null) {
    const o = (t == null ? void 0 : t[0]) instanceof L ? t[0].name : null;
    let I = await this.loadFont(o, i, A, r, g);
    if (I.font.isType3Font)
      try {
        await I.loadType3Data(this, A, a), s.addDependencies(I.type3Dependencies);
      } catch (c) {
        I = new Za({
          loadedName: "g_font_error",
          font: new Rr(`Type3 font load error: ${c}`),
          dict: I.font,
          evaluatorOptions: this.options
        });
      }
    return n.font = I.font, I.send(this.handler), I.loadedName;
  }
  handleText(A, t) {
    const i = t.font, s = i.charsToGlyphs(A);
    return i.data && (t.textRenderingMode & nc.ADD_TO_PATH_FLAG || t.fillColorSpace.name === "Pattern" || i.disableFontFace || this.options.disableFontFace) && Xn.buildFontPaths(i, s, this.handler, this.options), s;
  }
  ensureStateFont(A) {
    if (A.font)
      return;
    const t = new T("Missing setFont (Tf) operator before text rendering operator.");
    if (this.options.ignoreErrors) {
      k(`ensureStateFont: "${t}".`);
      return;
    }
    throw t;
  }
  async setGState({
    resources: A,
    gState: t,
    operatorList: i,
    cacheKey: s,
    task: a,
    stateManager: n,
    localGStateCache: r,
    localColorSpaceCache: g
  }) {
    const o = t.objId;
    let I = !0;
    const c = [];
    let l = Promise.resolve();
    for (const C of t.getKeys()) {
      const h = t.get(C);
      switch (C) {
        case "Type":
          break;
        case "LW":
        case "LC":
        case "LJ":
        case "ML":
        case "D":
        case "RI":
        case "FL":
        case "CA":
        case "ca":
          c.push([C, h]);
          break;
        case "Font":
          I = !1, l = l.then(() => this.handleSetFont(A, null, h[0], i, a, n.state).then(function(Q) {
            i.addDependency(Q), c.push([C, [Q, h[1]]]);
          }));
          break;
        case "BM":
          c.push([C, el(h)]);
          break;
        case "SMask":
          if (xe(h, "None")) {
            c.push([C, !1]);
            break;
          }
          h instanceof R ? (I = !1, l = l.then(() => this.handleSMask(h, A, i, a, n, g)), c.push([C, !0])) : k("Unsupported SMask type");
          break;
        case "TR":
          const B = this.handleTransferFunction(h);
          c.push([C, B]);
          break;
        case "OP":
        case "op":
        case "OPM":
        case "BG":
        case "BG2":
        case "UCR":
        case "UCR2":
        case "TR2":
        case "HT":
        case "SM":
        case "SA":
        case "AIS":
        case "TK":
          vA("graphic state operator " + C);
          break;
        default:
          vA("Unknown graphic state operator " + C);
          break;
      }
    }
    await l, c.length > 0 && i.addOp(w.setGState, [c]), I && r.set(s, o, c);
  }
  loadFont(A, t, i, s = null, a = null) {
    var B;
    const n = async () => new Za({
      loadedName: "g_font_error",
      font: new Rr(`Font "${A}" is not available.`),
      dict: t,
      evaluatorOptions: this.options
    });
    let r;
    if (t)
      t instanceof nA && (r = t);
    else {
      const Q = i.get("Font");
      Q && (r = Q.getRaw(A));
    }
    if (r) {
      if ((B = this.type3FontRefs) != null && B.has(r))
        return n();
      if (this.fontCache.has(r))
        return this.fontCache.get(r);
      try {
        t = this.xref.fetchIfRef(r);
      } catch (Q) {
        k(`loadFont - lookup failed: "${Q}".`);
      }
    }
    if (!(t instanceof R)) {
      if (!this.options.ignoreErrors && !this.parsingType3Font)
        return k(`Font "${A}" is not available.`), n();
      k(`Font "${A}" is not available -- attempting to fallback to a default font.`), t = s || Xn.fallbackFontDict;
    }
    if (t.cacheKey && this.fontCache.has(t.cacheKey))
      return this.fontCache.get(t.cacheKey);
    const {
      promise: g,
      resolve: o
    } = Promise.withResolvers();
    let I;
    try {
      I = this.preEvaluateFont(t), I.cssFontInfo = a;
    } catch (Q) {
      return k(`loadFont - preEvaluateFont failed: "${Q}".`), n();
    }
    const {
      descriptor: c,
      hash: l
    } = I, C = r instanceof nA;
    let h;
    if (l && c instanceof R) {
      const Q = c.fontAliases || (c.fontAliases = /* @__PURE__ */ Object.create(null));
      if (Q[l]) {
        const E = Q[l].aliasRef;
        if (C && E && this.fontCache.has(E))
          return this.fontCache.putAlias(r, E), this.fontCache.get(r);
      } else
        Q[l] = {
          fontID: this.idFactory.createFontId()
        };
      C && (Q[l].aliasRef = r), h = Q[l].fontID;
    } else
      h = this.idFactory.createFontId();
    return nt(h == null ? void 0 : h.startsWith("f"), 'The "fontID" must be (correctly) defined.'), C ? this.fontCache.put(r, g) : (t.cacheKey = `cacheKey_${h}`, this.fontCache.put(t.cacheKey, g)), t.loadedName = `${this.idFactory.getDocId()}_${h}`, this.translateFont(I).then((Q) => {
      o(new Za({
        loadedName: t.loadedName,
        font: Q,
        dict: t,
        evaluatorOptions: this.options
      }));
    }).catch((Q) => {
      k(`loadFont - translateFont failed: "${Q}".`), o(new Za({
        loadedName: t.loadedName,
        font: new Rr(Q instanceof Error ? Q.message : Q),
        dict: t,
        evaluatorOptions: this.options
      }));
    }), g;
  }
  buildPath(A, t, i, s = !1) {
    const a = A.length - 1;
    if (i || (i = []), a < 0 || A.fnArray[a] !== w.constructPath) {
      s && (k(`Encountered path operator "${t}" inside of a text object.`), A.addOp(w.save, null));
      let n;
      switch (t) {
        case w.rectangle:
          const r = i[0] + i[2], g = i[1] + i[3];
          n = [Math.min(i[0], r), Math.min(i[1], g), Math.max(i[0], r), Math.max(i[1], g)];
          break;
        case w.moveTo:
        case w.lineTo:
          n = [i[0], i[1], i[0], i[1]];
          break;
        default:
          n = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
          break;
      }
      A.addOp(w.constructPath, [[t], i, n]), s && A.addOp(w.restore, null);
    } else {
      const n = A.argsArray[a];
      n[0].push(t), n[1].push(...i);
      const r = n[2];
      switch (t) {
        case w.rectangle:
          const g = i[0] + i[2], o = i[1] + i[3];
          r[0] = Math.min(r[0], i[0], g), r[1] = Math.min(r[1], i[1], o), r[2] = Math.max(r[2], i[0], g), r[3] = Math.max(r[3], i[1], o);
          break;
        case w.moveTo:
        case w.lineTo:
          r[0] = Math.min(r[0], i[0]), r[1] = Math.min(r[1], i[1]), r[2] = Math.max(r[2], i[0]), r[3] = Math.max(r[3], i[1]);
          break;
      }
    }
  }
  parseColorSpace({
    cs: A,
    resources: t,
    localColorSpaceCache: i
  }) {
    return LA.parseAsync({
      cs: A,
      xref: this.xref,
      resources: t,
      pdfFunctionFactory: this._pdfFunctionFactory,
      localColorSpaceCache: i
    }).catch((s) => {
      if (s instanceof je)
        return null;
      if (this.options.ignoreErrors)
        return k(`parseColorSpace - ignoring ColorSpace: "${s}".`), null;
      throw s;
    });
  }
  parseShading({
    shading: A,
    resources: t,
    localColorSpaceCache: i,
    localShadingPatternCache: s
  }) {
    let a = s.get(A);
    if (a)
      return a;
    let n;
    try {
      n = rQ.parseShading(A, this.xref, t, this._pdfFunctionFactory, i).getIR();
    } catch (r) {
      if (r instanceof je)
        return null;
      if (this.options.ignoreErrors)
        return k(`parseShading - ignoring shading: "${r}".`), s.set(A, null), null;
      throw r;
    }
    return a = `pattern_${this.idFactory.createObjId()}`, this.parsingType3Font && (a = `${this.idFactory.getDocId()}_type3_${a}`), s.set(A, a), this.parsingType3Font ? this.handler.send("commonobj", [a, "Pattern", n]) : this.handler.send("obj", [a, this.pageIndex, "Pattern", n]), a;
  }
  handleColorN(A, t, i, s, a, n, r, g, o, I) {
    const c = i.pop();
    if (c instanceof L) {
      const l = a.getRaw(c.name), C = l instanceof nA && o.getByRef(l);
      if (C)
        try {
          const B = s.base ? s.base.getRgb(i, 0) : null, Q = BI(C.operatorListIR, C.dict, B);
          A.addOp(t, Q);
          return;
        } catch {
        }
      const h = this.xref.fetchIfRef(l);
      if (h) {
        const B = h instanceof JA ? h.dict : h, Q = B.get("PatternType");
        if (Q === FI.TILING) {
          const E = s.base ? s.base.getRgb(i, 0) : null;
          return this.handleTilingType(t, E, n, h, B, A, r, o);
        } else if (Q === FI.SHADING) {
          const E = B.get("Shading"), f = this.parseShading({
            shading: E,
            resources: n,
            localColorSpaceCache: g,
            localShadingPatternCache: I
          });
          if (f) {
            const d = Yi(B.getArray("Matrix"), null);
            A.addOp(t, ["Shading", f, d]);
          }
          return;
        }
        throw new T(`Unknown PatternType: ${Q}`);
      }
    }
    throw new T(`Unknown PatternName: ${c}`);
  }
  _parseVisibilityExpression(A, t, i) {
    if (++t > 10) {
      k("Visibility expression is too deeply nested");
      return;
    }
    const a = A.length, n = this.xref.fetchIfRef(A[0]);
    if (a < 2 || !(n instanceof L)) {
      k("Invalid visibility expression");
      return;
    }
    switch (n.name) {
      case "And":
      case "Or":
      case "Not":
        i.push(n.name);
        break;
      default:
        k(`Invalid operator ${n.name} in visibility expression`);
        return;
    }
    for (let r = 1; r < a; r++) {
      const g = A[r], o = this.xref.fetchIfRef(g);
      if (Array.isArray(o)) {
        const I = [];
        i.push(I), this._parseVisibilityExpression(o, t, I);
      } else g instanceof nA && i.push(g.toString());
    }
  }
  async parseMarkedContentProps(A, t) {
    var a;
    let i;
    if (A instanceof L)
      i = t.get("Properties").get(A.name);
    else if (A instanceof R)
      i = A;
    else
      throw new T("Optional content properties malformed.");
    const s = (a = i.get("Type")) == null ? void 0 : a.name;
    if (s === "OCG")
      return {
        type: s,
        id: i.objId
      };
    if (s === "OCMD") {
      const n = i.get("VE");
      if (Array.isArray(n)) {
        const g = [];
        if (this._parseVisibilityExpression(n, 0, g), g.length > 0)
          return {
            type: "OCMD",
            expression: g
          };
      }
      const r = i.get("OCGs");
      if (Array.isArray(r) || r instanceof R) {
        const g = [];
        if (Array.isArray(r))
          for (const o of r)
            g.push(o.toString());
        else
          g.push(r.objId);
        return {
          type: s,
          ids: g,
          policy: i.get("P") instanceof L ? i.get("P").name : null,
          expression: null
        };
      } else if (r instanceof nA)
        return {
          type: s,
          id: r.toString()
        };
    }
    return null;
  }
  getOperatorList({
    stream: A,
    task: t,
    resources: i,
    operatorList: s,
    initialState: a = null,
    fallbackFontDict: n = null
  }) {
    if (i || (i = R.empty), a || (a = new tl()), !s)
      throw new Error('getOperatorList: missing "operatorList" parameter');
    const r = this, g = this.xref;
    let o = !1;
    const I = new QI(), c = new jc(), l = new EI(), C = new VQ(), h = /* @__PURE__ */ new Map(), B = i.get("XObject") || R.empty, Q = i.get("Pattern") || R.empty, E = new Cn(a), f = new ns(A, g, E), d = new Sn();
    function u(x) {
      for (let p = 0, m = f.savedStatesDepth; p < m; p++)
        s.addOp(w.restore, []);
    }
    return new Promise(function x(p, m) {
      const D = function(N) {
        Promise.all([N, s.ready]).then(function() {
          try {
            x(p, m);
          } catch (F) {
            m(F);
          }
        }, m);
      };
      t.ensureNotTerminated(), d.reset();
      const S = {};
      let y, H, G, v, X, gA;
      for (; !(y = d.check()) && (S.args = null, !!f.read(S)); ) {
        let N = S.args, F = S.fn;
        switch (F | 0) {
          case w.paintXObject:
            if (gA = N[0] instanceof L, X = N[0].name, gA) {
              const _ = I.getByName(X);
              if (_) {
                Ur(s, _), N = null;
                continue;
              }
            }
            D(new Promise(function(_, TA) {
              if (!gA)
                throw new T("XObject must be referred to by name.");
              let oA = B.getRaw(X);
              if (oA instanceof nA) {
                const J = I.getByRef(oA) || r._regionalImageCache.getByRef(oA);
                if (J) {
                  Ur(s, J), _();
                  return;
                }
                const q = r.globalImageCache.getData(oA, r.pageIndex);
                if (q) {
                  s.addDependency(q.objId), s.addImageOps(q.fn, q.args, q.optionalContent), _();
                  return;
                }
                oA = g.fetch(oA);
              }
              if (!(oA instanceof JA))
                throw new T("XObject should be a stream");
              const U = oA.dict.get("Subtype");
              if (!(U instanceof L))
                throw new T("XObject should have a Name subtype");
              if (U.name === "Form") {
                E.save(), r.buildFormXObject(i, oA, null, s, t, E.state.clone(), c).then(function() {
                  E.restore(), _();
                }, TA);
                return;
              } else if (U.name === "Image") {
                r.buildPaintImageXObject({
                  resources: i,
                  image: oA,
                  operatorList: s,
                  cacheKey: X,
                  localImageCache: I,
                  localColorSpaceCache: c
                }).then(_, TA);
                return;
              } else if (U.name === "PS")
                vA("Ignored XObject subtype PS");
              else
                throw new T(`Unhandled XObject subtype ${U.name}`);
              _();
            }).catch(function(_) {
              if (!(_ instanceof je)) {
                if (r.options.ignoreErrors) {
                  k(`getOperatorList - ignoring XObject: "${_}".`);
                  return;
                }
                throw _;
              }
            }));
            return;
          case w.setFont:
            const eA = N[1];
            D(r.handleSetFont(i, N, null, s, t, E.state, n).then(function(_) {
              s.addDependency(_), s.addOp(w.setFont, [_, eA]);
            }));
            return;
          case w.beginText:
            o = !0;
            break;
          case w.endText:
            o = !1;
            break;
          case w.endInlineImage:
            const z = N[0].cacheKey;
            if (z) {
              const _ = I.getByName(z);
              if (_) {
                Ur(s, _), N = null;
                continue;
              }
            }
            D(r.buildPaintImageXObject({
              resources: i,
              image: N[0],
              isInline: !0,
              operatorList: s,
              cacheKey: z,
              localImageCache: I,
              localColorSpaceCache: c
            }));
            return;
          case w.showText:
            if (!E.state.font) {
              r.ensureStateFont(E.state);
              continue;
            }
            N[0] = r.handleText(N[0], E.state);
            break;
          case w.showSpacedText:
            if (!E.state.font) {
              r.ensureStateFont(E.state);
              continue;
            }
            const cA = [], wA = E.state;
            for (const _ of N[0])
              typeof _ == "string" ? cA.push(...r.handleText(_, wA)) : typeof _ == "number" && cA.push(_);
            N[0] = cA, F = w.showText;
            break;
          case w.nextLineShowText:
            if (!E.state.font) {
              r.ensureStateFont(E.state);
              continue;
            }
            s.addOp(w.nextLine), N[0] = r.handleText(N[0], E.state), F = w.showText;
            break;
          case w.nextLineSetSpacingShowText:
            if (!E.state.font) {
              r.ensureStateFont(E.state);
              continue;
            }
            s.addOp(w.nextLine), s.addOp(w.setWordSpacing, [N.shift()]), s.addOp(w.setCharSpacing, [N.shift()]), N[0] = r.handleText(N[0], E.state), F = w.showText;
            break;
          case w.setTextRenderingMode:
            E.state.textRenderingMode = N[0];
            break;
          case w.setFillColorSpace: {
            const _ = LA.getCached(N[0], g, c);
            if (_) {
              E.state.fillColorSpace = _;
              continue;
            }
            D(r.parseColorSpace({
              cs: N[0],
              resources: i,
              localColorSpaceCache: c
            }).then(function(TA) {
              E.state.fillColorSpace = TA || LA.singletons.gray;
            }));
            return;
          }
          case w.setStrokeColorSpace: {
            const _ = LA.getCached(N[0], g, c);
            if (_) {
              E.state.strokeColorSpace = _;
              continue;
            }
            D(r.parseColorSpace({
              cs: N[0],
              resources: i,
              localColorSpaceCache: c
            }).then(function(TA) {
              E.state.strokeColorSpace = TA || LA.singletons.gray;
            }));
            return;
          }
          case w.setFillColor:
            v = E.state.fillColorSpace, N = v.getRgb(N, 0), F = w.setFillRGBColor;
            break;
          case w.setStrokeColor:
            v = E.state.strokeColorSpace, N = v.getRgb(N, 0), F = w.setStrokeRGBColor;
            break;
          case w.setFillGray:
            E.state.fillColorSpace = LA.singletons.gray, N = LA.singletons.gray.getRgb(N, 0), F = w.setFillRGBColor;
            break;
          case w.setStrokeGray:
            E.state.strokeColorSpace = LA.singletons.gray, N = LA.singletons.gray.getRgb(N, 0), F = w.setStrokeRGBColor;
            break;
          case w.setFillCMYKColor:
            E.state.fillColorSpace = LA.singletons.cmyk, N = LA.singletons.cmyk.getRgb(N, 0), F = w.setFillRGBColor;
            break;
          case w.setStrokeCMYKColor:
            E.state.strokeColorSpace = LA.singletons.cmyk, N = LA.singletons.cmyk.getRgb(N, 0), F = w.setStrokeRGBColor;
            break;
          case w.setFillRGBColor:
            E.state.fillColorSpace = LA.singletons.rgb, N = LA.singletons.rgb.getRgb(N, 0);
            break;
          case w.setStrokeRGBColor:
            E.state.strokeColorSpace = LA.singletons.rgb, N = LA.singletons.rgb.getRgb(N, 0);
            break;
          case w.setFillColorN:
            if (v = E.state.patternFillColorSpace, !v) {
              if (rt(N, null)) {
                N = LA.singletons.gray.getRgb(N, 0), F = w.setFillRGBColor;
                break;
              }
              N = [], F = w.setFillTransparent;
              break;
            }
            if (v.name === "Pattern") {
              D(r.handleColorN(s, w.setFillColorN, N, v, Q, i, t, c, C, h));
              return;
            }
            N = v.getRgb(N, 0), F = w.setFillRGBColor;
            break;
          case w.setStrokeColorN:
            if (v = E.state.patternStrokeColorSpace, !v) {
              if (rt(N, null)) {
                N = LA.singletons.gray.getRgb(N, 0), F = w.setStrokeRGBColor;
                break;
              }
              N = [], F = w.setStrokeTransparent;
              break;
            }
            if (v.name === "Pattern") {
              D(r.handleColorN(s, w.setStrokeColorN, N, v, Q, i, t, c, C, h));
              return;
            }
            N = v.getRgb(N, 0), F = w.setStrokeRGBColor;
            break;
          case w.shadingFill:
            let mA;
            try {
              const _ = i.get("Shading");
              if (!_)
                throw new T("No shading resource found");
              if (mA = _.get(N[0].name), !mA)
                throw new T("No shading object found");
            } catch (_) {
              if (_ instanceof je)
                continue;
              if (r.options.ignoreErrors) {
                k(`getOperatorList - ignoring Shading: "${_}".`);
                continue;
              }
              throw _;
            }
            const DA = r.parseShading({
              shading: mA,
              resources: i,
              localColorSpaceCache: c,
              localShadingPatternCache: h
            });
            if (!DA)
              continue;
            N = [DA], F = w.shadingFill;
            break;
          case w.setGState:
            if (gA = N[0] instanceof L, X = N[0].name, gA) {
              const _ = l.getByName(X);
              if (_) {
                _.length > 0 && s.addOp(w.setGState, [_]), N = null;
                continue;
              }
            }
            D(new Promise(function(_, TA) {
              if (!gA)
                throw new T("GState must be referred to by name.");
              const oA = i.get("ExtGState");
              if (!(oA instanceof R))
                throw new T("ExtGState should be a dictionary.");
              const U = oA.get(X);
              if (!(U instanceof R))
                throw new T("GState should be a dictionary.");
              r.setGState({
                resources: i,
                gState: U,
                operatorList: s,
                cacheKey: X,
                task: t,
                stateManager: E,
                localGStateCache: l,
                localColorSpaceCache: c
              }).then(_, TA);
            }).catch(function(_) {
              if (!(_ instanceof je)) {
                if (r.options.ignoreErrors) {
                  k(`getOperatorList - ignoring ExtGState: "${_}".`);
                  return;
                }
                throw _;
              }
            }));
            return;
          case w.moveTo:
          case w.lineTo:
          case w.curveTo:
          case w.curveTo2:
          case w.curveTo3:
          case w.closePath:
          case w.rectangle:
            r.buildPath(s, F, N, o);
            continue;
          case w.markPoint:
          case w.markPointProps:
          case w.beginCompat:
          case w.endCompat:
            continue;
          case w.beginMarkedContentProps:
            if (!(N[0] instanceof L)) {
              k(`Expected name for beginMarkedContentProps arg0=${N[0]}`), s.addOp(w.beginMarkedContentProps, ["OC", null]);
              continue;
            }
            if (N[0].name === "OC") {
              D(r.parseMarkedContentProps(N[1], i).then((_) => {
                s.addOp(w.beginMarkedContentProps, ["OC", _]);
              }).catch((_) => {
                if (!(_ instanceof je)) {
                  if (r.options.ignoreErrors) {
                    k(`getOperatorList - ignoring beginMarkedContentProps: "${_}".`), s.addOp(w.beginMarkedContentProps, ["OC", null]);
                    return;
                  }
                  throw _;
                }
              }));
              return;
            }
            N = [N[0].name, N[1] instanceof R ? N[1].get("MCID") : null];
            break;
          case w.beginMarkedContent:
          case w.endMarkedContent:
          default:
            if (N !== null) {
              for (H = 0, G = N.length; H < G && !(N[H] instanceof R); H++)
                ;
              if (H < G) {
                k("getOperatorList - ignoring operator: " + F);
                continue;
              }
            }
        }
        s.addOp(F, N);
      }
      if (y) {
        D(RI);
        return;
      }
      u(), p();
    }).catch((x) => {
      if (!(x instanceof je)) {
        if (this.options.ignoreErrors) {
          k(`getOperatorList - ignoring errors during "${t.name}" task: "${x}".`), u();
          return;
        }
        throw x;
      }
    });
  }
  getTextContent({
    stream: A,
    task: t,
    resources: i,
    stateManager: s = null,
    includeMarkedContent: a = !1,
    sink: n,
    seenStyles: r = /* @__PURE__ */ new Set(),
    viewBox: g,
    lang: o = null,
    markedContentData: I = null,
    disableNormalization: c = !1,
    keepWhiteSpace: l = !1
  }) {
    i || (i = R.empty), s || (s = new Cn(new f1())), a && (I || (I = {
      level: 0
    }));
    const C = {
      items: [],
      styles: /* @__PURE__ */ Object.create(null),
      lang: o
    }, h = {
      initialized: !1,
      str: [],
      totalWidth: 0,
      totalHeight: 0,
      width: 0,
      height: 0,
      vertical: !1,
      prevTransform: null,
      textAdvanceScale: 0,
      spaceInFlowMin: 0,
      spaceInFlowMax: 0,
      trackingSpaceMin: 1 / 0,
      negativeSpaceMax: -1 / 0,
      notASpace: -1 / 0,
      transform: null,
      fontName: null,
      hasEOL: !1
    }, B = [" ", " "];
    let Q = 0;
    function E(V) {
      const P = (Q + 1) % 2, M = B[Q] !== " " && B[P] === " ";
      return B[Q] = V, Q = P, !l && M;
    }
    function f() {
      return !l && B[Q] !== " " && B[(Q + 1) % 2] === " ";
    }
    function d() {
      B[0] = B[1] = " ", Q = 0;
    }
    const u = 0.102, x = 0.03, p = -0.2, m = 0.102, D = 0.6, S = 0.25, y = this, H = this.xref, G = [];
    let v = null;
    const X = new QI(), gA = new EI(), N = new ns(A, H, s);
    let F;
    function eA({
      width: V = 0,
      height: P = 0,
      transform: M = h.prevTransform,
      fontName: lA = h.fontName
    }) {
      C.items.push({
        str: " ",
        dir: "ltr",
        width: V,
        height: P,
        transform: M,
        fontName: lA,
        hasEOL: !1
      });
    }
    function z() {
      const V = F.font, P = [F.fontSize * F.textHScale, 0, 0, F.fontSize, 0, F.textRise];
      if (V.isType3Font && (F.fontSize <= 1 || V.isCharBBox) && !E0(F.fontMatrix, c0)) {
        const M = V.bbox[3] - V.bbox[1];
        M > 0 && (P[3] *= M * F.fontMatrix[3]);
      }
      return ye.transform(F.ctm, ye.transform(F.textMatrix, P));
    }
    function cA() {
      if (h.initialized)
        return h;
      const {
        font: V,
        loadedName: P
      } = F;
      if (!r.has(P) && (r.add(P), C.styles[P] = {
        fontFamily: V.fallbackName,
        ascent: V.ascent,
        descent: V.descent,
        vertical: V.vertical
      }, y.options.fontExtraProperties && V.systemFontInfo)) {
        const QA = C.styles[P];
        QA.fontSubstitution = V.systemFontInfo.css, QA.fontSubstitutionLoadedName = V.systemFontInfo.loadedName;
      }
      h.fontName = P;
      const M = h.transform = z();
      V.vertical ? (h.width = h.totalWidth = Math.hypot(M[0], M[1]), h.height = h.totalHeight = 0, h.vertical = !0) : (h.width = h.totalWidth = 0, h.height = h.totalHeight = Math.hypot(M[2], M[3]), h.vertical = !1);
      const lA = Math.hypot(F.textLineMatrix[0], F.textLineMatrix[1]), uA = Math.hypot(F.ctm[0], F.ctm[1]);
      h.textAdvanceScale = uA * lA;
      const {
        fontSize: pA
      } = F;
      return h.trackingSpaceMin = pA * u, h.notASpace = pA * x, h.negativeSpaceMax = pA * p, h.spaceInFlowMin = pA * m, h.spaceInFlowMax = pA * D, h.hasEOL = !1, h.initialized = !0, h;
    }
    function wA() {
      if (!h.initialized)
        return;
      const V = Math.hypot(F.textLineMatrix[0], F.textLineMatrix[1]), M = Math.hypot(F.ctm[0], F.ctm[1]) * V;
      M !== h.textAdvanceScale && (h.vertical ? (h.totalHeight += h.height * h.textAdvanceScale, h.height = 0) : (h.totalWidth += h.width * h.textAdvanceScale, h.width = 0), h.textAdvanceScale = M);
    }
    function mA(V) {
      let P = V.str.join("");
      c || (P = yC(P));
      const M = _c(P, -1, V.vertical);
      return {
        str: M.str,
        dir: M.dir,
        width: Math.abs(V.totalWidth),
        height: Math.abs(V.totalHeight),
        transform: V.transform,
        fontName: V.fontName,
        hasEOL: V.hasEOL
      };
    }
    async function DA(V, P) {
      const M = await y.loadFont(V, P, i);
      if (M.font.isType3Font)
        try {
          await M.loadType3Data(y, i, t);
        } catch {
        }
      F.loadedName = M.loadedName, F.font = M.font, F.fontMatrix = M.font.fontMatrix || c0;
    }
    function _(V, P, M) {
      const lA = Math.hypot(M[0], M[1]);
      return [(M[0] * V + M[1] * P) / lA, (M[2] * V + M[3] * P) / lA];
    }
    function TA(V) {
      var yA;
      const P = z();
      let M = P[4], lA = P[5];
      if ((yA = F.font) != null && yA.vertical) {
        if (M < g[0] || M > g[2] || lA + V < g[1] || lA > g[3])
          return !1;
      } else if (M + V < g[0] || M > g[2] || lA < g[1] || lA > g[3])
        return !1;
      if (!F.font || !h.prevTransform)
        return !0;
      let uA = h.prevTransform[4], pA = h.prevTransform[5];
      if (uA === M && pA === lA)
        return !0;
      let QA = -1;
      switch (P[0] && P[1] === 0 && P[2] === 0 ? QA = P[0] > 0 ? 0 : 180 : P[1] && P[0] === 0 && P[3] === 0 && (QA = P[1] > 0 ? 90 : 270), QA) {
        case 0:
          break;
        case 90:
          [M, lA] = [lA, M], [uA, pA] = [pA, uA];
          break;
        case 180:
          [M, lA, uA, pA] = [-M, -lA, -uA, -pA];
          break;
        case 270:
          [M, lA] = [-lA, -M], [uA, pA] = [-pA, -uA];
          break;
        default:
          [M, lA] = _(M, lA, P), [uA, pA] = _(uA, pA, h.prevTransform);
      }
      if (F.font.vertical) {
        const aA = (pA - lA) / h.textAdvanceScale, bA = M - uA, NA = Math.sign(h.height);
        return aA < NA * h.negativeSpaceMax ? Math.abs(bA) > 0.5 * h.width ? (U(), !0) : (d(), q(), !0) : Math.abs(bA) > h.width ? (U(), !0) : (aA <= NA * h.notASpace && d(), aA <= NA * h.trackingSpaceMin ? f() ? (d(), q(), eA({
          height: Math.abs(aA)
        })) : h.height += aA : J(aA, h.prevTransform, NA) || (h.str.length === 0 ? (d(), eA({
          height: Math.abs(aA)
        })) : h.height += aA), Math.abs(bA) > h.width * S && q(), !0);
      }
      const EA = (M - uA) / h.textAdvanceScale, rA = lA - pA, IA = Math.sign(h.width);
      return EA < IA * h.negativeSpaceMax ? Math.abs(rA) > 0.5 * h.height ? (U(), !0) : (d(), q(), !0) : Math.abs(rA) > h.height ? (U(), !0) : (EA <= IA * h.notASpace && d(), EA <= IA * h.trackingSpaceMin ? f() ? (d(), q(), eA({
        width: Math.abs(EA)
      })) : h.width += EA : J(EA, h.prevTransform, IA) || (h.str.length === 0 ? (d(), eA({
        width: Math.abs(EA)
      })) : h.width += EA), Math.abs(rA) > h.height * S && q(), !0);
    }
    function oA({
      chars: V,
      extraSpacing: P
    }) {
      const M = F.font;
      if (!V) {
        const pA = F.charSpacing + P;
        pA && (M.vertical ? F.translateTextMatrix(0, -pA) : F.translateTextMatrix(pA * F.textHScale, 0)), l && TA(0);
        return;
      }
      const lA = M.charsToGlyphs(V), uA = F.fontMatrix[0] * F.fontSize;
      for (let pA = 0, QA = lA.length; pA < QA; pA++) {
        const EA = lA[pA], {
          category: rA
        } = EA;
        if (rA.isInvisibleFormatMark)
          continue;
        let IA = F.charSpacing + (pA + 1 === QA ? P : 0), yA = EA.width;
        M.vertical && (yA = EA.vmetric ? EA.vmetric[0] : -yA);
        let aA = yA * uA;
        if (!l && rA.isWhitespace) {
          M.vertical ? (IA += -aA + F.wordSpacing, F.translateTextMatrix(0, -IA)) : (IA += aA + F.wordSpacing, F.translateTextMatrix(IA * F.textHScale, 0)), E(" ");
          continue;
        }
        if (!rA.isZeroWidthDiacritic && !TA(aA)) {
          M.vertical ? F.translateTextMatrix(0, aA) : F.translateTextMatrix(aA * F.textHScale, 0);
          continue;
        }
        const bA = cA();
        rA.isZeroWidthDiacritic && (aA = 0), M.vertical ? (F.translateTextMatrix(0, aA), aA = Math.abs(aA), bA.height += aA) : (aA *= F.textHScale, F.translateTextMatrix(aA, 0), bA.width += aA), aA && (bA.prevTransform = z());
        const NA = EA.unicode;
        E(NA) && bA.str.push(" "), bA.str.push(NA), IA && (M.vertical ? F.translateTextMatrix(0, -IA) : F.translateTextMatrix(IA * F.textHScale, 0));
      }
    }
    function U() {
      d(), h.initialized ? (h.hasEOL = !0, q()) : C.items.push({
        str: "",
        dir: "ltr",
        width: 0,
        height: 0,
        transform: z(),
        fontName: F.loadedName,
        hasEOL: !0
      });
    }
    function J(V, P, M) {
      if (M * h.spaceInFlowMin <= V && V <= M * h.spaceInFlowMax)
        return h.initialized && (d(), h.str.push(" ")), !1;
      const lA = h.fontName;
      let uA = 0;
      return h.vertical && (uA = V, V = 0), q(), d(), eA({
        width: Math.abs(V),
        height: Math.abs(uA),
        transform: P || z(),
        fontName: lA
      }), !0;
    }
    function q() {
      !h.initialized || !h.str || (h.vertical ? h.totalHeight += h.height * h.textAdvanceScale : h.totalWidth += h.width * h.textAdvanceScale, C.items.push(mA(h)), h.initialized = !1, h.str.length = 0);
    }
    function Z(V = !1) {
      const P = C.items.length;
      P !== 0 && (V && P < E1 || (n.enqueue(C, P), C.items = [], C.styles = /* @__PURE__ */ Object.create(null)));
    }
    const sA = new Sn();
    return new Promise(function V(P, M) {
      const lA = function(IA) {
        Z(!0), Promise.all([IA, n.ready]).then(function() {
          try {
            V(P, M);
          } catch (yA) {
            M(yA);
          }
        }, M);
      };
      t.ensureNotTerminated(), sA.reset();
      const uA = {};
      let pA, QA, EA, rA = [];
      for (; !(pA = sA.check()) && (rA.length = 0, uA.args = rA, !!N.read(uA)); ) {
        const IA = F;
        F = s.state;
        const yA = uA.fn;
        switch (rA = uA.args, yA | 0) {
          case w.setFont:
            const aA = rA[0].name, bA = rA[1];
            if (F.font && aA === F.fontName && bA === F.fontSize)
              break;
            q(), F.fontName = aA, F.fontSize = bA, lA(DA(aA, null));
            return;
          case w.setTextRise:
            F.textRise = rA[0];
            break;
          case w.setHScale:
            F.textHScale = rA[0] / 100;
            break;
          case w.setLeading:
            F.leading = rA[0];
            break;
          case w.moveText:
            F.translateTextLineMatrix(rA[0], rA[1]), F.textMatrix = F.textLineMatrix.slice();
            break;
          case w.setLeadingMoveText:
            F.leading = -rA[1], F.translateTextLineMatrix(rA[0], rA[1]), F.textMatrix = F.textLineMatrix.slice();
            break;
          case w.nextLine:
            F.carriageReturn();
            break;
          case w.setTextMatrix:
            F.setTextMatrix(rA[0], rA[1], rA[2], rA[3], rA[4], rA[5]), F.setTextLineMatrix(rA[0], rA[1], rA[2], rA[3], rA[4], rA[5]), wA();
            break;
          case w.setCharSpacing:
            F.charSpacing = rA[0];
            break;
          case w.setWordSpacing:
            F.wordSpacing = rA[0];
            break;
          case w.beginText:
            F.textMatrix = Zt.slice(), F.textLineMatrix = Zt.slice();
            break;
          case w.showSpacedText:
            if (!s.state.font) {
              y.ensureStateFont(s.state);
              continue;
            }
            const NA = (F.font.vertical ? 1 : -1) * F.fontSize / 1e3, de = rA[0];
            for (let dA = 0, KA = de.length; dA < KA; dA++) {
              const MA = de[dA];
              if (typeof MA == "string")
                G.push(MA);
              else if (typeof MA == "number" && MA !== 0) {
                const OA = G.join("");
                G.length = 0, oA({
                  chars: OA,
                  extraSpacing: MA * NA
                });
              }
            }
            if (G.length > 0) {
              const dA = G.join("");
              G.length = 0, oA({
                chars: dA,
                extraSpacing: 0
              });
            }
            break;
          case w.showText:
            if (!s.state.font) {
              y.ensureStateFont(s.state);
              continue;
            }
            oA({
              chars: rA[0],
              extraSpacing: 0
            });
            break;
          case w.nextLineShowText:
            if (!s.state.font) {
              y.ensureStateFont(s.state);
              continue;
            }
            F.carriageReturn(), oA({
              chars: rA[0],
              extraSpacing: 0
            });
            break;
          case w.nextLineSetSpacingShowText:
            if (!s.state.font) {
              y.ensureStateFont(s.state);
              continue;
            }
            F.wordSpacing = rA[0], F.charSpacing = rA[1], F.carriageReturn(), oA({
              chars: rA[2],
              extraSpacing: 0
            });
            break;
          case w.paintXObject:
            if (q(), v ?? (v = i.get("XObject") || R.empty), EA = rA[0] instanceof L, QA = rA[0].name, EA && X.getByName(QA))
              break;
            lA(new Promise(function(dA, KA) {
              if (!EA)
                throw new T("XObject must be referred to by name.");
              let MA = v.getRaw(QA);
              if (MA instanceof nA) {
                if (X.getByRef(MA)) {
                  dA();
                  return;
                }
                if (y.globalImageCache.getData(MA, y.pageIndex)) {
                  dA();
                  return;
                }
                MA = H.fetch(MA);
              }
              if (!(MA instanceof JA))
                throw new T("XObject should be a stream");
              const OA = MA.dict.get("Subtype");
              if (!(OA instanceof L))
                throw new T("XObject should have a Name subtype");
              if (OA.name !== "Form") {
                X.set(QA, MA.dict.objId, !0), dA();
                return;
              }
              const ge = s.state.clone(), We = new Cn(ge), vt = Yi(MA.dict.getArray("Matrix"), null);
              vt && We.transform(vt), Z();
              const ji = {
                enqueueInvoked: !1,
                enqueue(Qs, AA) {
                  this.enqueueInvoked = !0, n.enqueue(Qs, AA);
                },
                get desiredSize() {
                  return n.desiredSize;
                },
                get ready() {
                  return n.ready;
                }
              };
              y.getTextContent({
                stream: MA,
                task: t,
                resources: MA.dict.get("Resources") || i,
                stateManager: We,
                includeMarkedContent: a,
                sink: ji,
                seenStyles: r,
                viewBox: g,
                lang: o,
                markedContentData: I,
                disableNormalization: c,
                keepWhiteSpace: l
              }).then(function() {
                ji.enqueueInvoked || X.set(QA, MA.dict.objId, !0), dA();
              }, KA);
            }).catch(function(dA) {
              if (!(dA instanceof je)) {
                if (y.options.ignoreErrors) {
                  k(`getTextContent - ignoring XObject: "${dA}".`);
                  return;
                }
                throw dA;
              }
            }));
            return;
          case w.setGState:
            if (EA = rA[0] instanceof L, QA = rA[0].name, EA && gA.getByName(QA))
              break;
            lA(new Promise(function(dA, KA) {
              if (!EA)
                throw new T("GState must be referred to by name.");
              const MA = i.get("ExtGState");
              if (!(MA instanceof R))
                throw new T("ExtGState should be a dictionary.");
              const OA = MA.get(QA);
              if (!(OA instanceof R))
                throw new T("GState should be a dictionary.");
              const ge = OA.get("Font");
              if (!ge) {
                gA.set(QA, OA.objId, !0), dA();
                return;
              }
              q(), F.fontName = null, F.fontSize = ge[1], DA(null, ge[0]).then(dA, KA);
            }).catch(function(dA) {
              if (!(dA instanceof je)) {
                if (y.options.ignoreErrors) {
                  k(`getTextContent - ignoring ExtGState: "${dA}".`);
                  return;
                }
                throw dA;
              }
            }));
            return;
          case w.beginMarkedContent:
            q(), a && (I.level++, C.items.push({
              type: "beginMarkedContent",
              tag: rA[0] instanceof L ? rA[0].name : null
            }));
            break;
          case w.beginMarkedContentProps:
            if (q(), a) {
              I.level++;
              let dA = null;
              rA[1] instanceof R && (dA = rA[1].get("MCID")), C.items.push({
                type: "beginMarkedContentProps",
                id: Number.isInteger(dA) ? `${y.idFactory.getPageObjId()}_mc${dA}` : null,
                tag: rA[0] instanceof L ? rA[0].name : null
              });
            }
            break;
          case w.endMarkedContent:
            if (q(), a) {
              if (I.level === 0)
                break;
              I.level--, C.items.push({
                type: "endMarkedContent"
              });
            }
            break;
          case w.restore:
            IA && (IA.font !== F.font || IA.fontSize !== F.fontSize || IA.fontName !== F.fontName) && q();
            break;
        }
        if (C.items.length >= n.desiredSize) {
          pA = !0;
          break;
        }
      }
      if (pA) {
        lA(RI);
        return;
      }
      q(), Z(), P();
    }).catch((V) => {
      if (!(V instanceof je)) {
        if (this.options.ignoreErrors) {
          k(`getTextContent - ignoring errors during "${t.name}" task: "${V}".`), q(), Z();
          return;
        }
        throw V;
      }
    });
  }
  async extractDataStructures(A, t) {
    const i = this.xref;
    let s;
    const a = this.readToUnicode(t.toUnicode);
    if (t.composite) {
      const l = A.get("CIDSystemInfo");
      l instanceof R && (t.cidSystemInfo = {
        registry: XA(l.get("Registry")),
        ordering: XA(l.get("Ordering")),
        supplement: l.get("Supplement")
      });
      try {
        const C = A.get("CIDToGIDMap");
        C instanceof JA && (s = C.getBytes());
      } catch (C) {
        if (!this.options.ignoreErrors)
          throw C;
        k(`extractDataStructures - ignoring CIDToGIDMap data: "${C}".`);
      }
    }
    const n = [];
    let r = null, g;
    if (A.has("Encoding")) {
      if (g = A.get("Encoding"), g instanceof R) {
        if (r = g.get("BaseEncoding"), r = r instanceof L ? r.name : null, g.has("Differences")) {
          const l = g.get("Differences");
          let C = 0;
          for (const h of l) {
            const B = i.fetchIfRef(h);
            if (typeof B == "number")
              C = B;
            else if (B instanceof L)
              n[C++] = B.name;
            else
              throw new T(`Invalid entry in 'Differences' array: ${B}`);
          }
        }
      } else if (g instanceof L)
        r = g.name;
      else {
        const l = "Encoding is not a Name nor a Dict";
        if (!this.options.ignoreErrors)
          throw new T(l);
        k(l);
      }
      r !== "MacRomanEncoding" && r !== "MacExpertEncoding" && r !== "WinAnsiEncoding" && (r = null);
    }
    const o = !t.file || t.isInternalFont, I = lg()[t.name];
    if (r && o && I && (r = null), r)
      t.defaultEncoding = Vs(r);
    else {
      const l = !!(t.flags & Ft.Symbolic), C = !!(t.flags & Ft.Nonsymbolic);
      g = fi, t.type === "TrueType" && !C && (g = Xs), (l || I) && (g = Wg, o && (/Symbol/i.test(t.name) ? g = Og : /Dingbats/i.test(t.name) ? g = Zg : /Wingdings/i.test(t.name) && (g = Xs))), t.defaultEncoding = g;
    }
    t.differences = n, t.baseEncodingName = r, t.hasEncoding = !!r || n.length > 0, t.dict = A, t.toUnicode = await a;
    const c = await this.buildToUnicode(t);
    return t.toUnicode = c, s && (t.cidToGidMap = this.readCidToGidMap(s, c)), t;
  }
  _simpleFontToUnicode(A, t = !1) {
    nt(!A.composite, "Must be a simple font.");
    const i = [], s = A.defaultEncoding.slice(), a = A.baseEncodingName, n = A.differences;
    for (const g in n) {
      const o = n[g];
      o !== ".notdef" && (s[g] = o);
    }
    const r = si();
    for (const g in s) {
      let o = s[g];
      if (o === "")
        continue;
      let I = r[o];
      if (I !== void 0) {
        i[g] = String.fromCharCode(I);
        continue;
      }
      let c = 0;
      switch (o[0]) {
        case "G":
          o.length === 3 && (c = parseInt(o.substring(1), 16));
          break;
        case "g":
          o.length === 5 && (c = parseInt(o.substring(1), 16));
          break;
        case "C":
        case "c":
          if (o.length >= 3 && o.length <= 4) {
            const l = o.substring(1);
            if (t) {
              c = parseInt(l, 16);
              break;
            }
            if (c = +l, Number.isNaN(c) && Number.isInteger(parseInt(l, 16)))
              return this._simpleFontToUnicode(A, !0);
          }
          break;
        case "u":
          I = ss(o, r), I !== -1 && (c = I);
          break;
        default:
          switch (o) {
            case "f_h":
            case "f_t":
            case "T_h":
              i[g] = o.replaceAll("_", "");
              continue;
          }
          break;
      }
      if (c > 0 && c <= 1114111 && Number.isInteger(c)) {
        if (a && c === +g) {
          const l = Vs(a);
          if (l && (o = l[g])) {
            i[g] = String.fromCharCode(r[o]);
            continue;
          }
        }
        i[g] = String.fromCodePoint(c);
      }
    }
    return i;
  }
  async buildToUnicode(A) {
    var t, i;
    if (A.hasIncludedToUnicodeMap = ((t = A.toUnicode) == null ? void 0 : t.length) > 0, A.hasIncludedToUnicodeMap)
      return !A.composite && A.hasEncoding && (A.fallbackToUnicode = this._simpleFontToUnicode(A)), A.toUnicode;
    if (!A.composite)
      return new Us(this._simpleFontToUnicode(A));
    if (A.composite && (A.cMap.builtInCMap && !(A.cMap instanceof Z0) || ((i = A.cidSystemInfo) == null ? void 0 : i.registry) === "Adobe" && (A.cidSystemInfo.ordering === "GB1" || A.cidSystemInfo.ordering === "CNS1" || A.cidSystemInfo.ordering === "Japan1" || A.cidSystemInfo.ordering === "Korea1"))) {
      const {
        registry: s,
        ordering: a
      } = A.cidSystemInfo, n = L.get(`${s}-${a}-UCS2`), r = await Ka.create({
        encoding: n,
        fetchBuiltInCMap: this._fetchBuiltInCMapBound,
        useCMap: null
      }), g = [], o = [];
      return A.cMap.forEach(function(I, c) {
        if (c > 65535)
          throw new T("Max size of CID is 65,535");
        const l = r.lookup(c);
        if (l) {
          o.length = 0;
          for (let C = 0, h = l.length; C < h; C += 2)
            o.push((l.charCodeAt(C) << 8) + l.charCodeAt(C + 1));
          g[I] = String.fromCharCode(...o);
        }
      }), new Us(g);
    }
    return new Gt(A.firstChar, A.lastChar);
  }
  async readToUnicode(A) {
    if (!A)
      return null;
    if (A instanceof L) {
      const t = await Ka.create({
        encoding: A,
        fetchBuiltInCMap: this._fetchBuiltInCMapBound,
        useCMap: null
      });
      return t instanceof Z0 ? new Gt(0, 65535) : new Us(t.getMap());
    }
    if (A instanceof JA)
      try {
        const t = await Ka.create({
          encoding: A,
          fetchBuiltInCMap: this._fetchBuiltInCMapBound,
          useCMap: null
        });
        if (t instanceof Z0)
          return new Gt(0, 65535);
        const i = new Array(t.length);
        return t.forEach(function(s, a) {
          if (typeof a == "number") {
            i[s] = String.fromCodePoint(a);
            return;
          }
          a.length % 2 !== 0 && (a = "\0" + a);
          const n = [];
          for (let r = 0; r < a.length; r += 2) {
            const g = a.charCodeAt(r) << 8 | a.charCodeAt(r + 1);
            if ((g & 63488) !== 55296) {
              n.push(g);
              continue;
            }
            r += 2;
            const o = a.charCodeAt(r) << 8 | a.charCodeAt(r + 1);
            n.push(((g & 1023) << 10) + (o & 1023) + 65536);
          }
          i[s] = String.fromCodePoint(...n);
        }), new Us(i);
      } catch (t) {
        if (t instanceof je)
          return null;
        if (this.options.ignoreErrors)
          return k(`readToUnicode - ignoring ToUnicode data: "${t}".`), null;
        throw t;
      }
    return null;
  }
  readCidToGidMap(A, t) {
    const i = [];
    for (let s = 0, a = A.length; s < a; s++) {
      const n = A[s++] << 8 | A[s], r = s >> 1;
      n === 0 && !t.has(r) || (i[r] = n);
    }
    return i;
  }
  extractWidths(A, t, i) {
    const s = this.xref;
    let a = [], n = 0;
    const r = [];
    let g;
    if (i.composite) {
      const c = A.get("DW");
      n = typeof c == "number" ? Math.ceil(c) : 1e3;
      const l = A.get("W");
      if (Array.isArray(l))
        for (let C = 0, h = l.length; C < h; C++) {
          let B = s.fetchIfRef(l[C++]);
          if (!Number.isInteger(B))
            break;
          const Q = s.fetchIfRef(l[C]);
          if (Array.isArray(Q))
            for (const E of Q) {
              const f = s.fetchIfRef(E);
              typeof f == "number" && (a[B] = f), B++;
            }
          else if (Number.isInteger(Q)) {
            const E = s.fetchIfRef(l[++C]);
            if (typeof E != "number")
              continue;
            for (let f = B; f <= Q; f++)
              a[f] = E;
          } else
            break;
        }
      if (i.vertical) {
        const C = A.getArray("DW2");
        let h = rt(C, 2) ? C : [880, -1e3];
        if (g = [h[1], n * 0.5, h[0]], h = A.get("W2"), Array.isArray(h))
          for (let B = 0, Q = h.length; B < Q; B++) {
            let E = s.fetchIfRef(h[B++]);
            if (!Number.isInteger(E))
              break;
            const f = s.fetchIfRef(h[B]);
            if (Array.isArray(f))
              for (let d = 0, u = f.length; d < u; d++) {
                const x = [s.fetchIfRef(f[d++]), s.fetchIfRef(f[d++]), s.fetchIfRef(f[d])];
                rt(x, null) && (r[E] = x), E++;
              }
            else if (Number.isInteger(f)) {
              const d = [s.fetchIfRef(h[++B]), s.fetchIfRef(h[++B]), s.fetchIfRef(h[++B])];
              if (!rt(d, null))
                continue;
              for (let u = E; u <= f; u++)
                r[u] = d;
            } else
              break;
          }
      }
    } else {
      const c = A.get("Widths");
      if (Array.isArray(c)) {
        let l = i.firstChar;
        for (const h of c) {
          const B = s.fetchIfRef(h);
          typeof B == "number" && (a[l] = B), l++;
        }
        const C = t.get("MissingWidth");
        n = typeof C == "number" ? C : 0;
      } else {
        const l = A.get("BaseFont");
        if (l instanceof L) {
          const C = this.getBaseFontMetrics(l.name);
          a = this.buildCharCodeToWidth(C.widths, i), n = C.defaultWidth;
        }
      }
    }
    let o = !0, I = n;
    for (const c in a) {
      const l = a[c];
      if (l) {
        if (!I) {
          I = l;
          continue;
        }
        if (I !== l) {
          o = !1;
          break;
        }
      }
    }
    o ? i.flags |= Ft.FixedPitch : i.flags &= ~Ft.FixedPitch, i.defaultWidth = n, i.widths = a, i.defaultVMetrics = g, i.vmetrics = r;
  }
  isSerifFont(A) {
    const t = A.split("-", 1)[0];
    return t in Vg() || /serif/gi.test(t);
  }
  getBaseFontMetrics(A) {
    let t = 0, i = /* @__PURE__ */ Object.create(null), s = !1, n = ir()[A] || A;
    const r = kB();
    n in r || (n = this.isSerifFont(A) ? "Times-Roman" : "Helvetica");
    const g = r[n];
    return typeof g == "number" ? (t = g, s = !0) : i = g(), {
      defaultWidth: t,
      monospace: s,
      widths: i
    };
  }
  buildCharCodeToWidth(A, t) {
    const i = /* @__PURE__ */ Object.create(null), s = t.differences, a = t.defaultEncoding;
    for (let n = 0; n < 256; n++) {
      if (n in s && A[s[n]]) {
        i[n] = A[s[n]];
        continue;
      }
      if (n in a && A[a[n]]) {
        i[n] = A[a[n]];
        continue;
      }
    }
    return i;
  }
  preEvaluateFont(A) {
    const t = A;
    let i = A.get("Subtype");
    if (!(i instanceof L))
      throw new T("invalid font Subtype");
    let s = !1, a;
    if (i.name === "Type0") {
      const I = A.get("DescendantFonts");
      if (!I)
        throw new T("Descendant fonts are not specified");
      if (A = Array.isArray(I) ? this.xref.fetchIfRef(I[0]) : I, !(A instanceof R))
        throw new T("Descendant font is not a dictionary.");
      if (i = A.get("Subtype"), !(i instanceof L))
        throw new T("invalid font Subtype");
      s = !0;
    }
    let n = A.get("FirstChar");
    Number.isInteger(n) || (n = 0);
    let r = A.get("LastChar");
    Number.isInteger(r) || (r = s ? 65535 : 255);
    const g = A.get("FontDescriptor"), o = A.get("ToUnicode") || t.get("ToUnicode");
    if (g) {
      a = new h1();
      const I = t.getRaw("Encoding");
      if (I instanceof L)
        a.update(I.name);
      else if (I instanceof nA)
        a.update(I.toString());
      else if (I instanceof R) {
        for (const l of I.getRawValues())
          if (l instanceof L)
            a.update(l.name);
          else if (l instanceof nA)
            a.update(l.toString());
          else if (Array.isArray(l)) {
            const C = l.length, h = new Array(C);
            for (let B = 0; B < C; B++) {
              const Q = l[B];
              Q instanceof L ? h[B] = Q.name : (typeof Q == "number" || Q instanceof nA) && (h[B] = Q.toString());
            }
            a.update(h.join());
          }
      }
      if (a.update(`${n}-${r}`), o instanceof JA) {
        const l = o.str || o, C = l.buffer ? new Uint8Array(l.buffer.buffer, 0, l.bufferLength) : new Uint8Array(l.bytes.buffer, l.start, l.end - l.start);
        a.update(C);
      } else o instanceof L && a.update(o.name);
      const c = A.get("Widths") || t.get("Widths");
      if (Array.isArray(c)) {
        const l = [];
        for (const C of c)
          (typeof C == "number" || C instanceof nA) && l.push(C.toString());
        a.update(l.join());
      }
      if (s) {
        a.update("compositeFont");
        const l = A.get("W") || t.get("W");
        if (Array.isArray(l)) {
          const h = [];
          for (const B of l)
            if (typeof B == "number" || B instanceof nA)
              h.push(B.toString());
            else if (Array.isArray(B)) {
              const Q = [];
              for (const E of B)
                (typeof E == "number" || E instanceof nA) && Q.push(E.toString());
              h.push(`[${Q.join()}]`);
            }
          a.update(h.join());
        }
        const C = A.getRaw("CIDToGIDMap") || t.getRaw("CIDToGIDMap");
        C instanceof L ? a.update(C.name) : C instanceof nA ? a.update(C.toString()) : C instanceof JA && a.update(C.peekBytes());
      }
    }
    return {
      descriptor: g,
      dict: A,
      baseDict: t,
      composite: s,
      type: i.name,
      firstChar: n,
      lastChar: r,
      toUnicode: o,
      hash: a ? a.hexdigest() : ""
    };
  }
  async translateFont({
    descriptor: A,
    dict: t,
    baseDict: i,
    composite: s,
    type: a,
    firstChar: n,
    lastChar: r,
    toUnicode: g,
    cssFontInfo: o
  }) {
    const I = a === "Type3";
    if (!A)
      if (I) {
        const F = ai(t.getArray("FontBBox"), [0, 0, 0, 0]);
        A = new R(null), A.set("FontName", L.get(a)), A.set("FontBBox", F);
      } else {
        let F = t.get("BaseFont");
        if (!(F instanceof L))
          throw new T("Base font is not specified");
        F = F.name.replaceAll(/[,_]/g, "-");
        const eA = this.getBaseFontMetrics(F), z = F.split("-", 1)[0], cA = (this.isSerifFont(z) ? Ft.Serif : 0) | (eA.monospace ? Ft.FixedPitch : 0) | (lg()[z] ? Ft.Symbolic : Ft.Nonsymbolic), wA = {
          type: a,
          name: F,
          loadedName: i.loadedName,
          systemFontInfo: null,
          widths: eA.widths,
          defaultWidth: eA.defaultWidth,
          isSimulatedFlags: !0,
          flags: cA,
          firstChar: n,
          lastChar: r,
          toUnicode: g,
          xHeight: 0,
          capHeight: 0,
          italicAngle: 0,
          isType3Font: I
        }, mA = t.get("Widths"), DA = Xo(F);
        let _ = null;
        DA && (_ = await this.fetchStandardFontData(DA), wA.isInternalFont = !!_), !wA.isInternalFont && this.options.useSystemFonts && (wA.systemFontInfo = wI(this.systemFontCache, this.idFactory, this.options.standardFontDataUrl, F, DA, a));
        const TA = await this.extractDataStructures(t, wA);
        if (Array.isArray(mA)) {
          const oA = [];
          let U = n;
          for (const J of mA) {
            const q = this.xref.fetchIfRef(J);
            typeof q == "number" && (oA[U] = q), U++;
          }
          TA.widths = oA;
        } else
          TA.widths = this.buildCharCodeToWidth(eA.widths, TA);
        return new CI(F, _, TA);
      }
    let c = A.get("FontName"), l = t.get("BaseFont");
    typeof c == "string" && (c = L.get(c)), typeof l == "string" && (l = L.get(l));
    const C = c == null ? void 0 : c.name, h = l == null ? void 0 : l.name;
    if (!I && C !== h && (vA(`The FontDescriptor's FontName is "${C}" but should be the same as the Font's BaseFont "${h}".`), C && h && (h.startsWith(C) || !Vo(C) && Vo(h)) && (c = null)), c || (c = l), !(c instanceof L))
      throw new T("invalid font name");
    let B, Q, E, f, d;
    try {
      if (B = A.get("FontFile", "FontFile2", "FontFile3"), B)
        if (B instanceof JA) {
          if (B.isEmpty)
            throw new T("FontFile is empty");
        } else throw new T("FontFile should be a stream");
    } catch (F) {
      if (!this.options.ignoreErrors)
        throw F;
      k(`translateFont - fetching "${c.name}" font file: "${F}".`), B = null;
    }
    let u = !1, x = null, p = null;
    if (B) {
      if (B.dict) {
        const F = B.dict.get("Subtype");
        F instanceof L && (Q = F.name), E = B.dict.get("Length1"), f = B.dict.get("Length2"), d = B.dict.get("Length3");
      }
    } else if (o) {
      const F = Ao(c.name);
      F && (o.fontFamily = `${o.fontFamily}-PdfJS-XFA`, o.metrics = F.metrics || null, x = F.factors || null, B = await this.fetchStandardFontData(F.name), u = !!B, i = t = Zc(c.name), s = !0);
    } else if (!I) {
      const F = Xo(c.name);
      F && (B = await this.fetchStandardFontData(F), u = !!B), !u && this.options.useSystemFonts && (p = wI(this.systemFontCache, this.idFactory, this.options.standardFontDataUrl, c.name, F, a));
    }
    const m = Yi(t.getArray("FontMatrix"), c0), D = ai(A.getArray("FontBBox") || t.getArray("FontBBox"), void 0);
    let S = A.get("Ascent");
    typeof S != "number" && (S = void 0);
    let y = A.get("Descent");
    typeof y != "number" && (y = void 0);
    let H = A.get("XHeight");
    typeof H != "number" && (H = 0);
    let G = A.get("CapHeight");
    typeof G != "number" && (G = 0);
    let v = A.get("Flags");
    Number.isInteger(v) || (v = 0);
    let X = A.get("ItalicAngle");
    typeof X != "number" && (X = 0);
    const gA = {
      type: a,
      name: c.name,
      subtype: Q,
      file: B,
      length1: E,
      length2: f,
      length3: d,
      isInternalFont: u,
      loadedName: i.loadedName,
      composite: s,
      fixedPitch: !1,
      fontMatrix: m,
      firstChar: n,
      lastChar: r,
      toUnicode: g,
      bbox: D,
      ascent: S,
      descent: y,
      xHeight: H,
      capHeight: G,
      flags: v,
      italicAngle: X,
      isType3Font: I,
      cssFontInfo: o,
      scaleFactors: x,
      systemFontInfo: p
    };
    if (s) {
      const F = i.get("Encoding");
      F instanceof L && (gA.cidEncoding = F.name);
      const eA = await Ka.create({
        encoding: F,
        fetchBuiltInCMap: this._fetchBuiltInCMapBound,
        useCMap: null
      });
      gA.cMap = eA, gA.vertical = gA.cMap.vertical;
    }
    const N = await this.extractDataStructures(t, gA);
    return this.extractWidths(t, A, N), new CI(c.name, B, N);
  }
  static buildFontPaths(A, t, i, s) {
    function a(n) {
      const r = `${A.loadedName}_path_${n}`;
      try {
        if (A.renderer.hasBuiltPath(n))
          return;
        i.send("commonobj", [r, "FontPath", A.renderer.getPathJs(n)]);
      } catch (g) {
        if (s.ignoreErrors) {
          k(`buildFontPaths - ignoring ${r} glyph: "${g}".`);
          return;
        }
        throw g;
      }
    }
    for (const n of t) {
      a(n.fontChar);
      const r = n.accent;
      r != null && r.fontChar && a(r.fontChar);
    }
  }
  static get fallbackFontDict() {
    const A = new R();
    return A.set("BaseFont", L.get("Helvetica")), A.set("Type", L.get("FallbackType")), A.set("Subtype", L.get("FallbackType")), A.set("Encoding", L.get("WinAnsiEncoding")), tA(this, "fallbackFontDict", A);
  }
};
ua = new WeakSet(), xg = async function(A) {
  const t = await fetch(A);
  if (!t.ok)
    throw new Error(`Failed to fetch file "${A}" with "${t.statusText}".`);
  return new Uint8Array(await t.arrayBuffer());
};
let Bi = Xn;
class Za {
  constructor({
    loadedName: A,
    font: t,
    dict: i,
    evaluatorOptions: s
  }) {
    this.loadedName = A, this.font = t, this.dict = i, this._evaluatorOptions = s || Al, this.type3Loaded = null, this.type3Dependencies = t.isType3Font ? /* @__PURE__ */ new Set() : null, this.sent = !1;
  }
  send(A) {
    this.sent || (this.sent = !0, A.send("commonobj", [this.loadedName, "Font", this.font.exportData(this._evaluatorOptions.fontExtraProperties)]));
  }
  fallback(A) {
    this.font.data && (this.font.disableFontFace = !0, Bi.buildFontPaths(this.font, this.font.glyphCacheValues, A, this._evaluatorOptions));
  }
  loadType3Data(A, t, i) {
    if (this.type3Loaded)
      return this.type3Loaded;
    if (!this.font.isType3Font)
      throw new Error("Must be a Type3 font.");
    const s = A.clone({
      ignoreErrors: !1
    }), a = new Ge(A.type3FontRefs);
    this.dict.objId && !a.has(this.dict.objId) && a.put(this.dict.objId), s.type3FontRefs = a;
    const n = this.font, r = this.type3Dependencies;
    let g = Promise.resolve();
    const o = this.dict.get("CharProcs"), I = this.dict.get("Resources") || t, c = /* @__PURE__ */ Object.create(null), l = ye.normalizeRect(n.bbox || [0, 0, 0, 0]), C = l[2] - l[0], h = l[3] - l[1], B = Math.hypot(C, h);
    for (const Q of o.getKeys())
      g = g.then(() => {
        const E = o.get(Q), f = new Ct();
        return s.getOperatorList({
          stream: E,
          task: i,
          resources: I,
          operatorList: f
        }).then(() => {
          f.fnArray[0] === w.setCharWidthAndBounds && this._removeType3ColorOperators(f, B), c[Q] = f.getIR();
          for (const d of f.dependencies)
            r.add(d);
        }).catch(function(d) {
          k(`Type3 font resource "${Q}" is not available.`);
          const u = new Ct();
          c[Q] = u.getIR();
        });
      });
    return this.type3Loaded = g.then(() => {
      n.charProcOperatorList = c, this._bbox && (n.isCharBBox = !0, n.bbox = this._bbox);
    }), this.type3Loaded;
  }
  _removeType3ColorOperators(A, t = NaN) {
    const i = ye.normalizeRect(A.argsArray[0].slice(2)), s = i[2] - i[0], a = i[3] - i[1], n = Math.hypot(s, a);
    s === 0 || a === 0 ? (A.fnArray.splice(0, 1), A.argsArray.splice(0, 1)) : (t === 0 || Math.round(n / t) >= 10) && (this._bbox || (this._bbox = [1 / 0, 1 / 0, -1 / 0, -1 / 0]), this._bbox[0] = Math.min(this._bbox[0], i[0]), this._bbox[1] = Math.min(this._bbox[1], i[1]), this._bbox[2] = Math.max(this._bbox[2], i[2]), this._bbox[3] = Math.max(this._bbox[3], i[3]));
    let r = 0, g = A.length;
    for (; r < g; ) {
      switch (A.fnArray[r]) {
        case w.setCharWidthAndBounds:
          break;
        case w.setStrokeColorSpace:
        case w.setFillColorSpace:
        case w.setStrokeColor:
        case w.setStrokeColorN:
        case w.setFillColor:
        case w.setFillColorN:
        case w.setStrokeGray:
        case w.setFillGray:
        case w.setStrokeRGBColor:
        case w.setFillRGBColor:
        case w.setStrokeCMYKColor:
        case w.setFillCMYKColor:
        case w.shadingFill:
        case w.setRenderingIntent:
          A.fnArray.splice(r, 1), A.argsArray.splice(r, 1), g--;
          continue;
        case w.setGState:
          const [o] = A.argsArray[r];
          let I = 0, c = o.length;
          for (; I < c; ) {
            const [l] = o[I];
            switch (l) {
              case "TR":
              case "TR2":
              case "HT":
              case "BG":
              case "BG2":
              case "UCR":
              case "UCR2":
                o.splice(I, 1), c--;
                continue;
            }
            I++;
          }
          break;
      }
      r++;
    }
  }
}
class Cn {
  constructor(A = new tl()) {
    this.state = A, this.stateStack = [];
  }
  save() {
    const A = this.state;
    this.stateStack.push(this.state), this.state = A.clone();
  }
  restore() {
    const A = this.stateStack.pop();
    A && (this.state = A);
  }
  transform(A) {
    this.state.ctm = ye.transform(this.state.ctm, A);
  }
}
class f1 {
  constructor() {
    this.ctm = new Float32Array(Zt), this.fontName = null, this.fontSize = 0, this.loadedName = null, this.font = null, this.fontMatrix = c0, this.textMatrix = Zt.slice(), this.textLineMatrix = Zt.slice(), this.charSpacing = 0, this.wordSpacing = 0, this.leading = 0, this.textHScale = 1, this.textRise = 0;
  }
  setTextMatrix(A, t, i, s, a, n) {
    const r = this.textMatrix;
    r[0] = A, r[1] = t, r[2] = i, r[3] = s, r[4] = a, r[5] = n;
  }
  setTextLineMatrix(A, t, i, s, a, n) {
    const r = this.textLineMatrix;
    r[0] = A, r[1] = t, r[2] = i, r[3] = s, r[4] = a, r[5] = n;
  }
  translateTextMatrix(A, t) {
    const i = this.textMatrix;
    i[4] = i[0] * A + i[2] * t + i[4], i[5] = i[1] * A + i[3] * t + i[5];
  }
  translateTextLineMatrix(A, t) {
    const i = this.textLineMatrix;
    i[4] = i[0] * A + i[2] * t + i[4], i[5] = i[1] * A + i[3] * t + i[5];
  }
  carriageReturn() {
    this.translateTextLineMatrix(0, -this.leading), this.textMatrix = this.textLineMatrix.slice();
  }
  clone() {
    const A = Object.create(this);
    return A.textMatrix = this.textMatrix.slice(), A.textLineMatrix = this.textLineMatrix.slice(), A.fontMatrix = this.fontMatrix.slice(), A;
  }
}
class tl {
  constructor() {
    this.ctm = new Float32Array(Zt), this.font = null, this.textRenderingMode = nc.FILL, this._fillColorSpace = LA.singletons.gray, this._strokeColorSpace = LA.singletons.gray, this.patternFillColorSpace = null, this.patternStrokeColorSpace = null;
  }
  get fillColorSpace() {
    return this._fillColorSpace;
  }
  set fillColorSpace(A) {
    this._fillColorSpace = this.patternFillColorSpace = A;
  }
  get strokeColorSpace() {
    return this._strokeColorSpace;
  }
  set strokeColorSpace(A) {
    this._strokeColorSpace = this.patternStrokeColorSpace = A;
  }
  clone() {
    return Object.create(this);
  }
}
const q0 = class q0 {
  static get opMap() {
    return tA(this, "opMap", Object.assign(/* @__PURE__ */ Object.create(null), {
      w: {
        id: w.setLineWidth,
        numArgs: 1,
        variableArgs: !1
      },
      J: {
        id: w.setLineCap,
        numArgs: 1,
        variableArgs: !1
      },
      j: {
        id: w.setLineJoin,
        numArgs: 1,
        variableArgs: !1
      },
      M: {
        id: w.setMiterLimit,
        numArgs: 1,
        variableArgs: !1
      },
      d: {
        id: w.setDash,
        numArgs: 2,
        variableArgs: !1
      },
      ri: {
        id: w.setRenderingIntent,
        numArgs: 1,
        variableArgs: !1
      },
      i: {
        id: w.setFlatness,
        numArgs: 1,
        variableArgs: !1
      },
      gs: {
        id: w.setGState,
        numArgs: 1,
        variableArgs: !1
      },
      q: {
        id: w.save,
        numArgs: 0,
        variableArgs: !1
      },
      Q: {
        id: w.restore,
        numArgs: 0,
        variableArgs: !1
      },
      cm: {
        id: w.transform,
        numArgs: 6,
        variableArgs: !1
      },
      m: {
        id: w.moveTo,
        numArgs: 2,
        variableArgs: !1
      },
      l: {
        id: w.lineTo,
        numArgs: 2,
        variableArgs: !1
      },
      c: {
        id: w.curveTo,
        numArgs: 6,
        variableArgs: !1
      },
      v: {
        id: w.curveTo2,
        numArgs: 4,
        variableArgs: !1
      },
      y: {
        id: w.curveTo3,
        numArgs: 4,
        variableArgs: !1
      },
      h: {
        id: w.closePath,
        numArgs: 0,
        variableArgs: !1
      },
      re: {
        id: w.rectangle,
        numArgs: 4,
        variableArgs: !1
      },
      S: {
        id: w.stroke,
        numArgs: 0,
        variableArgs: !1
      },
      s: {
        id: w.closeStroke,
        numArgs: 0,
        variableArgs: !1
      },
      f: {
        id: w.fill,
        numArgs: 0,
        variableArgs: !1
      },
      F: {
        id: w.fill,
        numArgs: 0,
        variableArgs: !1
      },
      "f*": {
        id: w.eoFill,
        numArgs: 0,
        variableArgs: !1
      },
      B: {
        id: w.fillStroke,
        numArgs: 0,
        variableArgs: !1
      },
      "B*": {
        id: w.eoFillStroke,
        numArgs: 0,
        variableArgs: !1
      },
      b: {
        id: w.closeFillStroke,
        numArgs: 0,
        variableArgs: !1
      },
      "b*": {
        id: w.closeEOFillStroke,
        numArgs: 0,
        variableArgs: !1
      },
      n: {
        id: w.endPath,
        numArgs: 0,
        variableArgs: !1
      },
      W: {
        id: w.clip,
        numArgs: 0,
        variableArgs: !1
      },
      "W*": {
        id: w.eoClip,
        numArgs: 0,
        variableArgs: !1
      },
      BT: {
        id: w.beginText,
        numArgs: 0,
        variableArgs: !1
      },
      ET: {
        id: w.endText,
        numArgs: 0,
        variableArgs: !1
      },
      Tc: {
        id: w.setCharSpacing,
        numArgs: 1,
        variableArgs: !1
      },
      Tw: {
        id: w.setWordSpacing,
        numArgs: 1,
        variableArgs: !1
      },
      Tz: {
        id: w.setHScale,
        numArgs: 1,
        variableArgs: !1
      },
      TL: {
        id: w.setLeading,
        numArgs: 1,
        variableArgs: !1
      },
      Tf: {
        id: w.setFont,
        numArgs: 2,
        variableArgs: !1
      },
      Tr: {
        id: w.setTextRenderingMode,
        numArgs: 1,
        variableArgs: !1
      },
      Ts: {
        id: w.setTextRise,
        numArgs: 1,
        variableArgs: !1
      },
      Td: {
        id: w.moveText,
        numArgs: 2,
        variableArgs: !1
      },
      TD: {
        id: w.setLeadingMoveText,
        numArgs: 2,
        variableArgs: !1
      },
      Tm: {
        id: w.setTextMatrix,
        numArgs: 6,
        variableArgs: !1
      },
      "T*": {
        id: w.nextLine,
        numArgs: 0,
        variableArgs: !1
      },
      Tj: {
        id: w.showText,
        numArgs: 1,
        variableArgs: !1
      },
      TJ: {
        id: w.showSpacedText,
        numArgs: 1,
        variableArgs: !1
      },
      "'": {
        id: w.nextLineShowText,
        numArgs: 1,
        variableArgs: !1
      },
      '"': {
        id: w.nextLineSetSpacingShowText,
        numArgs: 3,
        variableArgs: !1
      },
      d0: {
        id: w.setCharWidth,
        numArgs: 2,
        variableArgs: !1
      },
      d1: {
        id: w.setCharWidthAndBounds,
        numArgs: 6,
        variableArgs: !1
      },
      CS: {
        id: w.setStrokeColorSpace,
        numArgs: 1,
        variableArgs: !1
      },
      cs: {
        id: w.setFillColorSpace,
        numArgs: 1,
        variableArgs: !1
      },
      SC: {
        id: w.setStrokeColor,
        numArgs: 4,
        variableArgs: !0
      },
      SCN: {
        id: w.setStrokeColorN,
        numArgs: 33,
        variableArgs: !0
      },
      sc: {
        id: w.setFillColor,
        numArgs: 4,
        variableArgs: !0
      },
      scn: {
        id: w.setFillColorN,
        numArgs: 33,
        variableArgs: !0
      },
      G: {
        id: w.setStrokeGray,
        numArgs: 1,
        variableArgs: !1
      },
      g: {
        id: w.setFillGray,
        numArgs: 1,
        variableArgs: !1
      },
      RG: {
        id: w.setStrokeRGBColor,
        numArgs: 3,
        variableArgs: !1
      },
      rg: {
        id: w.setFillRGBColor,
        numArgs: 3,
        variableArgs: !1
      },
      K: {
        id: w.setStrokeCMYKColor,
        numArgs: 4,
        variableArgs: !1
      },
      k: {
        id: w.setFillCMYKColor,
        numArgs: 4,
        variableArgs: !1
      },
      sh: {
        id: w.shadingFill,
        numArgs: 1,
        variableArgs: !1
      },
      BI: {
        id: w.beginInlineImage,
        numArgs: 0,
        variableArgs: !1
      },
      ID: {
        id: w.beginImageData,
        numArgs: 0,
        variableArgs: !1
      },
      EI: {
        id: w.endInlineImage,
        numArgs: 1,
        variableArgs: !1
      },
      Do: {
        id: w.paintXObject,
        numArgs: 1,
        variableArgs: !1
      },
      MP: {
        id: w.markPoint,
        numArgs: 1,
        variableArgs: !1
      },
      DP: {
        id: w.markPointProps,
        numArgs: 2,
        variableArgs: !1
      },
      BMC: {
        id: w.beginMarkedContent,
        numArgs: 1,
        variableArgs: !1
      },
      BDC: {
        id: w.beginMarkedContentProps,
        numArgs: 2,
        variableArgs: !1
      },
      EMC: {
        id: w.endMarkedContent,
        numArgs: 0,
        variableArgs: !1
      },
      BX: {
        id: w.beginCompat,
        numArgs: 0,
        variableArgs: !1
      },
      EX: {
        id: w.endCompat,
        numArgs: 0,
        variableArgs: !1
      },
      BM: null,
      BD: null,
      true: null,
      fa: null,
      fal: null,
      fals: null,
      false: null,
      nu: null,
      nul: null,
      null: null
    }));
  }
  constructor(A, t, i = new Cn()) {
    this.parser = new Fi({
      lexer: new Wt(A, q0.opMap),
      xref: t
    }), this.stateManager = i, this.nonProcessedArgs = [], this._isPathOp = !1, this._numInvalidPathOPS = 0;
  }
  get savedStatesDepth() {
    return this.stateManager.stateStack.length;
  }
  read(A) {
    let t = A.args;
    for (; ; ) {
      const i = this.parser.getObj();
      if (i instanceof De) {
        const s = i.cmd, a = q0.opMap[s];
        if (!a) {
          k(`Unknown command "${s}".`);
          continue;
        }
        const n = a.id, r = a.numArgs;
        let g = t !== null ? t.length : 0;
        if (this._isPathOp || (this._numInvalidPathOPS = 0), this._isPathOp = n >= w.moveTo && n <= w.endPath, a.variableArgs)
          g > r && vA(`Command ${s}: expected [0, ${r}] args, but received ${g} args.`);
        else {
          if (g !== r) {
            const o = this.nonProcessedArgs;
            for (; g > r; )
              o.push(t.shift()), g--;
            for (; g < r && o.length !== 0; )
              t === null && (t = []), t.unshift(o.pop()), g++;
          }
          if (g < r) {
            const o = `command ${s}: expected ${r} args, but received ${g} args.`;
            if (this._isPathOp && ++this._numInvalidPathOPS > q0.MAX_INVALID_PATH_OPS)
              throw new T(`Invalid ${o}`);
            k(`Skipping ${o}`), t !== null && (t.length = 0);
            continue;
          }
        }
        return this.preprocessCommand(n, t), A.fn = n, A.args = t, !0;
      }
      if (i === Me)
        return !1;
      if (i !== null && (t === null && (t = []), t.push(i), t.length > 33))
        throw new T("Too many arguments");
    }
  }
  preprocessCommand(A, t) {
    switch (A | 0) {
      case w.save:
        this.stateManager.save();
        break;
      case w.restore:
        this.stateManager.restore();
        break;
      case w.transform:
        this.stateManager.transform(t);
        break;
    }
  }
};
et(q0, "MAX_INVALID_PATH_OPS", 10);
let ns = q0;
class u1 extends ns {
  constructor(A) {
    super(new Bt(A));
  }
  parse() {
    const A = {
      fn: 0,
      args: []
    }, t = {
      fontSize: 0,
      fontName: "",
      fontColor: new Uint8ClampedArray(3)
    };
    try {
      for (; A.args.length = 0, !!this.read(A); ) {
        if (this.savedStatesDepth !== 0)
          continue;
        const {
          fn: i,
          args: s
        } = A;
        switch (i | 0) {
          case w.setFont:
            const [a, n] = s;
            a instanceof L && (t.fontName = a.name), typeof n == "number" && n > 0 && (t.fontSize = n);
            break;
          case w.setFillRGBColor:
            LA.singletons.rgb.getRgbItem(s, 0, t.fontColor, 0);
            break;
          case w.setFillGray:
            LA.singletons.gray.getRgbItem(s, 0, t.fontColor, 0);
            break;
          case w.setFillCMYKColor:
            LA.singletons.cmyk.getRgbItem(s, 0, t.fontColor, 0);
            break;
        }
      }
    } catch (i) {
      k(`parseDefaultAppearance - ignoring errors: "${i}".`);
    }
    return t;
  }
}
function to(e) {
  return new u1(e).parse();
}
class d1 extends ns {
  constructor(A, t, i) {
    var s;
    super(A), this.stream = A, this.evaluatorOptions = t, this.xref = i, this.resources = (s = A.dict) == null ? void 0 : s.get("Resources");
  }
  parse() {
    const A = {
      fn: 0,
      args: []
    };
    let t = {
      scaleFactor: 1,
      fontSize: 0,
      fontName: "",
      fontColor: new Uint8ClampedArray(3),
      fillColorSpace: LA.singletons.gray
    }, i = !1;
    const s = [];
    try {
      for (; A.args.length = 0, !(i || !this.read(A)); ) {
        const {
          fn: a,
          args: n
        } = A;
        switch (a | 0) {
          case w.save:
            s.push({
              scaleFactor: t.scaleFactor,
              fontSize: t.fontSize,
              fontName: t.fontName,
              fontColor: t.fontColor.slice(),
              fillColorSpace: t.fillColorSpace
            });
            break;
          case w.restore:
            t = s.pop() || t;
            break;
          case w.setTextMatrix:
            t.scaleFactor *= Math.hypot(n[0], n[1]);
            break;
          case w.setFont:
            const [r, g] = n;
            r instanceof L && (t.fontName = r.name), typeof g == "number" && g > 0 && (t.fontSize = g * t.scaleFactor);
            break;
          case w.setFillColorSpace:
            t.fillColorSpace = LA.parse({
              cs: n[0],
              xref: this.xref,
              resources: this.resources,
              pdfFunctionFactory: this._pdfFunctionFactory,
              localColorSpaceCache: this._localColorSpaceCache
            });
            break;
          case w.setFillColor:
            t.fillColorSpace.getRgbItem(n, 0, t.fontColor, 0);
            break;
          case w.setFillRGBColor:
            LA.singletons.rgb.getRgbItem(n, 0, t.fontColor, 0);
            break;
          case w.setFillGray:
            LA.singletons.gray.getRgbItem(n, 0, t.fontColor, 0);
            break;
          case w.setFillCMYKColor:
            LA.singletons.cmyk.getRgbItem(n, 0, t.fontColor, 0);
            break;
          case w.showText:
          case w.showSpacedText:
          case w.nextLineShowText:
          case w.nextLineSetSpacingShowText:
            i = !0;
            break;
        }
      }
    } catch (a) {
      k(`parseAppearanceStream - ignoring errors: "${a}".`);
    }
    return this.stream.reset(), delete t.scaleFactor, delete t.fillColorSpace, t;
  }
  get _localColorSpaceCache() {
    return tA(this, "_localColorSpaceCache", new jc());
  }
  get _pdfFunctionFactory() {
    const A = new Vc({
      xref: this.xref,
      isEvalSupported: this.evaluatorOptions.isEvalSupported
    });
    return tA(this, "_pdfFunctionFactory", A);
  }
}
function x1(e, A, t) {
  return new d1(e, A, t).parse();
}
function pi(e, A) {
  if (e[0] === e[1] && e[1] === e[2]) {
    const t = e[0] / 255;
    return `${$A(t)} ${A ? "g" : "G"}`;
  }
  return Array.from(e, (t) => $A(t / 255)).join(" ") + ` ${A ? "rg" : "RG"}`;
}
function m1({
  fontSize: e,
  fontName: A,
  fontColor: t
}) {
  return `/${Tg(A)} ${e} Tf ${pi(t, !0)}`;
}
class ti {
  constructor(A, t) {
    this.xref = A, this.widths = null, this.firstChar = 1 / 0, this.lastChar = -1 / 0, this.fontFamily = t;
    const i = new OffscreenCanvas(1, 1);
    this.ctxMeasure = i.getContext("2d", {
      willReadFrequently: !0
    }), ti._fontNameId || (ti._fontNameId = 1), this.fontName = L.get(`InvalidPDFjsFont_${t}_${ti._fontNameId++}`);
  }
  get fontDescriptorRef() {
    if (!ti._fontDescriptorRef) {
      const A = new R(this.xref);
      A.set("Type", L.get("FontDescriptor")), A.set("FontName", this.fontName), A.set("FontFamily", "MyriadPro Regular"), A.set("FontBBox", [0, 0, 0, 0]), A.set("FontStretch", L.get("Normal")), A.set("FontWeight", 400), A.set("ItalicAngle", 0), ti._fontDescriptorRef = this.xref.getNewPersistentRef(A);
    }
    return ti._fontDescriptorRef;
  }
  get descendantFontRef() {
    const A = new R(this.xref);
    A.set("BaseFont", this.fontName), A.set("Type", L.get("Font")), A.set("Subtype", L.get("CIDFontType0")), A.set("CIDToGIDMap", L.get("Identity")), A.set("FirstChar", this.firstChar), A.set("LastChar", this.lastChar), A.set("FontDescriptor", this.fontDescriptorRef), A.set("DW", 1e3);
    const t = [], i = [...this.widths.entries()].sort();
    let s = null, a = null;
    for (const [r, g] of i) {
      if (!s) {
        s = r, a = [g];
        continue;
      }
      r === s + a.length ? a.push(g) : (t.push(s, a), s = r, a = [g]);
    }
    s && t.push(s, a), A.set("W", t);
    const n = new R(this.xref);
    return n.set("Ordering", "Identity"), n.set("Registry", "Adobe"), n.set("Supplement", 0), A.set("CIDSystemInfo", n), this.xref.getNewPersistentRef(A);
  }
  get baseFontRef() {
    const A = new R(this.xref);
    return A.set("BaseFont", this.fontName), A.set("Type", L.get("Font")), A.set("Subtype", L.get("Type0")), A.set("Encoding", L.get("Identity-H")), A.set("DescendantFonts", [this.descendantFontRef]), A.set("ToUnicode", L.get("Identity-H")), this.xref.getNewPersistentRef(A);
  }
  get resources() {
    const A = new R(this.xref), t = new R(this.xref);
    return t.set(this.fontName.name, this.baseFontRef), A.set("Font", t), A;
  }
  _createContext() {
    return this.widths = /* @__PURE__ */ new Map(), this.ctxMeasure.font = `1000px ${this.fontFamily}`, this.ctxMeasure;
  }
  createFontResources(A) {
    const t = this._createContext();
    for (const i of A.split(/\r\n?|\n/))
      for (const s of i.split("")) {
        const a = s.charCodeAt(0);
        if (this.widths.has(a))
          continue;
        const n = t.measureText(s), r = Math.ceil(n.width);
        this.widths.set(a, r), this.firstChar = Math.min(a, this.firstChar), this.lastChar = Math.max(a, this.lastChar);
      }
    return this.resources;
  }
  static getFirstPositionInfo(A, t, i) {
    const [s, a, n, r] = A;
    let g = n - s, o = r - a;
    t % 180 !== 0 && ([g, o] = [o, g]);
    const I = Ei * i, c = fn * i;
    return {
      coords: [0, o + c - I],
      bbox: [0, 0, g, o],
      matrix: t !== 0 ? wn(t, o, I) : void 0
    };
  }
  createAppearance(A, t, i, s, a, n) {
    const r = this._createContext(), g = [];
    let o = -1 / 0;
    for (const v of A.split(/\r\n?|\n/)) {
      g.push(v);
      const X = r.measureText(v).width;
      o = Math.max(o, X);
      for (const gA of UC(v)) {
        const N = String.fromCodePoint(gA);
        let F = this.widths.get(gA);
        if (F === void 0) {
          const eA = r.measureText(N);
          F = Math.ceil(eA.width), this.widths.set(gA, F), this.firstChar = Math.min(gA, this.firstChar), this.lastChar = Math.max(gA, this.lastChar);
        }
      }
    }
    o *= s / 1e3;
    const [I, c, l, C] = t;
    let h = l - I, B = C - c;
    i % 180 !== 0 && ([h, B] = [B, h]);
    let Q = 1;
    o > h && (Q = h / o);
    let E = 1;
    const f = Ei * s, d = fn * s, u = f * g.length;
    u > B && (E = B / u);
    const x = Math.min(Q, E), p = s * x, m = ["q", `0 0 ${$A(h)} ${$A(B)} re W n`, "BT", `1 0 0 1 0 ${$A(B + d)} Tm 0 Tc ${pi(a, !0)}`, `/${this.fontName.name} ${$A(p)} Tf`], {
      resources: D
    } = this;
    if (n = typeof n == "number" && n >= 0 && n <= 1 ? n : 1, n !== 1) {
      m.push("/R0 gs");
      const v = new R(this.xref), X = new R(this.xref);
      X.set("ca", n), X.set("CA", n), X.set("Type", L.get("ExtGState")), v.set("R0", X), D.set("ExtGState", v);
    }
    const S = $A(f);
    for (const v of g)
      m.push(`0 -${S} Td <${HC(v)}> Tj`);
    m.push("ET", "Q");
    const y = m.join(`
`), H = new R(this.xref);
    if (H.set("Subtype", L.get("Form")), H.set("Type", L.get("XObject")), H.set("BBox", [0, 0, h, B]), H.set("Length", y.length), H.set("Resources", D), i) {
      const v = wn(i, h, B);
      H.set("Matrix", v);
    }
    const G = new Bt(y);
    return G.dict = H, G;
  }
}
class il {
  constructor(A, t, i) {
    this.root = A, this.xref = t, this._type = i;
  }
  getAll() {
    const A = /* @__PURE__ */ new Map();
    if (!this.root)
      return A;
    const t = this.xref, i = new Ge();
    i.put(this.root);
    const s = [this.root];
    for (; s.length > 0; ) {
      const a = t.fetchIfRef(s.shift());
      if (!(a instanceof R))
        continue;
      if (a.has("Kids")) {
        const r = a.get("Kids");
        if (!Array.isArray(r))
          continue;
        for (const g of r) {
          if (i.has(g))
            throw new T(`Duplicate entry in "${this._type}" tree.`);
          s.push(g), i.put(g);
        }
        continue;
      }
      const n = a.get(this._type);
      if (Array.isArray(n))
        for (let r = 0, g = n.length; r < g; r += 2)
          A.set(t.fetchIfRef(n[r]), t.fetchIfRef(n[r + 1]));
    }
    return A;
  }
  getRaw(A) {
    if (!this.root)
      return null;
    const t = this.xref;
    let i = t.fetchIfRef(this.root), s = 0;
    const a = 10;
    for (; i.has("Kids"); ) {
      if (++s > a)
        return k(`Search depth limit reached for "${this._type}" tree.`), null;
      const r = i.get("Kids");
      if (!Array.isArray(r))
        return null;
      let g = 0, o = r.length - 1;
      for (; g <= o; ) {
        const I = g + o >> 1, c = t.fetchIfRef(r[I]), l = c.get("Limits");
        if (A < t.fetchIfRef(l[0]))
          o = I - 1;
        else if (A > t.fetchIfRef(l[1]))
          g = I + 1;
        else {
          i = c;
          break;
        }
      }
      if (g > o)
        return null;
    }
    const n = i.get(this._type);
    if (Array.isArray(n)) {
      let r = 0, g = n.length - 2;
      for (; r <= g; ) {
        const o = r + g >> 1, I = o + (o & 1), c = t.fetchIfRef(n[I]);
        if (A < c)
          g = I - 2;
        else if (A > c)
          r = I + 2;
        else
          return n[I + 1];
      }
    }
    return null;
  }
  get(A) {
    return this.xref.fetchIfRef(this.getRaw(A));
  }
}
class D0 extends il {
  constructor(A, t) {
    super(A, t, "Names");
  }
}
class Fn extends il {
  constructor(A, t) {
    super(A, t, "Nums");
  }
}
function io() {
  cQ(), kC(), QB(), tr.cleanup();
}
function NI(e) {
  return e instanceof R ? e.has("UF") ? e.get("UF") : e.has("F") ? e.get("F") : e.has("Unix") ? e.get("Unix") : e.has("Mac") ? e.get("Mac") : e.has("DOS") ? e.get("DOS") : null : null;
}
function p1(e) {
  return e.substring(e.lastIndexOf("/") + 1);
}
var da;
class mg {
  constructor(A, t, i = !1) {
    jA(this, da, !1);
    A instanceof R && (this.xref = t, this.root = A, A.has("FS") && (this.fs = A.get("FS")), A.has("RF") && k("Related file specifications are not supported"), i || (A.has("EF") ? wt(this, da, !0) : k("Non-embedded file specifications are not supported")));
  }
  get filename() {
    let A = "";
    const t = NI(this.root);
    return t && typeof t == "string" && (A = XA(t).replaceAll("\\\\", "\\").replaceAll("\\/", "/").replaceAll("\\", "/")), tA(this, "filename", A || "unnamed");
  }
  get content() {
    var t;
    if (!PA(this, da))
      return null;
    this._contentRef || (this._contentRef = NI((t = this.root) == null ? void 0 : t.get("EF")));
    let A = null;
    if (this._contentRef) {
      const i = this.xref.fetchIfRef(this._contentRef);
      i instanceof JA ? A = i.getBytes() : k("Embedded file specification points to non-existing/invalid content");
    } else
      k("Embedded file specification does not have any content");
    return A;
  }
  get description() {
    var i;
    let A = "";
    const t = (i = this.root) == null ? void 0 : i.get("Desc");
    return t && typeof t == "string" && (A = XA(t)), tA(this, "description", A);
  }
  get serializable() {
    return {
      rawFilename: this.filename,
      filename: p1(this.filename),
      content: this.content,
      description: this.description
    };
  }
}
da = new WeakMap();
const ot = {
  NoError: 0,
  EndOfDocument: -1,
  UnterminatedCdat: -2,
  UnterminatedXmlDeclaration: -3,
  UnterminatedDoctypeDeclaration: -4,
  UnterminatedComment: -5,
  MalformedElement: -6,
  OutOfMemory: -7,
  UnterminatedAttributeValue: -8,
  UnterminatedElement: -9,
  ElementNeverBegun: -10
};
function M0(e, A) {
  const t = e[A];
  return t === " " || t === `
` || t === "\r" || t === "	";
}
function y1(e) {
  for (let A = 0, t = e.length; A < t; A++)
    if (!M0(e, A))
      return !1;
  return !0;
}
class sl {
  _resolveEntities(A) {
    return A.replaceAll(/&([^;]+);/g, (t, i) => {
      if (i.substring(0, 2) === "#x")
        return String.fromCodePoint(parseInt(i.substring(2), 16));
      if (i.substring(0, 1) === "#")
        return String.fromCodePoint(parseInt(i.substring(1), 10));
      switch (i) {
        case "lt":
          return "<";
        case "gt":
          return ">";
        case "amp":
          return "&";
        case "quot":
          return '"';
        case "apos":
          return "'";
      }
      return this.onResolveEntity(i);
    });
  }
  _parseContent(A, t) {
    const i = [];
    let s = t;
    function a() {
      for (; s < A.length && M0(A, s); )
        ++s;
    }
    for (; s < A.length && !M0(A, s) && A[s] !== ">" && A[s] !== "/"; )
      ++s;
    const n = A.substring(t, s);
    for (a(); s < A.length && A[s] !== ">" && A[s] !== "/" && A[s] !== "?"; ) {
      a();
      let r = "", g = "";
      for (; s < A.length && !M0(A, s) && A[s] !== "="; )
        r += A[s], ++s;
      if (a(), A[s] !== "=")
        return null;
      ++s, a();
      const o = A[s];
      if (o !== '"' && o !== "'")
        return null;
      const I = A.indexOf(o, ++s);
      if (I < 0)
        return null;
      g = A.substring(s, I), i.push({
        name: r,
        value: this._resolveEntities(g)
      }), s = I + 1, a();
    }
    return {
      name: n,
      attributes: i,
      parsed: s - t
    };
  }
  _parseProcessingInstruction(A, t) {
    let i = t;
    function s() {
      for (; i < A.length && M0(A, i); )
        ++i;
    }
    for (; i < A.length && !M0(A, i) && A[i] !== ">" && A[i] !== "?" && A[i] !== "/"; )
      ++i;
    const a = A.substring(t, i);
    s();
    const n = i;
    for (; i < A.length && (A[i] !== "?" || A[i + 1] !== ">"); )
      ++i;
    const r = A.substring(n, i);
    return {
      name: a,
      value: r,
      parsed: i - t
    };
  }
  parseXml(A) {
    let t = 0;
    for (; t < A.length; ) {
      const i = A[t];
      let s = t;
      if (i === "<") {
        ++s;
        const a = A[s];
        let n;
        switch (a) {
          case "/":
            if (++s, n = A.indexOf(">", s), n < 0) {
              this.onError(ot.UnterminatedElement);
              return;
            }
            this.onEndElement(A.substring(s, n)), s = n + 1;
            break;
          case "?":
            ++s;
            const r = this._parseProcessingInstruction(A, s);
            if (A.substring(s + r.parsed, s + r.parsed + 2) !== "?>") {
              this.onError(ot.UnterminatedXmlDeclaration);
              return;
            }
            this.onPi(r.name, r.value), s += r.parsed + 2;
            break;
          case "!":
            if (A.substring(s + 1, s + 3) === "--") {
              if (n = A.indexOf("-->", s + 3), n < 0) {
                this.onError(ot.UnterminatedComment);
                return;
              }
              this.onComment(A.substring(s + 3, n)), s = n + 3;
            } else if (A.substring(s + 1, s + 8) === "[CDATA[") {
              if (n = A.indexOf("]]>", s + 8), n < 0) {
                this.onError(ot.UnterminatedCdat);
                return;
              }
              this.onCdata(A.substring(s + 8, n)), s = n + 3;
            } else if (A.substring(s + 1, s + 8) === "DOCTYPE") {
              const I = A.indexOf("[", s + 8);
              let c = !1;
              if (n = A.indexOf(">", s + 8), n < 0) {
                this.onError(ot.UnterminatedDoctypeDeclaration);
                return;
              }
              if (I > 0 && n > I) {
                if (n = A.indexOf("]>", s + 8), n < 0) {
                  this.onError(ot.UnterminatedDoctypeDeclaration);
                  return;
                }
                c = !0;
              }
              const l = A.substring(s + 8, n + (c ? 1 : 0));
              this.onDoctype(l), s = n + (c ? 2 : 1);
            } else {
              this.onError(ot.MalformedElement);
              return;
            }
            break;
          default:
            const g = this._parseContent(A, s);
            if (g === null) {
              this.onError(ot.MalformedElement);
              return;
            }
            let o = !1;
            if (A.substring(s + g.parsed, s + g.parsed + 2) === "/>")
              o = !0;
            else if (A.substring(s + g.parsed, s + g.parsed + 1) !== ">") {
              this.onError(ot.UnterminatedElement);
              return;
            }
            this.onBeginElement(g.name, g.attributes, o), s += g.parsed + (o ? 2 : 1);
            break;
        }
      } else {
        for (; s < A.length && A[s] !== "<"; )
          s++;
        const a = A.substring(t, s);
        this.onText(this._resolveEntities(a));
      }
      t = s;
    }
  }
  onResolveEntity(A) {
    return `&${A};`;
  }
  onPi(A, t) {
  }
  onComment(A) {
  }
  onCdata(A) {
  }
  onDoctype(A) {
  }
  onText(A) {
  }
  onBeginElement(A, t, i) {
  }
  onEndElement(A) {
  }
  onError(A) {
  }
}
class Ks {
  constructor(A, t) {
    this.nodeName = A, this.nodeValue = t, Object.defineProperty(this, "parentNode", {
      value: null,
      writable: !0
    });
  }
  get firstChild() {
    var A;
    return (A = this.childNodes) == null ? void 0 : A[0];
  }
  get nextSibling() {
    const A = this.parentNode.childNodes;
    if (!A)
      return;
    const t = A.indexOf(this);
    if (t !== -1)
      return A[t + 1];
  }
  get textContent() {
    return this.childNodes ? this.childNodes.map(function(A) {
      return A.textContent;
    }).join("") : this.nodeValue || "";
  }
  get children() {
    return this.childNodes || [];
  }
  hasChildNodes() {
    var A;
    return ((A = this.childNodes) == null ? void 0 : A.length) > 0;
  }
  searchNode(A, t) {
    var n;
    if (t >= A.length)
      return this;
    const i = A[t];
    if (i.name.startsWith("#") && t < A.length - 1)
      return this.searchNode(A, t + 1);
    const s = [];
    let a = this;
    for (; ; ) {
      if (i.name === a.nodeName)
        if (i.pos === 0) {
          const r = a.searchNode(A, t + 1);
          if (r !== null)
            return r;
        } else {
          if (s.length === 0)
            return null;
          {
            const [r] = s.pop();
            let g = 0;
            for (const o of r.childNodes)
              if (i.name === o.nodeName) {
                if (g === i.pos)
                  return o.searchNode(A, t + 1);
                g++;
              }
            return a.searchNode(A, t + 1);
          }
        }
      if (((n = a.childNodes) == null ? void 0 : n.length) > 0)
        s.push([a, 0]), a = a.childNodes[0];
      else {
        if (s.length === 0)
          return null;
        for (; s.length !== 0; ) {
          const [r, g] = s.pop(), o = g + 1;
          if (o < r.childNodes.length) {
            s.push([r, o]), a = r.childNodes[o];
            break;
          }
        }
        if (s.length === 0)
          return null;
      }
    }
  }
  dump(A) {
    if (this.nodeName === "#text") {
      A.push(O0(this.nodeValue));
      return;
    }
    if (A.push(`<${this.nodeName}`), this.attributes)
      for (const t of this.attributes)
        A.push(` ${t.name}="${O0(t.value)}"`);
    if (this.hasChildNodes()) {
      A.push(">");
      for (const t of this.childNodes)
        t.dump(A);
      A.push(`</${this.nodeName}>`);
    } else this.nodeValue ? A.push(`>${O0(this.nodeValue)}</${this.nodeName}>`) : A.push("/>");
  }
}
class ar extends sl {
  constructor({
    hasAttributes: A = !1,
    lowerCaseName: t = !1
  }) {
    super(), this._currentFragment = null, this._stack = null, this._errorCode = ot.NoError, this._hasAttributes = A, this._lowerCaseName = t;
  }
  parseFromString(A) {
    if (this._currentFragment = [], this._stack = [], this._errorCode = ot.NoError, this.parseXml(A), this._errorCode !== ot.NoError)
      return;
    const [t] = this._currentFragment;
    if (t)
      return {
        documentElement: t
      };
  }
  onText(A) {
    if (y1(A))
      return;
    const t = new Ks("#text", A);
    this._currentFragment.push(t);
  }
  onCdata(A) {
    const t = new Ks("#text", A);
    this._currentFragment.push(t);
  }
  onBeginElement(A, t, i) {
    this._lowerCaseName && (A = A.toLowerCase());
    const s = new Ks(A);
    s.childNodes = [], this._hasAttributes && (s.attributes = t), this._currentFragment.push(s), !i && (this._stack.push(this._currentFragment), this._currentFragment = s.childNodes);
  }
  onEndElement(A) {
    this._currentFragment = this._stack.pop() || [];
    const t = this._currentFragment.at(-1);
    if (!t)
      return null;
    for (const i of t.childNodes)
      i.parentNode = t;
    return t;
  }
  onError(A) {
    this._errorCode = A;
  }
}
class w1 {
  constructor(A) {
    A = this._repair(A);
    const i = new ar({
      lowerCaseName: !0
    }).parseFromString(A);
    this._metadataMap = /* @__PURE__ */ new Map(), this._data = A, i && this._parse(i);
  }
  _repair(A) {
    return A.replace(/^[^<]+/, "").replaceAll(/>\\376\\377([^<]+)/g, function(t, i) {
      const s = i.replaceAll(/\\([0-3])([0-7])([0-7])/g, function(n, r, g, o) {
        return String.fromCharCode(r * 64 + g * 8 + o * 1);
      }).replaceAll(/&(amp|apos|gt|lt|quot);/g, function(n, r) {
        switch (r) {
          case "amp":
            return "&";
          case "apos":
            return "'";
          case "gt":
            return ">";
          case "lt":
            return "<";
          case "quot":
            return '"';
        }
        throw new Error(`_repair: ${r} isn't defined.`);
      }), a = [">"];
      for (let n = 0, r = s.length; n < r; n += 2) {
        const g = s.charCodeAt(n) * 256 + s.charCodeAt(n + 1);
        g >= 32 && g < 127 && g !== 60 && g !== 62 && g !== 38 ? a.push(String.fromCharCode(g)) : a.push("&#x" + (65536 + g).toString(16).substring(1) + ";");
      }
      return a.join("");
    });
  }
  _getSequence(A) {
    const t = A.nodeName;
    return t !== "rdf:bag" && t !== "rdf:seq" && t !== "rdf:alt" ? null : A.childNodes.filter((i) => i.nodeName === "rdf:li");
  }
  _parseArray(A) {
    if (!A.hasChildNodes())
      return;
    const [t] = A.childNodes, i = this._getSequence(t) || [];
    this._metadataMap.set(A.nodeName, i.map((s) => s.textContent.trim()));
  }
  _parse(A) {
    let t = A.documentElement;
    if (t.nodeName !== "rdf:rdf")
      for (t = t.firstChild; t && t.nodeName !== "rdf:rdf"; )
        t = t.nextSibling;
    if (!(!t || t.nodeName !== "rdf:rdf" || !t.hasChildNodes())) {
      for (const i of t.childNodes)
        if (i.nodeName === "rdf:description")
          for (const s of i.childNodes) {
            const a = s.nodeName;
            switch (a) {
              case "#text":
                continue;
              case "dc:creator":
              case "dc:subject":
                this._parseArray(s);
                continue;
            }
            this._metadataMap.set(a, s.textContent.trim());
          }
    }
  }
  get serializable() {
    return {
      parsedData: this._metadataMap,
      rawData: this._data
    };
  }
}
const GI = 40, Nt = {
  PAGE_CONTENT: 1,
  STREAM_CONTENT: 2,
  OBJECT: 3,
  ANNOTATION: 4,
  ELEMENT: 5
};
var Vn, al, Yt, pg, yg, nl, rl;
const r0 = class r0 {
  constructor(A, t) {
    jA(this, Vn);
    this.dict = A, this.ref = t instanceof nA ? t : null, this.roleMap = /* @__PURE__ */ new Map(), this.structParentIds = null;
  }
  init() {
    this.readRoleMap();
  }
  addAnnotationIdToPage(A, t) {
    BA(this, Vn, al).call(this, A, t, Nt.ANNOTATION);
  }
  readRoleMap() {
    const A = this.dict.get("RoleMap");
    if (A instanceof R)
      for (const [t, i] of A)
        i instanceof L && this.roleMap.set(t, i.name);
  }
  static async canCreateStructureTree({
    catalogRef: A,
    pdfManager: t,
    newAnnotationsByPage: i
  }) {
    var n;
    if (!(A instanceof nA))
      return k("Cannot save the struct tree: no catalog reference."), !1;
    let s = 0, a = !0;
    for (const [r, g] of i) {
      const {
        ref: o
      } = await t.getPage(r);
      if (!(o instanceof nA)) {
        k(`Cannot save the struct tree: page ${r} has no ref.`), a = !0;
        break;
      }
      for (const I of g)
        (n = I.accessibilityData) != null && n.type && (I.parentTreeId = s++, a = !1);
    }
    if (a) {
      for (const r of i.values())
        for (const g of r)
          delete g.parentTreeId;
      return !1;
    }
    return !0;
  }
  static async createStructureTree({
    newAnnotationsByPage: A,
    xref: t,
    catalogRef: i,
    pdfManager: s,
    changes: a
  }) {
    const n = s.catalog.cloneDict(), r = new It();
    r.put(i, n);
    const g = t.getNewTemporaryRef();
    n.set("StructTreeRoot", g);
    const o = new R(t);
    o.set("Type", L.get("StructTreeRoot"));
    const I = t.getNewTemporaryRef();
    o.set("ParentTree", I);
    const c = [];
    o.set("K", c), r.put(g, o);
    const l = new R(t), C = [];
    l.set("Nums", C);
    const h = await BA(this, Yt, pg).call(this, {
      newAnnotationsByPage: A,
      structTreeRootRef: g,
      structTreeRoot: null,
      kids: c,
      nums: C,
      xref: t,
      pdfManager: s,
      changes: a,
      cache: r
    });
    o.set("ParentTreeNextKey", h), r.put(I, l);
    for (const [B, Q] of r.items())
      a.put(B, {
        data: Q
      });
  }
  async canUpdateStructTree({
    pdfManager: A,
    xref: t,
    newAnnotationsByPage: i
  }) {
    var o, I;
    if (!this.ref)
      return k("Cannot update the struct tree: no root reference."), !1;
    let s = this.dict.get("ParentTreeNextKey");
    if (!Number.isInteger(s) || s < 0)
      return k("Cannot update the struct tree: invalid next key."), !1;
    const a = this.dict.get("ParentTree");
    if (!(a instanceof R))
      return k("Cannot update the struct tree: ParentTree isn't a dict."), !1;
    const n = a.get("Nums");
    if (!Array.isArray(n))
      return k("Cannot update the struct tree: nums isn't an array."), !1;
    const r = new Fn(a, t);
    for (const c of i.keys()) {
      const {
        pageDict: l
      } = await A.getPage(c);
      if (!l.has("StructParents"))
        continue;
      const C = l.get("StructParents");
      if (!Number.isInteger(C) || !Array.isArray(r.get(C)))
        return k(`Cannot save the struct tree: page ${c} has a wrong id.`), !1;
    }
    let g = !0;
    for (const [c, l] of i) {
      const {
        pageDict: C
      } = await A.getPage(c);
      BA(o = r0, Yt, nl).call(o, {
        elements: l,
        xref: this.dict.xref,
        pageDict: C,
        numberTree: r
      });
      for (const h of l)
        (I = h.accessibilityData) != null && I.type && (h.accessibilityData.structParent >= 0 || (h.parentTreeId = s++), g = !1);
    }
    if (g) {
      for (const c of i.values())
        for (const l of c)
          delete l.parentTreeId, delete l.structTreeParent;
      return !1;
    }
    return !0;
  }
  async updateStructureTree({
    newAnnotationsByPage: A,
    pdfManager: t,
    changes: i
  }) {
    var C;
    const s = this.dict.xref, a = this.dict.clone(), n = this.ref, r = new It();
    r.put(n, a);
    let g = a.getRaw("ParentTree"), o;
    g instanceof nA ? o = s.fetch(g) : (o = g, g = s.getNewTemporaryRef(), a.set("ParentTree", g)), o = o.clone(), r.put(g, o);
    let I = o.getRaw("Nums"), c = null;
    I instanceof nA && (c = I, I = s.fetch(c)), I = I.slice(), c || o.set("Nums", I);
    const l = await BA(C = r0, Yt, pg).call(C, {
      newAnnotationsByPage: A,
      structTreeRootRef: n,
      structTreeRoot: this,
      kids: null,
      nums: I,
      xref: s,
      pdfManager: t,
      changes: i,
      cache: r
    });
    if (l !== -1) {
      a.set("ParentTreeNextKey", l), c && r.put(c, I);
      for (const [h, B] of r.items())
        i.put(h, {
          data: B
        });
    }
  }
};
Vn = new WeakSet(), al = function(A, t, i) {
  if (!(A instanceof nA) || t < 0)
    return;
  this.structParentIds || (this.structParentIds = new It());
  let s = this.structParentIds.get(A);
  s || (s = [], this.structParentIds.put(A, s)), s.push([t, i]);
}, Yt = new WeakSet(), pg = async function({
  newAnnotationsByPage: A,
  structTreeRootRef: t,
  structTreeRoot: i,
  kids: s,
  nums: a,
  xref: n,
  pdfManager: r,
  changes: g,
  cache: o
}) {
  var C, h;
  const I = L.get("OBJR");
  let c = -1, l;
  for (const [B, Q] of A) {
    const E = await r.getPage(B), {
      ref: f
    } = E, d = f instanceof nA;
    for (const {
      accessibilityData: u,
      ref: x,
      parentTreeId: p,
      structTreeParent: m
    } of Q) {
      if (!(u != null && u.type))
        continue;
      const {
        structParent: D
      } = u;
      if (i && Number.isInteger(D) && D >= 0) {
        let G = (l || (l = /* @__PURE__ */ new Map())).get(B);
        G === void 0 && (G = new gl(i, E.pageDict).collectObjects(f), l.set(B, G));
        const v = G == null ? void 0 : G.get(D);
        if (v) {
          const X = n.fetch(v).clone();
          BA(C = r0, Yt, yg).call(C, X, u), g.put(v, {
            data: X
          });
          continue;
        }
      }
      c = Math.max(c, p);
      const S = n.getNewTemporaryRef(), y = new R(n);
      BA(h = r0, Yt, yg).call(h, y, u), await BA(this, Yt, rl).call(this, {
        structTreeParent: m,
        tagDict: y,
        newTagRef: S,
        structTreeRootRef: t,
        fallbackKids: s,
        xref: n,
        cache: o
      });
      const H = new R(n);
      y.set("K", H), H.set("Type", I), d && H.set("Pg", f), H.set("Obj", x), o.put(S, y), a.push(p, S);
    }
  }
  return c + 1;
}, yg = function(A, {
  type: t,
  title: i,
  lang: s,
  alt: a,
  expanded: n,
  actualText: r
}) {
  A.set("S", L.get(t)), i && A.set("T", Mt(i)), s && A.set("Lang", Mt(s)), a && A.set("Alt", Mt(a)), n && A.set("E", Mt(n)), r && A.set("ActualText", Mt(r));
}, nl = function({
  elements: A,
  xref: t,
  pageDict: i,
  numberTree: s
}) {
  const a = /* @__PURE__ */ new Map();
  for (const o of A)
    if (o.structTreeParentId) {
      const I = parseInt(o.structTreeParentId.split("_mc")[1], 10);
      let c = a.get(I);
      c || (c = [], a.set(I, c)), c.push(o);
    }
  const n = i.get("StructParents");
  if (!Number.isInteger(n))
    return;
  const r = s.get(n), g = (o, I, c) => {
    const l = a.get(o);
    if (l) {
      const C = I.getRaw("P"), h = t.fetchIfRef(C);
      if (C instanceof nA && h instanceof R) {
        const B = {
          ref: c,
          dict: I
        };
        for (const Q of l)
          Q.structTreeParent = B;
      }
      return !0;
    }
    return !1;
  };
  for (const o of r) {
    if (!(o instanceof nA))
      continue;
    const I = t.fetch(o), c = I.get("K");
    if (Number.isInteger(c)) {
      g(c, I, o);
      continue;
    }
    if (Array.isArray(c))
      for (let l of c) {
        if (l = t.fetchIfRef(l), Number.isInteger(l) && g(l, I, o))
          break;
        if (!(l instanceof R))
          continue;
        if (!xe(l.get("Type"), "MCR"))
          break;
        const C = l.get("MCID");
        if (Number.isInteger(C) && g(C, I, o))
          break;
      }
  }
}, rl = async function({
  structTreeParent: A,
  tagDict: t,
  newTagRef: i,
  structTreeRootRef: s,
  fallbackKids: a,
  xref: n,
  cache: r
}) {
  let g = null, o;
  A ? ({
    ref: g
  } = A, o = A.dict.getRaw("P") || s) : o = s, t.set("P", o);
  const I = n.fetchIfRef(o);
  if (!I) {
    a.push(i);
    return;
  }
  let c = r.get(o);
  c || (c = I.clone(), r.put(o, c));
  const l = c.getRaw("K");
  let C = l instanceof nA ? r.get(l) : null;
  if (!C) {
    C = n.fetchIfRef(l), C = Array.isArray(C) ? C.slice() : [l];
    const B = n.getNewTemporaryRef();
    c.set("K", B), r.put(B, C);
  }
  const h = C.indexOf(g);
  C.splice(h >= 0 ? h + 1 : C.length, 0, i);
}, jA(r0, Yt);
let ea = r0;
class b1 {
  constructor(A, t) {
    this.tree = A, this.dict = t, this.kids = [], this.parseKids();
  }
  get role() {
    const A = this.dict.get("S"), t = A instanceof L ? A.name : "", {
      root: i
    } = this.tree;
    return i.roleMap.has(t) ? i.roleMap.get(t) : t;
  }
  parseKids() {
    let A = null;
    const t = this.dict.getRaw("Pg");
    t instanceof nA && (A = t.toString());
    const i = this.dict.get("K");
    if (Array.isArray(i))
      for (const s of i) {
        const a = this.parseKid(A, s);
        a && this.kids.push(a);
      }
    else {
      const s = this.parseKid(A, i);
      s && this.kids.push(s);
    }
  }
  parseKid(A, t) {
    if (Number.isInteger(t))
      return this.tree.pageDict.objId !== A ? null : new ja({
        type: Nt.PAGE_CONTENT,
        mcid: t,
        pageObjId: A
      });
    let i = null;
    if (t instanceof nA ? i = this.dict.xref.fetch(t) : t instanceof R && (i = t), !i)
      return null;
    const s = i.getRaw("Pg");
    s instanceof nA && (A = s.toString());
    const a = i.get("Type") instanceof L ? i.get("Type").name : null;
    if (a === "MCR") {
      if (this.tree.pageDict.objId !== A)
        return null;
      const n = i.getRaw("Stm");
      return new ja({
        type: Nt.STREAM_CONTENT,
        refObjId: n instanceof nA ? n.toString() : null,
        pageObjId: A,
        mcid: i.get("MCID")
      });
    }
    if (a === "OBJR") {
      if (this.tree.pageDict.objId !== A)
        return null;
      const n = i.getRaw("Obj");
      return new ja({
        type: Nt.OBJECT,
        refObjId: n instanceof nA ? n.toString() : null,
        pageObjId: A
      });
    }
    return new ja({
      type: Nt.ELEMENT,
      dict: i
    });
  }
}
class ja {
  constructor({
    type: A,
    dict: t = null,
    mcid: i = null,
    pageObjId: s = null,
    refObjId: a = null
  }) {
    this.type = A, this.dict = t, this.mcid = i, this.pageObjId = s, this.refObjId = a, this.parentNode = null;
  }
}
class gl {
  constructor(A, t) {
    this.root = A, this.rootDict = A ? A.dict : null, this.pageDict = t, this.nodes = [];
  }
  collectObjects(A) {
    var n;
    if (!this.root || !this.rootDict || !(A instanceof nA))
      return null;
    const t = this.rootDict.get("ParentTree");
    if (!t)
      return null;
    const i = (n = this.root.structParentIds) == null ? void 0 : n.get(A);
    if (!i)
      return null;
    const s = /* @__PURE__ */ new Map(), a = new Fn(t, this.rootDict.xref);
    for (const [r] of i) {
      const g = a.getRaw(r);
      g instanceof nA && s.set(r, g);
    }
    return s;
  }
  parse(A) {
    var r, g;
    if (!this.root || !this.rootDict || !(A instanceof nA))
      return;
    const t = this.rootDict.get("ParentTree");
    if (!t)
      return;
    const i = this.pageDict.get("StructParents"), s = (r = this.root.structParentIds) == null ? void 0 : r.get(A);
    if (!Number.isInteger(i) && !s)
      return;
    const a = /* @__PURE__ */ new Map(), n = new Fn(t, this.rootDict.xref);
    if (Number.isInteger(i)) {
      const o = n.get(i);
      if (Array.isArray(o))
        for (const I of o)
          I instanceof nA && this.addNode(this.rootDict.xref.fetch(I), a);
    }
    if (s)
      for (const [o, I] of s) {
        const c = n.get(o);
        if (c) {
          const l = this.addNode(this.rootDict.xref.fetchIfRef(c), a);
          ((g = l == null ? void 0 : l.kids) == null ? void 0 : g.length) === 1 && l.kids[0].type === Nt.OBJECT && (l.kids[0].type = I);
        }
      }
  }
  addNode(A, t, i = 0) {
    if (i > GI)
      return k("StructTree MAX_DEPTH reached."), null;
    if (!(A instanceof R))
      return null;
    if (t.has(A))
      return t.get(A);
    const s = new b1(this, A);
    t.set(A, s);
    const a = A.get("P");
    if (!a || xe(a.get("Type"), "StructTreeRoot"))
      return this.addTopLevelNode(A, s) || t.delete(A), s;
    const n = this.addNode(a, t, i + 1);
    if (!n)
      return s;
    let r = !1;
    for (const g of n.kids)
      g.type === Nt.ELEMENT && g.dict === A && (g.parentNode = s, r = !0);
    return r || t.delete(A), s;
  }
  addTopLevelNode(A, t) {
    const i = this.rootDict.get("K");
    if (!i)
      return !1;
    if (i instanceof R)
      return i.objId !== A.objId ? !1 : (this.nodes[0] = t, !0);
    if (!Array.isArray(i))
      return !0;
    let s = !1;
    for (let a = 0; a < i.length; a++) {
      const n = i[a];
      (n == null ? void 0 : n.toString()) === A.objId && (this.nodes[a] = t, s = !0);
    }
    return s;
  }
  get serializable() {
    function A(i, s, a = 0) {
      if (a > GI) {
        k("StructTree too deep to be fully serialized.");
        return;
      }
      const n = /* @__PURE__ */ Object.create(null);
      n.role = i.role, n.children = [], s.children.push(n);
      let r = i.dict.get("Alt");
      typeof r != "string" && (r = i.dict.get("ActualText")), typeof r == "string" && (n.alt = XA(r));
      const g = i.dict.get("A");
      if (g instanceof R) {
        const I = ai(g.getArray("BBox"), null);
        if (I)
          n.bbox = I;
        else {
          const c = g.get("Width"), l = g.get("Height");
          typeof c == "number" && c > 0 && typeof l == "number" && l > 0 && (n.bbox = [0, 0, c, l]);
        }
      }
      const o = i.dict.get("Lang");
      typeof o == "string" && (n.lang = XA(o));
      for (const I of i.kids) {
        const c = I.type === Nt.ELEMENT ? I.parentNode : null;
        if (c) {
          A(c, n, a + 1);
          continue;
        } else I.type === Nt.PAGE_CONTENT || I.type === Nt.STREAM_CONTENT ? n.children.push({
          type: "content",
          id: `p${I.pageObjId}_mc${I.mcid}`
        }) : I.type === Nt.OBJECT ? n.children.push({
          type: "object",
          id: I.refObjId
        }) : I.type === Nt.ANNOTATION && n.children.push({
          type: "annotation",
          id: `${wC}${I.refObjId}`
        });
      }
    }
    const t = /* @__PURE__ */ Object.create(null);
    t.children = [], t.role = "Root";
    for (const i of this.nodes)
      i && A(i, t);
    return t;
  }
}
function so(e) {
  if (!Array.isArray(e) || e.length < 2)
    return !1;
  const [A, t, ...i] = e;
  if (!(A instanceof nA) && !Number.isInteger(A) || !(t instanceof L))
    return !1;
  const s = i.length;
  let a = !0;
  switch (t.name) {
    case "XYZ":
      if (s < 2 || s > 3)
        return !1;
      break;
    case "Fit":
    case "FitB":
      return s === 0;
    case "FitH":
    case "FitBH":
    case "FitV":
    case "FitBV":
      if (s > 1)
        return !1;
      break;
    case "FitR":
      if (s !== 4)
        return !1;
      a = !1;
      break;
    default:
      return !1;
  }
  for (const n of i)
    if (!(typeof n == "number" || a && n === null))
      return !1;
  return !0;
}
function Xa(e) {
  return e instanceof R && (e = e.get("D")), so(e) ? e : null;
}
function UI(e) {
  let A = e.get("D");
  if (A) {
    if (A instanceof L && (A = A.name), typeof A == "string")
      return XA(A);
    if (so(A))
      return JSON.stringify(A);
  }
  return null;
}
var cs, ol, Il;
const _n = class _n {
  constructor(A, t) {
    jA(this, cs);
    if (this.pdfManager = A, this.xref = t, this._catDict = t.getCatalogObj(), !(this._catDict instanceof R))
      throw new T("Catalog object is not a dictionary.");
    this.toplevelPagesDict, this._actualNumPages = null, this.fontCache = new It(), this.builtInCMapCache = /* @__PURE__ */ new Map(), this.standardFontDataCache = /* @__PURE__ */ new Map(), this.globalImageCache = new Qg(), this.pageKidsCountCache = new It(), this.pageIndexCache = new It(), this.pageDictCache = new It(), this.nonBlendModesSet = new Ge(), this.systemFontCache = /* @__PURE__ */ new Map();
  }
  cloneDict() {
    return this._catDict.clone();
  }
  get version() {
    const A = this._catDict.get("Version");
    if (A instanceof L) {
      if (Cc.test(A.name))
        return tA(this, "version", A.name);
      k(`Invalid PDF catalog version: ${A.name}`);
    }
    return tA(this, "version", null);
  }
  get lang() {
    const A = this._catDict.get("Lang");
    return tA(this, "lang", A && typeof A == "string" ? XA(A) : null);
  }
  get needsRendering() {
    const A = this._catDict.get("NeedsRendering");
    return tA(this, "needsRendering", typeof A == "boolean" ? A : !1);
  }
  get collection() {
    let A = null;
    try {
      const t = this._catDict.get("Collection");
      t instanceof R && t.size > 0 && (A = t);
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      vA("Cannot fetch Collection entry; assuming no collection is present.");
    }
    return tA(this, "collection", A);
  }
  get acroForm() {
    let A = null;
    try {
      const t = this._catDict.get("AcroForm");
      t instanceof R && t.size > 0 && (A = t);
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      vA("Cannot fetch AcroForm entry; assuming no forms are present.");
    }
    return tA(this, "acroForm", A);
  }
  get acroFormRef() {
    const A = this._catDict.getRaw("AcroForm");
    return tA(this, "acroFormRef", A instanceof nA ? A : null);
  }
  get metadata() {
    var i;
    const A = this._catDict.getRaw("Metadata");
    if (!(A instanceof nA))
      return tA(this, "metadata", null);
    let t = null;
    try {
      const s = this.xref.fetch(A, !((i = this.xref.encrypt) != null && i.encryptMetadata));
      if (s instanceof JA && s.dict instanceof R) {
        const a = s.dict.get("Type"), n = s.dict.get("Subtype");
        if (xe(a, "Metadata") && xe(n, "XML")) {
          const r = Zs(s.getString());
          r && (t = new w1(r).serializable);
        }
      }
    } catch (s) {
      if (s instanceof Ie)
        throw s;
      vA(`Skipping invalid Metadata: "${s}".`);
    }
    return tA(this, "metadata", t);
  }
  get markInfo() {
    let A = null;
    try {
      A = this._readMarkInfo();
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      k("Unable to read mark info.");
    }
    return tA(this, "markInfo", A);
  }
  _readMarkInfo() {
    const A = this._catDict.get("MarkInfo");
    if (!(A instanceof R))
      return null;
    const t = {
      Marked: !1,
      UserProperties: !1,
      Suspects: !1
    };
    for (const i in t) {
      const s = A.get(i);
      typeof s == "boolean" && (t[i] = s);
    }
    return t;
  }
  get structTreeRoot() {
    let A = null;
    try {
      A = this._readStructTreeRoot();
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      k("Unable read to structTreeRoot info.");
    }
    return tA(this, "structTreeRoot", A);
  }
  _readStructTreeRoot() {
    const A = this._catDict.getRaw("StructTreeRoot"), t = this.xref.fetchIfRef(A);
    if (!(t instanceof R))
      return null;
    const i = new ea(t, A);
    return i.init(), i;
  }
  get toplevelPagesDict() {
    const A = this._catDict.get("Pages");
    if (!(A instanceof R))
      throw new T("Invalid top-level pages dictionary.");
    return tA(this, "toplevelPagesDict", A);
  }
  get documentOutline() {
    let A = null;
    try {
      A = this._readDocumentOutline();
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      k("Unable to read document outline.");
    }
    return tA(this, "documentOutline", A);
  }
  _readDocumentOutline() {
    let A = this._catDict.get("Outlines");
    if (!(A instanceof R) || (A = A.getRaw("First"), !(A instanceof nA)))
      return null;
    const t = {
      items: []
    }, i = [{
      obj: A,
      parent: t
    }], s = new Ge();
    s.put(A);
    const a = this.xref, n = new Uint8ClampedArray(3);
    for (; i.length > 0; ) {
      const r = i.shift(), g = a.fetchIfRef(r.obj);
      if (g === null)
        continue;
      g.has("Title") || k("Invalid outline item encountered.");
      const o = {
        url: null,
        dest: null,
        action: null
      };
      _n.parseDestDictionary({
        destDict: g,
        resultObj: o,
        docBaseUrl: this.baseUrl,
        docAttachments: this.attachments
      });
      const I = g.get("Title"), c = g.get("F") || 0, l = g.getArray("C"), C = g.get("Count");
      let h = n;
      rt(l, 3) && (l[0] !== 0 || l[1] !== 0 || l[2] !== 0) && (h = LA.singletons.rgb.getRgb(l, 0));
      const B = {
        action: o.action,
        attachment: o.attachment,
        dest: o.dest,
        url: o.url,
        unsafeUrl: o.unsafeUrl,
        newWindow: o.newWindow,
        setOCGState: o.setOCGState,
        title: typeof I == "string" ? XA(I) : "",
        color: h,
        count: Number.isInteger(C) ? C : void 0,
        bold: !!(c & 2),
        italic: !!(c & 1),
        items: []
      };
      r.parent.items.push(B), A = g.getRaw("First"), A instanceof nA && !s.has(A) && (i.push({
        obj: A,
        parent: B
      }), s.put(A)), A = g.getRaw("Next"), A instanceof nA && !s.has(A) && (i.push({
        obj: A,
        parent: r.parent
      }), s.put(A));
    }
    return t.items.length > 0 ? t.items : null;
  }
  get permissions() {
    let A = null;
    try {
      A = this._readPermissions();
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      k("Unable to read permissions.");
    }
    return tA(this, "permissions", A);
  }
  _readPermissions() {
    const A = this.xref.trailer.get("Encrypt");
    if (!(A instanceof R))
      return null;
    let t = A.get("P");
    if (typeof t != "number")
      return null;
    t += 2 ** 32;
    const i = [];
    for (const s in wo) {
      const a = wo[s];
      t & a && i.push(a);
    }
    return i;
  }
  get optionalContentConfig() {
    let A = null;
    try {
      const t = this._catDict.get("OCProperties");
      if (!t)
        return tA(this, "optionalContentConfig", null);
      const i = t.get("D");
      if (!i)
        return tA(this, "optionalContentConfig", null);
      const s = t.get("OCGs");
      if (!Array.isArray(s))
        return tA(this, "optionalContentConfig", null);
      const a = new It();
      for (const n of s)
        !(n instanceof nA) || a.has(n) || a.put(n, BA(this, cs, ol).call(this, n));
      A = BA(this, cs, Il).call(this, i, a);
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      k(`Unable to read optional content config: ${t}`);
    }
    return tA(this, "optionalContentConfig", A);
  }
  setActualNumPages(A = null) {
    this._actualNumPages = A;
  }
  get hasActualNumPages() {
    return this._actualNumPages !== null;
  }
  get _pagesCount() {
    const A = this.toplevelPagesDict.get("Count");
    if (!Number.isInteger(A))
      throw new T("Page count in top-level pages dictionary is not an integer.");
    return tA(this, "_pagesCount", A);
  }
  get numPages() {
    return this.hasActualNumPages ? this._actualNumPages : this._pagesCount;
  }
  get destinations() {
    const A = this._readDests(), t = /* @__PURE__ */ Object.create(null);
    if (A instanceof D0)
      for (const [i, s] of A.getAll()) {
        const a = Xa(s);
        a && (t[XA(i)] = a);
      }
    else if (A instanceof R)
      for (const [i, s] of A) {
        const a = Xa(s);
        a && (t[i] = a);
      }
    return tA(this, "destinations", t);
  }
  getDestination(A) {
    const t = this._readDests();
    if (t instanceof D0) {
      const i = Xa(t.get(A));
      if (i)
        return i;
      const s = this.destinations[A];
      if (s)
        return k(`Found "${A}" at an incorrect position in the NameTree.`), s;
    } else if (t instanceof R) {
      const i = Xa(t.get(A));
      if (i)
        return i;
    }
    return null;
  }
  _readDests() {
    const A = this._catDict.get("Names");
    if (A != null && A.has("Dests"))
      return new D0(A.getRaw("Dests"), this.xref);
    if (this._catDict.has("Dests"))
      return this._catDict.get("Dests");
  }
  get pageLabels() {
    let A = null;
    try {
      A = this._readPageLabels();
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      k("Unable to read page labels.");
    }
    return tA(this, "pageLabels", A);
  }
  _readPageLabels() {
    const A = this._catDict.getRaw("PageLabels");
    if (!A)
      return null;
    const t = new Array(this.numPages);
    let i = null, s = "";
    const n = new Fn(A, this.xref).getAll();
    let r = "", g = 1;
    for (let o = 0, I = this.numPages; o < I; o++) {
      const c = n.get(o);
      if (c !== void 0) {
        if (!(c instanceof R))
          throw new T("PageLabel is not a dictionary.");
        if (c.has("Type") && !xe(c.get("Type"), "PageLabel"))
          throw new T("Invalid type in PageLabel dictionary.");
        if (c.has("S")) {
          const l = c.get("S");
          if (!(l instanceof L))
            throw new T("Invalid style in PageLabel dictionary.");
          i = l.name;
        } else
          i = null;
        if (c.has("P")) {
          const l = c.get("P");
          if (typeof l != "string")
            throw new T("Invalid prefix in PageLabel dictionary.");
          s = XA(l);
        } else
          s = "";
        if (c.has("St")) {
          const l = c.get("St");
          if (!(Number.isInteger(l) && l >= 1))
            throw new T("Invalid start in PageLabel dictionary.");
          g = l;
        } else
          g = 1;
      }
      switch (i) {
        case "D":
          r = g;
          break;
        case "R":
        case "r":
          r = RC(g, i === "r");
          break;
        case "A":
        case "a":
          const l = 26, B = i === "a" ? 97 : 65, Q = g - 1;
          r = String.fromCharCode(B + Q % l).repeat(Math.floor(Q / l) + 1);
          break;
        default:
          if (i)
            throw new T(`Invalid style "${i}" in PageLabel dictionary.`);
          r = "";
      }
      t[o] = s + r, g++;
    }
    return t;
  }
  get pageLayout() {
    const A = this._catDict.get("PageLayout");
    let t = "";
    if (A instanceof L)
      switch (A.name) {
        case "SinglePage":
        case "OneColumn":
        case "TwoColumnLeft":
        case "TwoColumnRight":
        case "TwoPageLeft":
        case "TwoPageRight":
          t = A.name;
      }
    return tA(this, "pageLayout", t);
  }
  get pageMode() {
    const A = this._catDict.get("PageMode");
    let t = "UseNone";
    if (A instanceof L)
      switch (A.name) {
        case "UseNone":
        case "UseOutlines":
        case "UseThumbs":
        case "FullScreen":
        case "UseOC":
        case "UseAttachments":
          t = A.name;
      }
    return tA(this, "pageMode", t);
  }
  get viewerPreferences() {
    const A = this._catDict.get("ViewerPreferences");
    if (!(A instanceof R))
      return tA(this, "viewerPreferences", null);
    let t = null;
    for (const i of A.getKeys()) {
      const s = A.get(i);
      let a;
      switch (i) {
        case "HideToolbar":
        case "HideMenubar":
        case "HideWindowUI":
        case "FitWindow":
        case "CenterWindow":
        case "DisplayDocTitle":
        case "PickTrayByPDFSize":
          typeof s == "boolean" && (a = s);
          break;
        case "NonFullScreenPageMode":
          if (s instanceof L)
            switch (s.name) {
              case "UseNone":
              case "UseOutlines":
              case "UseThumbs":
              case "UseOC":
                a = s.name;
                break;
              default:
                a = "UseNone";
            }
          break;
        case "Direction":
          if (s instanceof L)
            switch (s.name) {
              case "L2R":
              case "R2L":
                a = s.name;
                break;
              default:
                a = "L2R";
            }
          break;
        case "ViewArea":
        case "ViewClip":
        case "PrintArea":
        case "PrintClip":
          if (s instanceof L)
            switch (s.name) {
              case "MediaBox":
              case "CropBox":
              case "BleedBox":
              case "TrimBox":
              case "ArtBox":
                a = s.name;
                break;
              default:
                a = "CropBox";
            }
          break;
        case "PrintScaling":
          if (s instanceof L)
            switch (s.name) {
              case "None":
              case "AppDefault":
                a = s.name;
                break;
              default:
                a = "AppDefault";
            }
          break;
        case "Duplex":
          if (s instanceof L)
            switch (s.name) {
              case "Simplex":
              case "DuplexFlipShortEdge":
              case "DuplexFlipLongEdge":
                a = s.name;
                break;
              default:
                a = "None";
            }
          break;
        case "PrintPageRange":
          Array.isArray(s) && s.length % 2 === 0 && s.every((r, g, o) => Number.isInteger(r) && r > 0 && (g === 0 || r >= o[g - 1]) && r <= this.numPages) && (a = s);
          break;
        case "NumCopies":
          Number.isInteger(s) && s > 0 && (a = s);
          break;
        default:
          k(`Ignoring non-standard key in ViewerPreferences: ${i}.`);
          continue;
      }
      if (a === void 0) {
        k(`Bad value, for key "${i}", in ViewerPreferences: ${s}.`);
        continue;
      }
      t || (t = /* @__PURE__ */ Object.create(null)), t[i] = a;
    }
    return tA(this, "viewerPreferences", t);
  }
  get openAction() {
    const A = this._catDict.get("OpenAction"), t = /* @__PURE__ */ Object.create(null);
    if (A instanceof R) {
      const i = new R(this.xref);
      i.set("A", A);
      const s = {
        url: null,
        dest: null,
        action: null
      };
      _n.parseDestDictionary({
        destDict: i,
        resultObj: s
      }), Array.isArray(s.dest) ? t.dest = s.dest : s.action && (t.action = s.action);
    } else Array.isArray(A) && (t.dest = A);
    return tA(this, "openAction", Ic(t) > 0 ? t : null);
  }
  get attachments() {
    const A = this._catDict.get("Names");
    let t = null;
    if (A instanceof R && A.has("EmbeddedFiles")) {
      const i = new D0(A.getRaw("EmbeddedFiles"), this.xref);
      for (const [s, a] of i.getAll()) {
        const n = new mg(a, this.xref);
        t || (t = /* @__PURE__ */ Object.create(null)), t[XA(s)] = n.serializable;
      }
    }
    return tA(this, "attachments", t);
  }
  get xfaImages() {
    const A = this._catDict.get("Names");
    let t = null;
    if (A instanceof R && A.has("XFAImages")) {
      const i = new D0(A.getRaw("XFAImages"), this.xref);
      for (const [s, a] of i.getAll())
        t || (t = new R(this.xref)), t.set(XA(s), a);
    }
    return tA(this, "xfaImages", t);
  }
  _collectJavaScript() {
    const A = this._catDict.get("Names");
    let t = null;
    function i(a, n) {
      if (!(n instanceof R) || !xe(n.get("S"), "JavaScript"))
        return;
      let r = n.get("JS");
      if (r instanceof JA)
        r = r.getString();
      else if (typeof r != "string")
        return;
      r = XA(r).replaceAll("\0", ""), r && (t || (t = /* @__PURE__ */ new Map())).set(a, r);
    }
    if (A instanceof R && A.has("JavaScript")) {
      const a = new D0(A.getRaw("JavaScript"), this.xref);
      for (const [n, r] of a.getAll())
        i(XA(n), r);
    }
    const s = this._catDict.get("OpenAction");
    return s && i("OpenAction", s), t;
  }
  get jsActions() {
    const A = this._collectJavaScript();
    let t = $n(this.xref, this._catDict, QC);
    if (A) {
      t || (t = /* @__PURE__ */ Object.create(null));
      for (const [i, s] of A)
        i in t ? t[i].push(s) : t[i] = [s];
    }
    return tA(this, "jsActions", t);
  }
  async fontFallback(A, t) {
    const i = await Promise.all(this.fontCache);
    for (const s of i)
      if (s.loadedName === A) {
        s.fallback(t);
        return;
      }
  }
  async cleanup(A = !1) {
    io(), this.globalImageCache.clear(A), this.pageKidsCountCache.clear(), this.pageIndexCache.clear(), this.pageDictCache.clear(), this.nonBlendModesSet.clear();
    const t = await Promise.all(this.fontCache);
    for (const {
      dict: i
    } of t)
      delete i.cacheKey;
    this.fontCache.clear(), this.builtInCMapCache.clear(), this.standardFontDataCache.clear(), this.systemFontCache.clear();
  }
  async getPageDict(A) {
    const t = [this.toplevelPagesDict], i = new Ge(), s = this._catDict.getRaw("Pages");
    s instanceof nA && i.put(s);
    const a = this.xref, n = this.pageKidsCountCache, r = this.pageIndexCache, g = this.pageDictCache;
    let o = 0;
    for (; t.length; ) {
      const I = t.pop();
      if (I instanceof nA) {
        const h = n.get(I);
        if (h >= 0 && o + h <= A) {
          o += h;
          continue;
        }
        if (i.has(I))
          throw new T("Pages tree contains circular reference.");
        i.put(I);
        const B = await (g.get(I) || a.fetchAsync(I));
        if (B instanceof R) {
          let Q = B.getRaw("Type");
          if (Q instanceof nA && (Q = await a.fetchAsync(Q)), xe(Q, "Page") || !B.has("Kids")) {
            if (n.has(I) || n.put(I, 1), r.has(I) || r.put(I, o), o === A)
              return [B, I];
            o++;
            continue;
          }
        }
        t.push(B);
        continue;
      }
      if (!(I instanceof R))
        throw new T("Page dictionary kid reference points to wrong type of object.");
      const {
        objId: c
      } = I;
      let l = I.getRaw("Count");
      if (l instanceof nA && (l = await a.fetchAsync(l)), Number.isInteger(l) && l >= 0 && (c && !n.has(c) && n.put(c, l), o + l <= A)) {
        o += l;
        continue;
      }
      let C = I.getRaw("Kids");
      if (C instanceof nA && (C = await a.fetchAsync(C)), !Array.isArray(C)) {
        let h = I.getRaw("Type");
        if (h instanceof nA && (h = await a.fetchAsync(h)), xe(h, "Page") || !I.has("Kids")) {
          if (o === A)
            return [I, null];
          o++;
          continue;
        }
        throw new T("Page dictionary kids object is not an array.");
      }
      for (let h = C.length - 1; h >= 0; h--) {
        const B = C[h];
        t.push(B), I === this.toplevelPagesDict && B instanceof nA && !g.has(B) && g.put(B, a.fetchAsync(B));
      }
    }
    throw new Error(`Page index ${A} not found.`);
  }
  async getAllPageDicts(A = !1) {
    const {
      ignoreErrors: t
    } = this.pdfManager.evaluatorOptions, i = [{
      currentNode: this.toplevelPagesDict,
      posInKids: 0
    }], s = new Ge(), a = this._catDict.getRaw("Pages");
    a instanceof nA && s.put(a);
    const n = /* @__PURE__ */ new Map(), r = this.xref, g = this.pageIndexCache;
    let o = 0;
    function I(l, C) {
      C && !g.has(C) && g.put(C, o), n.set(o++, [l, C]);
    }
    function c(l) {
      if (l instanceof Ji && !A)
        throw l;
      A && t && o === 0 && (k(`getAllPageDicts - Skipping invalid first page: "${l}".`), l = R.empty), n.set(o++, [l, null]);
    }
    for (; i.length > 0; ) {
      const l = i.at(-1), {
        currentNode: C,
        posInKids: h
      } = l;
      let B = C.getRaw("Kids");
      if (B instanceof nA)
        try {
          B = await r.fetchAsync(B);
        } catch (d) {
          c(d);
          break;
        }
      if (!Array.isArray(B)) {
        c(new T("Page dictionary kids object is not an array."));
        break;
      }
      if (h >= B.length) {
        i.pop();
        continue;
      }
      const Q = B[h];
      let E;
      if (Q instanceof nA) {
        if (s.has(Q)) {
          c(new T("Pages tree contains circular reference."));
          break;
        }
        s.put(Q);
        try {
          E = await r.fetchAsync(Q);
        } catch (d) {
          c(d);
          break;
        }
      } else
        E = Q;
      if (!(E instanceof R)) {
        c(new T("Page dictionary kid reference points to wrong type of object."));
        break;
      }
      let f = E.getRaw("Type");
      if (f instanceof nA)
        try {
          f = await r.fetchAsync(f);
        } catch (d) {
          c(d);
          break;
        }
      xe(f, "Page") || !E.has("Kids") ? I(E, Q instanceof nA ? Q : null) : i.push({
        currentNode: E,
        posInKids: 0
      }), l.posInKids++;
    }
    return n;
  }
  getPageIndex(A) {
    const t = this.pageIndexCache.get(A);
    if (t !== void 0)
      return Promise.resolve(t);
    const i = this.xref;
    function s(r) {
      let g = 0, o;
      return i.fetchAsync(r).then(function(I) {
        if (pn(r, A) && !lc(I, "Page") && !(I instanceof R && !I.has("Type") && I.has("Contents")))
          throw new T("The reference does not point to a /Page dictionary.");
        if (!I)
          return null;
        if (!(I instanceof R))
          throw new T("Node must be a dictionary.");
        return o = I.getRaw("Parent"), I.getAsync("Parent");
      }).then(function(I) {
        if (!I)
          return null;
        if (!(I instanceof R))
          throw new T("Parent must be a dictionary.");
        return I.getAsync("Kids");
      }).then(function(I) {
        if (!I)
          return null;
        const c = [];
        let l = !1;
        for (const C of I) {
          if (!(C instanceof nA))
            throw new T("Kid must be a reference.");
          if (pn(C, r)) {
            l = !0;
            break;
          }
          c.push(i.fetchAsync(C).then(function(h) {
            if (!(h instanceof R))
              throw new T("Kid node must be a dictionary.");
            h.has("Count") ? g += h.get("Count") : g++;
          }));
        }
        if (!l)
          throw new T("Kid reference not found in parent's kids.");
        return Promise.all(c).then(function() {
          return [g, o];
        });
      });
    }
    let a = 0;
    const n = (r) => s(r).then((g) => {
      if (!g)
        return this.pageIndexCache.put(A, a), a;
      const [o, I] = g;
      return a += o, n(I);
    });
    return n(A);
  }
  get baseUrl() {
    const A = this._catDict.get("URI");
    if (A instanceof R) {
      const t = A.get("Base");
      if (typeof t == "string") {
        const i = un(t, null, {
          tryConvertEncoding: !0
        });
        if (i)
          return tA(this, "baseUrl", i.href);
      }
    }
    return tA(this, "baseUrl", this.pdfManager.docBaseUrl);
  }
  static parseDestDictionary({
    destDict: A,
    resultObj: t,
    docBaseUrl: i = null,
    docAttachments: s = null
  }) {
    if (!(A instanceof R)) {
      k("parseDestDictionary: `destDict` must be a dictionary.");
      return;
    }
    let a = A.get("A"), n, r;
    if (a instanceof R || (A.has("Dest") ? a = A.get("Dest") : (a = A.get("AA"), a instanceof R && (a.has("D") ? a = a.get("D") : a.has("U") && (a = a.get("U"))))), a instanceof R) {
      const g = a.get("S");
      if (!(g instanceof L)) {
        k("parseDestDictionary: Invalid type in Action dictionary.");
        return;
      }
      const o = g.name;
      switch (o) {
        case "ResetForm":
          const I = a.get("Flags"), c = ((typeof I == "number" ? I : 0) & 1) === 0, l = [], C = [];
          for (const y of a.get("Fields") || [])
            y instanceof nA ? C.push(y.toString()) : typeof y == "string" && l.push(XA(y));
          t.resetForm = {
            fields: l,
            refs: C,
            include: c
          };
          break;
        case "URI":
          n = a.get("URI"), n instanceof L && (n = "/" + n.name);
          break;
        case "GoTo":
          r = a.get("D");
          break;
        case "Launch":
        case "GoToR":
          const h = a.get("F");
          if (h instanceof R) {
            const y = new mg(h, null, !0), {
              rawFilename: H
            } = y.serializable;
            n = H;
          } else typeof h == "string" && (n = h);
          const B = UI(a);
          B && typeof n == "string" && (n = n.split("#", 1)[0] + "#" + B);
          const Q = a.get("NewWindow");
          typeof Q == "boolean" && (t.newWindow = Q);
          break;
        case "GoToE":
          const E = a.get("T");
          let f;
          if (s && E instanceof R) {
            const y = E.get("R"), H = E.get("N");
            xe(y, "C") && typeof H == "string" && (f = s[XA(H)]);
          }
          if (f) {
            t.attachment = f;
            const y = UI(a);
            y && (t.attachmentDest = y);
          } else
            k('parseDestDictionary - unimplemented "GoToE" action.');
          break;
        case "Named":
          const d = a.get("N");
          d instanceof L && (t.action = d.name);
          break;
        case "SetOCGState":
          const u = a.get("State"), x = a.get("PreserveRB");
          if (!Array.isArray(u) || u.length === 0)
            break;
          const p = [];
          for (const y of u)
            if (y instanceof L)
              switch (y.name) {
                case "ON":
                case "OFF":
                case "Toggle":
                  p.push(y.name);
                  break;
              }
            else y instanceof nA && p.push(y.toString());
          if (p.length !== u.length)
            break;
          t.setOCGState = {
            state: p,
            preserveRB: typeof x == "boolean" ? x : !0
          };
          break;
        case "JavaScript":
          const m = a.get("JS");
          let D;
          m instanceof JA ? D = m.getString() : typeof m == "string" && (D = m);
          const S = D && Qc(XA(D));
          if (S) {
            n = S.url, t.newWindow = S.newWindow;
            break;
          }
        default:
          if (o === "JavaScript" || o === "SubmitForm")
            break;
          k(`parseDestDictionary - unsupported action: "${o}".`);
          break;
      }
    } else A.has("Dest") && (r = A.get("Dest"));
    if (typeof n == "string") {
      const g = un(n, i, {
        addDefaultProtocol: !0,
        tryConvertEncoding: !0
      });
      g && (t.url = g.href), t.unsafeUrl = n;
    }
    r && (r instanceof L && (r = r.name), typeof r == "string" ? t.dest = XA(r) : so(r) && (t.dest = r));
  }
};
cs = new WeakSet(), ol = function(A) {
  const t = this.xref.fetch(A), i = {
    id: A.toString(),
    name: null,
    intent: null,
    usage: {
      print: null,
      view: null
    },
    rbGroups: []
  }, s = t.get("Name");
  typeof s == "string" && (i.name = XA(s));
  let a = t.getArray("Intent");
  Array.isArray(a) || (a = [a]), a.every((I) => I instanceof L) && (i.intent = a.map((I) => I.name));
  const n = t.get("Usage");
  if (!(n instanceof R))
    return i;
  const r = i.usage, g = n.get("Print");
  if (g instanceof R) {
    const I = g.get("PrintState");
    if (I instanceof L)
      switch (I.name) {
        case "ON":
        case "OFF":
          r.print = {
            printState: I.name
          };
      }
  }
  const o = n.get("View");
  if (o instanceof R) {
    const I = o.get("ViewState");
    if (I instanceof L)
      switch (I.name) {
        case "ON":
        case "OFF":
          r.view = {
            viewState: I.name
          };
      }
  }
  return i;
}, Il = function(A, t) {
  function i(I) {
    const c = [];
    if (Array.isArray(I))
      for (const l of I)
        l instanceof nA && t.has(l) && c.push(l.toString());
    return c;
  }
  function s(I, c = 0) {
    if (!Array.isArray(I))
      return null;
    const l = [];
    for (const h of I) {
      if (h instanceof nA && t.has(h)) {
        g.put(h), l.push(h.toString());
        continue;
      }
      const B = a(h, c);
      B && l.push(B);
    }
    if (c > 0)
      return l;
    const C = [];
    for (const [h] of t.items())
      g.has(h) || C.push(h.toString());
    return C.length && l.push({
      name: null,
      order: C
    }), l;
  }
  function a(I, c) {
    if (++c > o)
      return k("parseNestedOrder - reached MAX_NESTED_LEVELS."), null;
    const l = r.fetchIfRef(I);
    if (!Array.isArray(l))
      return null;
    const C = r.fetchIfRef(l[0]);
    if (typeof C != "string")
      return null;
    const h = s(l.slice(1), c);
    return !h || !h.length ? null : {
      name: XA(C),
      order: h
    };
  }
  function n(I) {
    if (Array.isArray(I))
      for (const c of I) {
        const l = r.fetchIfRef(c);
        if (!Array.isArray(l) || !l.length)
          continue;
        const C = /* @__PURE__ */ new Set();
        for (const h of l)
          h instanceof nA && t.has(h) && !C.has(h.toString()) && (C.add(h.toString()), t.get(h).rbGroups.push(C));
      }
  }
  const r = this.xref, g = new Ge(), o = 10;
  return n(A.get("RBGroups")), {
    name: typeof A.get("Name") == "string" ? XA(A.get("Name")) : null,
    creator: typeof A.get("Creator") == "string" ? XA(A.get("Creator")) : null,
    baseState: A.get("BaseState") instanceof L ? A.get("BaseState").name : null,
    on: i(A.get("ON")),
    off: i(A.get("OFF")),
    order: s(A.get("Order")),
    groups: [...t]
  };
};
let ta = _n;
function D1(e) {
  return e instanceof nA || e instanceof R || e instanceof JA || Array.isArray(e);
}
function k1(e, A) {
  if (e instanceof R)
    e = e.getRawValues();
  else if (e instanceof JA)
    e = e.dict.getRawValues();
  else if (!Array.isArray(e))
    return;
  for (const t of e)
    D1(t) && A.push(t);
}
class Rn {
  constructor(A, t, i) {
    this.dict = A, this.keys = t, this.xref = i, this.refSet = null;
  }
  async load() {
    if (this.xref.stream.isDataLoaded)
      return;
    const {
      keys: A,
      dict: t
    } = this;
    this.refSet = new Ge();
    const i = [];
    for (const s of A) {
      const a = t.getRaw(s);
      a !== void 0 && i.push(a);
    }
    return this._walk(i);
  }
  async _walk(A) {
    const t = [], i = [];
    for (; A.length; ) {
      let s = A.pop();
      if (s instanceof nA) {
        if (this.refSet.has(s))
          continue;
        try {
          this.refSet.put(s), s = this.xref.fetch(s);
        } catch (a) {
          if (!(a instanceof Ie)) {
            k(`ObjectLoader._walk - requesting all data: "${a}".`), this.refSet = null;
            const {
              manager: n
            } = this.xref.stream;
            return n.requestAllChunks();
          }
          t.push(s), i.push({
            begin: a.begin,
            end: a.end
          });
        }
      }
      if (s instanceof JA) {
        const a = s.getBaseStreams();
        if (a) {
          let n = !1;
          for (const r of a)
            r.isDataLoaded || (n = !0, i.push({
              begin: r.start,
              end: r.end
            }));
          n && t.push(s);
        }
      }
      k1(s, A);
    }
    if (i.length) {
      await this.xref.stream.manager.requestRanges(i);
      for (const s of t)
        s instanceof nA && this.refSet.remove(s);
      return this._walk(t);
    }
    this.refSet = null;
  }
}
const nr = Symbol(), C0 = Symbol(), Qe = Symbol(), Oi = Symbol(), Jt = Symbol(), J0 = Symbol(), hn = Symbol(), Ot = Symbol(), ii = Symbol(), W = Symbol("content"), Lt = Symbol("data"), rs = Symbol(), Y = Symbol("extra"), ne = Symbol(), ba = Symbol(), wg = Symbol(), cl = Symbol(), h0 = Symbol(), rr = Symbol(), ia = Symbol(), vs = Symbol(), ao = Symbol(), Pe = Symbol(), Ts = Symbol(), Le = Symbol(), gs = Symbol(), hi = Symbol(), we = Symbol(), GA = Symbol(), me = Symbol(), ae = Symbol(), sa = Symbol(), L0 = Symbol(), bg = Symbol(), Bn = Symbol(), no = Symbol(), x0 = Symbol(), Y0 = Symbol(), Mi = Symbol(), qs = Symbol(), ui = Symbol(), yi = Symbol(), aa = Symbol(), na = Symbol(), S1 = Symbol(), pe = Symbol("namespaceId"), VA = Symbol("nodeName"), qi = Symbol(), ni = Symbol(), Dg = Symbol(), di = Symbol(), gi = Symbol(), ct = Symbol(), hs = Symbol(), Pi = Symbol(), ll = Symbol("root"), Ms = Symbol(), Qi = Symbol(), kg = Symbol(), Cl = Symbol(), Qt = Symbol(), Pt = Symbol(), Se = Symbol(), hl = Symbol(), SA = Symbol(), Ps = Symbol(), ZA = Symbol(), ee = Symbol("uid"), Xt = Symbol(), be = {
  config: {
    id: 0,
    check: (e) => e.startsWith("http://www.xfa.org/schema/xci/")
  },
  connectionSet: {
    id: 1,
    check: (e) => e.startsWith("http://www.xfa.org/schema/xfa-connection-set/")
  },
  datasets: {
    id: 2,
    check: (e) => e.startsWith("http://www.xfa.org/schema/xfa-data/")
  },
  form: {
    id: 3,
    check: (e) => e.startsWith("http://www.xfa.org/schema/xfa-form/")
  },
  localeSet: {
    id: 4,
    check: (e) => e.startsWith("http://www.xfa.org/schema/xfa-locale-set/")
  },
  pdf: {
    id: 5,
    check: (e) => e === "http://ns.adobe.com/xdp/pdf/"
  },
  signature: {
    id: 6,
    check: (e) => e === "http://www.w3.org/2000/09/xmldsig#"
  },
  sourceSet: {
    id: 7,
    check: (e) => e.startsWith("http://www.xfa.org/schema/xfa-source-set/")
  },
  stylesheet: {
    id: 8,
    check: (e) => e === "http://www.w3.org/1999/XSL/Transform"
  },
  template: {
    id: 9,
    check: (e) => e.startsWith("http://www.xfa.org/schema/xfa-template/")
  },
  xdc: {
    id: 10,
    check: (e) => e.startsWith("http://www.xfa.org/schema/xdc/")
  },
  xdp: {
    id: 11,
    check: (e) => e === "http://ns.adobe.com/xdp/"
  },
  xfdf: {
    id: 12,
    check: (e) => e === "http://ns.adobe.com/xfdf/"
  },
  xhtml: {
    id: 13,
    check: (e) => e === "http://www.w3.org/1999/xhtml"
  },
  xmpmeta: {
    id: 14,
    check: (e) => e === "http://ns.adobe.com/xmpmeta/"
  }
}, F1 = {
  pt: (e) => e,
  cm: (e) => e / 2.54 * 72,
  mm: (e) => e / (10 * 2.54) * 72,
  in: (e) => e * 72,
  px: (e) => e
}, R1 = /([+-]?\d+\.?\d*)(.*)/;
function gr(e) {
  return e.startsWith("'") || e.startsWith('"') ? e.slice(1, -1) : e;
}
function RA({
  data: e,
  defaultValue: A,
  validate: t
}) {
  if (!e)
    return A;
  e = e.trim();
  const i = parseInt(e, 10);
  return !isNaN(i) && t(i) ? i : A;
}
function Nn({
  data: e,
  defaultValue: A,
  validate: t
}) {
  if (!e)
    return A;
  e = e.trim();
  const i = parseFloat(e);
  return !isNaN(i) && t(i) ? i : A;
}
function or({
  data: e,
  defaultValue: A,
  validate: t
}) {
  return e ? (e = e.trim(), t(e) ? e : A) : A;
}
function O(e, A) {
  return or({
    data: e,
    defaultValue: A[0],
    validate: (t) => A.includes(t)
  });
}
function CA(e, A = "0") {
  if (A || (A = "0"), !e)
    return CA(A);
  const t = e.trim().match(R1);
  if (!t)
    return CA(A);
  const [, i, s] = t, a = parseFloat(i);
  if (isNaN(a))
    return CA(A);
  if (a === 0)
    return 0;
  const n = F1[s];
  return n ? n(a) : a;
}
function MI(e) {
  if (!e)
    return {
      num: 1,
      den: 1
    };
  const A = e.trim().split(/\s*:\s*/).map((s) => parseFloat(s)).filter((s) => !isNaN(s));
  if (A.length === 1 && A.push(1), A.length === 0)
    return {
      num: 1,
      den: 1
    };
  const [t, i] = A;
  return {
    num: t,
    den: i
  };
}
function Vt(e) {
  return e ? e.trim().split(/\s+/).map((A) => ({
    excluded: A[0] === "-",
    viewname: A.substring(1)
  })) : [];
}
function N1(e, A = [0, 0, 0]) {
  let [t, i, s] = A;
  if (!e)
    return {
      r: t,
      g: i,
      b: s
    };
  const a = e.trim().split(/\s*,\s*/).map((n) => Math.min(Math.max(0, parseInt(n.trim(), 10)), 255)).map((n) => isNaN(n) ? 0 : n);
  return a.length < 3 ? {
    r: t,
    g: i,
    b: s
  } : ([t, i, s] = a, {
    r: t,
    g: i,
    b: s
  });
}
function G1(e) {
  if (!e)
    return {
      x: -1,
      y: -1,
      width: -1,
      height: -1
    };
  const t = e.trim().split(/\s*,\s*/).map((r) => CA(r, "-1"));
  if (t.length < 4 || t[2] < 0 || t[3] < 0)
    return {
      x: -1,
      y: -1,
      width: -1,
      height: -1
    };
  const [i, s, a, n] = t;
  return {
    x: i,
    y: s,
    width: a,
    height: n
  };
}
class fA {
  static get FAILURE() {
    return tA(this, "FAILURE", new fA(!1, null, null, null));
  }
  static get EMPTY() {
    return tA(this, "EMPTY", new fA(!0, null, null, null));
  }
  constructor(A, t, i, s) {
    this.success = A, this.html = t, this.bbox = i, this.breakNode = s;
  }
  isBreak() {
    return !!this.breakNode;
  }
  static breakNode(A) {
    return new fA(!1, null, null, A);
  }
  static success(A, t = null) {
    return new fA(!0, A, t, null);
  }
}
class U1 {
  constructor(A) {
    this.fonts = /* @__PURE__ */ new Map(), this.cache = /* @__PURE__ */ new Map(), this.warned = /* @__PURE__ */ new Set(), this.defaultFont = null, this.add(A);
  }
  add(A, t = null) {
    for (const s of A)
      this.addPdfFont(s);
    for (const s of this.fonts.values())
      s.regular || (s.regular = s.italic || s.bold || s.bolditalic);
    if (!t || t.size === 0)
      return;
    const i = this.fonts.get("PdfJS-Fallback-PdfJS-XFA");
    for (const s of t)
      this.fonts.set(s, i);
  }
  addPdfFont(A) {
    var r, g, o;
    const t = A.cssFontInfo, i = t.fontFamily;
    let s = this.fonts.get(i);
    s || (s = /* @__PURE__ */ Object.create(null), this.fonts.set(i, s), this.defaultFont || (this.defaultFont = s));
    let a = "";
    const n = parseFloat(t.fontWeight);
    parseFloat(t.italicAngle) !== 0 ? a = n >= 700 ? "bolditalic" : "italic" : n >= 700 && (a = "bold"), a || ((A.name.includes("Bold") || (r = A.psName) != null && r.includes("Bold")) && (a = "bold"), (A.name.includes("Italic") || A.name.endsWith("It") || (g = A.psName) != null && g.includes("Italic") || (o = A.psName) != null && o.endsWith("It")) && (a += "italic")), a || (a = "regular"), s[a] = A;
  }
  getDefault() {
    return this.defaultFont;
  }
  find(A, t = !0) {
    var r, g;
    let i = this.fonts.get(A) || this.cache.get(A);
    if (i)
      return i;
    const s = /,|-|_| |bolditalic|bold|italic|regular|it/gi;
    let a = A.replaceAll(s, "");
    if (i = this.fonts.get(a), i)
      return this.cache.set(A, i), i;
    a = a.toLowerCase();
    const n = [];
    for (const [o, I] of this.fonts.entries())
      o.replaceAll(s, "").toLowerCase().startsWith(a) && n.push(I);
    if (n.length === 0)
      for (const [, o] of this.fonts.entries())
        (r = o.regular.name) != null && r.replaceAll(s, "").toLowerCase().startsWith(a) && n.push(o);
    if (n.length === 0) {
      a = a.replaceAll(/psmt|mt/gi, "");
      for (const [o, I] of this.fonts.entries())
        o.replaceAll(s, "").toLowerCase().startsWith(a) && n.push(I);
    }
    if (n.length === 0)
      for (const o of this.fonts.values())
        (g = o.regular.name) != null && g.replaceAll(s, "").toLowerCase().startsWith(a) && n.push(o);
    return n.length >= 1 ? (n.length !== 1 && t && k(`XFA - Too many choices to guess the correct font: ${A}`), this.cache.set(A, n[0]), n[0]) : (t && !this.warned.has(A) && (this.warned.add(A), k(`XFA - Cannot find the font: ${A}`)), null);
  }
}
function ro(e, A) {
  return e.posture === "italic" ? e.weight === "bold" ? A.bolditalic : A.italic : e.weight === "bold" ? A.bold : A.regular;
}
function M1(e, A = !1) {
  let t = null;
  if (e) {
    const n = gr(e.typeface), r = e[ae].fontFinder.find(n);
    t = ro(e, r);
  }
  if (!t)
    return {
      lineHeight: 12,
      lineGap: 2,
      lineNoGap: 10
    };
  const i = e.size || 10, s = t.lineHeight ? Math.max(A ? 0 : 1.2, t.lineHeight) : 1.2, a = t.lineGap === void 0 ? 0.2 : t.lineGap;
  return {
    lineHeight: s * i,
    lineGap: a * i,
    lineNoGap: Math.max(1, s - a) * i
  };
}
const L1 = 1.02;
class LI {
  constructor(A, t, i, s) {
    if (this.lineHeight = i, this.paraMargin = t || {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }, !A) {
      [this.pdfFont, this.xfaFont] = this.defaultFont(s);
      return;
    }
    this.xfaFont = {
      typeface: A.typeface,
      posture: A.posture,
      weight: A.weight,
      size: A.size,
      letterSpacing: A.letterSpacing
    };
    const a = s.find(A.typeface);
    if (!a) {
      [this.pdfFont, this.xfaFont] = this.defaultFont(s);
      return;
    }
    this.pdfFont = ro(A, a), this.pdfFont || ([this.pdfFont, this.xfaFont] = this.defaultFont(s));
  }
  defaultFont(A) {
    const t = A.find("Helvetica", !1) || A.find("Myriad Pro", !1) || A.find("Arial", !1) || A.getDefault();
    if (t != null && t.regular) {
      const s = t.regular, n = {
        typeface: s.cssFontInfo.fontFamily,
        posture: "normal",
        weight: "normal",
        size: 10,
        letterSpacing: 0
      };
      return [s, n];
    }
    return [null, {
      typeface: "Courier",
      posture: "normal",
      weight: "normal",
      size: 10,
      letterSpacing: 0
    }];
  }
}
class H1 {
  constructor(A, t, i, s) {
    this.fontFinder = s, this.stack = [new LI(A, t, i, s)];
  }
  pushData(A, t, i) {
    const s = this.stack.at(-1);
    for (const n of ["typeface", "posture", "weight", "size", "letterSpacing"])
      A[n] || (A[n] = s.xfaFont[n]);
    for (const n of ["top", "bottom", "left", "right"])
      isNaN(t[n]) && (t[n] = s.paraMargin[n]);
    const a = new LI(A, t, i || s.lineHeight, this.fontFinder);
    a.pdfFont || (a.pdfFont = s.pdfFont), this.stack.push(a);
  }
  popFont() {
    this.stack.pop();
  }
  topFont() {
    return this.stack.at(-1);
  }
}
class J1 {
  constructor(A, t, i, s) {
    this.glyphs = [], this.fontSelector = new H1(A, t, i, s), this.extraHeight = 0;
  }
  pushData(A, t, i) {
    this.fontSelector.pushData(A, t, i);
  }
  popFont(A) {
    return this.fontSelector.popFont();
  }
  addPara() {
    const A = this.fontSelector.topFont();
    this.extraHeight += A.paraMargin.top + A.paraMargin.bottom;
  }
  addString(A) {
    if (!A)
      return;
    const t = this.fontSelector.topFont(), i = t.xfaFont.size;
    if (t.pdfFont) {
      const s = t.xfaFont.letterSpacing, a = t.pdfFont, n = a.lineHeight || 1.2, r = t.lineHeight || Math.max(1.2, n) * i, g = a.lineGap === void 0 ? 0.2 : a.lineGap, o = n - g, I = Math.max(1, o) * i, c = i / 1e3, l = a.defaultWidth || a.charsToGlyphs(" ")[0].width;
      for (const C of A.split(/[\u2029\n]/)) {
        const h = a.encodeString(C).join(""), B = a.charsToGlyphs(h);
        for (const Q of B) {
          const E = Q.width || l;
          this.glyphs.push([E * c + s, r, I, Q.unicode, !1]);
        }
        this.glyphs.push([0, 0, 0, `
`, !0]);
      }
      this.glyphs.pop();
      return;
    }
    for (const s of A.split(/[\u2029\n]/)) {
      for (const a of s.split(""))
        this.glyphs.push([i, 1.2 * i, i, a, !1]);
      this.glyphs.push([0, 0, 0, `
`, !0]);
    }
    this.glyphs.pop();
  }
  compute(A) {
    let t = -1, i = 0, s = 0, a = 0, n = 0, r = 0, g = !1, o = !0;
    for (let I = 0, c = this.glyphs.length; I < c; I++) {
      const [l, C, h, B, Q] = this.glyphs[I], E = B === " ", f = o ? h : C;
      if (Q) {
        s = Math.max(s, n), n = 0, a += r, r = f, t = -1, i = 0, o = !1;
        continue;
      }
      if (E) {
        n + l > A ? (s = Math.max(s, n), n = 0, a += r, r = f, t = -1, i = 0, g = !0, o = !1) : (r = Math.max(f, r), i = n, n += l, t = I);
        continue;
      }
      if (n + l > A) {
        a += r, r = f, t !== -1 ? (I = t, s = Math.max(s, i), n = 0, t = -1, i = 0) : (s = Math.max(s, n), n = l), g = !0, o = !1;
        continue;
      }
      n += l, r = Math.max(f, r);
    }
    return s = Math.max(s, n), a += r + this.extraHeight, {
      width: L1 * s,
      height: a,
      isBroken: g
    };
  }
}
const HI = /^[^.[]+/, Y1 = /^[^\]]+/, xt = {
  dot: 0,
  dotDot: 1,
  dotHash: 2,
  dotBracket: 3,
  dotParen: 4
}, Bl = /* @__PURE__ */ new Map([["$data", (e, A) => e.datasets ? e.datasets.data : e], ["$record", (e, A) => (e.datasets ? e.datasets.data : e)[Le]()[0]], ["$template", (e, A) => e.template], ["$connectionSet", (e, A) => e.connectionSet], ["$form", (e, A) => e.form], ["$layout", (e, A) => e.layout], ["$host", (e, A) => e.host], ["$dataWindow", (e, A) => e.dataWindow], ["$event", (e, A) => e.event], ["!", (e, A) => e.datasets], ["$xfa", (e, A) => e], ["xfa", (e, A) => e], ["$", (e, A) => A]]), JI = /* @__PURE__ */ new WeakMap();
function K1(e) {
  return e = e.trim(), e === "*" ? 1 / 0 : parseInt(e, 10) || 0;
}
function Ql(e, A, t = !0) {
  let i = e.match(HI);
  if (!i)
    return null;
  let [s] = i;
  const a = [{
    name: s,
    cacheName: "." + s,
    index: 0,
    js: null,
    formCalc: null,
    operator: xt.dot
  }];
  let n = s.length;
  for (; n < e.length; ) {
    const r = n;
    if (e.charAt(n++) === "[") {
      if (i = e.slice(n).match(Y1), !i)
        return k("XFA - Invalid index in SOM expression"), null;
      a.at(-1).index = K1(i[0]), n += i[0].length + 1;
      continue;
    }
    let o;
    switch (e.charAt(n)) {
      case ".":
        if (!A)
          return null;
        n++, o = xt.dotDot;
        break;
      case "#":
        n++, o = xt.dotHash;
        break;
      case "[":
        if (t)
          return k("XFA - SOM expression contains a FormCalc subexpression which is not supported for now."), null;
        o = xt.dotBracket;
        break;
      case "(":
        if (t)
          return k("XFA - SOM expression contains a JavaScript subexpression which is not supported for now."), null;
        o = xt.dotParen;
        break;
      default:
        o = xt.dot;
        break;
    }
    if (i = e.slice(n).match(HI), !i)
      break;
    [s] = i, n += s.length, a.push({
      name: s,
      cacheName: e.slice(r, n),
      operator: o,
      index: 0,
      js: null,
      formCalc: null
    });
  }
  return a;
}
function Ri(e, A, t, i = !0, s = !0) {
  const a = Ql(t, i);
  if (!a)
    return null;
  const n = Bl.get(a[0].name);
  let r = 0, g;
  n ? (g = !0, e = [n(e, A)], r = 1) : (g = A === null, e = [A || e]);
  for (let o = a.length; r < o; r++) {
    const {
      name: I,
      cacheName: c,
      operator: l,
      index: C
    } = a[r], h = [];
    for (const B of e) {
      if (!B.isXFAObject)
        continue;
      let Q, E;
      if (s && (E = JI.get(B), E || (E = /* @__PURE__ */ new Map(), JI.set(B, E)), Q = E.get(c)), !Q) {
        switch (l) {
          case xt.dot:
            Q = B[ia](I, !1);
            break;
          case xt.dotDot:
            Q = B[ia](I, !0);
            break;
          case xt.dotHash:
            Q = B[rr](I), Q = Q.isXFAObjectArray ? Q.children : [Q];
            break;
        }
        s && E.set(c, Q);
      }
      Q.length > 0 && h.push(Q);
    }
    if (h.length === 0 && !g && r === 0) {
      if (A = A[GA](), !A)
        return null;
      r = -1, e = [A];
      continue;
    }
    e = isFinite(C) ? h.filter((B) => C < B.length).map((B) => B[C]) : h.flat();
  }
  return e.length === 0 ? null : e;
}
function v1(e, A, t) {
  const i = Ql(t);
  if (!i || i.some((n) => n.operator === xt.dotDot))
    return null;
  const s = Bl.get(i[0].name);
  let a = 0;
  s ? (e = s(e, A), a = 1) : e = A || e;
  for (let n = i.length; a < n; a++) {
    const {
      name: r,
      operator: g,
      index: o
    } = i[a];
    if (!isFinite(o))
      return i[a].index = 0, e.createNodes(i.slice(a));
    let I;
    switch (g) {
      case xt.dot:
        I = e[ia](r, !1);
        break;
      case xt.dotDot:
        I = e[ia](r, !0);
        break;
      case xt.dotHash:
        I = e[rr](r), I = I.isXFAObjectArray ? I.children : [I];
        break;
    }
    if (I.length === 0)
      return e.createNodes(i.slice(a));
    if (o < I.length) {
      const c = I[o];
      if (!c.isXFAObject)
        return k("XFA - Cannot create a node."), null;
      e = c;
    } else
      return i[a].index = o - I.length, e.createNodes(i.slice(a));
  }
  return null;
}
const Va = Symbol(), $i = Symbol(), k0 = Symbol(), YA = Symbol("_children"), Mr = Symbol(), Si = Symbol(), Lr = Symbol(), YI = Symbol(), Hr = Symbol(), KI = Symbol(), Jr = Symbol(), Ls = Symbol(), _a = Symbol(), Rt = Symbol("parent"), Fs = Symbol(), Rs = Symbol(), Yr = Symbol();
let Sg = 0;
const El = be.datasets.id;
class K {
  constructor(A, t, i = !1) {
    this[pe] = A, this[VA] = t, this[Jr] = i, this[Rt] = null, this[YA] = [], this[ee] = `${t}${Sg++}`, this[ae] = null;
  }
  get isXFAObject() {
    return !0;
  }
  get isXFAObjectArray() {
    return !1;
  }
  createNodes(A) {
    let t = this, i = null;
    for (const {
      name: s,
      index: a
    } of A) {
      for (let n = 0, r = isFinite(a) ? a : 0; n <= r; n++) {
        const g = t[pe] === El ? -1 : t[pe];
        i = new ri(g, s), t[Qe](i);
      }
      t = i;
    }
    return i;
  }
  [ni](A) {
    if (!this[Jr] || !this[Dg](A))
      return !1;
    const t = A[VA], i = this[t];
    if (i instanceof b) {
      if (i.push(A))
        return this[Qe](A), !0;
    } else
      return i !== null && this[Pi](i), this[t] = A, this[Qe](A), !0;
    let s = "";
    return this.id ? s = ` (id: ${this.id})` : this.name && (s = ` (name: ${this.name} ${this.h.value})`), k(`XFA - node "${this[VA]}"${s} has already enough "${t}"!`), !1;
  }
  [Dg](A) {
    return this.hasOwnProperty(A[VA]) && A[pe] === this[pe];
  }
  [qs]() {
    return !1;
  }
  [nr]() {
    return !1;
  }
  [no]() {
    return !1;
  }
  [x0]() {
    return !1;
  }
  [ct]() {
    this.para && this[me]()[Y].paraStack.pop();
  }
  [hs]() {
    this[me]()[Y].paraStack.push(this.para);
  }
  [kg](A) {
    this.id && this[pe] === be.template.id && A.set(this.id, this);
  }
  [me]() {
    return this[ae].template;
  }
  [ui]() {
    return !1;
  }
  [yi]() {
    return !1;
  }
  [Qe](A) {
    A[Rt] = this, this[YA].push(A), !A[ae] && this[ae] && (A[ae] = this[ae]);
  }
  [Pi](A) {
    const t = this[YA].indexOf(A);
    this[YA].splice(t, 1);
  }
  [sa]() {
    return this.hasOwnProperty("value");
  }
  [Qt](A) {
  }
  [di](A) {
  }
  [ne]() {
  }
  [Jt](A) {
    delete this[Jr], this[hn] && (A.clean(this[hn]), delete this[hn]);
  }
  [bg](A) {
    return this[YA].indexOf(A);
  }
  [Bn](A, t) {
    t[Rt] = this, this[YA].splice(A, 0, t), !t[ae] && this[ae] && (t[ae] = this[ae]);
  }
  [aa]() {
    return !this.name;
  }
  [S1]() {
    return "";
  }
  [Se]() {
    return this[YA].length === 0 ? this[W] : this[YA].map((A) => A[Se]()).join("");
  }
  get [k0]() {
    const A = Object.getPrototypeOf(this);
    if (!A._attributes) {
      const t = A._attributes = /* @__PURE__ */ new Set();
      for (const i of Object.getOwnPropertyNames(this)) {
        if (this[i] === null || this[i] instanceof K || this[i] instanceof b)
          break;
        t.add(i);
      }
    }
    return tA(this, k0, A._attributes);
  }
  [Mi](A) {
    let t = this;
    for (; t; ) {
      if (t === A)
        return !0;
      t = t[GA]();
    }
    return !1;
  }
  [GA]() {
    return this[Rt];
  }
  [we]() {
    return this[GA]();
  }
  [Le](A = null) {
    return A ? this[A] : this[YA];
  }
  [rs]() {
    const A = /* @__PURE__ */ Object.create(null);
    this[W] && (A.$content = this[W]);
    for (const t of Object.getOwnPropertyNames(this)) {
      const i = this[t];
      i !== null && (i instanceof K ? A[t] = i[rs]() : i instanceof b ? i.isEmpty() || (A[t] = i.dump()) : A[t] = i);
    }
    return A;
  }
  [ZA]() {
    return null;
  }
  [SA]() {
    return fA.EMPTY;
  }
  *[gs]() {
    for (const A of this[Le]())
      yield A;
  }
  *[YI](A, t) {
    for (const i of this[gs]())
      if (!A || t === A.has(i[VA])) {
        const s = this[h0](), a = i[SA](s);
        a.success || (this[Y].failingNode = i), yield a;
      }
  }
  [ba]() {
    return null;
  }
  [C0](A, t) {
    this[Y].children.push(A);
  }
  [h0]() {
  }
  [Oi]({
    filter: A = null,
    include: t = !0
  }) {
    if (!this[Y].generator)
      this[Y].generator = this[YI](A, t);
    else {
      const i = this[h0](), s = this[Y].failingNode[SA](i);
      if (!s.success)
        return s;
      s.html && this[C0](s.html, s.bbox), delete this[Y].failingNode;
    }
    for (; ; ) {
      const i = this[Y].generator.next();
      if (i.done)
        break;
      const s = i.value;
      if (!s.success)
        return s;
      s.html && this[C0](s.html, s.bbox);
    }
    return this[Y].generator = null, fA.EMPTY;
  }
  [Cl](A) {
    this[Rs] = new Set(Object.keys(A));
  }
  [KI](A) {
    const t = this[k0], i = this[Rs];
    return [...A].filter((s) => t.has(s) && !i.has(s));
  }
  [Ms](A, t = /* @__PURE__ */ new Set()) {
    for (const i of this[YA])
      i[Fs](A, t);
  }
  [Fs](A, t) {
    const i = this[Hr](A, t);
    i ? this[Va](i, A, t) : this[Ms](A, t);
  }
  [Hr](A, t) {
    const {
      use: i,
      usehref: s
    } = this;
    if (!i && !s)
      return null;
    let a = null, n = null, r = null, g = i;
    if (s ? (g = s, s.startsWith("#som(") && s.endsWith(")") ? n = s.slice(5, -1) : s.startsWith(".#som(") && s.endsWith(")") ? n = s.slice(6, -1) : s.startsWith("#") ? r = s.slice(1) : s.startsWith(".#") && (r = s.slice(2))) : i.startsWith("#") ? r = i.slice(1) : n = i, this.use = this.usehref = "", r ? a = A.get(r) : (a = Ri(A.get(ll), this, n, !0, !1), a && (a = a[0])), !a)
      return k(`XFA - Invalid prototype reference: ${g}.`), null;
    if (a[VA] !== this[VA])
      return k(`XFA - Incompatible prototype: ${a[VA]} !== ${this[VA]}.`), null;
    if (t.has(a))
      return k("XFA - Cycle detected in prototypes use."), null;
    t.add(a);
    const o = a[Hr](A, t);
    return o && a[Va](o, A, t), a[Ms](A, t), t.delete(a), a;
  }
  [Va](A, t, i) {
    if (i.has(A)) {
      k("XFA - Cycle detected in prototypes use.");
      return;
    }
    !this[W] && A[W] && (this[W] = A[W]), new Set(i).add(A);
    for (const a of this[KI](A[Rs]))
      this[a] = A[a], this[Rs] && this[Rs].add(a);
    for (const a of Object.getOwnPropertyNames(this)) {
      if (this[k0].has(a))
        continue;
      const n = this[a], r = A[a];
      if (n instanceof b) {
        for (const g of n[YA])
          g[Fs](t, i);
        for (let g = n[YA].length, o = r[YA].length; g < o; g++) {
          const I = A[YA][g][Ot]();
          if (n.push(I))
            I[Rt] = this, this[YA].push(I), I[Fs](t, i);
          else
            break;
        }
        continue;
      }
      if (n !== null) {
        n[Ms](t, i), r && n[Va](r, t, i);
        continue;
      }
      if (r !== null) {
        const g = r[Ot]();
        g[Rt] = this, this[a] = g, this[YA].push(g), g[Fs](t, i);
      }
    }
  }
  static [Mr](A) {
    return Array.isArray(A) ? A.map((t) => K[Mr](t)) : typeof A == "object" && A !== null ? Object.assign({}, A) : A;
  }
  [Ot]() {
    const A = Object.create(Object.getPrototypeOf(this));
    for (const t of Object.getOwnPropertySymbols(this))
      try {
        A[t] = this[t];
      } catch {
        tA(A, t, this[t]);
      }
    A[ee] = `${A[VA]}${Sg++}`, A[YA] = [];
    for (const t of Object.getOwnPropertyNames(this)) {
      if (this[k0].has(t)) {
        A[t] = K[Mr](this[t]);
        continue;
      }
      const i = this[t];
      A[t] = i instanceof b ? new b(i[Ls]) : null;
    }
    for (const t of this[YA]) {
      const i = t[VA], s = t[Ot]();
      A[YA].push(s), s[Rt] = A, A[i] === null ? A[i] = s : A[i][YA].push(s);
    }
    return A;
  }
  [Le](A = null) {
    return A ? this[YA].filter((t) => t[VA] === A) : this[YA];
  }
  [rr](A) {
    return this[A];
  }
  [ia](A, t, i = !0) {
    return Array.from(this[vs](A, t, i));
  }
  *[vs](A, t, i = !0) {
    if (A === "parent") {
      yield this[Rt];
      return;
    }
    for (const s of this[YA])
      s[VA] === A && (yield s), s.name === A && (yield s), (t || s[aa]()) && (yield* s[vs](A, t, !1));
    i && this[k0].has(A) && (yield new go(this, A, this[A]));
  }
}
class b {
  constructor(A = 1 / 0) {
    this[Ls] = A, this[YA] = [];
  }
  get isXFAObject() {
    return !1;
  }
  get isXFAObjectArray() {
    return !0;
  }
  push(A) {
    return this[YA].length <= this[Ls] ? (this[YA].push(A), !0) : (k(`XFA - node "${A[VA]}" accepts no more than ${this[Ls]} children`), !1);
  }
  isEmpty() {
    return this[YA].length === 0;
  }
  dump() {
    return this[YA].length === 1 ? this[YA][0][rs]() : this[YA].map((A) => A[rs]());
  }
  [Ot]() {
    const A = new b(this[Ls]);
    return A[YA] = this[YA].map((t) => t[Ot]()), A;
  }
  get children() {
    return this[YA];
  }
  clear() {
    this[YA].length = 0;
  }
}
class go {
  constructor(A, t, i) {
    this[Rt] = A, this[VA] = t, this[W] = i, this[ii] = !1, this[ee] = `attribute${Sg++}`;
  }
  [GA]() {
    return this[Rt];
  }
  [Y0]() {
    return !0;
  }
  [ao]() {
    return this[W].trim();
  }
  [Qt](A) {
    A = A.value || "", this[W] = A.toString();
  }
  [Se]() {
    return this[W];
  }
  [Mi](A) {
    return this[Rt] === A || this[Rt][Mi](A);
  }
}
class ri extends K {
  constructor(A, t, i = {}) {
    if (super(A, t), this[W] = "", this[Si] = null, t !== "#text") {
      const s = /* @__PURE__ */ new Map();
      this[$i] = s;
      for (const [a, n] of Object.entries(i))
        s.set(a, new go(this, a, n));
      if (i.hasOwnProperty(qi)) {
        const a = i[qi].xfa.dataNode;
        a !== void 0 && (a === "dataGroup" ? this[Si] = !1 : a === "dataValue" && (this[Si] = !0));
      }
    }
    this[ii] = !1;
  }
  [Ps](A) {
    const t = this[VA];
    if (t === "#text") {
      A.push(O0(this[W]));
      return;
    }
    const i = Or(t), s = this[pe] === El ? "xfa:" : "";
    A.push(`<${s}${i}`);
    for (const [a, n] of this[$i].entries()) {
      const r = Or(a);
      A.push(` ${r}="${O0(n[W])}"`);
    }
    if (this[Si] !== null && (this[Si] ? A.push(' xfa:dataNode="dataValue"') : A.push(' xfa:dataNode="dataGroup"')), !this[W] && this[YA].length === 0) {
      A.push("/>");
      return;
    }
    if (A.push(">"), this[W])
      typeof this[W] == "string" ? A.push(O0(this[W])) : this[W][Ps](A);
    else
      for (const a of this[YA])
        a[Ps](A);
    A.push(`</${s}${i}>`);
  }
  [ni](A) {
    if (this[W]) {
      const t = new ri(this[pe], "#text");
      this[Qe](t), t[W] = this[W], this[W] = "";
    }
    return this[Qe](A), !0;
  }
  [di](A) {
    this[W] += A;
  }
  [ne]() {
    if (this[W] && this[YA].length > 0) {
      const A = new ri(this[pe], "#text");
      this[Qe](A), A[W] = this[W], delete this[W];
    }
  }
  [SA]() {
    return this[VA] === "#text" ? fA.success({
      name: "#text",
      value: this[W]
    }) : fA.EMPTY;
  }
  [Le](A = null) {
    return A ? this[YA].filter((t) => t[VA] === A) : this[YA];
  }
  [cl]() {
    return this[$i];
  }
  [rr](A) {
    const t = this[$i].get(A);
    return t !== void 0 ? t : this[Le](A);
  }
  *[vs](A, t) {
    const i = this[$i].get(A);
    i && (yield i);
    for (const s of this[YA])
      s[VA] === A && (yield s), t && (yield* s[vs](A, t));
  }
  *[wg](A, t) {
    const i = this[$i].get(A);
    i && (!t || !i[ii]) && (yield i);
    for (const s of this[YA])
      yield* s[wg](A, t);
  }
  *[Ts](A, t, i) {
    for (const s of this[YA])
      s[VA] === A && (!i || !s[ii]) && (yield s), t && (yield* s[Ts](A, t, i));
  }
  [Y0]() {
    return this[Si] === null ? this[YA].length === 0 || this[YA][0][pe] === be.xhtml.id : this[Si];
  }
  [ao]() {
    return this[Si] === null ? this[YA].length === 0 ? this[W].trim() : this[YA][0][pe] === be.xhtml.id ? this[YA][0][Se]().trim() : null : this[W].trim();
  }
  [Qt](A) {
    A = A.value || "", this[W] = A.toString();
  }
  [rs](A = !1) {
    const t = /* @__PURE__ */ Object.create(null);
    A && (t.$ns = this[pe]), this[W] && (t.$content = this[W]), t.$name = this[VA], t.children = [];
    for (const i of this[YA])
      t.children.push(i[rs](A));
    t.attributes = /* @__PURE__ */ Object.create(null);
    for (const [i, s] of this[$i])
      t.attributes[i] = s[W];
    return t;
  }
}
class fe extends K {
  constructor(A, t) {
    super(A, t), this[W] = "";
  }
  [di](A) {
    this[W] += A;
  }
  [ne]() {
  }
}
class te extends fe {
  constructor(A, t, i) {
    super(A, t), this[_a] = i;
  }
  [ne]() {
    this[W] = or({
      data: this[W],
      defaultValue: this[_a][0],
      validate: (A) => this[_a].includes(A)
    });
  }
  [Jt](A) {
    super[Jt](A), delete this[_a];
  }
}
class qA extends fe {
  [ne]() {
    this[W] = this[W].trim();
  }
}
class _t extends fe {
  constructor(A, t, i, s) {
    super(A, t), this[Lr] = i, this[Yr] = s;
  }
  [ne]() {
    this[W] = RA({
      data: this[W],
      defaultValue: this[Lr],
      validate: this[Yr]
    });
  }
  [Jt](A) {
    super[Jt](A), delete this[Lr], delete this[Yr];
  }
}
class Fe extends _t {
  constructor(A, t) {
    super(A, t, 0, (i) => i === 1);
  }
}
class fl extends _t {
  constructor(A, t) {
    super(A, t, 1, (i) => i === 0);
  }
}
function FA(e) {
  return typeof e == "string" ? "0px" : Number.isInteger(e) ? `${e}px` : `${e.toFixed(2)}px`;
}
const vI = {
  anchorType(e, A) {
    const t = e[we]();
    if (!(!t || t.layout && t.layout !== "position"))
      switch ("transform" in A || (A.transform = ""), e.anchorType) {
        case "bottomCenter":
          A.transform += "translate(-50%, -100%)";
          break;
        case "bottomLeft":
          A.transform += "translate(0,-100%)";
          break;
        case "bottomRight":
          A.transform += "translate(-100%,-100%)";
          break;
        case "middleCenter":
          A.transform += "translate(-50%,-50%)";
          break;
        case "middleLeft":
          A.transform += "translate(0,-50%)";
          break;
        case "middleRight":
          A.transform += "translate(-100%,-50%)";
          break;
        case "topCenter":
          A.transform += "translate(-50%,0)";
          break;
        case "topRight":
          A.transform += "translate(-100%,0)";
          break;
      }
  },
  dimensions(e, A) {
    var a;
    const t = e[we]();
    let i = e.w;
    const s = e.h;
    if ((a = t.layout) != null && a.includes("row")) {
      const n = t[Y], r = e.colSpan;
      let g;
      r === -1 ? (g = n.columnWidths.slice(n.currentColumn).reduce((o, I) => o + I, 0), n.currentColumn = 0) : (g = n.columnWidths.slice(n.currentColumn, n.currentColumn + r).reduce((o, I) => o + I, 0), n.currentColumn = (n.currentColumn + e.colSpan) % n.columnWidths.length), isNaN(g) || (i = e.w = g);
    }
    A.width = i !== "" ? FA(i) : "auto", A.height = s !== "" ? FA(s) : "auto";
  },
  position(e, A) {
    const t = e[we]();
    t != null && t.layout && t.layout !== "position" || (A.position = "absolute", A.left = FA(e.x), A.top = FA(e.y));
  },
  rotate(e, A) {
    e.rotate && ("transform" in A || (A.transform = ""), A.transform += `rotate(-${e.rotate}deg)`, A.transformOrigin = "top left");
  },
  presence(e, A) {
    switch (e.presence) {
      case "invisible":
        A.visibility = "hidden";
        break;
      case "hidden":
      case "inactive":
        A.display = "none";
        break;
    }
  },
  hAlign(e, A) {
    if (e[VA] === "para")
      switch (e.hAlign) {
        case "justifyAll":
          A.textAlign = "justify-all";
          break;
        case "radix":
          A.textAlign = "left";
          break;
        default:
          A.textAlign = e.hAlign;
      }
    else
      switch (e.hAlign) {
        case "left":
          A.alignSelf = "start";
          break;
        case "center":
          A.alignSelf = "center";
          break;
        case "right":
          A.alignSelf = "end";
          break;
      }
  },
  margin(e, A) {
    e.margin && (A.margin = e.margin[ZA]().margin);
  }
};
function ul(e, A) {
  e[we]().layout === "position" && (e.minW > 0 && (A.minWidth = FA(e.minW)), e.maxW > 0 && (A.maxWidth = FA(e.maxW)), e.minH > 0 && (A.minHeight = FA(e.minH)), e.maxH > 0 && (A.maxHeight = FA(e.maxH)));
}
function TI(e, A, t, i, s, a) {
  const n = new J1(A, t, i, s);
  return typeof e == "string" ? n.addString(e) : e[gi](n), n.compute(a);
}
function oo(e, A) {
  let t = null, i = null, s = !1;
  if ((!e.w || !e.h) && e.value) {
    let a = 0, n = 0;
    e.margin && (a = e.margin.leftInset + e.margin.rightInset, n = e.margin.topInset + e.margin.bottomInset);
    let r = null, g = null;
    e.para && (g = /* @__PURE__ */ Object.create(null), r = e.para.lineHeight === "" ? null : e.para.lineHeight, g.top = e.para.spaceAbove === "" ? 0 : e.para.spaceAbove, g.bottom = e.para.spaceBelow === "" ? 0 : e.para.spaceBelow, g.left = e.para.marginLeft === "" ? 0 : e.para.marginLeft, g.right = e.para.marginRight === "" ? 0 : e.para.marginRight);
    let o = e.font;
    if (!o) {
      const l = e[me]();
      let C = e[GA]();
      for (; C && C !== l; ) {
        if (C.font) {
          o = C.font;
          break;
        }
        C = C[GA]();
      }
    }
    const I = (e.w || A.width) - a, c = e[ae].fontFinder;
    if (e.value.exData && e.value.exData[W] && e.value.exData.contentType === "text/html") {
      const l = TI(e.value.exData[W], o, g, r, c, I);
      i = l.width, t = l.height, s = l.isBroken;
    } else {
      const l = e.value[Se]();
      if (l) {
        const C = TI(l, o, g, r, c, I);
        i = C.width, t = C.height, s = C.isBroken;
      }
    }
    i !== null && !e.w && (i += a), t !== null && !e.h && (t += n);
  }
  return {
    w: i,
    h: t,
    isBroken: s
  };
}
function dl(e, A, t) {
  let i;
  if (e.w !== "" && e.h !== "")
    i = [e.x, e.y, e.w, e.h];
  else {
    if (!t)
      return null;
    let s = e.w;
    if (s === "") {
      if (e.maxW === 0) {
        const n = e[we]();
        s = n.layout === "position" && n.w !== "" ? 0 : e.minW;
      } else
        s = Math.min(e.maxW, t.width);
      A.attributes.style.width = FA(s);
    }
    let a = e.h;
    if (a === "") {
      if (e.maxH === 0) {
        const n = e[we]();
        a = n.layout === "position" && n.h !== "" ? 0 : e.minH;
      } else
        a = Math.min(e.maxH, t.height);
      A.attributes.style.height = FA(a);
    }
    i = [e.x, e.y, s, a];
  }
  return i;
}
function Ir(e) {
  var t;
  const A = e[we]();
  if ((t = A.layout) != null && t.includes("row")) {
    const i = A[Y], s = e.colSpan;
    let a;
    s === -1 ? a = i.columnWidths.slice(i.currentColumn).reduce((n, r) => n + r, 0) : a = i.columnWidths.slice(i.currentColumn, i.currentColumn + s).reduce((n, r) => n + r, 0), isNaN(a) || (e.w = a);
  }
  A.layout && A.layout !== "position" && (e.x = e.y = 0), e.layout === "table" && e.w === "" && Array.isArray(e.columnWidths) && (e.w = e.columnWidths.reduce((i, s) => i + s, 0));
}
function xl(e) {
  switch (e.layout) {
    case "position":
      return "xfaPosition";
    case "lr-tb":
      return "xfaLrTb";
    case "rl-row":
      return "xfaRlRow";
    case "rl-tb":
      return "xfaRlTb";
    case "row":
      return "xfaRow";
    case "table":
      return "xfaTable";
    case "tb":
      return "xfaTb";
    default:
      return "xfaPosition";
  }
}
function gt(e, ...A) {
  const t = /* @__PURE__ */ Object.create(null);
  for (const i of A) {
    const s = e[i];
    if (s !== null) {
      if (vI.hasOwnProperty(i)) {
        vI[i](e, t);
        continue;
      }
      if (s instanceof K) {
        const a = s[ZA]();
        a ? Object.assign(t, a) : k(`(DEBUG) - XFA - style for ${i} not implemented yet`);
      }
    }
  }
  return t;
}
function B0(e, A) {
  const {
    attributes: t
  } = A, {
    style: i
  } = t, s = {
    name: "div",
    attributes: {
      class: ["xfaWrapper"],
      style: /* @__PURE__ */ Object.create(null)
    },
    children: []
  };
  if (t.class.push("xfaWrapped"), e.border) {
    const {
      widths: a,
      insets: n
    } = e.border[Y];
    let r, g, o = n[0], I = n[3];
    const c = n[0] + n[2], l = n[1] + n[3];
    switch (e.border.hand) {
      case "even":
        o -= a[0] / 2, I -= a[3] / 2, r = `calc(100% + ${(a[1] + a[3]) / 2 - l}px)`, g = `calc(100% + ${(a[0] + a[2]) / 2 - c}px)`;
        break;
      case "left":
        o -= a[0], I -= a[3], r = `calc(100% + ${a[1] + a[3] - l}px)`, g = `calc(100% + ${a[0] + a[2] - c}px)`;
        break;
      case "right":
        r = l ? `calc(100% - ${l}px)` : "100%", g = c ? `calc(100% - ${c}px)` : "100%";
        break;
    }
    const C = ["xfaBorder"];
    Bs(e.border) && C.push("xfaPrintOnly");
    const h = {
      name: "div",
      attributes: {
        class: C,
        style: {
          top: `${o}px`,
          left: `${I}px`,
          width: r,
          height: g
        }
      },
      children: []
    };
    for (const B of ["border", "borderWidth", "borderColor", "borderRadius", "borderStyle"])
      i[B] !== void 0 && (h.attributes.style[B] = i[B], delete i[B]);
    s.children.push(h, A);
  } else
    s.children.push(A);
  for (const a of ["background", "backgroundClip", "top", "left", "width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "transform", "transformOrigin", "visibility"])
    i[a] !== void 0 && (s.attributes.style[a] = i[a], delete i[a]);
  return s.attributes.style.position = i.position === "absolute" ? "absolute" : "relative", delete i.position, i.alignSelf && (s.attributes.style.alignSelf = i.alignSelf, delete i.alignSelf), s;
}
function ml(e) {
  const A = CA(e.textIndent, "0px");
  if (A >= 0)
    return;
  const i = "padding" + ((e.textAlign === "right" ? "right" : "left") === "left" ? "Left" : "Right"), s = CA(e[i], "0px");
  e[i] = `${s - A}px`;
}
function Io(e, A) {
  switch (e.access) {
    case "nonInteractive":
      A.push("xfaNonInteractive");
      break;
    case "readOnly":
      A.push("xfaReadOnly");
      break;
    case "protected":
      A.push("xfaDisabled");
      break;
  }
}
function Bs(e) {
  return e.relevant.length > 0 && !e.relevant[0].excluded && e.relevant[0].viewname === "print";
}
function pl(e) {
  const A = e[me]()[Y].paraStack;
  return A.length ? A.at(-1) : null;
}
function yl(e, A, t) {
  var i;
  if ((i = t.attributes.class) != null && i.includes("xfaRich")) {
    A && (e.h === "" && (A.height = "auto"), e.w === "" && (A.width = "auto"));
    const s = pl(e);
    if (s) {
      const a = t.attributes.style;
      switch (a.display = "flex", a.flexDirection = "column", s.vAlign) {
        case "top":
          a.justifyContent = "start";
          break;
        case "bottom":
          a.justifyContent = "end";
          break;
        case "middle":
          a.justifyContent = "center";
          break;
      }
      const n = s[ZA]();
      for (const [r, g] of Object.entries(n))
        r in a || (a[r] = g);
    }
  }
}
function wl(e, A, t, i) {
  if (!t) {
    delete i.fontFamily;
    return;
  }
  const s = gr(e.typeface);
  i.fontFamily = `"${s}"`;
  const a = t.find(s);
  if (a) {
    const {
      fontFamily: n
    } = a.regular.cssFontInfo;
    n !== s && (i.fontFamily = `"${n}"`);
    const r = pl(A);
    if (r && r.lineHeight !== "" || i.lineHeight)
      return;
    const g = ro(e, a);
    g && (i.lineHeight = Math.max(1.2, g.lineHeight));
  }
}
function bl(e) {
  const A = un(e, null, {
    addDefaultProtocol: !0,
    tryConvertEncoding: !0
  });
  return A ? A.href : null;
}
function Dl(e, A) {
  return {
    name: "div",
    attributes: {
      class: [e.layout === "lr-tb" ? "xfaLr" : "xfaRl"]
    },
    children: A
  };
}
function kl(e) {
  if (!e[Y])
    return null;
  const t = {
    name: "div",
    attributes: e[Y].attributes,
    children: e[Y].children
  };
  if (e[Y].failingNode) {
    const i = e[Y].failingNode[ba]();
    i && (e.layout.endsWith("-tb") ? t.children.push(Dl(e, [i])) : t.children.push(i));
  }
  return t.children.length === 0 ? null : t;
}
function Sl(e, A, t) {
  const i = e[Y], s = i.availableSpace, [a, n, r, g] = t;
  switch (e.layout) {
    case "position": {
      i.width = Math.max(i.width, a + r), i.height = Math.max(i.height, n + g), i.children.push(A);
      break;
    }
    case "lr-tb":
    case "rl-tb":
      (!i.line || i.attempt === 1) && (i.line = Dl(e, []), i.children.push(i.line), i.numberInLine = 0), i.numberInLine += 1, i.line.children.push(A), i.attempt === 0 ? (i.currentWidth += r, i.height = Math.max(i.height, i.prevHeight + g)) : (i.currentWidth = r, i.prevHeight = i.height, i.height += g, i.attempt = 0), i.width = Math.max(i.width, i.currentWidth);
      break;
    case "rl-row":
    case "row": {
      i.children.push(A), i.width += r, i.height = Math.max(i.height, g);
      const o = FA(i.height);
      for (const I of i.children)
        I.attributes.style.height = o;
      break;
    }
    case "table": {
      i.width = Math.min(s.width, Math.max(i.width, r)), i.height += g, i.children.push(A);
      break;
    }
    case "tb": {
      i.width = Math.min(s.width, Math.max(i.width, r)), i.height += g, i.children.push(A);
      break;
    }
  }
}
function Fl(e) {
  const A = e[Y].availableSpace, t = e.margin ? e.margin.topInset + e.margin.bottomInset : 0, i = e.margin ? e.margin.leftInset + e.margin.rightInset : 0;
  switch (e.layout) {
    case "lr-tb":
    case "rl-tb":
      return e[Y].attempt === 0 ? {
        width: A.width - i - e[Y].currentWidth,
        height: A.height - t - e[Y].prevHeight
      } : {
        width: A.width - i,
        height: A.height - t - e[Y].height
      };
    case "rl-row":
    case "row":
      return {
        width: e[Y].columnWidths.slice(e[Y].currentColumn).reduce((a, n) => a + n),
        height: A.height - i
      };
    case "table":
    case "tb":
      return {
        width: A.width - i,
        height: A.height - t - e[Y].height
      };
    case "position":
    default:
      return A;
  }
}
function T1(e) {
  let A = e.w === "" ? NaN : e.w, t = e.h === "" ? NaN : e.h, [i, s] = [0, 0];
  switch (e.anchorType || "") {
    case "bottomCenter":
      [i, s] = [A / 2, t];
      break;
    case "bottomLeft":
      [i, s] = [0, t];
      break;
    case "bottomRight":
      [i, s] = [A, t];
      break;
    case "middleCenter":
      [i, s] = [A / 2, t / 2];
      break;
    case "middleLeft":
      [i, s] = [0, t / 2];
      break;
    case "middleRight":
      [i, s] = [A, t / 2];
      break;
    case "topCenter":
      [i, s] = [A / 2, 0];
      break;
    case "topRight":
      [i, s] = [A, 0];
      break;
  }
  let a, n;
  switch (e.rotate || 0) {
    case 0:
      [a, n] = [-i, -s];
      break;
    case 90:
      [a, n] = [-s, i], [A, t] = [t, -A];
      break;
    case 180:
      [a, n] = [i, s], [A, t] = [-A, -t];
      break;
    case 270:
      [a, n] = [s, -i], [A, t] = [-t, A];
      break;
  }
  return [e.x + a + Math.min(0, A), e.y + n + Math.min(0, t), Math.abs(A), Math.abs(t)];
}
function cr(e, A) {
  var g;
  if (e[me]()[Y].firstUnsplittable === null || e.w === 0 || e.h === 0)
    return !0;
  const t = 2, i = e[we](), s = ((g = i[Y]) == null ? void 0 : g.attempt) || 0, [, a, n, r] = T1(e);
  switch (i.layout) {
    case "lr-tb":
    case "rl-tb":
      return s === 0 ? e[me]()[Y].noLayoutFailure ? e.w !== "" ? Math.round(n - A.width) <= t : A.width > t : e.h !== "" && Math.round(r - A.height) > t ? !1 : e.w !== "" ? Math.round(n - A.width) <= t ? !0 : i[Y].numberInLine === 0 ? A.height > t : !1 : A.width > t : e[me]()[Y].noLayoutFailure ? !0 : e.h !== "" && Math.round(r - A.height) > t ? !1 : e.w === "" || Math.round(n - A.width) <= t ? A.height > t : i[yi]() ? !1 : A.height > t;
    case "table":
    case "tb":
      return e[me]()[Y].noLayoutFailure ? !0 : e.h !== "" && !e[ui]() ? Math.round(r - A.height) <= t : e.w === "" || Math.round(n - A.width) <= t ? A.height > t : i[yi]() ? !1 : A.height > t;
    case "position":
      if (e[me]()[Y].noLayoutFailure || e.h === "" || Math.round(r + a - A.height) <= t)
        return !0;
      const o = e[me]()[Y].currentContentArea;
      return r + a > o.h;
    case "rl-row":
    case "row":
      return e[me]()[Y].noLayoutFailure ? !0 : e.h !== "" ? Math.round(r - A.height) <= t : !0;
    default:
      return !0;
  }
}
const $ = be.template.id, Q0 = "http://www.w3.org/2000/svg", Gn = 2, q1 = 3, P1 = 5e3, W1 = /^H(\d+)$/, O1 = /* @__PURE__ */ new Set(["image/gif", "image/jpeg", "image/jpg", "image/pjpeg", "image/png", "image/apng", "image/x-png", "image/bmp", "image/x-ms-bmp", "image/tiff", "image/tif", "application/octet-stream"]), Z1 = [[[66, 77], "image/bmp"], [[255, 216, 255], "image/jpeg"], [[73, 73, 42, 0], "image/tiff"], [[77, 77, 0, 42], "image/tiff"], [[71, 73, 70, 56, 57, 97], "image/gif"], [[137, 80, 78, 71, 13, 10, 26, 10], "image/png"]];
function qI(e) {
  if (!e || !e.border)
    return {
      w: 0,
      h: 0
    };
  const A = e.border[Pe]();
  return A ? {
    w: A.widths[0] + A.widths[2] + A.insets[0] + A.insets[2],
    h: A.widths[1] + A.widths[3] + A.insets[1] + A.insets[3]
  } : {
    w: 0,
    h: 0
  };
}
function co(e) {
  return e.margin && (e.margin.topInset || e.margin.rightInset || e.margin.bottomInset || e.margin.leftInset);
}
function lo(e, A) {
  if (!e.value) {
    const t = new uo({});
    e[Qe](t), e.value = t;
  }
  e.value[Qt](A);
}
function* Co(e) {
  for (const A of e[Le]()) {
    if (A instanceof Qo) {
      yield* A[gs]();
      continue;
    }
    yield A;
  }
}
function Da(e) {
  var A;
  return ((A = e.validate) == null ? void 0 : A.nullTest) === "error";
}
function lr(e) {
  for (; e; ) {
    if (!e.traversal) {
      e[Pt] = e[GA]()[Pt];
      return;
    }
    if (e[Pt])
      return;
    let A = null;
    for (const s of e.traversal[Le]())
      if (s.operation === "next") {
        A = s;
        break;
      }
    if (!A || !A.ref) {
      e[Pt] = e[GA]()[Pt];
      return;
    }
    const t = e[me]();
    e[Pt] = ++t[Pt];
    const i = t[Qi](A.ref, e);
    if (!i)
      return;
    e = i[0];
  }
}
function Cr(e, A) {
  var i;
  const t = e.assist;
  if (t) {
    const s = t[SA]();
    s && (A.title = s);
    const n = t.role.match(W1);
    if (n) {
      const r = "heading", g = n[1];
      A.role = r, A["aria-level"] = g;
    }
  }
  if (e.layout === "table")
    A.role = "table";
  else if (e.layout === "row")
    A.role = "row";
  else {
    const s = e[GA]();
    s.layout === "row" && (A.role = ((i = s.assist) == null ? void 0 : i.role) === "TH" ? "columnheader" : "cell");
  }
}
function u0(e) {
  if (!e.assist)
    return null;
  const A = e.assist;
  return A.speak && A.speak[W] !== "" ? A.speak[W] : A.toolTip ? A.toolTip[W] : null;
}
function Zi(e) {
  return fA.success({
    name: "div",
    attributes: {
      class: ["xfaRich"],
      style: /* @__PURE__ */ Object.create(null)
    },
    children: [{
      name: "span",
      attributes: {
        style: /* @__PURE__ */ Object.create(null)
      },
      value: e
    }]
  });
}
function hr(e) {
  const A = e[me]();
  A[Y].firstUnsplittable === null && (A[Y].firstUnsplittable = e, A[Y].noLayoutFailure = !0);
}
function Br(e) {
  const A = e[me]();
  A[Y].firstUnsplittable === e && (A[Y].noLayoutFailure = !1);
}
function PI(e) {
  if (e[Y] || (e[Y] = /* @__PURE__ */ Object.create(null), e.targetType === "auto"))
    return !1;
  const A = e[me]();
  let t = null;
  if (e.target) {
    if (t = A[Qi](e.target, e[GA]()), !t)
      return !1;
    t = t[0];
  }
  const {
    currentPageArea: i,
    currentContentArea: s
  } = A[Y];
  if (e.targetType === "pageArea")
    return t instanceof os || (t = null), e.startNew ? (e[Y].target = t || i, !0) : t && t !== i ? (e[Y].target = t, !0) : !1;
  t instanceof ho || (t = null);
  const a = t && t[GA]();
  let n, r = a;
  if (e.startNew)
    if (t) {
      const g = a.contentArea.children, o = g.indexOf(s), I = g.indexOf(t);
      o !== -1 && o < I && (r = null), n = I - 1;
    } else
      n = i.contentArea.children.indexOf(s);
  else if (t && t !== s)
    n = a.contentArea.children.indexOf(t) - 1, r = a === i ? null : a;
  else
    return !1;
  return e[Y].target = r, e[Y].index = n, !0;
}
function WI(e, A, t) {
  const i = e[me](), s = i[Y].noLayoutFailure, a = A[we];
  A[we] = () => e, i[Y].noLayoutFailure = !0;
  const n = A[SA](t);
  e[C0](n.html, n.bbox), i[Y].noLayoutFailure = s, A[we] = a;
}
class j1 extends qA {
  constructor(A) {
    super($, "appearanceFilter"), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class Rl extends K {
  constructor(A) {
    super($, "arc", !0), this.circular = RA({
      data: A.circular,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.hand = O(A.hand, ["even", "left", "right"]), this.id = A.id || "", this.startAngle = Nn({
      data: A.startAngle,
      defaultValue: 0,
      validate: (t) => !0
    }), this.sweepAngle = Nn({
      data: A.sweepAngle,
      defaultValue: 360,
      validate: (t) => !0
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.edge = null, this.fill = null;
  }
  [SA]() {
    var g;
    const A = this.edge || new ka({}), t = A[ZA](), i = /* @__PURE__ */ Object.create(null);
    ((g = this.fill) == null ? void 0 : g.presence) === "visible" ? Object.assign(i, this.fill[ZA]()) : i.fill = "transparent", i.strokeWidth = FA(A.presence === "visible" ? A.thickness : 0), i.stroke = t.color;
    let s;
    const a = {
      xmlns: Q0,
      style: {
        width: "100%",
        height: "100%",
        overflow: "visible"
      }
    };
    if (this.sweepAngle === 360)
      s = {
        name: "ellipse",
        attributes: {
          xmlns: Q0,
          cx: "50%",
          cy: "50%",
          rx: "50%",
          ry: "50%",
          style: i
        }
      };
    else {
      const o = this.startAngle * Math.PI / 180, I = this.sweepAngle * Math.PI / 180, c = this.sweepAngle > 180 ? 1 : 0, [l, C, h, B] = [50 * (1 + Math.cos(o)), 50 * (1 - Math.sin(o)), 50 * (1 + Math.cos(o + I)), 50 * (1 - Math.sin(o + I))];
      s = {
        name: "path",
        attributes: {
          xmlns: Q0,
          d: `M ${l} ${C} A 50 50 0 ${c} 0 ${h} ${B}`,
          vectorEffect: "non-scaling-stroke",
          style: i
        }
      }, Object.assign(a, {
        viewBox: "0 0 100 100",
        preserveAspectRatio: "none"
      });
    }
    const n = {
      name: "svg",
      children: [s],
      attributes: a
    }, r = this[GA]()[GA]();
    return co(r) ? fA.success({
      name: "div",
      attributes: {
        style: {
          display: "inline",
          width: "100%",
          height: "100%"
        }
      },
      children: [n]
    }) : (n.attributes.style.position = "absolute", fA.success(n));
  }
}
class X1 extends K {
  constructor(A) {
    super($, "area", !0), this.colSpan = RA({
      data: A.colSpan,
      defaultValue: 1,
      validate: (t) => t >= 1 || t === -1
    }), this.id = A.id || "", this.name = A.name || "", this.relevant = Vt(A.relevant), this.use = A.use || "", this.usehref = A.usehref || "", this.x = CA(A.x, "0pt"), this.y = CA(A.y, "0pt"), this.desc = null, this.extras = null, this.area = new b(), this.draw = new b(), this.exObject = new b(), this.exclGroup = new b(), this.field = new b(), this.subform = new b(), this.subformSet = new b();
  }
  *[gs]() {
    yield* Co(this);
  }
  [aa]() {
    return !0;
  }
  [x0]() {
    return !0;
  }
  [C0](A, t) {
    const [i, s, a, n] = t;
    this[Y].width = Math.max(this[Y].width, i + a), this[Y].height = Math.max(this[Y].height, s + n), this[Y].children.push(A);
  }
  [h0]() {
    return this[Y].availableSpace;
  }
  [SA](A) {
    const t = gt(this, "position"), i = {
      style: t,
      id: this[ee],
      class: ["xfaArea"]
    };
    Bs(this) && i.class.push("xfaPrintOnly"), this.name && (i.xfaName = this.name);
    const s = [];
    this[Y] = {
      children: s,
      width: 0,
      height: 0,
      availableSpace: A
    };
    const a = this[Oi]({
      filter: /* @__PURE__ */ new Set(["area", "draw", "field", "exclGroup", "subform", "subformSet"]),
      include: !0
    });
    if (!a.success)
      return a.isBreak() ? a : (delete this[Y], fA.FAILURE);
    t.width = FA(this[Y].width), t.height = FA(this[Y].height);
    const n = {
      name: "div",
      attributes: i,
      children: s
    }, r = [this.x, this.y, this[Y].width, this[Y].height];
    return delete this[Y], fA.success(n, r);
  }
}
class V1 extends K {
  constructor(A) {
    super($, "assist", !0), this.id = A.id || "", this.role = A.role || "", this.use = A.use || "", this.usehref = A.usehref || "", this.speak = null, this.toolTip = null;
  }
  [SA]() {
    var A;
    return ((A = this.toolTip) == null ? void 0 : A[W]) || null;
  }
}
class _1 extends K {
  constructor(A) {
    super($, "barcode", !0), this.charEncoding = or({
      data: A.charEncoding ? A.charEncoding.toLowerCase() : "",
      defaultValue: "",
      validate: (t) => ["utf-8", "big-five", "fontspecific", "gbk", "gb-18030", "gb-2312", "ksc-5601", "none", "shift-jis", "ucs-2", "utf-16"].includes(t) || t.match(/iso-8859-\d{2}/)
    }), this.checksum = O(A.checksum, ["none", "1mod10", "1mod10_1mod11", "2mod10", "auto"]), this.dataColumnCount = RA({
      data: A.dataColumnCount,
      defaultValue: -1,
      validate: (t) => t >= 0
    }), this.dataLength = RA({
      data: A.dataLength,
      defaultValue: -1,
      validate: (t) => t >= 0
    }), this.dataPrep = O(A.dataPrep, ["none", "flateCompress"]), this.dataRowCount = RA({
      data: A.dataRowCount,
      defaultValue: -1,
      validate: (t) => t >= 0
    }), this.endChar = A.endChar || "", this.errorCorrectionLevel = RA({
      data: A.errorCorrectionLevel,
      defaultValue: -1,
      validate: (t) => t >= 0 && t <= 8
    }), this.id = A.id || "", this.moduleHeight = CA(A.moduleHeight, "5mm"), this.moduleWidth = CA(A.moduleWidth, "0.25mm"), this.printCheckDigit = RA({
      data: A.printCheckDigit,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.rowColumnRatio = MI(A.rowColumnRatio), this.startChar = A.startChar || "", this.textLocation = O(A.textLocation, ["below", "above", "aboveEmbedded", "belowEmbedded", "none"]), this.truncate = RA({
      data: A.truncate,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.type = O(A.type ? A.type.toLowerCase() : "", ["aztec", "codabar", "code2of5industrial", "code2of5interleaved", "code2of5matrix", "code2of5standard", "code3of9", "code3of9extended", "code11", "code49", "code93", "code128", "code128a", "code128b", "code128c", "code128sscc", "datamatrix", "ean8", "ean8add2", "ean8add5", "ean13", "ean13add2", "ean13add5", "ean13pwcd", "fim", "logmars", "maxicode", "msi", "pdf417", "pdf417macro", "plessey", "postauscust2", "postauscust3", "postausreplypaid", "postausstandard", "postukrm4scc", "postusdpbc", "postusimb", "postusstandard", "postus5zip", "qrcode", "rfid", "rss14", "rss14expanded", "rss14limited", "rss14stacked", "rss14stackedomni", "rss14truncated", "telepen", "ucc128", "ucc128random", "ucc128sscc", "upca", "upcaadd2", "upcaadd5", "upcapwcd", "upce", "upceadd2", "upceadd5", "upcean2", "upcean5", "upsmaxicode"]), this.upsMode = O(A.upsMode, ["usCarrier", "internationalCarrier", "secureSymbol", "standardSymbol"]), this.use = A.use || "", this.usehref = A.usehref || "", this.wideNarrowRatio = MI(A.wideNarrowRatio), this.encrypt = null, this.extras = null;
  }
}
class z1 extends K {
  constructor(A) {
    super($, "bind", !0), this.match = O(A.match, ["once", "dataRef", "global", "none"]), this.ref = A.ref || "", this.picture = null;
  }
}
class Fg extends K {
  constructor(A) {
    super($, "bindItems"), this.connection = A.connection || "", this.labelRef = A.labelRef || "", this.ref = A.ref || "", this.valueRef = A.valueRef || "";
  }
}
class $1 extends K {
  constructor(A) {
    super($, "bookend"), this.id = A.id || "", this.leader = A.leader || "", this.trailer = A.trailer || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class AE extends Fe {
  constructor(A) {
    super($, "boolean"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [SA](A) {
    return Zi(this[W] === 1 ? "1" : "0");
  }
}
class Nl extends K {
  constructor(A) {
    super($, "border", !0), this.break = O(A.break, ["close", "open"]), this.hand = O(A.hand, ["even", "left", "right"]), this.id = A.id || "", this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.relevant = Vt(A.relevant), this.use = A.use || "", this.usehref = A.usehref || "", this.corner = new b(4), this.edge = new b(4), this.extras = null, this.fill = null, this.margin = null;
  }
  [Pe]() {
    if (!this[Y]) {
      const A = this.edge.children.slice();
      if (A.length < 4) {
        const s = A.at(-1) || new ka({});
        for (let a = A.length; a < 4; a++)
          A.push(s);
      }
      const t = A.map((s) => s.thickness), i = [0, 0, 0, 0];
      this.margin && (i[0] = this.margin.topInset, i[1] = this.margin.rightInset, i[2] = this.margin.bottomInset, i[3] = this.margin.leftInset), this[Y] = {
        widths: t,
        insets: i,
        edges: A
      };
    }
    return this[Y];
  }
  [ZA]() {
    var s;
    const {
      edges: A
    } = this[Pe](), t = A.map((a) => {
      const n = a[ZA]();
      return n.color || (n.color = "#000000"), n;
    }), i = /* @__PURE__ */ Object.create(null);
    if (this.margin && Object.assign(i, this.margin[ZA]()), ((s = this.fill) == null ? void 0 : s.presence) === "visible" && Object.assign(i, this.fill[ZA]()), this.corner.children.some((a) => a.radius !== 0)) {
      const a = this.corner.children.map((n) => n[ZA]());
      if (a.length === 2 || a.length === 3) {
        const n = a.at(-1);
        for (let r = a.length; r < 4; r++)
          a.push(n);
      }
      i.borderRadius = a.map((n) => n.radius).join(" ");
    }
    switch (this.presence) {
      case "invisible":
      case "hidden":
        i.borderStyle = "";
        break;
      case "inactive":
        i.borderStyle = "none";
        break;
      default:
        i.borderStyle = t.map((a) => a.style).join(" ");
        break;
    }
    return i.borderWidth = t.map((a) => a.width).join(" "), i.borderColor = t.map((a) => a.color).join(" "), i;
  }
}
class eE extends K {
  constructor(A) {
    super($, "break", !0), this.after = O(A.after, ["auto", "contentArea", "pageArea", "pageEven", "pageOdd"]), this.afterTarget = A.afterTarget || "", this.before = O(A.before, ["auto", "contentArea", "pageArea", "pageEven", "pageOdd"]), this.beforeTarget = A.beforeTarget || "", this.bookendLeader = A.bookendLeader || "", this.bookendTrailer = A.bookendTrailer || "", this.id = A.id || "", this.overflowLeader = A.overflowLeader || "", this.overflowTarget = A.overflowTarget || "", this.overflowTrailer = A.overflowTrailer || "", this.startNew = RA({
      data: A.startNew,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null;
  }
}
class Gl extends K {
  constructor(A) {
    super($, "breakAfter", !0), this.id = A.id || "", this.leader = A.leader || "", this.startNew = RA({
      data: A.startNew,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.target = A.target || "", this.targetType = O(A.targetType, ["auto", "contentArea", "pageArea"]), this.trailer = A.trailer || "", this.use = A.use || "", this.usehref = A.usehref || "", this.script = null;
  }
}
class Ul extends K {
  constructor(A) {
    super($, "breakBefore", !0), this.id = A.id || "", this.leader = A.leader || "", this.startNew = RA({
      data: A.startNew,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.target = A.target || "", this.targetType = O(A.targetType, ["auto", "contentArea", "pageArea"]), this.trailer = A.trailer || "", this.use = A.use || "", this.usehref = A.usehref || "", this.script = null;
  }
  [SA](A) {
    return this[Y] = {}, fA.FAILURE;
  }
}
class tE extends K {
  constructor(A) {
    super($, "button", !0), this.highlight = O(A.highlight, ["inverted", "none", "outline", "push"]), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null;
  }
  [SA](A) {
    const i = this[GA]()[GA](), s = {
      name: "button",
      attributes: {
        id: this[ee],
        class: ["xfaButton"],
        style: {}
      },
      children: []
    };
    for (const a of i.event.children) {
      if (a.activity !== "click" || !a.script)
        continue;
      const n = Qc(a.script[W]);
      if (!n)
        continue;
      const r = bl(n.url);
      r && s.children.push({
        name: "a",
        attributes: {
          id: "link" + this[ee],
          href: r,
          newWindow: n.newWindow,
          class: ["xfaLink"],
          style: {}
        },
        children: []
      });
    }
    return fA.success(s);
  }
}
class iE extends K {
  constructor(A) {
    super($, "calculate", !0), this.id = A.id || "", this.override = O(A.override, ["disabled", "error", "ignore", "warning"]), this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.message = null, this.script = null;
  }
}
class sE extends K {
  constructor(A) {
    super($, "caption", !0), this.id = A.id || "", this.placement = O(A.placement, ["left", "bottom", "inline", "right", "top"]), this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.reserve = Math.ceil(CA(A.reserve)), this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.font = null, this.margin = null, this.para = null, this.value = null;
  }
  [Qt](A) {
    lo(this, A);
  }
  [Pe](A) {
    if (!this[Y]) {
      let {
        width: t,
        height: i
      } = A;
      switch (this.placement) {
        case "left":
        case "right":
        case "inline":
          t = this.reserve <= 0 ? t : this.reserve;
          break;
        case "top":
        case "bottom":
          i = this.reserve <= 0 ? i : this.reserve;
          break;
      }
      this[Y] = oo(this, {
        width: t,
        height: i
      });
    }
    return this[Y];
  }
  [SA](A) {
    if (!this.value)
      return fA.EMPTY;
    this[hs]();
    const t = this.value[SA](A).html;
    if (!t)
      return this[ct](), fA.EMPTY;
    const i = this.reserve;
    if (this.reserve <= 0) {
      const {
        w: n,
        h: r
      } = this[Pe](A);
      switch (this.placement) {
        case "left":
        case "right":
        case "inline":
          this.reserve = n;
          break;
        case "top":
        case "bottom":
          this.reserve = r;
          break;
      }
    }
    const s = [];
    typeof t == "string" ? s.push({
      name: "#text",
      value: t
    }) : s.push(t);
    const a = gt(this, "font", "margin", "visibility");
    switch (this.placement) {
      case "left":
      case "right":
        this.reserve > 0 && (a.width = FA(this.reserve));
        break;
      case "top":
      case "bottom":
        this.reserve > 0 && (a.height = FA(this.reserve));
        break;
    }
    return yl(this, null, t), this[ct](), this.reserve = i, fA.success({
      name: "div",
      attributes: {
        style: a,
        class: ["xfaCaption"]
      },
      children: s
    });
  }
}
class aE extends qA {
  constructor(A) {
    super($, "certificate"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class nE extends K {
  constructor(A) {
    super($, "certificates", !0), this.credentialServerPolicy = O(A.credentialServerPolicy, ["optional", "required"]), this.id = A.id || "", this.url = A.url || "", this.urlPolicy = A.urlPolicy || "", this.use = A.use || "", this.usehref = A.usehref || "", this.encryption = null, this.issuers = null, this.keyUsage = null, this.oids = null, this.signing = null, this.subjectDNs = null;
  }
}
class Ml extends K {
  constructor(A) {
    super($, "checkButton", !0), this.id = A.id || "", this.mark = O(A.mark, ["default", "check", "circle", "cross", "diamond", "square", "star"]), this.shape = O(A.shape, ["square", "round"]), this.size = CA(A.size, "10pt"), this.use = A.use || "", this.usehref = A.usehref || "", this.border = null, this.extras = null, this.margin = null;
  }
  [SA](A) {
    var Q, E, f;
    const t = gt("margin"), i = FA(this.size);
    t.width = t.height = i;
    let s, a, n;
    const r = this[GA]()[GA](), g = r.items.children.length && r.items.children[0][SA]().html || [], o = {
      on: (g[0] !== void 0 ? g[0] : "on").toString(),
      off: (g[1] !== void 0 ? g[1] : "off").toString()
    }, c = (((Q = r.value) == null ? void 0 : Q[Se]()) || "off") === o.on || void 0, l = r[we](), C = r[ee];
    let h;
    l instanceof Yl ? (n = l[ee], s = "radio", a = "xfaRadio", h = ((E = l[Lt]) == null ? void 0 : E[ee]) || l[ee]) : (s = "checkbox", a = "xfaCheckbox", h = ((f = r[Lt]) == null ? void 0 : f[ee]) || r[ee]);
    const B = {
      name: "input",
      attributes: {
        class: [a],
        style: t,
        fieldId: C,
        dataId: h,
        type: s,
        checked: c,
        xfaOn: o.on,
        xfaOff: o.off,
        "aria-label": u0(r),
        "aria-required": !1
      }
    };
    return n && (B.attributes.name = n), Da(r) && (B.attributes["aria-required"] = !0, B.attributes.required = !0), fA.success({
      name: "label",
      attributes: {
        class: ["xfaLabel"]
      },
      children: [B]
    });
  }
}
class Ll extends K {
  constructor(A) {
    super($, "choiceList", !0), this.commitOn = O(A.commitOn, ["select", "exit"]), this.id = A.id || "", this.open = O(A.open, ["userControl", "always", "multiSelect", "onEntry"]), this.textEntry = RA({
      data: A.textEntry,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.border = null, this.extras = null, this.margin = null;
  }
  [SA](A) {
    var o, I, c;
    const t = gt(this, "border", "margin"), s = this[GA]()[GA](), n = {
      fontSize: `calc(${((o = s.font) == null ? void 0 : o.size) || 10}px * var(--scale-factor))`
    }, r = [];
    if (s.items.children.length > 0) {
      const l = s.items;
      let C = 0, h = 0;
      l.children.length === 2 && (C = l.children[0].save, h = 1 - C);
      const B = l.children[C][SA]().html, Q = l.children[h][SA]().html;
      let E = !1;
      const f = ((I = s.value) == null ? void 0 : I[Se]()) || "";
      for (let d = 0, u = B.length; d < u; d++) {
        const x = {
          name: "option",
          attributes: {
            value: Q[d] || B[d],
            style: n
          },
          value: B[d]
        };
        Q[d] === f && (x.attributes.selected = E = !0), r.push(x);
      }
      E || r.splice(0, 0, {
        name: "option",
        attributes: {
          hidden: !0,
          selected: !0
        },
        value: " "
      });
    }
    const g = {
      class: ["xfaSelect"],
      fieldId: s[ee],
      dataId: ((c = s[Lt]) == null ? void 0 : c[ee]) || s[ee],
      style: t,
      "aria-label": u0(s),
      "aria-required": !1
    };
    return Da(s) && (g["aria-required"] = !0, g.required = !0), this.open === "multiSelect" && (g.multiple = !0), fA.success({
      name: "label",
      attributes: {
        class: ["xfaLabel"]
      },
      children: [{
        name: "select",
        children: r,
        attributes: g
      }]
    });
  }
}
class rE extends K {
  constructor(A) {
    super($, "color", !0), this.cSpace = O(A.cSpace, ["SRGB"]), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.value = A.value ? N1(A.value) : "", this.extras = null;
  }
  [sa]() {
    return !1;
  }
  [ZA]() {
    return this.value ? ye.makeHexColor(this.value.r, this.value.g, this.value.b) : null;
  }
}
class gE extends K {
  constructor(A) {
    super($, "comb"), this.id = A.id || "", this.numberOfCells = RA({
      data: A.numberOfCells,
      defaultValue: 0,
      validate: (t) => t >= 0
    }), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class oE extends K {
  constructor(A) {
    super($, "connect", !0), this.connection = A.connection || "", this.id = A.id || "", this.ref = A.ref || "", this.usage = O(A.usage, ["exportAndImport", "exportOnly", "importOnly"]), this.use = A.use || "", this.usehref = A.usehref || "", this.picture = null;
  }
}
class ho extends K {
  constructor(A) {
    super($, "contentArea", !0), this.h = CA(A.h), this.id = A.id || "", this.name = A.name || "", this.relevant = Vt(A.relevant), this.use = A.use || "", this.usehref = A.usehref || "", this.w = CA(A.w), this.x = CA(A.x, "0pt"), this.y = CA(A.y, "0pt"), this.desc = null, this.extras = null;
  }
  [SA](A) {
    const t = FA(this.x), i = FA(this.y), s = {
      left: t,
      top: i,
      width: FA(this.w),
      height: FA(this.h)
    }, a = ["xfaContentarea"];
    return Bs(this) && a.push("xfaPrintOnly"), fA.success({
      name: "div",
      children: [],
      attributes: {
        style: s,
        class: a,
        id: this[ee]
      }
    });
  }
}
class Hl extends K {
  constructor(A) {
    super($, "corner", !0), this.id = A.id || "", this.inverted = RA({
      data: A.inverted,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.join = O(A.join, ["square", "round"]), this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.radius = CA(A.radius), this.stroke = O(A.stroke, ["solid", "dashDot", "dashDotDot", "dashed", "dotted", "embossed", "etched", "lowered", "raised"]), this.thickness = CA(A.thickness, "0.5pt"), this.use = A.use || "", this.usehref = A.usehref || "", this.color = null, this.extras = null;
  }
  [ZA]() {
    const A = gt(this, "visibility");
    return A.radius = FA(this.join === "square" ? 0 : this.radius), A;
  }
}
class IE extends fe {
  constructor(A) {
    super($, "date"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [ne]() {
    const A = this[W].trim();
    this[W] = A ? new Date(A) : null;
  }
  [SA](A) {
    return Zi(this[W] ? this[W].toString() : "");
  }
}
class cE extends fe {
  constructor(A) {
    super($, "dateTime"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [ne]() {
    const A = this[W].trim();
    this[W] = A ? new Date(A) : null;
  }
  [SA](A) {
    return Zi(this[W] ? this[W].toString() : "");
  }
}
class lE extends K {
  constructor(A) {
    super($, "dateTimeEdit", !0), this.hScrollPolicy = O(A.hScrollPolicy, ["auto", "off", "on"]), this.id = A.id || "", this.picker = O(A.picker, ["host", "none"]), this.use = A.use || "", this.usehref = A.usehref || "", this.border = null, this.comb = null, this.extras = null, this.margin = null;
  }
  [SA](A) {
    var a;
    const t = gt(this, "border", "font", "margin"), i = this[GA]()[GA](), s = {
      name: "input",
      attributes: {
        type: "text",
        fieldId: i[ee],
        dataId: ((a = i[Lt]) == null ? void 0 : a[ee]) || i[ee],
        class: ["xfaTextfield"],
        style: t,
        "aria-label": u0(i),
        "aria-required": !1
      }
    };
    return Da(i) && (s.attributes["aria-required"] = !0, s.attributes.required = !0), fA.success({
      name: "label",
      attributes: {
        class: ["xfaLabel"]
      },
      children: [s]
    });
  }
}
class CE extends fe {
  constructor(A) {
    super($, "decimal"), this.fracDigits = RA({
      data: A.fracDigits,
      defaultValue: 2,
      validate: (t) => !0
    }), this.id = A.id || "", this.leadDigits = RA({
      data: A.leadDigits,
      defaultValue: -1,
      validate: (t) => !0
    }), this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [ne]() {
    const A = parseFloat(this[W].trim());
    this[W] = isNaN(A) ? null : A;
  }
  [SA](A) {
    return Zi(this[W] !== null ? this[W].toString() : "");
  }
}
class hE extends K {
  constructor(A) {
    super($, "defaultUi", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null;
  }
}
class BE extends K {
  constructor(A) {
    super($, "desc", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.boolean = new b(), this.date = new b(), this.dateTime = new b(), this.decimal = new b(), this.exData = new b(), this.float = new b(), this.image = new b(), this.integer = new b(), this.text = new b(), this.time = new b();
  }
}
class QE extends te {
  constructor(A) {
    super($, "digestMethod", ["", "SHA1", "SHA256", "SHA512", "RIPEMD160"]), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class EE extends K {
  constructor(A) {
    super($, "digestMethods", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.digestMethod = new b();
  }
}
class Jl extends K {
  constructor(A) {
    super($, "draw", !0), this.anchorType = O(A.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]), this.colSpan = RA({
      data: A.colSpan,
      defaultValue: 1,
      validate: (t) => t >= 1 || t === -1
    }), this.h = A.h ? CA(A.h) : "", this.hAlign = O(A.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]), this.id = A.id || "", this.locale = A.locale || "", this.maxH = CA(A.maxH, "0pt"), this.maxW = CA(A.maxW, "0pt"), this.minH = CA(A.minH, "0pt"), this.minW = CA(A.minW, "0pt"), this.name = A.name || "", this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.relevant = Vt(A.relevant), this.rotate = RA({
      data: A.rotate,
      defaultValue: 0,
      validate: (t) => t % 90 === 0
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.w = A.w ? CA(A.w) : "", this.x = CA(A.x, "0pt"), this.y = CA(A.y, "0pt"), this.assist = null, this.border = null, this.caption = null, this.desc = null, this.extras = null, this.font = null, this.keep = null, this.margin = null, this.para = null, this.traversal = null, this.ui = null, this.value = null, this.setProperty = new b();
  }
  [Qt](A) {
    lo(this, A);
  }
  [SA](A) {
    if (lr(this), this.presence === "hidden" || this.presence === "inactive")
      return fA.EMPTY;
    Ir(this), this[hs]();
    const t = this.w, i = this.h, {
      w: s,
      h: a,
      isBroken: n
    } = oo(this, A);
    if (s && this.w === "") {
      if (n && this[we]()[yi]())
        return this[ct](), fA.FAILURE;
      this.w = s;
    }
    if (a && this.h === "" && (this.h = a), hr(this), !cr(this, A))
      return this.w = t, this.h = i, this[ct](), fA.FAILURE;
    Br(this);
    const r = gt(this, "font", "hAlign", "dimensions", "position", "presence", "rotate", "anchorType", "border", "margin");
    ul(this, r), r.margin && (r.padding = r.margin, delete r.margin);
    const g = ["xfaDraw"];
    this.font && g.push("xfaFont"), Bs(this) && g.push("xfaPrintOnly");
    const o = {
      style: r,
      id: this[ee],
      class: g
    };
    this.name && (o.xfaName = this.name);
    const I = {
      name: "div",
      attributes: o,
      children: []
    };
    Cr(this, o);
    const c = dl(this, I, A), l = this.value ? this.value[SA](A).html : null;
    return l === null ? (this.w = t, this.h = i, this[ct](), fA.success(B0(this, I), c)) : (I.children.push(l), yl(this, r, l), this.w = t, this.h = i, this[ct](), fA.success(B0(this, I), c));
  }
}
class ka extends K {
  constructor(A) {
    super($, "edge", !0), this.cap = O(A.cap, ["square", "butt", "round"]), this.id = A.id || "", this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.stroke = O(A.stroke, ["solid", "dashDot", "dashDotDot", "dashed", "dotted", "embossed", "etched", "lowered", "raised"]), this.thickness = CA(A.thickness, "0.5pt"), this.use = A.use || "", this.usehref = A.usehref || "", this.color = null, this.extras = null;
  }
  [ZA]() {
    const A = gt(this, "visibility");
    if (Object.assign(A, {
      linecap: this.cap,
      width: FA(this.thickness),
      color: this.color ? this.color[ZA]() : "#000000",
      style: ""
    }), this.presence !== "visible")
      A.style = "none";
    else
      switch (this.stroke) {
        case "solid":
          A.style = "solid";
          break;
        case "dashDot":
          A.style = "dashed";
          break;
        case "dashDotDot":
          A.style = "dashed";
          break;
        case "dashed":
          A.style = "dashed";
          break;
        case "dotted":
          A.style = "dotted";
          break;
        case "embossed":
          A.style = "ridge";
          break;
        case "etched":
          A.style = "groove";
          break;
        case "lowered":
          A.style = "inset";
          break;
        case "raised":
          A.style = "outset";
          break;
      }
    return A;
  }
}
class fE extends te {
  constructor(A) {
    super($, "encoding", ["adbe.x509.rsa_sha1", "adbe.pkcs7.detached", "adbe.pkcs7.sha1"]), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class uE extends K {
  constructor(A) {
    super($, "encodings", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.encoding = new b();
  }
}
class dE extends K {
  constructor(A) {
    super($, "encrypt", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.certificate = null;
  }
}
class xE extends K {
  constructor(A) {
    super($, "encryptData", !0), this.id = A.id || "", this.operation = O(A.operation, ["encrypt", "decrypt"]), this.target = A.target || "", this.use = A.use || "", this.usehref = A.usehref || "", this.filter = null, this.manifest = null;
  }
}
class mE extends K {
  constructor(A) {
    super($, "encryption", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.certificate = new b();
  }
}
class pE extends te {
  constructor(A) {
    super($, "encryptionMethod", ["", "AES256-CBC", "TRIPLEDES-CBC", "AES128-CBC", "AES192-CBC"]), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class yE extends K {
  constructor(A) {
    super($, "encryptionMethods", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.encryptionMethod = new b();
  }
}
class wE extends K {
  constructor(A) {
    super($, "event", !0), this.activity = O(A.activity, ["click", "change", "docClose", "docReady", "enter", "exit", "full", "indexChange", "initialize", "mouseDown", "mouseEnter", "mouseExit", "mouseUp", "postExecute", "postOpen", "postPrint", "postSave", "postSign", "postSubmit", "preExecute", "preOpen", "prePrint", "preSave", "preSign", "preSubmit", "ready", "validationState"]), this.id = A.id || "", this.listen = O(A.listen, ["refOnly", "refAndDescendents"]), this.name = A.name || "", this.ref = A.ref || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.encryptData = null, this.execute = null, this.script = null, this.signData = null, this.submit = null;
  }
}
class bE extends fe {
  constructor(A) {
    super($, "exData"), this.contentType = A.contentType || "", this.href = A.href || "", this.id = A.id || "", this.maxLength = RA({
      data: A.maxLength,
      defaultValue: -1,
      validate: (t) => t >= -1
    }), this.name = A.name || "", this.rid = A.rid || "", this.transferEncoding = O(A.transferEncoding, ["none", "base64", "package"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [no]() {
    return this.contentType === "text/html";
  }
  [ni](A) {
    return this.contentType === "text/html" && A[pe] === be.xhtml.id ? (this[W] = A, !0) : this.contentType === "text/xml" ? (this[W] = A, !0) : !1;
  }
  [SA](A) {
    return this.contentType !== "text/html" || !this[W] ? fA.EMPTY : this[W][SA](A);
  }
}
class DE extends K {
  constructor(A) {
    super($, "exObject", !0), this.archive = A.archive || "", this.classId = A.classId || "", this.codeBase = A.codeBase || "", this.codeType = A.codeType || "", this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.boolean = new b(), this.date = new b(), this.dateTime = new b(), this.decimal = new b(), this.exData = new b(), this.exObject = new b(), this.float = new b(), this.image = new b(), this.integer = new b(), this.text = new b(), this.time = new b();
  }
}
class Yl extends K {
  constructor(A) {
    super($, "exclGroup", !0), this.access = O(A.access, ["open", "nonInteractive", "protected", "readOnly"]), this.accessKey = A.accessKey || "", this.anchorType = O(A.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]), this.colSpan = RA({
      data: A.colSpan,
      defaultValue: 1,
      validate: (t) => t >= 1 || t === -1
    }), this.h = A.h ? CA(A.h) : "", this.hAlign = O(A.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]), this.id = A.id || "", this.layout = O(A.layout, ["position", "lr-tb", "rl-row", "rl-tb", "row", "table", "tb"]), this.maxH = CA(A.maxH, "0pt"), this.maxW = CA(A.maxW, "0pt"), this.minH = CA(A.minH, "0pt"), this.minW = CA(A.minW, "0pt"), this.name = A.name || "", this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.relevant = Vt(A.relevant), this.use = A.use || "", this.usehref = A.usehref || "", this.w = A.w ? CA(A.w) : "", this.x = CA(A.x, "0pt"), this.y = CA(A.y, "0pt"), this.assist = null, this.bind = null, this.border = null, this.calculate = null, this.caption = null, this.desc = null, this.extras = null, this.margin = null, this.para = null, this.traversal = null, this.validate = null, this.connect = new b(), this.event = new b(), this.field = new b(), this.setProperty = new b();
  }
  [x0]() {
    return !0;
  }
  [sa]() {
    return !0;
  }
  [Qt](A) {
    for (const t of this.field.children) {
      if (!t.value) {
        const i = new uo({});
        t[Qe](i), t.value = i;
      }
      t.value[Qt](A);
    }
  }
  [yi]() {
    return this.layout.endsWith("-tb") && this[Y].attempt === 0 && this[Y].numberInLine > 0 || this[GA]()[yi]();
  }
  [ui]() {
    var t;
    const A = this[we]();
    return A[ui]() ? this[Y]._isSplittable !== void 0 ? this[Y]._isSplittable : this.layout === "position" || this.layout.includes("row") ? (this[Y]._isSplittable = !1, !1) : (t = A.layout) != null && t.endsWith("-tb") && A[Y].numberInLine !== 0 ? !1 : (this[Y]._isSplittable = !0, !0) : !1;
  }
  [ba]() {
    return kl(this);
  }
  [C0](A, t) {
    Sl(this, A, t);
  }
  [h0]() {
    return Fl(this);
  }
  [SA](A) {
    if (lr(this), this.presence === "hidden" || this.presence === "inactive" || this.h === 0 || this.w === 0)
      return fA.EMPTY;
    Ir(this);
    const t = [], i = {
      id: this[ee],
      class: []
    };
    Io(this, i.class), this[Y] || (this[Y] = /* @__PURE__ */ Object.create(null)), Object.assign(this[Y], {
      children: t,
      attributes: i,
      attempt: 0,
      line: null,
      numberInLine: 0,
      availableSpace: {
        width: Math.min(this.w || 1 / 0, A.width),
        height: Math.min(this.h || 1 / 0, A.height)
      },
      width: 0,
      height: 0,
      prevHeight: 0,
      currentWidth: 0
    });
    const s = this[ui]();
    if (s || hr(this), !cr(this, A))
      return fA.FAILURE;
    const a = /* @__PURE__ */ new Set(["field"]);
    if (this.layout.includes("row")) {
      const E = this[we]().columnWidths;
      Array.isArray(E) && E.length > 0 && (this[Y].columnWidths = E, this[Y].currentColumn = 0);
    }
    const n = gt(this, "anchorType", "dimensions", "position", "presence", "border", "margin", "hAlign"), r = ["xfaExclgroup"], g = xl(this);
    g && r.push(g), Bs(this) && r.push("xfaPrintOnly"), i.style = n, i.class = r, this.name && (i.xfaName = this.name), this[hs]();
    const o = this.layout === "lr-tb" || this.layout === "rl-tb", I = o ? Gn : 1;
    for (; this[Y].attempt < I; this[Y].attempt++) {
      o && this[Y].attempt === Gn - 1 && (this[Y].numberInLine = 0);
      const E = this[Oi]({
        filter: a,
        include: !0
      });
      if (E.success)
        break;
      if (E.isBreak())
        return this[ct](), E;
      if (o && this[Y].attempt === 0 && this[Y].numberInLine === 0 && !this[me]()[Y].noLayoutFailure) {
        this[Y].attempt = I;
        break;
      }
    }
    if (this[ct](), s || Br(this), this[Y].attempt === I)
      return s || delete this[Y], fA.FAILURE;
    let c = 0, l = 0;
    this.margin && (c = this.margin.leftInset + this.margin.rightInset, l = this.margin.topInset + this.margin.bottomInset);
    const C = Math.max(this[Y].width + c, this.w || 0), h = Math.max(this[Y].height + l, this.h || 0), B = [this.x, this.y, C, h];
    this.w === "" && (n.width = FA(C)), this.h === "" && (n.height = FA(h));
    const Q = {
      name: "div",
      attributes: i,
      children: t
    };
    return Cr(this, i), delete this[Y], fA.success(B0(this, Q), B);
  }
}
class kE extends K {
  constructor(A) {
    super($, "execute"), this.connection = A.connection || "", this.executeType = O(A.executeType, ["import", "remerge"]), this.id = A.id || "", this.runAt = O(A.runAt, ["client", "both", "server"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class SE extends K {
  constructor(A) {
    super($, "extras", !0), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "", this.boolean = new b(), this.date = new b(), this.dateTime = new b(), this.decimal = new b(), this.exData = new b(), this.extras = new b(), this.float = new b(), this.image = new b(), this.integer = new b(), this.text = new b(), this.time = new b();
  }
}
class Bo extends K {
  constructor(A) {
    super($, "field", !0), this.access = O(A.access, ["open", "nonInteractive", "protected", "readOnly"]), this.accessKey = A.accessKey || "", this.anchorType = O(A.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]), this.colSpan = RA({
      data: A.colSpan,
      defaultValue: 1,
      validate: (t) => t >= 1 || t === -1
    }), this.h = A.h ? CA(A.h) : "", this.hAlign = O(A.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]), this.id = A.id || "", this.locale = A.locale || "", this.maxH = CA(A.maxH, "0pt"), this.maxW = CA(A.maxW, "0pt"), this.minH = CA(A.minH, "0pt"), this.minW = CA(A.minW, "0pt"), this.name = A.name || "", this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.relevant = Vt(A.relevant), this.rotate = RA({
      data: A.rotate,
      defaultValue: 0,
      validate: (t) => t % 90 === 0
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.w = A.w ? CA(A.w) : "", this.x = CA(A.x, "0pt"), this.y = CA(A.y, "0pt"), this.assist = null, this.bind = null, this.border = null, this.calculate = null, this.caption = null, this.desc = null, this.extras = null, this.font = null, this.format = null, this.items = new b(2), this.keep = null, this.margin = null, this.para = null, this.traversal = null, this.ui = null, this.validate = null, this.value = null, this.bindItems = new b(), this.connect = new b(), this.event = new b(), this.setProperty = new b();
  }
  [x0]() {
    return !0;
  }
  [Qt](A) {
    lo(this, A);
  }
  [SA](A) {
    var E, f, d;
    if (lr(this), !this.ui) {
      this.ui = new fo({}), this.ui[ae] = this[ae], this[Qe](this.ui);
      let u;
      switch (this.items.children.length) {
        case 0:
          u = new Wl({}), this.ui.textEdit = u;
          break;
        case 1:
          u = new Ml({}), this.ui.checkButton = u;
          break;
        case 2:
          u = new Ll({}), this.ui.choiceList = u;
          break;
      }
      this.ui[Qe](u);
    }
    if (!this.ui || this.presence === "hidden" || this.presence === "inactive" || this.h === 0 || this.w === 0)
      return fA.EMPTY;
    this.caption && delete this.caption[Y], this[hs]();
    const t = this.caption ? this.caption[SA](A).html : null, i = this.w, s = this.h;
    let a = 0, n = 0;
    this.margin && (a = this.margin.leftInset + this.margin.rightInset, n = this.margin.topInset + this.margin.bottomInset);
    let r = null;
    if (this.w === "" || this.h === "") {
      let u = null, x = null, p = 0, m = 0;
      if (this.ui.checkButton)
        p = m = this.ui.checkButton.size;
      else {
        const {
          w: D,
          h: S
        } = oo(this, A);
        D !== null ? (p = D, m = S) : m = M1(this.font, !0).lineNoGap;
      }
      if (r = qI(this.ui[Pe]()), p += r.w, m += r.h, this.caption) {
        const {
          w: D,
          h: S,
          isBroken: y
        } = this.caption[Pe](A);
        if (y && this[we]()[yi]())
          return this[ct](), fA.FAILURE;
        switch (u = D, x = S, this.caption.placement) {
          case "left":
          case "right":
          case "inline":
            u += p;
            break;
          case "top":
          case "bottom":
            x += m;
            break;
        }
      } else
        u = p, x = m;
      u && this.w === "" && (u += a, this.w = Math.min(this.maxW <= 0 ? 1 / 0 : this.maxW, this.minW + 1 < u ? u : this.minW)), x && this.h === "" && (x += n, this.h = Math.min(this.maxH <= 0 ? 1 / 0 : this.maxH, this.minH + 1 < x ? x : this.minH));
    }
    if (this[ct](), Ir(this), hr(this), !cr(this, A))
      return this.w = i, this.h = s, this[ct](), fA.FAILURE;
    Br(this);
    const g = gt(this, "font", "dimensions", "position", "rotate", "anchorType", "presence", "margin", "hAlign");
    ul(this, g);
    const o = ["xfaField"];
    this.font && o.push("xfaFont"), Bs(this) && o.push("xfaPrintOnly");
    const I = {
      style: g,
      id: this[ee],
      class: o
    };
    g.margin && (g.padding = g.margin, delete g.margin), Io(this, o), this.name && (I.xfaName = this.name);
    const c = [], l = {
      name: "div",
      attributes: I,
      children: c
    };
    Cr(this, I);
    const C = this.border ? this.border[ZA]() : null, h = dl(this, l, A), B = this.ui[SA]().html;
    if (!B)
      return Object.assign(g, C), fA.success(B0(this, l), h);
    this[Pt] && ((E = B.children) != null && E[0] ? B.children[0].attributes.tabindex = this[Pt] : B.attributes.tabindex = this[Pt]), B.attributes.style || (B.attributes.style = /* @__PURE__ */ Object.create(null));
    let Q = null;
    if (this.ui.button ? (B.children.length === 1 && ([Q] = B.children.splice(0, 1)), Object.assign(B.attributes.style, C)) : Object.assign(g, C), c.push(B), this.value) {
      if (this.ui.imageEdit)
        B.children.push(this.value[SA]().html);
      else if (!this.ui.button) {
        let u = "";
        if (this.value.exData)
          u = this.value.exData[Se]();
        else if (this.value.text)
          u = this.value.text[Pe]();
        else {
          const x = this.value[SA]().html;
          x !== null && (u = x.children[0].value);
        }
        this.ui.textEdit && ((f = this.value.text) != null && f.maxChars) && (B.children[0].attributes.maxLength = this.value.text.maxChars), u && (this.ui.numericEdit && (u = parseFloat(u), u = isNaN(u) ? "" : u.toString()), B.children[0].name === "textarea" ? B.children[0].attributes.textContent = u : B.children[0].attributes.value = u);
      }
    }
    if (!this.ui.imageEdit && ((d = B.children) != null && d[0]) && this.h) {
      r = r || qI(this.ui[Pe]());
      let u = 0;
      if (this.caption && ["top", "bottom"].includes(this.caption.placement)) {
        u = this.caption.reserve, u <= 0 && (u = this.caption[Pe](A).h);
        const x = this.h - u - n - r.h;
        B.children[0].attributes.style.height = FA(x);
      } else
        B.children[0].attributes.style.height = "100%";
    }
    if (Q && B.children.push(Q), !t)
      return B.attributes.class && B.attributes.class.push("xfaLeft"), this.w = i, this.h = s, fA.success(B0(this, l), h);
    if (this.ui.button)
      return g.padding && delete g.padding, t.name === "div" && (t.name = "span"), B.children.push(t), fA.success(l, h);
    switch (this.ui.checkButton && (t.attributes.class[0] = "xfaCaptionForCheckButton"), B.attributes.class || (B.attributes.class = []), B.children.splice(0, 0, t), this.caption.placement) {
      case "left":
        B.attributes.class.push("xfaLeft");
        break;
      case "right":
        B.attributes.class.push("xfaRight");
        break;
      case "top":
        B.attributes.class.push("xfaTop");
        break;
      case "bottom":
        B.attributes.class.push("xfaBottom");
        break;
      case "inline":
        B.attributes.class.push("xfaLeft");
        break;
    }
    return this.w = i, this.h = s, fA.success(B0(this, l), h);
  }
}
class FE extends K {
  constructor(A) {
    super($, "fill", !0), this.id = A.id || "", this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.use = A.use || "", this.usehref = A.usehref || "", this.color = null, this.extras = null, this.linear = null, this.pattern = null, this.radial = null, this.solid = null, this.stipple = null;
  }
  [ZA]() {
    var r;
    const A = this[GA](), i = A[GA]()[GA](), s = /* @__PURE__ */ Object.create(null);
    let a = "color", n = a;
    A instanceof Nl && (a = "background-color", n = "background", i instanceof fo && (s.backgroundColor = "white")), (A instanceof Tl || A instanceof Rl) && (a = n = "fill", s.fill = "white");
    for (const g of Object.getOwnPropertyNames(this)) {
      if (g === "extras" || g === "color")
        continue;
      const o = this[g];
      if (!(o instanceof K))
        continue;
      const I = o[ZA](this.color);
      return I && (s[I.startsWith("#") ? a : n] = I), s;
    }
    if ((r = this.color) != null && r.value) {
      const g = this.color[ZA]();
      s[g.startsWith("#") ? a : n] = g;
    }
    return s;
  }
}
class RE extends K {
  constructor(A) {
    super($, "filter", !0), this.addRevocationInfo = O(A.addRevocationInfo, ["", "required", "optional", "none"]), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "", this.version = RA({
      data: this.version,
      defaultValue: 5,
      validate: (t) => t >= 1 && t <= 5
    }), this.appearanceFilter = null, this.certificates = null, this.digestMethods = null, this.encodings = null, this.encryptionMethods = null, this.handler = null, this.lockDocument = null, this.mdp = null, this.reasons = null, this.timeStamp = null;
  }
}
class NE extends fe {
  constructor(A) {
    super($, "float"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [ne]() {
    const A = parseFloat(this[W].trim());
    this[W] = isNaN(A) ? null : A;
  }
  [SA](A) {
    return Zi(this[W] !== null ? this[W].toString() : "");
  }
}
class GE extends K {
  constructor(A) {
    super($, "font", !0), this.baselineShift = CA(A.baselineShift), this.fontHorizontalScale = Nn({
      data: A.fontHorizontalScale,
      defaultValue: 100,
      validate: (t) => t >= 0
    }), this.fontVerticalScale = Nn({
      data: A.fontVerticalScale,
      defaultValue: 100,
      validate: (t) => t >= 0
    }), this.id = A.id || "", this.kerningMode = O(A.kerningMode, ["none", "pair"]), this.letterSpacing = CA(A.letterSpacing, "0"), this.lineThrough = RA({
      data: A.lineThrough,
      defaultValue: 0,
      validate: (t) => t === 1 || t === 2
    }), this.lineThroughPeriod = O(A.lineThroughPeriod, ["all", "word"]), this.overline = RA({
      data: A.overline,
      defaultValue: 0,
      validate: (t) => t === 1 || t === 2
    }), this.overlinePeriod = O(A.overlinePeriod, ["all", "word"]), this.posture = O(A.posture, ["normal", "italic"]), this.size = CA(A.size, "10pt"), this.typeface = A.typeface || "Courier", this.underline = RA({
      data: A.underline,
      defaultValue: 0,
      validate: (t) => t === 1 || t === 2
    }), this.underlinePeriod = O(A.underlinePeriod, ["all", "word"]), this.use = A.use || "", this.usehref = A.usehref || "", this.weight = O(A.weight, ["normal", "bold"]), this.extras = null, this.fill = null;
  }
  [Jt](A) {
    super[Jt](A), this[ae].usedTypefaces.add(this.typeface);
  }
  [ZA]() {
    const A = gt(this, "fill"), t = A.color;
    return t && (t === "#000000" ? delete A.color : t.startsWith("#") || (A.background = t, A.backgroundClip = "text", A.color = "transparent")), this.baselineShift && (A.verticalAlign = FA(this.baselineShift)), A.fontKerning = this.kerningMode === "none" ? "none" : "normal", A.letterSpacing = FA(this.letterSpacing), this.lineThrough !== 0 && (A.textDecoration = "line-through", this.lineThrough === 2 && (A.textDecorationStyle = "double")), this.overline !== 0 && (A.textDecoration = "overline", this.overline === 2 && (A.textDecorationStyle = "double")), A.fontStyle = this.posture, A.fontSize = FA(0.99 * this.size), wl(this, this, this[ae].fontFinder, A), this.underline !== 0 && (A.textDecoration = "underline", this.underline === 2 && (A.textDecorationStyle = "double")), A.fontWeight = this.weight, A;
  }
}
class UE extends K {
  constructor(A) {
    super($, "format", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.picture = null;
  }
}
class ME extends qA {
  constructor(A) {
    super($, "handler"), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class LE extends K {
  constructor(A) {
    super($, "hyphenation"), this.excludeAllCaps = RA({
      data: A.excludeAllCaps,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.excludeInitialCap = RA({
      data: A.excludeInitialCap,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.hyphenate = RA({
      data: A.hyphenate,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.id = A.id || "", this.pushCharacterCount = RA({
      data: A.pushCharacterCount,
      defaultValue: 3,
      validate: (t) => t >= 0
    }), this.remainCharacterCount = RA({
      data: A.remainCharacterCount,
      defaultValue: 3,
      validate: (t) => t >= 0
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.wordCharacterCount = RA({
      data: A.wordCharacterCount,
      defaultValue: 7,
      validate: (t) => t >= 0
    });
  }
}
class Kl extends qA {
  constructor(A) {
    super($, "image"), this.aspect = O(A.aspect, ["fit", "actual", "height", "none", "width"]), this.contentType = A.contentType || "", this.href = A.href || "", this.id = A.id || "", this.name = A.name || "", this.transferEncoding = O(A.transferEncoding, ["base64", "none", "package"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [SA]() {
    if (this.contentType && !O1.has(this.contentType.toLowerCase()))
      return fA.EMPTY;
    let A = this[ae].images && this[ae].images.get(this.href);
    if (!A && (this.href || !this[W]) || (!A && this.transferEncoding === "base64" && (A = bC(this[W])), !A))
      return fA.EMPTY;
    if (!this.contentType) {
      for (const [a, n] of Z1)
        if (A.length > a.length && a.every((r, g) => r === A[g])) {
          this.contentType = n;
          break;
        }
      if (!this.contentType)
        return fA.EMPTY;
    }
    const t = new Blob([A], {
      type: this.contentType
    });
    let i;
    switch (this.aspect) {
      case "fit":
      case "actual":
        break;
      case "height":
        i = {
          height: "100%",
          objectFit: "fill"
        };
        break;
      case "none":
        i = {
          width: "100%",
          height: "100%",
          objectFit: "fill"
        };
        break;
      case "width":
        i = {
          width: "100%",
          objectFit: "fill"
        };
        break;
    }
    const s = this[GA]();
    return fA.success({
      name: "img",
      attributes: {
        class: ["xfaImage"],
        style: i,
        src: URL.createObjectURL(t),
        alt: s ? u0(s[GA]()) : null
      }
    });
  }
}
class HE extends K {
  constructor(A) {
    super($, "imageEdit", !0), this.data = O(A.data, ["link", "embed"]), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.border = null, this.extras = null, this.margin = null;
  }
  [SA](A) {
    return this.data === "embed" ? fA.success({
      name: "div",
      children: [],
      attributes: {}
    }) : fA.EMPTY;
  }
}
class JE extends fe {
  constructor(A) {
    super($, "integer"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [ne]() {
    const A = parseInt(this[W].trim(), 10);
    this[W] = isNaN(A) ? null : A;
  }
  [SA](A) {
    return Zi(this[W] !== null ? this[W].toString() : "");
  }
}
class YE extends K {
  constructor(A) {
    super($, "issuers", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.certificate = new b();
  }
}
class Rg extends K {
  constructor(A) {
    super($, "items", !0), this.id = A.id || "", this.name = A.name || "", this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.ref = A.ref || "", this.save = RA({
      data: A.save,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.boolean = new b(), this.date = new b(), this.dateTime = new b(), this.decimal = new b(), this.exData = new b(), this.float = new b(), this.image = new b(), this.integer = new b(), this.text = new b(), this.time = new b();
  }
  [SA]() {
    const A = [];
    for (const t of this[Le]())
      A.push(t[Se]());
    return fA.success(A);
  }
}
class KE extends K {
  constructor(A) {
    super($, "keep", !0), this.id = A.id || "";
    const t = ["none", "contentArea", "pageArea"];
    this.intact = O(A.intact, t), this.next = O(A.next, t), this.previous = O(A.previous, t), this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null;
  }
}
class vE extends K {
  constructor(A) {
    super($, "keyUsage");
    const t = ["", "yes", "no"];
    this.crlSign = O(A.crlSign, t), this.dataEncipherment = O(A.dataEncipherment, t), this.decipherOnly = O(A.decipherOnly, t), this.digitalSignature = O(A.digitalSignature, t), this.encipherOnly = O(A.encipherOnly, t), this.id = A.id || "", this.keyAgreement = O(A.keyAgreement, t), this.keyCertSign = O(A.keyCertSign, t), this.keyEncipherment = O(A.keyEncipherment, t), this.nonRepudiation = O(A.nonRepudiation, t), this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class TE extends K {
  constructor(A) {
    super($, "line", !0), this.hand = O(A.hand, ["even", "left", "right"]), this.id = A.id || "", this.slope = O(A.slope, ["\\", "/"]), this.use = A.use || "", this.usehref = A.usehref || "", this.edge = null;
  }
  [SA]() {
    const A = this[GA]()[GA](), t = this.edge || new ka({}), i = t[ZA](), s = /* @__PURE__ */ Object.create(null), a = t.presence === "visible" ? t.thickness : 0;
    s.strokeWidth = FA(a), s.stroke = i.color;
    let n, r, g, o, I = "100%", c = "100%";
    A.w <= a ? ([n, r, g, o] = ["50%", 0, "50%", "100%"], I = s.strokeWidth) : A.h <= a ? ([n, r, g, o] = [0, "50%", "100%", "50%"], c = s.strokeWidth) : this.slope === "\\" ? [n, r, g, o] = [0, 0, "100%", "100%"] : [n, r, g, o] = [0, "100%", "100%", 0];
    const C = {
      name: "svg",
      children: [{
        name: "line",
        attributes: {
          xmlns: Q0,
          x1: n,
          y1: r,
          x2: g,
          y2: o,
          style: s
        }
      }],
      attributes: {
        xmlns: Q0,
        width: I,
        height: c,
        style: {
          overflow: "visible"
        }
      }
    };
    return co(A) ? fA.success({
      name: "div",
      attributes: {
        style: {
          display: "inline",
          width: "100%",
          height: "100%"
        }
      },
      children: [C]
    }) : (C.attributes.style.position = "absolute", fA.success(C));
  }
}
class qE extends K {
  constructor(A) {
    super($, "linear", !0), this.id = A.id || "", this.type = O(A.type, ["toRight", "toBottom", "toLeft", "toTop"]), this.use = A.use || "", this.usehref = A.usehref || "", this.color = null, this.extras = null;
  }
  [ZA](A) {
    A = A ? A[ZA]() : "#FFFFFF";
    const t = this.type.replace(/([RBLT])/, " $1").toLowerCase(), i = this.color ? this.color[ZA]() : "#000000";
    return `linear-gradient(${t}, ${A}, ${i})`;
  }
}
class PE extends fe {
  constructor(A) {
    super($, "lockDocument"), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [ne]() {
    this[W] = O(this[W], ["auto", "0", "1"]);
  }
}
class WE extends K {
  constructor(A) {
    super($, "manifest", !0), this.action = O(A.action, ["include", "all", "exclude"]), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.ref = new b();
  }
}
class OE extends K {
  constructor(A) {
    super($, "margin", !0), this.bottomInset = CA(A.bottomInset, "0"), this.id = A.id || "", this.leftInset = CA(A.leftInset, "0"), this.rightInset = CA(A.rightInset, "0"), this.topInset = CA(A.topInset, "0"), this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null;
  }
  [ZA]() {
    return {
      margin: FA(this.topInset) + " " + FA(this.rightInset) + " " + FA(this.bottomInset) + " " + FA(this.leftInset)
    };
  }
}
class ZE extends K {
  constructor(A) {
    super($, "mdp"), this.id = A.id || "", this.permissions = RA({
      data: A.permissions,
      defaultValue: 2,
      validate: (t) => t === 1 || t === 3
    }), this.signatureType = O(A.signatureType, ["filler", "author"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class jE extends K {
  constructor(A) {
    super($, "medium"), this.id = A.id || "", this.imagingBBox = G1(A.imagingBBox), this.long = CA(A.long), this.orientation = O(A.orientation, ["portrait", "landscape"]), this.short = CA(A.short), this.stock = A.stock || "", this.trayIn = O(A.trayIn, ["auto", "delegate", "pageFront"]), this.trayOut = O(A.trayOut, ["auto", "delegate"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class XE extends K {
  constructor(A) {
    super($, "message", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.text = new b();
  }
}
class VE extends K {
  constructor(A) {
    super($, "numericEdit", !0), this.hScrollPolicy = O(A.hScrollPolicy, ["auto", "off", "on"]), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.border = null, this.comb = null, this.extras = null, this.margin = null;
  }
  [SA](A) {
    var a;
    const t = gt(this, "border", "font", "margin"), i = this[GA]()[GA](), s = {
      name: "input",
      attributes: {
        type: "text",
        fieldId: i[ee],
        dataId: ((a = i[Lt]) == null ? void 0 : a[ee]) || i[ee],
        class: ["xfaTextfield"],
        style: t,
        "aria-label": u0(i),
        "aria-required": !1
      }
    };
    return Da(i) && (s.attributes["aria-required"] = !0, s.attributes.required = !0), fA.success({
      name: "label",
      attributes: {
        class: ["xfaLabel"]
      },
      children: [s]
    });
  }
}
class _E extends K {
  constructor(A) {
    super($, "occur", !0), this.id = A.id || "", this.initial = A.initial !== "" ? RA({
      data: A.initial,
      defaultValue: "",
      validate: (t) => !0
    }) : "", this.max = A.max !== "" ? RA({
      data: A.max,
      defaultValue: 1,
      validate: (t) => !0
    }) : "", this.min = A.min !== "" ? RA({
      data: A.min,
      defaultValue: 1,
      validate: (t) => !0
    }) : "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null;
  }
  [Jt]() {
    const A = this[GA](), t = this.min;
    this.min === "" && (this.min = A instanceof os || A instanceof ra ? 0 : 1), this.max === "" && (t === "" ? this.max = A instanceof os || A instanceof ra ? -1 : 1 : this.max = this.min), this.max !== -1 && this.max < this.min && (this.max = this.min), this.initial === "" && (this.initial = A instanceof Eo ? 1 : this.min);
  }
}
class zE extends qA {
  constructor(A) {
    super($, "oid"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class $E extends K {
  constructor(A) {
    super($, "oids", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.oid = new b();
  }
}
class vl extends K {
  constructor(A) {
    super($, "overflow"), this.id = A.id || "", this.leader = A.leader || "", this.target = A.target || "", this.trailer = A.trailer || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [Pe]() {
    if (!this[Y]) {
      const A = this[GA](), t = this[me](), i = t[Qi](this.target, A), s = t[Qi](this.leader, A), a = t[Qi](this.trailer, A);
      this[Y] = {
        target: (i == null ? void 0 : i[0]) || null,
        leader: (s == null ? void 0 : s[0]) || null,
        trailer: (a == null ? void 0 : a[0]) || null,
        addLeader: !1,
        addTrailer: !1
      };
    }
    return this[Y];
  }
}
class os extends K {
  constructor(A) {
    super($, "pageArea", !0), this.blankOrNotBlank = O(A.blankOrNotBlank, ["any", "blank", "notBlank"]), this.id = A.id || "", this.initialNumber = RA({
      data: A.initialNumber,
      defaultValue: 1,
      validate: (t) => !0
    }), this.name = A.name || "", this.numbered = RA({
      data: A.numbered,
      defaultValue: 1,
      validate: (t) => !0
    }), this.oddOrEven = O(A.oddOrEven, ["any", "even", "odd"]), this.pagePosition = O(A.pagePosition, ["any", "first", "last", "only", "rest"]), this.relevant = Vt(A.relevant), this.use = A.use || "", this.usehref = A.usehref || "", this.desc = null, this.extras = null, this.medium = null, this.occur = null, this.area = new b(), this.contentArea = new b(), this.draw = new b(), this.exclGroup = new b(), this.field = new b(), this.subform = new b();
  }
  [na]() {
    return this[Y] ? !this.occur || this.occur.max === -1 || this[Y].numberOfUse < this.occur.max : (this[Y] = {
      numberOfUse: 0
    }, !0);
  }
  [J0]() {
    delete this[Y];
  }
  [hi]() {
    this[Y] || (this[Y] = {
      numberOfUse: 0
    });
    const A = this[GA]();
    return A.relation === "orderedOccurrence" && this[na]() ? (this[Y].numberOfUse += 1, this) : A[hi]();
  }
  [h0]() {
    return this[Y].space || {
      width: 0,
      height: 0
    };
  }
  [SA]() {
    this[Y] || (this[Y] = {
      numberOfUse: 1
    });
    const A = [];
    this[Y].children = A;
    const t = /* @__PURE__ */ Object.create(null);
    if (this.medium && this.medium.short && this.medium.long) {
      if (t.width = FA(this.medium.short), t.height = FA(this.medium.long), this[Y].space = {
        width: this.medium.short,
        height: this.medium.long
      }, this.medium.orientation === "landscape") {
        const i = t.width;
        t.width = t.height, t.height = i, this[Y].space = {
          width: this.medium.long,
          height: this.medium.short
        };
      }
    } else
      k("XFA - No medium specified in pageArea: please file a bug.");
    return this[Oi]({
      filter: /* @__PURE__ */ new Set(["area", "draw", "field", "subform"]),
      include: !0
    }), this[Oi]({
      filter: /* @__PURE__ */ new Set(["contentArea"]),
      include: !0
    }), fA.success({
      name: "div",
      children: A,
      attributes: {
        class: ["xfaPage"],
        id: this[ee],
        style: t,
        xfaName: this.name
      }
    });
  }
}
class ra extends K {
  constructor(A) {
    super($, "pageSet", !0), this.duplexImposition = O(A.duplexImposition, ["longEdge", "shortEdge"]), this.id = A.id || "", this.name = A.name || "", this.relation = O(A.relation, ["orderedOccurrence", "duplexPaginated", "simplexPaginated"]), this.relevant = Vt(A.relevant), this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.occur = null, this.pageArea = new b(), this.pageSet = new b();
  }
  [J0]() {
    for (const A of this.pageArea.children)
      A[J0]();
    for (const A of this.pageSet.children)
      A[J0]();
  }
  [na]() {
    return !this.occur || this.occur.max === -1 || this[Y].numberOfUse < this.occur.max;
  }
  [hi]() {
    if (this[Y] || (this[Y] = {
      numberOfUse: 1,
      pageIndex: -1,
      pageSetIndex: -1
    }), this.relation === "orderedOccurrence") {
      if (this[Y].pageIndex + 1 < this.pageArea.children.length)
        return this[Y].pageIndex += 1, this.pageArea.children[this[Y].pageIndex][hi]();
      if (this[Y].pageSetIndex + 1 < this.pageSet.children.length)
        return this[Y].pageSetIndex += 1, this.pageSet.children[this[Y].pageSetIndex][hi]();
      if (this[na]())
        return this[Y].numberOfUse += 1, this[Y].pageIndex = -1, this[Y].pageSetIndex = -1, this[hi]();
      const a = this[GA]();
      return a instanceof ra ? a[hi]() : (this[J0](), this[hi]());
    }
    const A = this[me]()[Y].pageNumber, t = A % 2 === 0 ? "even" : "odd", i = A === 0 ? "first" : "rest";
    let s = this.pageArea.children.find((a) => a.oddOrEven === t && a.pagePosition === i);
    return s || (s = this.pageArea.children.find((a) => a.oddOrEven === "any" && a.pagePosition === i), s) || (s = this.pageArea.children.find((a) => a.oddOrEven === "any" && a.pagePosition === "any"), s) ? s : this.pageArea.children[0];
  }
}
class Af extends K {
  constructor(A) {
    super($, "para", !0), this.hAlign = O(A.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]), this.id = A.id || "", this.lineHeight = A.lineHeight ? CA(A.lineHeight, "0pt") : "", this.marginLeft = A.marginLeft ? CA(A.marginLeft, "0pt") : "", this.marginRight = A.marginRight ? CA(A.marginRight, "0pt") : "", this.orphans = RA({
      data: A.orphans,
      defaultValue: 0,
      validate: (t) => t >= 0
    }), this.preserve = A.preserve || "", this.radixOffset = A.radixOffset ? CA(A.radixOffset, "0pt") : "", this.spaceAbove = A.spaceAbove ? CA(A.spaceAbove, "0pt") : "", this.spaceBelow = A.spaceBelow ? CA(A.spaceBelow, "0pt") : "", this.tabDefault = A.tabDefault ? CA(this.tabDefault) : "", this.tabStops = (A.tabStops || "").trim().split(/\s+/).map((t, i) => i % 2 === 1 ? CA(t) : t), this.textIndent = A.textIndent ? CA(A.textIndent, "0pt") : "", this.use = A.use || "", this.usehref = A.usehref || "", this.vAlign = O(A.vAlign, ["top", "bottom", "middle"]), this.widows = RA({
      data: A.widows,
      defaultValue: 0,
      validate: (t) => t >= 0
    }), this.hyphenation = null;
  }
  [ZA]() {
    const A = gt(this, "hAlign");
    return this.marginLeft !== "" && (A.paddingLeft = FA(this.marginLeft)), this.marginRight !== "" && (A.paddingRight = FA(this.marginRight)), this.spaceAbove !== "" && (A.paddingTop = FA(this.spaceAbove)), this.spaceBelow !== "" && (A.paddingBottom = FA(this.spaceBelow)), this.textIndent !== "" && (A.textIndent = FA(this.textIndent), ml(A)), this.lineHeight > 0 && (A.lineHeight = FA(this.lineHeight)), this.tabDefault !== "" && (A.tabSize = FA(this.tabDefault)), this.tabStops.length > 0, this.hyphenatation && Object.assign(A, this.hyphenatation[ZA]()), A;
  }
}
class ef extends K {
  constructor(A) {
    super($, "passwordEdit", !0), this.hScrollPolicy = O(A.hScrollPolicy, ["auto", "off", "on"]), this.id = A.id || "", this.passwordChar = A.passwordChar || "*", this.use = A.use || "", this.usehref = A.usehref || "", this.border = null, this.extras = null, this.margin = null;
  }
}
class tf extends K {
  constructor(A) {
    super($, "pattern", !0), this.id = A.id || "", this.type = O(A.type, ["crossHatch", "crossDiagonal", "diagonalLeft", "diagonalRight", "horizontal", "vertical"]), this.use = A.use || "", this.usehref = A.usehref || "", this.color = null, this.extras = null;
  }
  [ZA](A) {
    A = A ? A[ZA]() : "#FFFFFF";
    const t = this.color ? this.color[ZA]() : "#000000", i = 5, s = "repeating-linear-gradient", a = `${A},${A} ${i}px,${t} ${i}px,${t} ${2 * i}px`;
    switch (this.type) {
      case "crossHatch":
        return `${s}(to top,${a}) ${s}(to right,${a})`;
      case "crossDiagonal":
        return `${s}(45deg,${a}) ${s}(-45deg,${a})`;
      case "diagonalLeft":
        return `${s}(45deg,${a})`;
      case "diagonalRight":
        return `${s}(-45deg,${a})`;
      case "horizontal":
        return `${s}(to top,${a})`;
      case "vertical":
        return `${s}(to right,${a})`;
    }
    return "";
  }
}
class sf extends qA {
  constructor(A) {
    super($, "picture"), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class af extends K {
  constructor(A) {
    super($, "proto", !0), this.appearanceFilter = new b(), this.arc = new b(), this.area = new b(), this.assist = new b(), this.barcode = new b(), this.bindItems = new b(), this.bookend = new b(), this.boolean = new b(), this.border = new b(), this.break = new b(), this.breakAfter = new b(), this.breakBefore = new b(), this.button = new b(), this.calculate = new b(), this.caption = new b(), this.certificate = new b(), this.certificates = new b(), this.checkButton = new b(), this.choiceList = new b(), this.color = new b(), this.comb = new b(), this.connect = new b(), this.contentArea = new b(), this.corner = new b(), this.date = new b(), this.dateTime = new b(), this.dateTimeEdit = new b(), this.decimal = new b(), this.defaultUi = new b(), this.desc = new b(), this.digestMethod = new b(), this.digestMethods = new b(), this.draw = new b(), this.edge = new b(), this.encoding = new b(), this.encodings = new b(), this.encrypt = new b(), this.encryptData = new b(), this.encryption = new b(), this.encryptionMethod = new b(), this.encryptionMethods = new b(), this.event = new b(), this.exData = new b(), this.exObject = new b(), this.exclGroup = new b(), this.execute = new b(), this.extras = new b(), this.field = new b(), this.fill = new b(), this.filter = new b(), this.float = new b(), this.font = new b(), this.format = new b(), this.handler = new b(), this.hyphenation = new b(), this.image = new b(), this.imageEdit = new b(), this.integer = new b(), this.issuers = new b(), this.items = new b(), this.keep = new b(), this.keyUsage = new b(), this.line = new b(), this.linear = new b(), this.lockDocument = new b(), this.manifest = new b(), this.margin = new b(), this.mdp = new b(), this.medium = new b(), this.message = new b(), this.numericEdit = new b(), this.occur = new b(), this.oid = new b(), this.oids = new b(), this.overflow = new b(), this.pageArea = new b(), this.pageSet = new b(), this.para = new b(), this.passwordEdit = new b(), this.pattern = new b(), this.picture = new b(), this.radial = new b(), this.reason = new b(), this.reasons = new b(), this.rectangle = new b(), this.ref = new b(), this.script = new b(), this.setProperty = new b(), this.signData = new b(), this.signature = new b(), this.signing = new b(), this.solid = new b(), this.speak = new b(), this.stipple = new b(), this.subform = new b(), this.subformSet = new b(), this.subjectDN = new b(), this.subjectDNs = new b(), this.submit = new b(), this.text = new b(), this.textEdit = new b(), this.time = new b(), this.timeStamp = new b(), this.toolTip = new b(), this.traversal = new b(), this.traverse = new b(), this.ui = new b(), this.validate = new b(), this.value = new b(), this.variables = new b();
  }
}
class nf extends K {
  constructor(A) {
    super($, "radial", !0), this.id = A.id || "", this.type = O(A.type, ["toEdge", "toCenter"]), this.use = A.use || "", this.usehref = A.usehref || "", this.color = null, this.extras = null;
  }
  [ZA](A) {
    A = A ? A[ZA]() : "#FFFFFF";
    const t = this.color ? this.color[ZA]() : "#000000";
    return `radial-gradient(circle at center, ${this.type === "toEdge" ? `${A},${t}` : `${t},${A}`})`;
  }
}
class rf extends qA {
  constructor(A) {
    super($, "reason"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class gf extends K {
  constructor(A) {
    super($, "reasons", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.reason = new b();
  }
}
class Tl extends K {
  constructor(A) {
    super($, "rectangle", !0), this.hand = O(A.hand, ["even", "left", "right"]), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.corner = new b(4), this.edge = new b(4), this.fill = null;
  }
  [SA]() {
    var o;
    const A = this.edge.children.length ? this.edge.children[0] : new ka({}), t = A[ZA](), i = /* @__PURE__ */ Object.create(null);
    ((o = this.fill) == null ? void 0 : o.presence) === "visible" ? Object.assign(i, this.fill[ZA]()) : i.fill = "transparent", i.strokeWidth = FA(A.presence === "visible" ? A.thickness : 0), i.stroke = t.color;
    const a = (this.corner.children.length ? this.corner.children[0] : new Hl({}))[ZA](), r = {
      name: "svg",
      children: [{
        name: "rect",
        attributes: {
          xmlns: Q0,
          width: "100%",
          height: "100%",
          x: 0,
          y: 0,
          rx: a.radius,
          ry: a.radius,
          style: i
        }
      }],
      attributes: {
        xmlns: Q0,
        style: {
          overflow: "visible"
        },
        width: "100%",
        height: "100%"
      }
    }, g = this[GA]()[GA]();
    return co(g) ? fA.success({
      name: "div",
      attributes: {
        style: {
          display: "inline",
          width: "100%",
          height: "100%"
        }
      },
      children: [r]
    }) : (r.attributes.style.position = "absolute", fA.success(r));
  }
}
class of extends qA {
  constructor(A) {
    super($, "ref"), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class If extends qA {
  constructor(A) {
    super($, "script"), this.binding = A.binding || "", this.contentType = A.contentType || "", this.id = A.id || "", this.name = A.name || "", this.runAt = O(A.runAt, ["client", "both", "server"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class Ng extends K {
  constructor(A) {
    super($, "setProperty"), this.connection = A.connection || "", this.ref = A.ref || "", this.target = A.target || "";
  }
}
class cf extends K {
  constructor(A) {
    super($, "signData", !0), this.id = A.id || "", this.operation = O(A.operation, ["sign", "clear", "verify"]), this.ref = A.ref || "", this.target = A.target || "", this.use = A.use || "", this.usehref = A.usehref || "", this.filter = null, this.manifest = null;
  }
}
class lf extends K {
  constructor(A) {
    super($, "signature", !0), this.id = A.id || "", this.type = O(A.type, ["PDF1.3", "PDF1.6"]), this.use = A.use || "", this.usehref = A.usehref || "", this.border = null, this.extras = null, this.filter = null, this.manifest = null, this.margin = null;
  }
}
class Cf extends K {
  constructor(A) {
    super($, "signing", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.certificate = new b();
  }
}
class hf extends K {
  constructor(A) {
    super($, "solid", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null;
  }
  [ZA](A) {
    return A ? A[ZA]() : "#FFFFFF";
  }
}
class Bf extends qA {
  constructor(A) {
    super($, "speak"), this.disable = RA({
      data: A.disable,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.id = A.id || "", this.priority = O(A.priority, ["custom", "caption", "name", "toolTip"]), this.rid = A.rid || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class Qf extends K {
  constructor(A) {
    super($, "stipple", !0), this.id = A.id || "", this.rate = RA({
      data: A.rate,
      defaultValue: 50,
      validate: (t) => t >= 0 && t <= 100
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.color = null, this.extras = null;
  }
  [ZA](A) {
    const t = this.rate / 100;
    return ye.makeHexColor(Math.round(A.value.r * (1 - t) + this.value.r * t), Math.round(A.value.g * (1 - t) + this.value.g * t), Math.round(A.value.b * (1 - t) + this.value.b * t));
  }
}
class ql extends K {
  constructor(A) {
    super($, "subform", !0), this.access = O(A.access, ["open", "nonInteractive", "protected", "readOnly"]), this.allowMacro = RA({
      data: A.allowMacro,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.anchorType = O(A.anchorType, ["topLeft", "bottomCenter", "bottomLeft", "bottomRight", "middleCenter", "middleLeft", "middleRight", "topCenter", "topRight"]), this.colSpan = RA({
      data: A.colSpan,
      defaultValue: 1,
      validate: (t) => t >= 1 || t === -1
    }), this.columnWidths = (A.columnWidths || "").trim().split(/\s+/).map((t) => t === "-1" ? -1 : CA(t)), this.h = A.h ? CA(A.h) : "", this.hAlign = O(A.hAlign, ["left", "center", "justify", "justifyAll", "radix", "right"]), this.id = A.id || "", this.layout = O(A.layout, ["position", "lr-tb", "rl-row", "rl-tb", "row", "table", "tb"]), this.locale = A.locale || "", this.maxH = CA(A.maxH, "0pt"), this.maxW = CA(A.maxW, "0pt"), this.mergeMode = O(A.mergeMode, ["consumeData", "matchTemplate"]), this.minH = CA(A.minH, "0pt"), this.minW = CA(A.minW, "0pt"), this.name = A.name || "", this.presence = O(A.presence, ["visible", "hidden", "inactive", "invisible"]), this.relevant = Vt(A.relevant), this.restoreState = O(A.restoreState, ["manual", "auto"]), this.scope = O(A.scope, ["name", "none"]), this.use = A.use || "", this.usehref = A.usehref || "", this.w = A.w ? CA(A.w) : "", this.x = CA(A.x, "0pt"), this.y = CA(A.y, "0pt"), this.assist = null, this.bind = null, this.bookend = null, this.border = null, this.break = null, this.calculate = null, this.desc = null, this.extras = null, this.keep = null, this.margin = null, this.occur = null, this.overflow = null, this.pageSet = null, this.para = null, this.traversal = null, this.validate = null, this.variables = null, this.area = new b(), this.breakAfter = new b(), this.breakBefore = new b(), this.connect = new b(), this.draw = new b(), this.event = new b(), this.exObject = new b(), this.exclGroup = new b(), this.field = new b(), this.proto = new b(), this.setProperty = new b(), this.subform = new b(), this.subformSet = new b();
  }
  [we]() {
    const A = this[GA]();
    return A instanceof Qo ? A[we]() : A;
  }
  [x0]() {
    return !0;
  }
  [yi]() {
    return this.layout.endsWith("-tb") && this[Y].attempt === 0 && this[Y].numberInLine > 0 || this[GA]()[yi]();
  }
  *[gs]() {
    yield* Co(this);
  }
  [ba]() {
    return kl(this);
  }
  [C0](A, t) {
    Sl(this, A, t);
  }
  [h0]() {
    return Fl(this);
  }
  [ui]() {
    var t;
    const A = this[we]();
    return A[ui]() ? this[Y]._isSplittable !== void 0 ? this[Y]._isSplittable : this.layout === "position" || this.layout.includes("row") ? (this[Y]._isSplittable = !1, !1) : this.keep && this.keep.intact !== "none" ? (this[Y]._isSplittable = !1, !1) : (t = A.layout) != null && t.endsWith("-tb") && A[Y].numberInLine !== 0 ? !1 : (this[Y]._isSplittable = !0, !0) : !1;
  }
  [SA](A) {
    var u;
    if (lr(this), this.break) {
      if (this.break.after !== "auto" || this.break.afterTarget !== "") {
        const x = new Gl({
          targetType: this.break.after,
          target: this.break.afterTarget,
          startNew: this.break.startNew.toString()
        });
        x[ae] = this[ae], this[Qe](x), this.breakAfter.push(x);
      }
      if (this.break.before !== "auto" || this.break.beforeTarget !== "") {
        const x = new Ul({
          targetType: this.break.before,
          target: this.break.beforeTarget,
          startNew: this.break.startNew.toString()
        });
        x[ae] = this[ae], this[Qe](x), this.breakBefore.push(x);
      }
      if (this.break.overflowTarget !== "") {
        const x = new vl({
          target: this.break.overflowTarget,
          leader: this.break.overflowLeader,
          trailer: this.break.overflowTrailer
        });
        x[ae] = this[ae], this[Qe](x), this.overflow.push(x);
      }
      this[Pi](this.break), this.break = null;
    }
    if (this.presence === "hidden" || this.presence === "inactive")
      return fA.EMPTY;
    if ((this.breakBefore.children.length > 1 || this.breakAfter.children.length > 1) && k("XFA - Several breakBefore or breakAfter in subforms: please file a bug."), this.breakBefore.children.length >= 1) {
      const x = this.breakBefore.children[0];
      if (PI(x))
        return fA.breakNode(x);
    }
    if ((u = this[Y]) != null && u.afterBreakAfter)
      return fA.EMPTY;
    Ir(this);
    const t = [], i = {
      id: this[ee],
      class: []
    };
    Io(this, i.class), this[Y] || (this[Y] = /* @__PURE__ */ Object.create(null)), Object.assign(this[Y], {
      children: t,
      line: null,
      attributes: i,
      attempt: 0,
      numberInLine: 0,
      availableSpace: {
        width: Math.min(this.w || 1 / 0, A.width),
        height: Math.min(this.h || 1 / 0, A.height)
      },
      width: 0,
      height: 0,
      prevHeight: 0,
      currentWidth: 0
    });
    const s = this[me](), a = s[Y].noLayoutFailure, n = this[ui]();
    if (n || hr(this), !cr(this, A))
      return fA.FAILURE;
    const r = /* @__PURE__ */ new Set(["area", "draw", "exclGroup", "field", "subform", "subformSet"]);
    if (this.layout.includes("row")) {
      const x = this[we]().columnWidths;
      Array.isArray(x) && x.length > 0 && (this[Y].columnWidths = x, this[Y].currentColumn = 0);
    }
    const g = gt(this, "anchorType", "dimensions", "position", "presence", "border", "margin", "hAlign"), o = ["xfaSubform"], I = xl(this);
    if (I && o.push(I), i.style = g, i.class = o, this.name && (i.xfaName = this.name), this.overflow) {
      const x = this.overflow[Pe]();
      x.addLeader && (x.addLeader = !1, WI(this, x.leader, A));
    }
    this[hs]();
    const c = this.layout === "lr-tb" || this.layout === "rl-tb", l = c ? Gn : 1;
    for (; this[Y].attempt < l; this[Y].attempt++) {
      c && this[Y].attempt === Gn - 1 && (this[Y].numberInLine = 0);
      const x = this[Oi]({
        filter: r,
        include: !0
      });
      if (x.success)
        break;
      if (x.isBreak())
        return this[ct](), x;
      if (c && this[Y].attempt === 0 && this[Y].numberInLine === 0 && !s[Y].noLayoutFailure) {
        this[Y].attempt = l;
        break;
      }
    }
    if (this[ct](), n || Br(this), s[Y].noLayoutFailure = a, this[Y].attempt === l)
      return this.overflow && (this[me]()[Y].overflowNode = this.overflow), n || delete this[Y], fA.FAILURE;
    if (this.overflow) {
      const x = this.overflow[Pe]();
      x.addTrailer && (x.addTrailer = !1, WI(this, x.trailer, A));
    }
    let C = 0, h = 0;
    this.margin && (C = this.margin.leftInset + this.margin.rightInset, h = this.margin.topInset + this.margin.bottomInset);
    const B = Math.max(this[Y].width + C, this.w || 0), Q = Math.max(this[Y].height + h, this.h || 0), E = [this.x, this.y, B, Q];
    if (this.w === "" && (g.width = FA(B)), this.h === "" && (g.height = FA(Q)), (g.width === "0px" || g.height === "0px") && t.length === 0)
      return fA.EMPTY;
    const f = {
      name: "div",
      attributes: i,
      children: t
    };
    Cr(this, i);
    const d = fA.success(B0(this, f), E);
    if (this.breakAfter.children.length >= 1) {
      const x = this.breakAfter.children[0];
      if (PI(x))
        return this[Y].afterBreakAfter = d, fA.breakNode(x);
    }
    return delete this[Y], d;
  }
}
class Qo extends K {
  constructor(A) {
    super($, "subformSet", !0), this.id = A.id || "", this.name = A.name || "", this.relation = O(A.relation, ["ordered", "choice", "unordered"]), this.relevant = Vt(A.relevant), this.use = A.use || "", this.usehref = A.usehref || "", this.bookend = null, this.break = null, this.desc = null, this.extras = null, this.occur = null, this.overflow = null, this.breakAfter = new b(), this.breakBefore = new b(), this.subform = new b(), this.subformSet = new b();
  }
  *[gs]() {
    yield* Co(this);
  }
  [we]() {
    let A = this[GA]();
    for (; !(A instanceof ql); )
      A = A[GA]();
    return A;
  }
  [x0]() {
    return !0;
  }
}
class Ef extends fe {
  constructor(A) {
    super($, "subjectDN"), this.delimiter = A.delimiter || ",", this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [ne]() {
    this[W] = new Map(this[W].split(this.delimiter).map((A) => (A = A.split("=", 2), A[0] = A[0].trim(), A)));
  }
}
class ff extends K {
  constructor(A) {
    super($, "subjectDNs", !0), this.id = A.id || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "", this.subjectDN = new b();
  }
}
class uf extends K {
  constructor(A) {
    super($, "submit", !0), this.embedPDF = RA({
      data: A.embedPDF,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.format = O(A.format, ["xdp", "formdata", "pdf", "urlencoded", "xfd", "xml"]), this.id = A.id || "", this.target = A.target || "", this.textEncoding = or({
      data: A.textEncoding ? A.textEncoding.toLowerCase() : "",
      defaultValue: "",
      validate: (t) => ["utf-8", "big-five", "fontspecific", "gbk", "gb-18030", "gb-2312", "ksc-5601", "none", "shift-jis", "ucs-2", "utf-16"].includes(t) || t.match(/iso-8859-\d{2}/)
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.xdpContent = A.xdpContent || "", this.encrypt = null, this.encryptData = new b(), this.signData = new b();
  }
}
class Eo extends K {
  constructor(A) {
    super($, "template", !0), this.baseProfile = O(A.baseProfile, ["full", "interactiveForms"]), this.extras = null, this.subform = new b();
  }
  [ne]() {
    this.subform.children.length === 0 && k("XFA - No subforms in template node."), this.subform.children.length >= 2 && k("XFA - Several subforms in template node: please file a bug."), this[Pt] = P1;
  }
  [ui]() {
    return !0;
  }
  [Qi](A, t) {
    return A.startsWith("#") ? [this[L0].get(A.slice(1))] : Ri(this, t, A, !0, !0);
  }
  *[hl]() {
    var h, B, Q;
    if (!this.subform.children.length)
      return fA.success({
        name: "div",
        children: []
      });
    this[Y] = {
      overflowNode: null,
      firstUnsplittable: null,
      currentContentArea: null,
      currentPageArea: null,
      noLayoutFailure: !1,
      pageNumber: 1,
      pagePosition: "first",
      oddOrEven: "odd",
      blankOrNotBlank: "nonBlank",
      paraStack: []
    };
    const A = this.subform.children[0];
    A.pageSet[J0]();
    const t = A.pageSet.pageArea.children, i = {
      name: "div",
      children: []
    };
    let s = null, a = null, n = null;
    if (A.breakBefore.children.length >= 1 ? (a = A.breakBefore.children[0], n = a.target) : A.subform.children.length >= 1 && A.subform.children[0].breakBefore.children.length >= 1 ? (a = A.subform.children[0].breakBefore.children[0], n = a.target) : (h = A.break) != null && h.beforeTarget ? (a = A.break, n = a.beforeTarget) : A.subform.children.length >= 1 && ((B = A.subform.children[0].break) != null && B.beforeTarget) && (a = A.subform.children[0].break, n = a.beforeTarget), a) {
      const E = this[Qi](n, a[GA]());
      E instanceof os && (s = E, a[Y] = {});
    }
    s || (s = t[0]), s[Y] = {
      numberOfUse: 1
    };
    const r = s[GA]();
    r[Y] = {
      numberOfUse: 1,
      pageIndex: r.pageArea.children.indexOf(s),
      pageSetIndex: 0
    };
    let g, o = null, I = null, c = !0, l = 0, C = 0;
    for (; ; ) {
      if (c)
        l = 0;
      else if (i.children.pop(), ++l === q1)
        return k("XFA - Something goes wrong: please file a bug."), i;
      g = null, this[Y].currentPageArea = s;
      const E = s[SA]().html;
      i.children.push(E), o && (this[Y].noLayoutFailure = !0, E.children.push(o[SA](s[Y].space).html), o = null), I && (this[Y].noLayoutFailure = !0, E.children.push(I[SA](s[Y].space).html), I = null);
      const f = s.contentArea.children, d = E.children.filter((x) => x.attributes.class.includes("xfaContentarea"));
      c = !1, this[Y].firstUnsplittable = null, this[Y].noLayoutFailure = !1;
      const u = (x) => {
        var m;
        const p = A[ba]();
        p && (c || (c = ((m = p.children) == null ? void 0 : m.length) > 0), d[x].children.push(p));
      };
      for (let x = C, p = f.length; x < p; x++) {
        const m = this[Y].currentContentArea = f[x], D = {
          width: m.w,
          height: m.h
        };
        C = 0, o && (d[x].children.push(o[SA](D).html), o = null), I && (d[x].children.push(I[SA](D).html), I = null);
        const S = A[SA](D);
        if (S.success)
          return S.html ? (c || (c = ((Q = S.html.children) == null ? void 0 : Q.length) > 0), d[x].children.push(S.html)) : !c && i.children.length > 1 && i.children.pop(), i;
        if (S.isBreak()) {
          const y = S.breakNode;
          if (u(x), y.targetType === "auto")
            continue;
          y.leader && (o = this[Qi](y.leader, y[GA]()), o = o ? o[0] : null), y.trailer && (I = this[Qi](y.trailer, y[GA]()), I = I ? I[0] : null), y.targetType === "pageArea" ? (g = y[Y].target, x = 1 / 0) : y[Y].target ? (g = y[Y].target, C = y[Y].index + 1, x = 1 / 0) : x = y[Y].index;
          continue;
        }
        if (this[Y].overflowNode) {
          const y = this[Y].overflowNode;
          this[Y].overflowNode = null;
          const H = y[Pe](), G = H.target;
          H.addLeader = H.leader !== null, H.addTrailer = H.trailer !== null, u(x);
          const v = x;
          if (x = 1 / 0, G instanceof os)
            g = G;
          else if (G instanceof ho) {
            const X = f.indexOf(G);
            X !== -1 ? X > v ? x = X - 1 : C = X : (g = G[GA](), C = g.contentArea.children.indexOf(G));
          }
          continue;
        }
        u(x);
      }
      this[Y].pageNumber += 1, g && (g[na]() ? g[Y].numberOfUse += 1 : g = null), s = g || s[hi](), yield null;
    }
  }
}
class Pl extends fe {
  constructor(A) {
    super($, "text"), this.id = A.id || "", this.maxChars = RA({
      data: A.maxChars,
      defaultValue: 0,
      validate: (t) => t >= 0
    }), this.name = A.name || "", this.rid = A.rid || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [nr]() {
    return !0;
  }
  [ni](A) {
    return A[pe] === be.xhtml.id ? (this[W] = A, !0) : (k(`XFA - Invalid content in Text: ${A[VA]}.`), !1);
  }
  [di](A) {
    this[W] instanceof K || super[di](A);
  }
  [ne]() {
    typeof this[W] == "string" && (this[W] = this[W].replaceAll(`\r
`, `
`));
  }
  [Pe]() {
    return typeof this[W] == "string" ? this[W].split(/[\u2029\u2028\n]/).reduce((A, t) => (t && A.push(t), A), []).join(`
`) : this[W][Se]();
  }
  [SA](A) {
    if (typeof this[W] == "string") {
      const t = Zi(this[W]).html;
      return this[W].includes("\u2029") ? (t.name = "div", t.children = [], this[W].split("\u2029").map((i) => i.split(/[\u2028\n]/).reduce((s, a) => (s.push({
        name: "span",
        value: a
      }, {
        name: "br"
      }), s), [])).forEach((i) => {
        t.children.push({
          name: "p",
          children: i
        });
      })) : /[\u2028\n]/.test(this[W]) && (t.name = "div", t.children = [], this[W].split(/[\u2028\n]/).forEach((i) => {
        t.children.push({
          name: "span",
          value: i
        }, {
          name: "br"
        });
      })), fA.success(t);
    }
    return this[W][SA](A);
  }
}
class Wl extends K {
  constructor(A) {
    super($, "textEdit", !0), this.allowRichText = RA({
      data: A.allowRichText,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.hScrollPolicy = O(A.hScrollPolicy, ["auto", "off", "on"]), this.id = A.id || "", this.multiLine = RA({
      data: A.multiLine,
      defaultValue: "",
      validate: (t) => t === 0 || t === 1
    }), this.use = A.use || "", this.usehref = A.usehref || "", this.vScrollPolicy = O(A.vScrollPolicy, ["auto", "off", "on"]), this.border = null, this.comb = null, this.extras = null, this.margin = null;
  }
  [SA](A) {
    var a, n;
    const t = gt(this, "border", "font", "margin");
    let i;
    const s = this[GA]()[GA]();
    return this.multiLine === "" && (this.multiLine = s instanceof Jl ? 1 : 0), this.multiLine === 1 ? i = {
      name: "textarea",
      attributes: {
        dataId: ((a = s[Lt]) == null ? void 0 : a[ee]) || s[ee],
        fieldId: s[ee],
        class: ["xfaTextfield"],
        style: t,
        "aria-label": u0(s),
        "aria-required": !1
      }
    } : i = {
      name: "input",
      attributes: {
        type: "text",
        dataId: ((n = s[Lt]) == null ? void 0 : n[ee]) || s[ee],
        fieldId: s[ee],
        class: ["xfaTextfield"],
        style: t,
        "aria-label": u0(s),
        "aria-required": !1
      }
    }, Da(s) && (i.attributes["aria-required"] = !0, i.attributes.required = !0), fA.success({
      name: "label",
      attributes: {
        class: ["xfaLabel"]
      },
      children: [i]
    });
  }
}
class df extends qA {
  constructor(A) {
    super($, "time"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
  [ne]() {
    const A = this[W].trim();
    this[W] = A ? new Date(A) : null;
  }
  [SA](A) {
    return Zi(this[W] ? this[W].toString() : "");
  }
}
class xf extends K {
  constructor(A) {
    super($, "timeStamp"), this.id = A.id || "", this.server = A.server || "", this.type = O(A.type, ["optional", "required"]), this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class mf extends qA {
  constructor(A) {
    super($, "toolTip"), this.id = A.id || "", this.rid = A.rid || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class pf extends K {
  constructor(A) {
    super($, "traversal", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.traverse = new b();
  }
}
class yf extends K {
  constructor(A) {
    super($, "traverse", !0), this.id = A.id || "", this.operation = O(A.operation, ["next", "back", "down", "first", "left", "right", "up"]), this.ref = A.ref || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.script = null;
  }
  get name() {
    return this.operation;
  }
  [aa]() {
    return !1;
  }
}
class fo extends K {
  constructor(A) {
    super($, "ui", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.picture = null, this.barcode = null, this.button = null, this.checkButton = null, this.choiceList = null, this.dateTimeEdit = null, this.defaultUi = null, this.imageEdit = null, this.numericEdit = null, this.passwordEdit = null, this.signature = null, this.textEdit = null;
  }
  [Pe]() {
    if (this[Y] === void 0) {
      for (const A of Object.getOwnPropertyNames(this)) {
        if (A === "extras" || A === "picture")
          continue;
        const t = this[A];
        if (t instanceof K)
          return this[Y] = t, t;
      }
      this[Y] = null;
    }
    return this[Y];
  }
  [SA](A) {
    const t = this[Pe]();
    return t ? t[SA](A) : fA.EMPTY;
  }
}
class wf extends K {
  constructor(A) {
    super($, "validate", !0), this.formatTest = O(A.formatTest, ["warning", "disabled", "error"]), this.id = A.id || "", this.nullTest = O(A.nullTest, ["disabled", "error", "warning"]), this.scriptTest = O(A.scriptTest, ["error", "disabled", "warning"]), this.use = A.use || "", this.usehref = A.usehref || "", this.extras = null, this.message = null, this.picture = null, this.script = null;
  }
}
class uo extends K {
  constructor(A) {
    super($, "value", !0), this.id = A.id || "", this.override = RA({
      data: A.override,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.relevant = Vt(A.relevant), this.use = A.use || "", this.usehref = A.usehref || "", this.arc = null, this.boolean = null, this.date = null, this.dateTime = null, this.decimal = null, this.exData = null, this.float = null, this.image = null, this.integer = null, this.line = null, this.rectangle = null, this.text = null, this.time = null;
  }
  [Qt](A) {
    var s;
    const t = this[GA]();
    if (t instanceof Bo && (s = t.ui) != null && s.imageEdit) {
      this.image || (this.image = new Kl({}), this[Qe](this.image)), this.image[W] = A[W];
      return;
    }
    const i = A[VA];
    if (this[i] !== null) {
      this[i][W] = A[W];
      return;
    }
    for (const a of Object.getOwnPropertyNames(this)) {
      const n = this[a];
      n instanceof K && (this[a] = null, this[Pi](n));
    }
    this[A[VA]] = A, this[Qe](A);
  }
  [Se]() {
    if (this.exData)
      return typeof this.exData[W] == "string" ? this.exData[W].trim() : this.exData[W][Se]().trim();
    for (const A of Object.getOwnPropertyNames(this)) {
      if (A === "image")
        continue;
      const t = this[A];
      if (t instanceof K)
        return (t[W] || "").toString().trim();
    }
    return null;
  }
  [SA](A) {
    for (const t of Object.getOwnPropertyNames(this)) {
      const i = this[t];
      if (i instanceof K)
        return i[SA](A);
    }
    return fA.EMPTY;
  }
}
class bf extends K {
  constructor(A) {
    super($, "variables", !0), this.id = A.id || "", this.use = A.use || "", this.usehref = A.usehref || "", this.boolean = new b(), this.date = new b(), this.dateTime = new b(), this.decimal = new b(), this.exData = new b(), this.float = new b(), this.image = new b(), this.integer = new b(), this.manifest = new b(), this.script = new b(), this.text = new b(), this.time = new b();
  }
  [aa]() {
    return !0;
  }
}
class Un {
  static [Xt](A, t) {
    if (Un.hasOwnProperty(A)) {
      const i = Un[A](t);
      return i[Cl](t), i;
    }
  }
  static appearanceFilter(A) {
    return new j1(A);
  }
  static arc(A) {
    return new Rl(A);
  }
  static area(A) {
    return new X1(A);
  }
  static assist(A) {
    return new V1(A);
  }
  static barcode(A) {
    return new _1(A);
  }
  static bind(A) {
    return new z1(A);
  }
  static bindItems(A) {
    return new Fg(A);
  }
  static bookend(A) {
    return new $1(A);
  }
  static boolean(A) {
    return new AE(A);
  }
  static border(A) {
    return new Nl(A);
  }
  static break(A) {
    return new eE(A);
  }
  static breakAfter(A) {
    return new Gl(A);
  }
  static breakBefore(A) {
    return new Ul(A);
  }
  static button(A) {
    return new tE(A);
  }
  static calculate(A) {
    return new iE(A);
  }
  static caption(A) {
    return new sE(A);
  }
  static certificate(A) {
    return new aE(A);
  }
  static certificates(A) {
    return new nE(A);
  }
  static checkButton(A) {
    return new Ml(A);
  }
  static choiceList(A) {
    return new Ll(A);
  }
  static color(A) {
    return new rE(A);
  }
  static comb(A) {
    return new gE(A);
  }
  static connect(A) {
    return new oE(A);
  }
  static contentArea(A) {
    return new ho(A);
  }
  static corner(A) {
    return new Hl(A);
  }
  static date(A) {
    return new IE(A);
  }
  static dateTime(A) {
    return new cE(A);
  }
  static dateTimeEdit(A) {
    return new lE(A);
  }
  static decimal(A) {
    return new CE(A);
  }
  static defaultUi(A) {
    return new hE(A);
  }
  static desc(A) {
    return new BE(A);
  }
  static digestMethod(A) {
    return new QE(A);
  }
  static digestMethods(A) {
    return new EE(A);
  }
  static draw(A) {
    return new Jl(A);
  }
  static edge(A) {
    return new ka(A);
  }
  static encoding(A) {
    return new fE(A);
  }
  static encodings(A) {
    return new uE(A);
  }
  static encrypt(A) {
    return new dE(A);
  }
  static encryptData(A) {
    return new xE(A);
  }
  static encryption(A) {
    return new mE(A);
  }
  static encryptionMethod(A) {
    return new pE(A);
  }
  static encryptionMethods(A) {
    return new yE(A);
  }
  static event(A) {
    return new wE(A);
  }
  static exData(A) {
    return new bE(A);
  }
  static exObject(A) {
    return new DE(A);
  }
  static exclGroup(A) {
    return new Yl(A);
  }
  static execute(A) {
    return new kE(A);
  }
  static extras(A) {
    return new SE(A);
  }
  static field(A) {
    return new Bo(A);
  }
  static fill(A) {
    return new FE(A);
  }
  static filter(A) {
    return new RE(A);
  }
  static float(A) {
    return new NE(A);
  }
  static font(A) {
    return new GE(A);
  }
  static format(A) {
    return new UE(A);
  }
  static handler(A) {
    return new ME(A);
  }
  static hyphenation(A) {
    return new LE(A);
  }
  static image(A) {
    return new Kl(A);
  }
  static imageEdit(A) {
    return new HE(A);
  }
  static integer(A) {
    return new JE(A);
  }
  static issuers(A) {
    return new YE(A);
  }
  static items(A) {
    return new Rg(A);
  }
  static keep(A) {
    return new KE(A);
  }
  static keyUsage(A) {
    return new vE(A);
  }
  static line(A) {
    return new TE(A);
  }
  static linear(A) {
    return new qE(A);
  }
  static lockDocument(A) {
    return new PE(A);
  }
  static manifest(A) {
    return new WE(A);
  }
  static margin(A) {
    return new OE(A);
  }
  static mdp(A) {
    return new ZE(A);
  }
  static medium(A) {
    return new jE(A);
  }
  static message(A) {
    return new XE(A);
  }
  static numericEdit(A) {
    return new VE(A);
  }
  static occur(A) {
    return new _E(A);
  }
  static oid(A) {
    return new zE(A);
  }
  static oids(A) {
    return new $E(A);
  }
  static overflow(A) {
    return new vl(A);
  }
  static pageArea(A) {
    return new os(A);
  }
  static pageSet(A) {
    return new ra(A);
  }
  static para(A) {
    return new Af(A);
  }
  static passwordEdit(A) {
    return new ef(A);
  }
  static pattern(A) {
    return new tf(A);
  }
  static picture(A) {
    return new sf(A);
  }
  static proto(A) {
    return new af(A);
  }
  static radial(A) {
    return new nf(A);
  }
  static reason(A) {
    return new rf(A);
  }
  static reasons(A) {
    return new gf(A);
  }
  static rectangle(A) {
    return new Tl(A);
  }
  static ref(A) {
    return new of(A);
  }
  static script(A) {
    return new If(A);
  }
  static setProperty(A) {
    return new Ng(A);
  }
  static signData(A) {
    return new cf(A);
  }
  static signature(A) {
    return new lf(A);
  }
  static signing(A) {
    return new Cf(A);
  }
  static solid(A) {
    return new hf(A);
  }
  static speak(A) {
    return new Bf(A);
  }
  static stipple(A) {
    return new Qf(A);
  }
  static subform(A) {
    return new ql(A);
  }
  static subformSet(A) {
    return new Qo(A);
  }
  static subjectDN(A) {
    return new Ef(A);
  }
  static subjectDNs(A) {
    return new ff(A);
  }
  static submit(A) {
    return new uf(A);
  }
  static template(A) {
    return new Eo(A);
  }
  static text(A) {
    return new Pl(A);
  }
  static textEdit(A) {
    return new Wl(A);
  }
  static time(A) {
    return new df(A);
  }
  static timeStamp(A) {
    return new xf(A);
  }
  static toolTip(A) {
    return new mf(A);
  }
  static traversal(A) {
    return new pf(A);
  }
  static traverse(A) {
    return new yf(A);
  }
  static ui(A) {
    return new fo(A);
  }
  static validate(A) {
    return new wf(A);
  }
  static value(A) {
    return new uo(A);
  }
  static variables(A) {
    return new bf(A);
  }
}
const OI = be.datasets.id;
function za(e) {
  const A = new Pl({});
  return A[W] = e, A;
}
class Df {
  constructor(A) {
    var t;
    this.root = A, this.datasets = A.datasets, this.data = ((t = A.datasets) == null ? void 0 : t.data) || new ri(be.datasets.id, "data"), this.emptyMerge = this.data[Le]().length === 0, this.root.form = this.form = A.template[Ot]();
  }
  _isConsumeData() {
    return !this.emptyMerge && this._mergeMode;
  }
  _isMatchTemplate() {
    return !this._isConsumeData();
  }
  bind() {
    return this._bindElement(this.form, this.data), this.form;
  }
  getData() {
    return this.data;
  }
  _bindValue(A, t, i) {
    var s, a;
    if (A[Lt] = t, A[sa]())
      if (t[Y0]()) {
        const n = t[ao]();
        A[Qt](za(n));
      } else if (A instanceof Bo && ((a = (s = A.ui) == null ? void 0 : s.choiceList) == null ? void 0 : a.open) === "multiSelect") {
        const n = t[Le]().map((r) => r[W].trim()).join(`
`);
        A[Qt](za(n));
      } else this._isConsumeData() && k("XFA - Nodes haven't the same type.");
    else !t[Y0]() || this._isMatchTemplate() ? this._bindElement(A, t) : k("XFA - Nodes haven't the same type.");
  }
  _findDataByNameToConsume(A, t, i, s) {
    if (!A)
      return null;
    let a, n;
    for (let r = 0; r < 3; r++) {
      for (a = i[Ts](A, !1, !0); n = a.next().value, !!n; )
        if (t === n[Y0]())
          return n;
      if (i[pe] === be.datasets.id && i[VA] === "data")
        break;
      i = i[GA]();
    }
    return s ? (a = this.data[Ts](A, !0, !1), n = a.next().value, n || (a = this.data[wg](A, !0), n = a.next().value, n != null && n[Y0]()) ? n : null) : null;
  }
  _setProperties(A, t) {
    if (A.hasOwnProperty("setProperty"))
      for (const {
        ref: i,
        target: s,
        connection: a
      } of A.setProperty.children) {
        if (a || !i)
          continue;
        const n = Ri(this.root, t, i, !1, !1);
        if (!n) {
          k(`XFA - Invalid reference: ${i}.`);
          continue;
        }
        const [r] = n;
        if (!r[Mi](this.data)) {
          k("XFA - Invalid node: must be a data node.");
          continue;
        }
        const g = Ri(this.root, A, s, !1, !1);
        if (!g) {
          k(`XFA - Invalid target: ${s}.`);
          continue;
        }
        const [o] = g;
        if (!o[Mi](A)) {
          k("XFA - Invalid target: must be a property or subproperty.");
          continue;
        }
        const I = o[GA]();
        if (o instanceof Ng || I instanceof Ng) {
          k("XFA - Invalid target: cannot be a setProperty or one of its properties.");
          continue;
        }
        if (o instanceof Fg || I instanceof Fg) {
          k("XFA - Invalid target: cannot be a bindItems or one of its properties.");
          continue;
        }
        const c = r[Se](), l = o[VA];
        if (o instanceof go) {
          const C = /* @__PURE__ */ Object.create(null);
          C[l] = c;
          const h = Reflect.construct(Object.getPrototypeOf(I).constructor, [C]);
          I[l] = h[l];
          continue;
        }
        if (!o.hasOwnProperty(W)) {
          k("XFA - Invalid node to use in setProperty");
          continue;
        }
        o[Lt] = r, o[W] = c, o[ne]();
      }
  }
  _bindItems(A, t) {
    if (!A.hasOwnProperty("items") || !A.hasOwnProperty("bindItems") || A.bindItems.isEmpty())
      return;
    for (const a of A.items.children)
      A[Pi](a);
    A.items.clear();
    const i = new Rg({}), s = new Rg({});
    A[Qe](i), A.items.push(i), A[Qe](s), A.items.push(s);
    for (const {
      ref: a,
      labelRef: n,
      valueRef: r,
      connection: g
    } of A.bindItems.children) {
      if (g || !a)
        continue;
      const o = Ri(this.root, t, a, !1, !1);
      if (!o) {
        k(`XFA - Invalid reference: ${a}.`);
        continue;
      }
      for (const I of o) {
        if (!I[Mi](this.datasets)) {
          k(`XFA - Invalid ref (${a}): must be a datasets child.`);
          continue;
        }
        const c = Ri(this.root, I, n, !0, !1);
        if (!c) {
          k(`XFA - Invalid label: ${n}.`);
          continue;
        }
        const [l] = c;
        if (!l[Mi](this.datasets)) {
          k("XFA - Invalid label: must be a datasets child.");
          continue;
        }
        const C = Ri(this.root, I, r, !0, !1);
        if (!C) {
          k(`XFA - Invalid value: ${r}.`);
          continue;
        }
        const [h] = C;
        if (!h[Mi](this.datasets)) {
          k("XFA - Invalid value: must be a datasets child.");
          continue;
        }
        const B = za(l[Se]()), Q = za(h[Se]());
        i[Qe](B), i.text.push(B), s[Qe](Q), s.text.push(Q);
      }
    }
  }
  _bindOccurrences(A, t, i) {
    let s;
    if (t.length > 1 && (s = A[Ot](), s[Pi](s.occur), s.occur = null), this._bindValue(A, t[0], i), this._setProperties(A, t[0]), this._bindItems(A, t[0]), t.length === 1)
      return;
    const a = A[GA](), n = A[VA], r = a[bg](A);
    for (let g = 1, o = t.length; g < o; g++) {
      const I = t[g], c = s[Ot]();
      a[n].push(c), a[Bn](r + g, c), this._bindValue(c, I, i), this._setProperties(c, I), this._bindItems(c, I);
    }
  }
  _createOccurrences(A) {
    if (!this.emptyMerge)
      return;
    const {
      occur: t
    } = A;
    if (!t || t.initial <= 1)
      return;
    const i = A[GA](), s = A[VA];
    if (!(i[s] instanceof b))
      return;
    let a;
    A.name ? a = i[s].children.filter((g) => g.name === A.name).length : a = i[s].children.length;
    const n = i[bg](A) + 1, r = t.initial - a;
    if (r) {
      const g = A[Ot]();
      g[Pi](g.occur), g.occur = null, i[s].push(g), i[Bn](n, g);
      for (let o = 1; o < r; o++) {
        const I = g[Ot]();
        i[s].push(I), i[Bn](n + o, I);
      }
    }
  }
  _getOccurInfo(A) {
    const {
      name: t,
      occur: i
    } = A;
    if (!i || !t)
      return [1, 1];
    const s = i.max === -1 ? 1 / 0 : i.max;
    return [i.min, s];
  }
  _setAndBind(A, t) {
    this._setProperties(A, t), this._bindItems(A, t), this._bindElement(A, t);
  }
  _bindElement(A, t) {
    const i = [];
    this._createOccurrences(A);
    for (const s of A[Le]()) {
      if (s[Lt])
        continue;
      if (this._mergeMode === void 0 && s[VA] === "subform") {
        this._mergeMode = s.mergeMode === "consumeData";
        const c = t[Le]();
        if (c.length > 0)
          this._bindOccurrences(s, [c[0]], null);
        else if (this.emptyMerge) {
          const l = t[pe] === OI ? -1 : t[pe], C = s[Lt] = new ri(l, s.name || "root");
          t[Qe](C), this._bindElement(s, C);
        }
        continue;
      }
      if (!s[x0]())
        continue;
      let a = !1, n = null, r = null, g = null;
      if (s.bind) {
        switch (s.bind.match) {
          case "none":
            this._setAndBind(s, t);
            continue;
          case "global":
            a = !0;
            break;
          case "dataRef":
            if (!s.bind.ref) {
              k(`XFA - ref is empty in node ${s[VA]}.`), this._setAndBind(s, t);
              continue;
            }
            r = s.bind.ref;
            break;
        }
        s.bind.picture && (n = s.bind.picture[W]);
      }
      const [o, I] = this._getOccurInfo(s);
      if (r)
        if (g = Ri(this.root, t, r, !0, !1), g === null) {
          if (g = v1(this.data, t, r), !g)
            continue;
          this._isConsumeData() && (g[ii] = !0), this._setAndBind(s, g);
          continue;
        } else
          this._isConsumeData() && (g = g.filter((c) => !c[ii])), g.length > I ? g = g.slice(0, I) : g.length === 0 && (g = null), g && this._isConsumeData() && g.forEach((c) => {
            c[ii] = !0;
          });
      else {
        if (!s.name) {
          this._setAndBind(s, t);
          continue;
        }
        if (this._isConsumeData()) {
          const c = [];
          for (; c.length < I; ) {
            const l = this._findDataByNameToConsume(s.name, s[sa](), t, a);
            if (!l)
              break;
            l[ii] = !0, c.push(l);
          }
          g = c.length > 0 ? c : null;
        } else {
          if (g = t[Ts](s.name, !1, this.emptyMerge).next().value, !g) {
            if (o === 0) {
              i.push(s);
              continue;
            }
            const c = t[pe] === OI ? -1 : t[pe];
            g = s[Lt] = new ri(c, s.name), this.emptyMerge && (g[ii] = !0), t[Qe](g), this._setAndBind(s, g);
            continue;
          }
          this.emptyMerge && (g[ii] = !0), g = [g];
        }
      }
      g ? this._bindOccurrences(s, g, n) : o > 0 ? this._setAndBind(s, t) : i.push(s);
    }
    i.forEach((s) => s[GA]()[Pi](s));
  }
}
class kf {
  constructor(A, t) {
    this.data = t, this.dataset = A.datasets || null;
  }
  serialize(A) {
    const t = [[-1, this.data[Le]()]];
    for (; t.length > 0; ) {
      const s = t.at(-1), [a, n] = s;
      if (a + 1 === n.length) {
        t.pop();
        continue;
      }
      const r = n[++s[0]], g = A.get(r[ee]);
      if (g)
        r[Qt](g);
      else {
        const I = r[cl]();
        for (const c of I.values()) {
          const l = A.get(c[ee]);
          if (l) {
            c[Qt](l);
            break;
          }
        }
      }
      const o = r[Le]();
      o.length > 0 && t.push([-1, o]);
    }
    const i = ['<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">'];
    if (this.dataset)
      for (const s of this.dataset[Le]())
        s[VA] !== "data" && s[Ps](i);
    return this.data[Ps](i), i.push("</xfa:datasets>"), i.join("");
  }
}
const j = be.config.id;
class Sf extends K {
  constructor(A) {
    super(j, "acrobat", !0), this.acrobat7 = null, this.autoSave = null, this.common = null, this.validate = null, this.validateApprovalSignatures = null, this.submitUrl = new b();
  }
}
class Ff extends K {
  constructor(A) {
    super(j, "acrobat7", !0), this.dynamicRender = null;
  }
}
class Rf extends te {
  constructor(A) {
    super(j, "ADBE_JSConsole", ["delegate", "Enable", "Disable"]);
  }
}
class Nf extends te {
  constructor(A) {
    super(j, "ADBE_JSDebugger", ["delegate", "Enable", "Disable"]);
  }
}
class Gf extends Fe {
  constructor(A) {
    super(j, "addSilentPrint");
  }
}
class Uf extends Fe {
  constructor(A) {
    super(j, "addViewerPreferences");
  }
}
class Mf extends fl {
  constructor(A) {
    super(j, "adjustData");
  }
}
class Lf extends _t {
  constructor(A) {
    super(j, "adobeExtensionLevel", 0, (t) => t >= 1 && t <= 8);
  }
}
class Hf extends K {
  constructor(A) {
    super(j, "agent", !0), this.name = A.name ? A.name.trim() : "", this.common = new b();
  }
}
class Jf extends fe {
  constructor(A) {
    super(j, "alwaysEmbed");
  }
}
class Yf extends qA {
  constructor(A) {
    super(j, "amd");
  }
}
class Kf extends K {
  constructor(A) {
    super(j, "area"), this.level = RA({
      data: A.level,
      defaultValue: 0,
      validate: (t) => t >= 1 && t <= 3
    }), this.name = O(A.name, ["", "barcode", "coreinit", "deviceDriver", "font", "general", "layout", "merge", "script", "signature", "sourceSet", "templateCache"]);
  }
}
class vf extends te {
  constructor(A) {
    super(j, "attributes", ["preserve", "delegate", "ignore"]);
  }
}
class Tf extends te {
  constructor(A) {
    super(j, "autoSave", ["disabled", "enabled"]);
  }
}
class qf extends qA {
  constructor(A) {
    super(j, "base");
  }
}
class Pf extends K {
  constructor(A) {
    super(j, "batchOutput"), this.format = O(A.format, ["none", "concat", "zip", "zipCompress"]);
  }
}
class Wf extends fe {
  constructor(A) {
    super(j, "behaviorOverride");
  }
  [ne]() {
    this[W] = new Map(this[W].trim().split(/\s+/).filter((A) => A.includes(":")).map((A) => A.split(":", 2)));
  }
}
class Of extends K {
  constructor(A) {
    super(j, "cache", !0), this.templateCache = null;
  }
}
class Zf extends Fe {
  constructor(A) {
    super(j, "change");
  }
}
class jf extends K {
  constructor(A) {
    super(j, "common", !0), this.data = null, this.locale = null, this.localeSet = null, this.messaging = null, this.suppressBanner = null, this.template = null, this.validationMessaging = null, this.versionControl = null, this.log = new b();
  }
}
class Xf extends K {
  constructor(A) {
    super(j, "compress"), this.scope = O(A.scope, ["imageOnly", "document"]);
  }
}
class Vf extends Fe {
  constructor(A) {
    super(j, "compressLogicalStructure");
  }
}
class _f extends fl {
  constructor(A) {
    super(j, "compressObjectStream");
  }
}
class zf extends K {
  constructor(A) {
    super(j, "compression", !0), this.compressLogicalStructure = null, this.compressObjectStream = null, this.level = null, this.type = null;
  }
}
class $f extends K {
  constructor(A) {
    super(j, "config", !0), this.acrobat = null, this.present = null, this.trace = null, this.agent = new b();
  }
}
class Au extends te {
  constructor(A) {
    super(j, "conformance", ["A", "B"]);
  }
}
class eu extends Fe {
  constructor(A) {
    super(j, "contentCopy");
  }
}
class tu extends _t {
  constructor(A) {
    super(j, "copies", 1, (t) => t >= 1);
  }
}
class iu extends qA {
  constructor(A) {
    super(j, "creator");
  }
}
class su extends _t {
  constructor(A) {
    super(j, "currentPage", 0, (t) => t >= 0);
  }
}
class au extends K {
  constructor(A) {
    super(j, "data", !0), this.adjustData = null, this.attributes = null, this.incrementalLoad = null, this.outputXSL = null, this.range = null, this.record = null, this.startNode = null, this.uri = null, this.window = null, this.xsl = null, this.excludeNS = new b(), this.transform = new b();
  }
}
class nu extends K {
  constructor(A) {
    super(j, "debug", !0), this.uri = null;
  }
}
class ru extends fe {
  constructor(A) {
    super(j, "defaultTypeface"), this.writingScript = O(A.writingScript, ["*", "Arabic", "Cyrillic", "EastEuropeanRoman", "Greek", "Hebrew", "Japanese", "Korean", "Roman", "SimplifiedChinese", "Thai", "TraditionalChinese", "Vietnamese"]);
  }
}
class gu extends te {
  constructor(A) {
    super(j, "destination", ["pdf", "pcl", "ps", "webClient", "zpl"]);
  }
}
class ou extends Fe {
  constructor(A) {
    super(j, "documentAssembly");
  }
}
class Iu extends K {
  constructor(A) {
    super(j, "driver", !0), this.name = A.name ? A.name.trim() : "", this.fontInfo = null, this.xdc = null;
  }
}
class cu extends te {
  constructor(A) {
    super(j, "duplexOption", ["simplex", "duplexFlipLongEdge", "duplexFlipShortEdge"]);
  }
}
class lu extends te {
  constructor(A) {
    super(j, "dynamicRender", ["forbidden", "required"]);
  }
}
class Cu extends Fe {
  constructor(A) {
    super(j, "embed");
  }
}
class hu extends Fe {
  constructor(A) {
    super(j, "encrypt");
  }
}
class Bu extends K {
  constructor(A) {
    super(j, "encryption", !0), this.encrypt = null, this.encryptionLevel = null, this.permissions = null;
  }
}
class Qu extends te {
  constructor(A) {
    super(j, "encryptionLevel", ["40bit", "128bit"]);
  }
}
class Eu extends qA {
  constructor(A) {
    super(j, "enforce");
  }
}
class fu extends K {
  constructor(A) {
    super(j, "equate"), this.force = RA({
      data: A.force,
      defaultValue: 1,
      validate: (t) => t === 0
    }), this.from = A.from || "", this.to = A.to || "";
  }
}
class uu extends K {
  constructor(A) {
    super(j, "equateRange"), this.from = A.from || "", this.to = A.to || "", this._unicodeRange = A.unicodeRange || "";
  }
  get unicodeRange() {
    const A = [], t = /U\+([0-9a-fA-F]+)/, i = this._unicodeRange;
    for (let s of i.split(",").map((a) => a.trim()).filter((a) => !!a))
      s = s.split("-", 2).map((a) => {
        const n = a.match(t);
        return n ? parseInt(n[1], 16) : 0;
      }), s.length === 1 && s.push(s[0]), A.push(s);
    return tA(this, "unicodeRange", A);
  }
}
class du extends fe {
  constructor(A) {
    super(j, "exclude");
  }
  [ne]() {
    this[W] = this[W].trim().split(/\s+/).filter((A) => A && ["calculate", "close", "enter", "exit", "initialize", "ready", "validate"].includes(A));
  }
}
class xu extends qA {
  constructor(A) {
    super(j, "excludeNS");
  }
}
class mu extends te {
  constructor(A) {
    super(j, "flipLabel", ["usePrinterSetting", "on", "off"]);
  }
}
class pu extends K {
  constructor(A) {
    super(j, "fontInfo", !0), this.embed = null, this.map = null, this.subsetBelow = null, this.alwaysEmbed = new b(), this.defaultTypeface = new b(), this.neverEmbed = new b();
  }
}
class yu extends Fe {
  constructor(A) {
    super(j, "formFieldFilling");
  }
}
class wu extends qA {
  constructor(A) {
    super(j, "groupParent");
  }
}
class bu extends te {
  constructor(A) {
    super(j, "ifEmpty", ["dataValue", "dataGroup", "ignore", "remove"]);
  }
}
class Du extends qA {
  constructor(A) {
    super(j, "includeXDPContent");
  }
}
class ku extends te {
  constructor(A) {
    super(j, "incrementalLoad", ["none", "forwardOnly"]);
  }
}
class Su extends Fe {
  constructor(A) {
    super(j, "incrementalMerge");
  }
}
class Fu extends Fe {
  constructor(A) {
    super(j, "interactive");
  }
}
class Ru extends te {
  constructor(A) {
    super(j, "jog", ["usePrinterSetting", "none", "pageSet"]);
  }
}
class Nu extends K {
  constructor(A) {
    super(j, "labelPrinter", !0), this.name = O(A.name, ["zpl", "dpl", "ipl", "tcpl"]), this.batchOutput = null, this.flipLabel = null, this.fontInfo = null, this.xdc = null;
  }
}
class Gu extends te {
  constructor(A) {
    super(j, "layout", ["paginate", "panel"]);
  }
}
class Uu extends _t {
  constructor(A) {
    super(j, "level", 0, (t) => t > 0);
  }
}
class Mu extends Fe {
  constructor(A) {
    super(j, "linearized");
  }
}
class Lu extends qA {
  constructor(A) {
    super(j, "locale");
  }
}
class Hu extends qA {
  constructor(A) {
    super(j, "localeSet");
  }
}
class Ju extends K {
  constructor(A) {
    super(j, "log", !0), this.mode = null, this.threshold = null, this.to = null, this.uri = null;
  }
}
class Yu extends K {
  constructor(A) {
    super(j, "map", !0), this.equate = new b(), this.equateRange = new b();
  }
}
class Ku extends K {
  constructor(A) {
    super(j, "mediumInfo", !0), this.map = null;
  }
}
class vu extends K {
  constructor(A) {
    super(j, "message", !0), this.msgId = null, this.severity = null;
  }
}
class Tu extends K {
  constructor(A) {
    super(j, "messaging", !0), this.message = new b();
  }
}
class qu extends te {
  constructor(A) {
    super(j, "mode", ["append", "overwrite"]);
  }
}
class Pu extends Fe {
  constructor(A) {
    super(j, "modifyAnnots");
  }
}
class Wu extends _t {
  constructor(A) {
    super(j, "msgId", 1, (t) => t >= 1);
  }
}
class Ou extends qA {
  constructor(A) {
    super(j, "nameAttr");
  }
}
class Zu extends fe {
  constructor(A) {
    super(j, "neverEmbed");
  }
}
class ju extends _t {
  constructor(A) {
    super(j, "numberOfCopies", null, (t) => t >= 2 && t <= 5);
  }
}
class Xu extends K {
  constructor(A) {
    super(j, "openAction", !0), this.destination = null;
  }
}
class Vu extends K {
  constructor(A) {
    super(j, "output", !0), this.to = null, this.type = null, this.uri = null;
  }
}
class _u extends qA {
  constructor(A) {
    super(j, "outputBin");
  }
}
class zu extends K {
  constructor(A) {
    super(j, "outputXSL", !0), this.uri = null;
  }
}
class $u extends te {
  constructor(A) {
    super(j, "overprint", ["none", "both", "draw", "field"]);
  }
}
class Ad extends qA {
  constructor(A) {
    super(j, "packets");
  }
  [ne]() {
    this[W] !== "*" && (this[W] = this[W].trim().split(/\s+/).filter((A) => ["config", "datasets", "template", "xfdf", "xslt"].includes(A)));
  }
}
class ed extends K {
  constructor(A) {
    super(j, "pageOffset"), this.x = RA({
      data: A.x,
      defaultValue: "useXDCSetting",
      validate: (t) => !0
    }), this.y = RA({
      data: A.y,
      defaultValue: "useXDCSetting",
      validate: (t) => !0
    });
  }
}
class td extends qA {
  constructor(A) {
    super(j, "pageRange");
  }
  [ne]() {
    const A = this[W].trim().split(/\s+/).map((i) => parseInt(i, 10)), t = [];
    for (let i = 0, s = A.length; i < s; i += 2)
      t.push(A.slice(i, i + 2));
    this[W] = t;
  }
}
class id extends te {
  constructor(A) {
    super(j, "pagination", ["simplex", "duplexShortEdge", "duplexLongEdge"]);
  }
}
class sd extends te {
  constructor(A) {
    super(j, "paginationOverride", ["none", "forceDuplex", "forceDuplexLongEdge", "forceDuplexShortEdge", "forceSimplex"]);
  }
}
class ad extends _t {
  constructor(A) {
    super(j, "part", 1, (t) => !1);
  }
}
class nd extends K {
  constructor(A) {
    super(j, "pcl", !0), this.name = A.name || "", this.batchOutput = null, this.fontInfo = null, this.jog = null, this.mediumInfo = null, this.outputBin = null, this.pageOffset = null, this.staple = null, this.xdc = null;
  }
}
class rd extends K {
  constructor(A) {
    super(j, "pdf", !0), this.name = A.name || "", this.adobeExtensionLevel = null, this.batchOutput = null, this.compression = null, this.creator = null, this.encryption = null, this.fontInfo = null, this.interactive = null, this.linearized = null, this.openAction = null, this.pdfa = null, this.producer = null, this.renderPolicy = null, this.scriptModel = null, this.silentPrint = null, this.submitFormat = null, this.tagged = null, this.version = null, this.viewerPreferences = null, this.xdc = null;
  }
}
class gd extends K {
  constructor(A) {
    super(j, "pdfa", !0), this.amd = null, this.conformance = null, this.includeXDPContent = null, this.part = null;
  }
}
class od extends K {
  constructor(A) {
    super(j, "permissions", !0), this.accessibleContent = null, this.change = null, this.contentCopy = null, this.documentAssembly = null, this.formFieldFilling = null, this.modifyAnnots = null, this.plaintextMetadata = null, this.print = null, this.printHighQuality = null;
  }
}
class Id extends Fe {
  constructor(A) {
    super(j, "pickTrayByPDFSize");
  }
}
class cd extends qA {
  constructor(A) {
    super(j, "picture");
  }
}
class ld extends Fe {
  constructor(A) {
    super(j, "plaintextMetadata");
  }
}
class Cd extends te {
  constructor(A) {
    super(j, "presence", ["preserve", "dissolve", "dissolveStructure", "ignore", "remove"]);
  }
}
class hd extends K {
  constructor(A) {
    super(j, "present", !0), this.behaviorOverride = null, this.cache = null, this.common = null, this.copies = null, this.destination = null, this.incrementalMerge = null, this.layout = null, this.output = null, this.overprint = null, this.pagination = null, this.paginationOverride = null, this.script = null, this.validate = null, this.xdp = null, this.driver = new b(), this.labelPrinter = new b(), this.pcl = new b(), this.pdf = new b(), this.ps = new b(), this.submitUrl = new b(), this.webClient = new b(), this.zpl = new b();
  }
}
class Bd extends Fe {
  constructor(A) {
    super(j, "print");
  }
}
class Qd extends Fe {
  constructor(A) {
    super(j, "printHighQuality");
  }
}
class Ed extends te {
  constructor(A) {
    super(j, "printScaling", ["appdefault", "noScaling"]);
  }
}
class fd extends qA {
  constructor(A) {
    super(j, "printerName");
  }
}
class ud extends qA {
  constructor(A) {
    super(j, "producer");
  }
}
class dd extends K {
  constructor(A) {
    super(j, "ps", !0), this.name = A.name || "", this.batchOutput = null, this.fontInfo = null, this.jog = null, this.mediumInfo = null, this.outputBin = null, this.staple = null, this.xdc = null;
  }
}
class xd extends fe {
  constructor(A) {
    super(j, "range");
  }
  [ne]() {
    this[W] = this[W].trim().split(/\s*,\s*/, 2).map((A) => A.split("-").map((t) => parseInt(t.trim(), 10))).filter((A) => A.every((t) => !isNaN(t))).map((A) => (A.length === 1 && A.push(A[0]), A));
  }
}
class md extends fe {
  constructor(A) {
    super(j, "record");
  }
  [ne]() {
    this[W] = this[W].trim();
    const A = parseInt(this[W], 10);
    !isNaN(A) && A >= 0 && (this[W] = A);
  }
}
class pd extends fe {
  constructor(A) {
    super(j, "relevant");
  }
  [ne]() {
    this[W] = this[W].trim().split(/\s+/);
  }
}
class yd extends fe {
  constructor(A) {
    super(j, "rename");
  }
  [ne]() {
    this[W] = this[W].trim(), (this[W].toLowerCase().startsWith("xml") || new RegExp("[\\p{L}_][\\p{L}\\d._\\p{M}-]*", "u").test(this[W])) && k("XFA - Rename: invalid XFA name");
  }
}
class wd extends te {
  constructor(A) {
    super(j, "renderPolicy", ["server", "client"]);
  }
}
class bd extends te {
  constructor(A) {
    super(j, "runScripts", ["both", "client", "none", "server"]);
  }
}
class Dd extends K {
  constructor(A) {
    super(j, "script", !0), this.currentPage = null, this.exclude = null, this.runScripts = null;
  }
}
class kd extends te {
  constructor(A) {
    super(j, "scriptModel", ["XFA", "none"]);
  }
}
class Sd extends te {
  constructor(A) {
    super(j, "severity", ["ignore", "error", "information", "trace", "warning"]);
  }
}
class Fd extends K {
  constructor(A) {
    super(j, "silentPrint", !0), this.addSilentPrint = null, this.printerName = null;
  }
}
class Rd extends K {
  constructor(A) {
    super(j, "staple"), this.mode = O(A.mode, ["usePrinterSetting", "on", "off"]);
  }
}
class Nd extends qA {
  constructor(A) {
    super(j, "startNode");
  }
}
class Gd extends _t {
  constructor(A) {
    super(j, "startPage", 0, (t) => !0);
  }
}
class Ud extends te {
  constructor(A) {
    super(j, "submitFormat", ["html", "delegate", "fdf", "xml", "pdf"]);
  }
}
class Md extends qA {
  constructor(A) {
    super(j, "submitUrl");
  }
}
class Ld extends _t {
  constructor(A) {
    super(j, "subsetBelow", 100, (t) => t >= 0 && t <= 100);
  }
}
class Hd extends Fe {
  constructor(A) {
    super(j, "suppressBanner");
  }
}
class Jd extends Fe {
  constructor(A) {
    super(j, "tagged");
  }
}
class Yd extends K {
  constructor(A) {
    super(j, "template", !0), this.base = null, this.relevant = null, this.startPage = null, this.uri = null, this.xsl = null;
  }
}
class Kd extends te {
  constructor(A) {
    super(j, "threshold", ["trace", "error", "information", "warning"]);
  }
}
class vd extends te {
  constructor(A) {
    super(j, "to", ["null", "memory", "stderr", "stdout", "system", "uri"]);
  }
}
class Td extends K {
  constructor(A) {
    super(j, "templateCache"), this.maxEntries = RA({
      data: A.maxEntries,
      defaultValue: 5,
      validate: (t) => t >= 0
    });
  }
}
class qd extends K {
  constructor(A) {
    super(j, "trace", !0), this.area = new b();
  }
}
class Pd extends K {
  constructor(A) {
    super(j, "transform", !0), this.groupParent = null, this.ifEmpty = null, this.nameAttr = null, this.picture = null, this.presence = null, this.rename = null, this.whitespace = null;
  }
}
class Wd extends te {
  constructor(A) {
    super(j, "type", ["none", "ascii85", "asciiHex", "ccittfax", "flate", "lzw", "runLength", "native", "xdp", "mergedXDP"]);
  }
}
class Od extends qA {
  constructor(A) {
    super(j, "uri");
  }
}
class Zd extends te {
  constructor(A) {
    super(j, "validate", ["preSubmit", "prePrint", "preExecute", "preSave"]);
  }
}
class jd extends fe {
  constructor(A) {
    super(j, "validateApprovalSignatures");
  }
  [ne]() {
    this[W] = this[W].trim().split(/\s+/).filter((A) => ["docReady", "postSign"].includes(A));
  }
}
class Xd extends te {
  constructor(A) {
    super(j, "validationMessaging", ["allMessagesIndividually", "allMessagesTogether", "firstMessageOnly", "noMessages"]);
  }
}
class Vd extends te {
  constructor(A) {
    super(j, "version", ["1.7", "1.6", "1.5", "1.4", "1.3", "1.2"]);
  }
}
class _d extends K {
  constructor(A) {
    super(j, "VersionControl"), this.outputBelow = O(A.outputBelow, ["warn", "error", "update"]), this.sourceAbove = O(A.sourceAbove, ["warn", "error"]), this.sourceBelow = O(A.sourceBelow, ["update", "maintain"]);
  }
}
class zd extends K {
  constructor(A) {
    super(j, "viewerPreferences", !0), this.ADBE_JSConsole = null, this.ADBE_JSDebugger = null, this.addViewerPreferences = null, this.duplexOption = null, this.enforce = null, this.numberOfCopies = null, this.pageRange = null, this.pickTrayByPDFSize = null, this.printScaling = null;
  }
}
class $d extends K {
  constructor(A) {
    super(j, "webClient", !0), this.name = A.name ? A.name.trim() : "", this.fontInfo = null, this.xdc = null;
  }
}
class A2 extends te {
  constructor(A) {
    super(j, "whitespace", ["preserve", "ltrim", "normalize", "rtrim", "trim"]);
  }
}
class e2 extends fe {
  constructor(A) {
    super(j, "window");
  }
  [ne]() {
    const A = this[W].trim().split(/\s*,\s*/, 2).map((t) => parseInt(t, 10));
    if (A.some((t) => isNaN(t))) {
      this[W] = [0, 0];
      return;
    }
    A.length === 1 && A.push(A[0]), this[W] = A;
  }
}
class t2 extends K {
  constructor(A) {
    super(j, "xdc", !0), this.uri = new b(), this.xsl = new b();
  }
}
class i2 extends K {
  constructor(A) {
    super(j, "xdp", !0), this.packets = null;
  }
}
class s2 extends K {
  constructor(A) {
    super(j, "xsl", !0), this.debug = null, this.uri = null;
  }
}
class a2 extends K {
  constructor(A) {
    super(j, "zpl", !0), this.name = A.name ? A.name.trim() : "", this.batchOutput = null, this.flipLabel = null, this.fontInfo = null, this.xdc = null;
  }
}
class Mn {
  static [Xt](A, t) {
    if (Mn.hasOwnProperty(A))
      return Mn[A](t);
  }
  static acrobat(A) {
    return new Sf(A);
  }
  static acrobat7(A) {
    return new Ff(A);
  }
  static ADBE_JSConsole(A) {
    return new Rf(A);
  }
  static ADBE_JSDebugger(A) {
    return new Nf(A);
  }
  static addSilentPrint(A) {
    return new Gf(A);
  }
  static addViewerPreferences(A) {
    return new Uf(A);
  }
  static adjustData(A) {
    return new Mf(A);
  }
  static adobeExtensionLevel(A) {
    return new Lf(A);
  }
  static agent(A) {
    return new Hf(A);
  }
  static alwaysEmbed(A) {
    return new Jf(A);
  }
  static amd(A) {
    return new Yf(A);
  }
  static area(A) {
    return new Kf(A);
  }
  static attributes(A) {
    return new vf(A);
  }
  static autoSave(A) {
    return new Tf(A);
  }
  static base(A) {
    return new qf(A);
  }
  static batchOutput(A) {
    return new Pf(A);
  }
  static behaviorOverride(A) {
    return new Wf(A);
  }
  static cache(A) {
    return new Of(A);
  }
  static change(A) {
    return new Zf(A);
  }
  static common(A) {
    return new jf(A);
  }
  static compress(A) {
    return new Xf(A);
  }
  static compressLogicalStructure(A) {
    return new Vf(A);
  }
  static compressObjectStream(A) {
    return new _f(A);
  }
  static compression(A) {
    return new zf(A);
  }
  static config(A) {
    return new $f(A);
  }
  static conformance(A) {
    return new Au(A);
  }
  static contentCopy(A) {
    return new eu(A);
  }
  static copies(A) {
    return new tu(A);
  }
  static creator(A) {
    return new iu(A);
  }
  static currentPage(A) {
    return new su(A);
  }
  static data(A) {
    return new au(A);
  }
  static debug(A) {
    return new nu(A);
  }
  static defaultTypeface(A) {
    return new ru(A);
  }
  static destination(A) {
    return new gu(A);
  }
  static documentAssembly(A) {
    return new ou(A);
  }
  static driver(A) {
    return new Iu(A);
  }
  static duplexOption(A) {
    return new cu(A);
  }
  static dynamicRender(A) {
    return new lu(A);
  }
  static embed(A) {
    return new Cu(A);
  }
  static encrypt(A) {
    return new hu(A);
  }
  static encryption(A) {
    return new Bu(A);
  }
  static encryptionLevel(A) {
    return new Qu(A);
  }
  static enforce(A) {
    return new Eu(A);
  }
  static equate(A) {
    return new fu(A);
  }
  static equateRange(A) {
    return new uu(A);
  }
  static exclude(A) {
    return new du(A);
  }
  static excludeNS(A) {
    return new xu(A);
  }
  static flipLabel(A) {
    return new mu(A);
  }
  static fontInfo(A) {
    return new pu(A);
  }
  static formFieldFilling(A) {
    return new yu(A);
  }
  static groupParent(A) {
    return new wu(A);
  }
  static ifEmpty(A) {
    return new bu(A);
  }
  static includeXDPContent(A) {
    return new Du(A);
  }
  static incrementalLoad(A) {
    return new ku(A);
  }
  static incrementalMerge(A) {
    return new Su(A);
  }
  static interactive(A) {
    return new Fu(A);
  }
  static jog(A) {
    return new Ru(A);
  }
  static labelPrinter(A) {
    return new Nu(A);
  }
  static layout(A) {
    return new Gu(A);
  }
  static level(A) {
    return new Uu(A);
  }
  static linearized(A) {
    return new Mu(A);
  }
  static locale(A) {
    return new Lu(A);
  }
  static localeSet(A) {
    return new Hu(A);
  }
  static log(A) {
    return new Ju(A);
  }
  static map(A) {
    return new Yu(A);
  }
  static mediumInfo(A) {
    return new Ku(A);
  }
  static message(A) {
    return new vu(A);
  }
  static messaging(A) {
    return new Tu(A);
  }
  static mode(A) {
    return new qu(A);
  }
  static modifyAnnots(A) {
    return new Pu(A);
  }
  static msgId(A) {
    return new Wu(A);
  }
  static nameAttr(A) {
    return new Ou(A);
  }
  static neverEmbed(A) {
    return new Zu(A);
  }
  static numberOfCopies(A) {
    return new ju(A);
  }
  static openAction(A) {
    return new Xu(A);
  }
  static output(A) {
    return new Vu(A);
  }
  static outputBin(A) {
    return new _u(A);
  }
  static outputXSL(A) {
    return new zu(A);
  }
  static overprint(A) {
    return new $u(A);
  }
  static packets(A) {
    return new Ad(A);
  }
  static pageOffset(A) {
    return new ed(A);
  }
  static pageRange(A) {
    return new td(A);
  }
  static pagination(A) {
    return new id(A);
  }
  static paginationOverride(A) {
    return new sd(A);
  }
  static part(A) {
    return new ad(A);
  }
  static pcl(A) {
    return new nd(A);
  }
  static pdf(A) {
    return new rd(A);
  }
  static pdfa(A) {
    return new gd(A);
  }
  static permissions(A) {
    return new od(A);
  }
  static pickTrayByPDFSize(A) {
    return new Id(A);
  }
  static picture(A) {
    return new cd(A);
  }
  static plaintextMetadata(A) {
    return new ld(A);
  }
  static presence(A) {
    return new Cd(A);
  }
  static present(A) {
    return new hd(A);
  }
  static print(A) {
    return new Bd(A);
  }
  static printHighQuality(A) {
    return new Qd(A);
  }
  static printScaling(A) {
    return new Ed(A);
  }
  static printerName(A) {
    return new fd(A);
  }
  static producer(A) {
    return new ud(A);
  }
  static ps(A) {
    return new dd(A);
  }
  static range(A) {
    return new xd(A);
  }
  static record(A) {
    return new md(A);
  }
  static relevant(A) {
    return new pd(A);
  }
  static rename(A) {
    return new yd(A);
  }
  static renderPolicy(A) {
    return new wd(A);
  }
  static runScripts(A) {
    return new bd(A);
  }
  static script(A) {
    return new Dd(A);
  }
  static scriptModel(A) {
    return new kd(A);
  }
  static severity(A) {
    return new Sd(A);
  }
  static silentPrint(A) {
    return new Fd(A);
  }
  static staple(A) {
    return new Rd(A);
  }
  static startNode(A) {
    return new Nd(A);
  }
  static startPage(A) {
    return new Gd(A);
  }
  static submitFormat(A) {
    return new Ud(A);
  }
  static submitUrl(A) {
    return new Md(A);
  }
  static subsetBelow(A) {
    return new Ld(A);
  }
  static suppressBanner(A) {
    return new Hd(A);
  }
  static tagged(A) {
    return new Jd(A);
  }
  static template(A) {
    return new Yd(A);
  }
  static templateCache(A) {
    return new Td(A);
  }
  static threshold(A) {
    return new Kd(A);
  }
  static to(A) {
    return new vd(A);
  }
  static trace(A) {
    return new qd(A);
  }
  static transform(A) {
    return new Pd(A);
  }
  static type(A) {
    return new Wd(A);
  }
  static uri(A) {
    return new Od(A);
  }
  static validate(A) {
    return new Zd(A);
  }
  static validateApprovalSignatures(A) {
    return new jd(A);
  }
  static validationMessaging(A) {
    return new Xd(A);
  }
  static version(A) {
    return new Vd(A);
  }
  static versionControl(A) {
    return new _d(A);
  }
  static viewerPreferences(A) {
    return new zd(A);
  }
  static webClient(A) {
    return new $d(A);
  }
  static whitespace(A) {
    return new A2(A);
  }
  static window(A) {
    return new e2(A);
  }
  static xdc(A) {
    return new t2(A);
  }
  static xdp(A) {
    return new i2(A);
  }
  static xsl(A) {
    return new s2(A);
  }
  static zpl(A) {
    return new a2(A);
  }
}
const Kt = be.connectionSet.id;
class n2 extends K {
  constructor(A) {
    super(Kt, "connectionSet", !0), this.wsdlConnection = new b(), this.xmlConnection = new b(), this.xsdConnection = new b();
  }
}
class r2 extends K {
  constructor(A) {
    super(Kt, "effectiveInputPolicy"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class g2 extends K {
  constructor(A) {
    super(Kt, "effectiveOutputPolicy"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class o2 extends qA {
  constructor(A) {
    super(Kt, "operation"), this.id = A.id || "", this.input = A.input || "", this.name = A.name || "", this.output = A.output || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class I2 extends qA {
  constructor(A) {
    super(Kt, "rootElement"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class c2 extends qA {
  constructor(A) {
    super(Kt, "soapAction"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class l2 extends qA {
  constructor(A) {
    super(Kt, "soapAddress"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class C2 extends qA {
  constructor(A) {
    super(Kt, "uri"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class h2 extends qA {
  constructor(A) {
    super(Kt, "wsdlAddress"), this.id = A.id || "", this.name = A.name || "", this.use = A.use || "", this.usehref = A.usehref || "";
  }
}
class B2 extends K {
  constructor(A) {
    super(Kt, "wsdlConnection", !0), this.dataDescription = A.dataDescription || "", this.name = A.name || "", this.effectiveInputPolicy = null, this.effectiveOutputPolicy = null, this.operation = null, this.soapAction = null, this.soapAddress = null, this.wsdlAddress = null;
  }
}
class Q2 extends K {
  constructor(A) {
    super(Kt, "xmlConnection", !0), this.dataDescription = A.dataDescription || "", this.name = A.name || "", this.uri = null;
  }
}
class E2 extends K {
  constructor(A) {
    super(Kt, "xsdConnection", !0), this.dataDescription = A.dataDescription || "", this.name = A.name || "", this.rootElement = null, this.uri = null;
  }
}
class Ln {
  static [Xt](A, t) {
    if (Ln.hasOwnProperty(A))
      return Ln[A](t);
  }
  static connectionSet(A) {
    return new n2(A);
  }
  static effectiveInputPolicy(A) {
    return new r2(A);
  }
  static effectiveOutputPolicy(A) {
    return new g2(A);
  }
  static operation(A) {
    return new o2(A);
  }
  static rootElement(A) {
    return new I2(A);
  }
  static soapAction(A) {
    return new c2(A);
  }
  static soapAddress(A) {
    return new l2(A);
  }
  static uri(A) {
    return new C2(A);
  }
  static wsdlAddress(A) {
    return new h2(A);
  }
  static wsdlConnection(A) {
    return new B2(A);
  }
  static xmlConnection(A) {
    return new Q2(A);
  }
  static xsdConnection(A) {
    return new E2(A);
  }
}
const Gg = be.datasets.id;
class f2 extends ri {
  constructor(A) {
    super(Gg, "data", A);
  }
  [qs]() {
    return !0;
  }
}
class u2 extends K {
  constructor(A) {
    super(Gg, "datasets", !0), this.data = null, this.Signature = null;
  }
  [ni](A) {
    const t = A[VA];
    (t === "data" && A[pe] === Gg || t === "Signature" && A[pe] === be.signature.id) && (this[t] = A), this[Qe](A);
  }
}
class Hn {
  static [Xt](A, t) {
    if (Hn.hasOwnProperty(A))
      return Hn[A](t);
  }
  static datasets(A) {
    return new u2(A);
  }
  static data(A) {
    return new f2(A);
  }
}
const ue = be.localeSet.id;
class d2 extends K {
  constructor(A) {
    super(ue, "calendarSymbols", !0), this.name = "gregorian", this.dayNames = new b(2), this.eraNames = null, this.meridiemNames = null, this.monthNames = new b(2);
  }
}
class x2 extends qA {
  constructor(A) {
    super(ue, "currencySymbol"), this.name = O(A.name, ["symbol", "isoname", "decimal"]);
  }
}
class m2 extends K {
  constructor(A) {
    super(ue, "currencySymbols", !0), this.currencySymbol = new b(3);
  }
}
class p2 extends qA {
  constructor(A) {
    super(ue, "datePattern"), this.name = O(A.name, ["full", "long", "med", "short"]);
  }
}
class y2 extends K {
  constructor(A) {
    super(ue, "datePatterns", !0), this.datePattern = new b(4);
  }
}
class w2 extends fe {
  constructor(A) {
    super(ue, "dateTimeSymbols");
  }
}
class b2 extends qA {
  constructor(A) {
    super(ue, "day");
  }
}
class D2 extends K {
  constructor(A) {
    super(ue, "dayNames", !0), this.abbr = RA({
      data: A.abbr,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.day = new b(7);
  }
}
class k2 extends qA {
  constructor(A) {
    super(ue, "era");
  }
}
class S2 extends K {
  constructor(A) {
    super(ue, "eraNames", !0), this.era = new b(2);
  }
}
class F2 extends K {
  constructor(A) {
    super(ue, "locale", !0), this.desc = A.desc || "", this.name = "isoname", this.calendarSymbols = null, this.currencySymbols = null, this.datePatterns = null, this.dateTimeSymbols = null, this.numberPatterns = null, this.numberSymbols = null, this.timePatterns = null, this.typeFaces = null;
  }
}
class R2 extends K {
  constructor(A) {
    super(ue, "localeSet", !0), this.locale = new b();
  }
}
class N2 extends qA {
  constructor(A) {
    super(ue, "meridiem");
  }
}
class G2 extends K {
  constructor(A) {
    super(ue, "meridiemNames", !0), this.meridiem = new b(2);
  }
}
class U2 extends qA {
  constructor(A) {
    super(ue, "month");
  }
}
class M2 extends K {
  constructor(A) {
    super(ue, "monthNames", !0), this.abbr = RA({
      data: A.abbr,
      defaultValue: 0,
      validate: (t) => t === 1
    }), this.month = new b(12);
  }
}
class L2 extends qA {
  constructor(A) {
    super(ue, "numberPattern"), this.name = O(A.name, ["full", "long", "med", "short"]);
  }
}
class H2 extends K {
  constructor(A) {
    super(ue, "numberPatterns", !0), this.numberPattern = new b(4);
  }
}
class J2 extends qA {
  constructor(A) {
    super(ue, "numberSymbol"), this.name = O(A.name, ["decimal", "grouping", "percent", "minus", "zero"]);
  }
}
class Y2 extends K {
  constructor(A) {
    super(ue, "numberSymbols", !0), this.numberSymbol = new b(5);
  }
}
class K2 extends qA {
  constructor(A) {
    super(ue, "timePattern"), this.name = O(A.name, ["full", "long", "med", "short"]);
  }
}
class v2 extends K {
  constructor(A) {
    super(ue, "timePatterns", !0), this.timePattern = new b(4);
  }
}
class T2 extends K {
  constructor(A) {
    super(ue, "typeFace", !0), this.name = A.name | "";
  }
}
class q2 extends K {
  constructor(A) {
    super(ue, "typeFaces", !0), this.typeFace = new b();
  }
}
class Jn {
  static [Xt](A, t) {
    if (Jn.hasOwnProperty(A))
      return Jn[A](t);
  }
  static calendarSymbols(A) {
    return new d2(A);
  }
  static currencySymbol(A) {
    return new x2(A);
  }
  static currencySymbols(A) {
    return new m2(A);
  }
  static datePattern(A) {
    return new p2(A);
  }
  static datePatterns(A) {
    return new y2(A);
  }
  static dateTimeSymbols(A) {
    return new w2(A);
  }
  static day(A) {
    return new b2(A);
  }
  static dayNames(A) {
    return new D2(A);
  }
  static era(A) {
    return new k2(A);
  }
  static eraNames(A) {
    return new S2(A);
  }
  static locale(A) {
    return new F2(A);
  }
  static localeSet(A) {
    return new R2(A);
  }
  static meridiem(A) {
    return new N2(A);
  }
  static meridiemNames(A) {
    return new G2(A);
  }
  static month(A) {
    return new U2(A);
  }
  static monthNames(A) {
    return new M2(A);
  }
  static numberPattern(A) {
    return new L2(A);
  }
  static numberPatterns(A) {
    return new H2(A);
  }
  static numberSymbol(A) {
    return new J2(A);
  }
  static numberSymbols(A) {
    return new Y2(A);
  }
  static timePattern(A) {
    return new K2(A);
  }
  static timePatterns(A) {
    return new v2(A);
  }
  static typeFace(A) {
    return new T2(A);
  }
  static typeFaces(A) {
    return new q2(A);
  }
}
const P2 = be.signature.id;
class W2 extends K {
  constructor(A) {
    super(P2, "signature", !0);
  }
}
class Yn {
  static [Xt](A, t) {
    if (Yn.hasOwnProperty(A))
      return Yn[A](t);
  }
  static signature(A) {
    return new W2(A);
  }
}
const O2 = be.stylesheet.id;
class Z2 extends K {
  constructor(A) {
    super(O2, "stylesheet", !0);
  }
}
class Kn {
  static [Xt](A, t) {
    if (Kn.hasOwnProperty(A))
      return Kn[A](t);
  }
  static stylesheet(A) {
    return new Z2(A);
  }
}
const j2 = be.xdp.id;
class X2 extends K {
  constructor(A) {
    super(j2, "xdp", !0), this.uuid = A.uuid || "", this.timeStamp = A.timeStamp || "", this.config = null, this.connectionSet = null, this.datasets = null, this.localeSet = null, this.stylesheet = new b(), this.template = null;
  }
  [Dg](A) {
    const t = be[A[VA]];
    return t && A[pe] === t.id;
  }
}
class vn {
  static [Xt](A, t) {
    if (vn.hasOwnProperty(A))
      return vn[A](t);
  }
  static xdp(A) {
    return new X2(A);
  }
}
const V2 = be.xhtml.id, $a = Symbol(), _2 = /* @__PURE__ */ new Set(["color", "font", "font-family", "font-size", "font-stretch", "font-style", "font-weight", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "letter-spacing", "line-height", "orphans", "page-break-after", "page-break-before", "page-break-inside", "tab-interval", "tab-stop", "text-align", "text-decoration", "text-indent", "vertical-align", "widows", "kerning-mode", "xfa-font-horizontal-scale", "xfa-font-vertical-scale", "xfa-spacerun", "xfa-tab-stops"]), z2 = /* @__PURE__ */ new Map([["page-break-after", "breakAfter"], ["page-break-before", "breakBefore"], ["page-break-inside", "breakInside"], ["kerning-mode", (e) => e === "none" ? "none" : "normal"], ["xfa-font-horizontal-scale", (e) => `scaleX(${Math.max(0, Math.min(parseInt(e) / 100)).toFixed(2)})`], ["xfa-font-vertical-scale", (e) => `scaleY(${Math.max(0, Math.min(parseInt(e) / 100)).toFixed(2)})`], ["xfa-spacerun", ""], ["xfa-tab-stops", ""], ["font-size", (e, A) => (e = A.fontSize = CA(e), FA(0.99 * e))], ["letter-spacing", (e) => FA(CA(e))], ["line-height", (e) => FA(CA(e))], ["margin", (e) => FA(CA(e))], ["margin-bottom", (e) => FA(CA(e))], ["margin-left", (e) => FA(CA(e))], ["margin-right", (e) => FA(CA(e))], ["margin-top", (e) => FA(CA(e))], ["text-indent", (e) => FA(CA(e))], ["font-family", (e) => e], ["vertical-align", (e) => FA(CA(e))]]), $2 = /\s+/g, A9 = /[\r\n]+/g, e9 = /\r\n?/g;
function t9(e, A, t) {
  const i = /* @__PURE__ */ Object.create(null);
  if (!e)
    return i;
  const s = /* @__PURE__ */ Object.create(null);
  for (const [a, n] of e.split(";").map((r) => r.split(":", 2))) {
    const r = z2.get(a);
    if (r === "")
      continue;
    let g = n;
    r && (g = typeof r == "string" ? r : r(n, s)), a.endsWith("scale") ? i.transform = i.transform ? `${i[a]} ${g}` : g : i[a.replaceAll(/-([a-zA-Z])/g, (o, I) => I.toUpperCase())] = g;
  }
  if (i.fontFamily && wl({
    typeface: i.fontFamily,
    weight: i.fontWeight || "normal",
    posture: i.fontStyle || "normal",
    size: s.fontSize || 0
  }, A, A[ae].fontFinder, i), t && i.verticalAlign && i.verticalAlign !== "0px" && i.fontSize) {
    const r = CA(i.fontSize);
    i.fontSize = FA(r * 0.583), i.verticalAlign = FA(Math.sign(CA(i.verticalAlign)) * r * 0.333);
  }
  return t && i.fontSize && (i.fontSize = `calc(${i.fontSize} * var(--scale-factor))`), ml(i), i;
}
function i9(e) {
  return e.style ? e.style.trim().split(/\s*;\s*/).filter((A) => !!A).map((A) => A.split(/\s*:\s*/, 2)).filter(([A, t]) => (A === "font-family" && e[ae].usedTypefaces.add(t), _2.has(A))).map((A) => A.join(":")).join(";") : "";
}
const s9 = /* @__PURE__ */ new Set(["body", "html"]);
class yt extends ri {
  constructor(A, t) {
    super(V2, t), this[$a] = !1, this.style = A.style || "";
  }
  [Jt](A) {
    super[Jt](A), this.style = i9(this);
  }
  [nr]() {
    return !s9.has(this[VA]);
  }
  [di](A, t = !1) {
    t ? this[$a] = !0 : (A = A.replaceAll(A9, ""), this.style.includes("xfa-spacerun:yes") || (A = A.replaceAll($2, " "))), A && (this[W] += A);
  }
  [gi](A, t = !0) {
    const i = /* @__PURE__ */ Object.create(null), s = {
      top: NaN,
      bottom: NaN,
      left: NaN,
      right: NaN
    };
    let a = null;
    for (const [n, r] of this.style.split(";").map((g) => g.split(":", 2)))
      switch (n) {
        case "font-family":
          i.typeface = gr(r);
          break;
        case "font-size":
          i.size = CA(r);
          break;
        case "font-weight":
          i.weight = r;
          break;
        case "font-style":
          i.posture = r;
          break;
        case "letter-spacing":
          i.letterSpacing = CA(r);
          break;
        case "margin":
          const g = r.split(/ \t/).map((o) => CA(o));
          switch (g.length) {
            case 1:
              s.top = s.bottom = s.left = s.right = g[0];
              break;
            case 2:
              s.top = s.bottom = g[0], s.left = s.right = g[1];
              break;
            case 3:
              s.top = g[0], s.bottom = g[2], s.left = s.right = g[1];
              break;
            case 4:
              s.top = g[0], s.left = g[1], s.bottom = g[2], s.right = g[3];
              break;
          }
          break;
        case "margin-top":
          s.top = CA(r);
          break;
        case "margin-bottom":
          s.bottom = CA(r);
          break;
        case "margin-left":
          s.left = CA(r);
          break;
        case "margin-right":
          s.right = CA(r);
          break;
        case "line-height":
          a = CA(r);
          break;
      }
    if (A.pushData(i, s, a), this[W])
      A.addString(this[W]);
    else
      for (const n of this[Le]()) {
        if (n[VA] === "#text") {
          A.addString(n[W]);
          continue;
        }
        n[gi](A);
      }
    t && A.popFont();
  }
  [SA](A) {
    const t = [];
    if (this[Y] = {
      children: t
    }, this[Oi]({}), t.length === 0 && !this[W])
      return fA.EMPTY;
    let i;
    return this[$a] ? i = this[W] ? this[W].replaceAll(e9, `
`) : void 0 : i = this[W] || void 0, fA.success({
      name: this[VA],
      attributes: {
        href: this.href,
        style: t9(this.style, this, this[$a])
      },
      children: t,
      value: i
    });
  }
}
class a9 extends yt {
  constructor(A) {
    super(A, "a"), this.href = bl(A.href) || "";
  }
}
class n9 extends yt {
  constructor(A) {
    super(A, "b");
  }
  [gi](A) {
    A.pushFont({
      weight: "bold"
    }), super[gi](A), A.popFont();
  }
}
class r9 extends yt {
  constructor(A) {
    super(A, "body");
  }
  [SA](A) {
    const t = super[SA](A), {
      html: i
    } = t;
    return i ? (i.name = "div", i.attributes.class = ["xfaRich"], t) : fA.EMPTY;
  }
}
class g9 extends yt {
  constructor(A) {
    super(A, "br");
  }
  [Se]() {
    return `
`;
  }
  [gi](A) {
    A.addString(`
`);
  }
  [SA](A) {
    return fA.success({
      name: "br"
    });
  }
}
class o9 extends yt {
  constructor(A) {
    super(A, "html");
  }
  [SA](A) {
    var i;
    const t = [];
    if (this[Y] = {
      children: t
    }, this[Oi]({}), t.length === 0)
      return fA.success({
        name: "div",
        attributes: {
          class: ["xfaRich"],
          style: {}
        },
        value: this[W] || ""
      });
    if (t.length === 1) {
      const s = t[0];
      if ((i = s.attributes) != null && i.class.includes("xfaRich"))
        return fA.success(s);
    }
    return fA.success({
      name: "div",
      attributes: {
        class: ["xfaRich"],
        style: {}
      },
      children: t
    });
  }
}
class I9 extends yt {
  constructor(A) {
    super(A, "i");
  }
  [gi](A) {
    A.pushFont({
      posture: "italic"
    }), super[gi](A), A.popFont();
  }
}
class c9 extends yt {
  constructor(A) {
    super(A, "li");
  }
}
class l9 extends yt {
  constructor(A) {
    super(A, "ol");
  }
}
class C9 extends yt {
  constructor(A) {
    super(A, "p");
  }
  [gi](A) {
    super[gi](A, !1), A.addString(`
`), A.addPara(), A.popFont();
  }
  [Se]() {
    return this[GA]()[Le]().at(-1) === this ? super[Se]() : super[Se]() + `
`;
  }
}
class h9 extends yt {
  constructor(A) {
    super(A, "span");
  }
}
class B9 extends yt {
  constructor(A) {
    super(A, "sub");
  }
}
class Q9 extends yt {
  constructor(A) {
    super(A, "sup");
  }
}
class E9 extends yt {
  constructor(A) {
    super(A, "ul");
  }
}
class Is {
  static [Xt](A, t) {
    if (Is.hasOwnProperty(A))
      return Is[A](t);
  }
  static a(A) {
    return new a9(A);
  }
  static b(A) {
    return new n9(A);
  }
  static body(A) {
    return new r9(A);
  }
  static br(A) {
    return new g9(A);
  }
  static html(A) {
    return new o9(A);
  }
  static i(A) {
    return new I9(A);
  }
  static li(A) {
    return new c9(A);
  }
  static ol(A) {
    return new l9(A);
  }
  static p(A) {
    return new C9(A);
  }
  static span(A) {
    return new h9(A);
  }
  static sub(A) {
    return new B9(A);
  }
  static sup(A) {
    return new Q9(A);
  }
  static ul(A) {
    return new E9(A);
  }
}
const ZI = {
  config: Mn,
  connection: Ln,
  datasets: Hn,
  localeSet: Jn,
  signature: Yn,
  stylesheet: Kn,
  template: Un,
  xdp: vn,
  xhtml: Is
};
class jI {
  constructor(A) {
    this.namespaceId = A;
  }
  [Xt](A, t) {
    return new ri(this.namespaceId, A, t);
  }
}
class f9 extends K {
  constructor(A) {
    super(-1, "root", /* @__PURE__ */ Object.create(null)), this.element = null, this[L0] = A;
  }
  [ni](A) {
    return this.element = A, !0;
  }
  [ne]() {
    super[ne](), this.element.template instanceof Eo && (this[L0].set(ll, this.element), this.element.template[Ms](this[L0]), this.element.template[L0] = this[L0]);
  }
}
class u9 extends K {
  constructor() {
    super(-1, "", /* @__PURE__ */ Object.create(null));
  }
  [ni](A) {
    return !1;
  }
}
class d9 {
  constructor(A = null) {
    this._namespaceStack = [], this._nsAgnosticLevel = 0, this._namespacePrefixes = /* @__PURE__ */ new Map(), this._namespaces = /* @__PURE__ */ new Map(), this._nextNsId = Math.max(...Object.values(be).map(({
      id: t
    }) => t)), this._currentNamespace = A || new jI(++this._nextNsId);
  }
  buildRoot(A) {
    return new f9(A);
  }
  build({
    nsPrefix: A,
    name: t,
    attributes: i,
    namespace: s,
    prefixes: a
  }) {
    const n = s !== null;
    if (n && (this._namespaceStack.push(this._currentNamespace), this._currentNamespace = this._searchNamespace(s)), a && this._addNamespacePrefix(a), i.hasOwnProperty(qi)) {
      const o = ZI.datasets, I = i[qi];
      let c = null;
      for (const [l, C] of Object.entries(I))
        if (this._getNamespaceToUse(l) === o) {
          c = {
            xfa: C
          };
          break;
        }
      c ? i[qi] = c : delete i[qi];
    }
    const r = this._getNamespaceToUse(A), g = (r == null ? void 0 : r[Xt](t, i)) || new u9();
    return g[qs]() && this._nsAgnosticLevel++, (n || a || g[qs]()) && (g[hn] = {
      hasNamespace: n,
      prefixes: a,
      nsAgnostic: g[qs]()
    }), g;
  }
  isNsAgnostic() {
    return this._nsAgnosticLevel > 0;
  }
  _searchNamespace(A) {
    let t = this._namespaces.get(A);
    if (t)
      return t;
    for (const [i, {
      check: s
    }] of Object.entries(be))
      if (s(A)) {
        if (t = ZI[i], t)
          return this._namespaces.set(A, t), t;
        break;
      }
    return t = new jI(++this._nextNsId), this._namespaces.set(A, t), t;
  }
  _addNamespacePrefix(A) {
    for (const {
      prefix: t,
      value: i
    } of A) {
      const s = this._searchNamespace(i);
      let a = this._namespacePrefixes.get(t);
      a || (a = [], this._namespacePrefixes.set(t, a)), a.push(s);
    }
  }
  _getNamespaceToUse(A) {
    if (!A)
      return this._currentNamespace;
    const t = this._namespacePrefixes.get(A);
    return (t == null ? void 0 : t.length) > 0 ? t.at(-1) : (k(`Unknown namespace prefix: ${A}.`), null);
  }
  clean(A) {
    const {
      hasNamespace: t,
      prefixes: i,
      nsAgnostic: s
    } = A;
    t && (this._currentNamespace = this._namespaceStack.pop()), i && i.forEach(({
      prefix: a
    }) => {
      this._namespacePrefixes.get(a).pop();
    }), s && this._nsAgnosticLevel--;
  }
}
class Tn extends sl {
  constructor(A = null, t = !1) {
    super(), this._builder = new d9(A), this._stack = [], this._globalData = {
      usedTypefaces: /* @__PURE__ */ new Set()
    }, this._ids = /* @__PURE__ */ new Map(), this._current = this._builder.buildRoot(this._ids), this._errorCode = ot.NoError, this._whiteRegex = /^\s+$/, this._nbsps = /\xa0+/g, this._richText = t;
  }
  parse(A) {
    if (this.parseXml(A), this._errorCode === ot.NoError)
      return this._current[ne](), this._current.element;
  }
  onText(A) {
    if (A = A.replace(this._nbsps, (t) => t.slice(1) + " "), this._richText || this._current[nr]()) {
      this._current[di](A, this._richText);
      return;
    }
    this._whiteRegex.test(A) || this._current[di](A.trim());
  }
  onCdata(A) {
    this._current[di](A);
  }
  _mkAttributes(A, t) {
    let i = null, s = null;
    const a = /* @__PURE__ */ Object.create({});
    for (const {
      name: n,
      value: r
    } of A)
      if (n === "xmlns")
        i ? k(`XFA - multiple namespace definition in <${t}>`) : i = r;
      else if (n.startsWith("xmlns:")) {
        const g = n.substring(6);
        s || (s = []), s.push({
          prefix: g,
          value: r
        });
      } else {
        const g = n.indexOf(":");
        if (g === -1)
          a[n] = r;
        else {
          let o = a[qi];
          o || (o = a[qi] = /* @__PURE__ */ Object.create(null));
          const [I, c] = [n.slice(0, g), n.slice(g + 1)], l = o[I] || (o[I] = /* @__PURE__ */ Object.create(null));
          l[c] = r;
        }
      }
    return [i, s, a];
  }
  _getNameAndPrefix(A, t) {
    const i = A.indexOf(":");
    return i === -1 ? [A, null] : [A.substring(i + 1), t ? "" : A.substring(0, i)];
  }
  onBeginElement(A, t, i) {
    const [s, a, n] = this._mkAttributes(t, A), [r, g] = this._getNameAndPrefix(A, this._builder.isNsAgnostic()), o = this._builder.build({
      nsPrefix: g,
      name: r,
      attributes: n,
      namespace: s,
      prefixes: a
    });
    if (o[ae] = this._globalData, i) {
      o[ne](), this._current[ni](o) && o[kg](this._ids), o[Jt](this._builder);
      return;
    }
    this._stack.push(this._current), this._current = o;
  }
  onEndElement(A) {
    const t = this._current;
    if (t[no]() && typeof t[W] == "string") {
      const i = new Tn();
      i._globalData = this._globalData;
      const s = i.parse(t[W]);
      t[W] = null, t[ni](s);
    }
    t[ne](), this._current = this._stack.pop(), this._current[ni](t) && t[kg](this._ids), t[Jt](this._builder);
  }
  onError(A) {
    this._errorCode = A;
  }
}
class Sa {
  constructor(A) {
    try {
      this.root = new Tn().parse(Sa._createDocument(A));
      const t = new Df(this.root);
      this.form = t.bind(), this.dataHandler = new kf(this.root, t.getData()), this.form[ae].template = this.form;
    } catch (t) {
      k(`XFA - an error occurred during parsing and binding: ${t}`);
    }
  }
  isValid() {
    return this.root && this.form;
  }
  _createPagesHelper() {
    const A = this.form[hl]();
    return new Promise((t, i) => {
      const s = () => {
        try {
          const a = A.next();
          a.done ? t(a.value) : setTimeout(s, 0);
        } catch (a) {
          i(a);
        }
      };
      setTimeout(s, 0);
    });
  }
  async _createPages() {
    try {
      this.pages = await this._createPagesHelper(), this.dims = this.pages.children.map((A) => {
        const {
          width: t,
          height: i
        } = A.attributes.style;
        return [0, 0, parseInt(t), parseInt(i)];
      });
    } catch (A) {
      k(`XFA - an error occurred during layout: ${A}`);
    }
  }
  getBoundingBox(A) {
    return this.dims[A];
  }
  async getNumPages() {
    return this.pages || await this._createPages(), this.dims.length;
  }
  setImages(A) {
    this.form[ae].images = A;
  }
  setFonts(A) {
    this.form[ae].fontFinder = new U1(A);
    const t = [];
    for (let i of this.form[ae].usedTypefaces)
      i = gr(i), this.form[ae].fontFinder.find(i) || t.push(i);
    return t.length > 0 ? t : null;
  }
  appendFonts(A, t) {
    this.form[ae].fontFinder.add(A, t);
  }
  async getPages() {
    this.pages || await this._createPages();
    const A = this.pages;
    return this.pages = null, A;
  }
  serializeData(A) {
    return this.dataHandler.serialize(A);
  }
  static _createDocument(A) {
    return A["/xdp:xdp"] ? Object.values(A).join("") : A["xdp:xdp"];
  }
  static getRichTextAsHtml(A) {
    if (!A || typeof A != "string")
      return null;
    try {
      let t = new Tn(Is, !0).parse(A);
      if (!["body", "xhtml"].includes(t[VA])) {
        const n = Is.body({});
        n[Qe](t), t = n;
      }
      const i = t[SA]();
      if (!i.success)
        return null;
      const {
        html: s
      } = i, {
        attributes: a
      } = s;
      return a && (a.class && (a.class = a.class.filter((n) => !n.startsWith("xfa"))), a.dir = "auto"), {
        html: s,
        str: t[Se]()
      };
    } catch (t) {
      k(`XFA - an error occurred during parsing of rich text: ${t}`);
    }
    return null;
  }
}
class Li {
  static createGlobals(A) {
    return Promise.all([A.ensureCatalog("acroForm"), A.ensureDoc("xfaDatasets"), A.ensureCatalog("structTreeRoot"), A.ensureCatalog("baseUrl"), A.ensureCatalog("attachments")]).then(([t, i, s, a, n]) => ({
      pdfManager: A,
      acroForm: t instanceof R ? t : R.empty,
      xfaDatasets: i,
      structTreeRoot: s,
      baseUrl: a,
      attachments: n
    }), (t) => (k(`createGlobals: "${t}".`), null));
  }
  static async create(A, t, i, s, a, n, r) {
    const g = a ? await this._getPageIndex(A, t, i.pdfManager) : null;
    return i.pdfManager.ensure(this, "_create", [A, t, i, s, a, n, g, r]);
  }
  static _create(A, t, i, s, a = !1, n = null, r = null, g = null) {
    const o = A.fetchIfRef(t);
    if (!(o instanceof R))
      return;
    const {
      acroForm: I,
      pdfManager: c
    } = i, l = t instanceof nA ? t.toString() : `annot_${s.createObjId()}`;
    let C = o.get("Subtype");
    C = C instanceof L ? C.name : null;
    const h = {
      xref: A,
      ref: t,
      dict: o,
      subtype: C,
      id: l,
      annotationGlobals: i,
      collectFields: a,
      orphanFields: n,
      needAppearances: !a && I.get("NeedAppearances") === !0,
      pageIndex: r,
      evaluatorOptions: c.evaluatorOptions,
      pageRef: g
    };
    switch (C) {
      case "Link":
        return new b9(h);
      case "Text":
        return new w9(h);
      case "Widget":
        let B = Ut({
          dict: o,
          key: "FT"
        });
        switch (B = B instanceof L ? B.name : null, B) {
          case "Tx":
            return new m9(h);
          case "Btn":
            return new p9(h);
          case "Ch":
            return new y9(h);
          case "Sig":
            return new Ol(h);
        }
        return k(`Unimplemented widget field type "${B}", falling back to base field type.`), new jt(h);
      case "Popup":
        return new Zl(h);
      case "FreeText":
        return new Kr(h);
      case "Line":
        return new D9(h);
      case "Square":
        return new k9(h);
      case "Circle":
        return new S9(h);
      case "PolyLine":
        return new jl(h);
      case "Polygon":
        return new Xl(h);
      case "Caret":
        return new F9(h);
      case "Ink":
        return new Ns(h);
      case "Highlight":
        return new vr(h);
      case "Underline":
        return new R9(h);
      case "Squiggly":
        return new N9(h);
      case "StrikeOut":
        return new G9(h);
      case "Stamp":
        return new An(h);
      case "FileAttachment":
        return new U9(h);
      default:
        return a || k(C ? `Unimplemented annotation type "${C}", falling back to base annotation.` : "Annotation is missing the required /Subtype."), new Ra(h);
    }
  }
  static async _getPageIndex(A, t, i) {
    try {
      const s = await A.fetchIfRefAsync(t);
      if (!(s instanceof R))
        return -1;
      const a = s.getRaw("P");
      if (a instanceof nA)
        try {
          return await i.ensureCatalog("getPageIndex", [a]);
        } catch (r) {
          vA(`_getPageIndex -- not a valid page reference: "${r}".`);
        }
      if (s.has("Kids"))
        return -1;
      const n = await i.ensureDoc("numPages");
      for (let r = 0; r < n; r++) {
        const g = await i.getPage(r), o = await i.ensure(g, "annotations");
        for (const I of o)
          if (I instanceof nA && pn(I, t))
            return r;
      }
    } catch (s) {
      k(`_getPageIndex: "${s}".`);
    }
    return -1;
  }
  static generateImages(A, t, i) {
    if (!i)
      return k("generateImages: OffscreenCanvas is not supported, cannot save or print some annotations with images."), null;
    let s;
    for (const {
      bitmapId: a,
      bitmap: n
    } of A)
      n && (s || (s = /* @__PURE__ */ new Map()), s.set(a, An.createImage(n, t)));
    return s;
  }
  static async saveNewAnnotations(A, t, i, s, a) {
    const n = A.xref;
    let r;
    const g = [], {
      isOffscreenCanvasSupported: o
    } = A.options;
    for (const I of i)
      if (!I.deleted)
        switch (I.annotationType) {
          case bi.FREETEXT:
            if (!r) {
              const l = new R(n);
              l.set("BaseFont", L.get("Helvetica")), l.set("Type", L.get("Font")), l.set("Subtype", L.get("Type1")), l.set("Encoding", L.get("WinAnsiEncoding")), r = n.getNewTemporaryRef(), a.put(r, {
                data: l
              });
            }
            g.push(Kr.createNewAnnotation(n, I, a, {
              evaluator: A,
              task: t,
              baseFontRef: r
            }));
            break;
          case bi.HIGHLIGHT:
            I.quadPoints ? g.push(vr.createNewAnnotation(n, I, a)) : g.push(Ns.createNewAnnotation(n, I, a));
            break;
          case bi.INK:
            g.push(Ns.createNewAnnotation(n, I, a));
            break;
          case bi.STAMP:
            const c = o ? await (s == null ? void 0 : s.get(I.bitmapId)) : null;
            if (c != null && c.imageStream) {
              const {
                imageStream: l,
                smaskStream: C
              } = c;
              if (C) {
                const B = n.getNewTemporaryRef();
                a.put(B, {
                  data: C
                }), l.dict.set("SMask", B);
              }
              const h = c.imageRef = n.getNewTemporaryRef();
              a.put(h, {
                data: l
              }), c.imageStream = c.smaskStream = null;
            }
            g.push(An.createNewAnnotation(n, I, a, {
              image: c
            }));
            break;
        }
    return {
      annotations: await Promise.all(g)
    };
  }
  static async printNewAnnotations(A, t, i, s, a) {
    if (!s)
      return null;
    const {
      options: n,
      xref: r
    } = t, g = [];
    for (const o of s)
      if (!o.deleted)
        switch (o.annotationType) {
          case bi.FREETEXT:
            g.push(Kr.createNewPrintAnnotation(A, r, o, {
              evaluator: t,
              task: i,
              evaluatorOptions: n
            }));
            break;
          case bi.HIGHLIGHT:
            o.quadPoints ? g.push(vr.createNewPrintAnnotation(A, r, o, {
              evaluatorOptions: n
            })) : g.push(Ns.createNewPrintAnnotation(A, r, o, {
              evaluatorOptions: n
            }));
            break;
          case bi.INK:
            g.push(Ns.createNewPrintAnnotation(A, r, o, {
              evaluatorOptions: n
            }));
            break;
          case bi.STAMP:
            const I = n.isOffscreenCanvasSupported ? await (a == null ? void 0 : a.get(o.bitmapId)) : null;
            if (I != null && I.imageStream) {
              const {
                imageStream: c,
                smaskStream: l
              } = I;
              l && c.dict.set("SMask", l), I.imageRef = new is(c, c.length), I.imageStream = I.smaskStream = null;
            }
            g.push(An.createNewPrintAnnotation(A, r, o, {
              image: I,
              evaluatorOptions: n
            }));
            break;
        }
    return Promise.all(g);
  }
}
function V0(e, A = new Uint8ClampedArray(3)) {
  if (!Array.isArray(e))
    return A;
  const t = A || new Uint8ClampedArray(3);
  switch (e.length) {
    case 0:
      return null;
    case 1:
      return LA.singletons.gray.getRgbItem(e, 0, t, 0), t;
    case 3:
      return LA.singletons.rgb.getRgbItem(e, 0, t, 0), t;
    case 4:
      return LA.singletons.cmyk.getRgbItem(e, 0, t, 0), t;
    default:
      return A;
  }
}
function Et(e) {
  return Array.from(e, (A) => A / 255);
}
function Fa(e, A) {
  const t = e.getArray("QuadPoints");
  if (!rt(t, null) || t.length === 0 || t.length % 8 > 0)
    return null;
  const i = new Float32Array(t.length);
  for (let s = 0, a = t.length; s < a; s += 8) {
    const [n, r, g, o, I, c, l, C] = t.slice(s, s + 8), h = Math.min(n, g, I, l), B = Math.max(n, g, I, l), Q = Math.min(r, o, c, C), E = Math.max(r, o, c, C);
    if (A !== null && (h < A[0] || B > A[2] || Q < A[1] || E > A[3]))
      return null;
    i.set([h, E, B, E, h, Q, B, Q], s);
  }
  return i;
}
function Ug(e, A, t) {
  const [i, s, a, n] = ye.getAxialAlignedBoundingBox(A, t);
  if (i === a || s === n)
    return [1, 0, 0, 1, e[0], e[1]];
  const r = (e[2] - e[0]) / (a - i), g = (e[3] - e[1]) / (n - s);
  return [r, 0, 0, g, e[0] - i * r, e[1] - s * g];
}
class Ra {
  constructor(A) {
    const {
      dict: t,
      xref: i,
      annotationGlobals: s,
      ref: a,
      orphanFields: n
    } = A, r = n == null ? void 0 : n.get(a);
    r && t.set("Parent", r), this.setTitle(t.get("T")), this.setContents(t.get("Contents")), this.setModificationDate(t.get("M")), this.setFlags(t.get("F")), this.setRectangle(t.getArray("Rect")), this.setColor(t.getArray("C")), this.setBorderStyle(t), this.setAppearance(t), this.setOptionalContent(t);
    const g = t.get("MK");
    this.setBorderAndBackgroundColors(g), this.setRotation(g, t), this.ref = A.ref instanceof nA ? A.ref : null, this._streams = [], this.appearance && this._streams.push(this.appearance);
    const o = !!(this.flags & oe.LOCKED), I = !!(this.flags & oe.LOCKEDCONTENTS);
    if (this.data = {
      annotationFlags: this.flags,
      borderStyle: this.borderStyle,
      color: this.color,
      backgroundColor: this.backgroundColor,
      borderColor: this.borderColor,
      rotation: this.rotation,
      contentsObj: this._contents,
      hasAppearance: !!this.appearance,
      id: A.id,
      modificationDate: this.modificationDate,
      rect: this.rectangle,
      subtype: A.subtype,
      hasOwnCanvas: !1,
      noRotate: !!(this.flags & oe.NOROTATE),
      noHTML: o && I,
      isEditable: !1,
      structParent: -1
    }, s.structTreeRoot) {
      let l = t.get("StructParent");
      this.data.structParent = l = Number.isInteger(l) && l >= 0 ? l : -1, s.structTreeRoot.addAnnotationIdToPage(A.pageRef, l);
    }
    if (A.collectFields) {
      const l = t.get("Kids");
      if (Array.isArray(l)) {
        const C = [];
        for (const h of l)
          h instanceof nA && C.push(h.toString());
        C.length !== 0 && (this.data.kidIds = C);
      }
      this.data.actions = $n(i, t, rc), this.data.fieldName = this._constructFieldName(t), this.data.pageIndex = A.pageIndex;
    }
    const c = t.get("IT");
    c instanceof L && (this.data.it = c.name), this._isOffscreenCanvasSupported = A.evaluatorOptions.isOffscreenCanvasSupported, this._fallbackFontDict = null, this._needAppearances = !1;
  }
  _hasFlag(A, t) {
    return !!(A & t);
  }
  _buildFlags(A, t) {
    let {
      flags: i
    } = this;
    return A === void 0 ? t === void 0 ? void 0 : t ? i & ~oe.PRINT : i & ~oe.HIDDEN | oe.PRINT : A ? (i |= oe.PRINT, t ? i & ~oe.NOVIEW | oe.HIDDEN : i & ~oe.HIDDEN | oe.NOVIEW) : (i &= ~(oe.HIDDEN | oe.NOVIEW), t ? i & ~oe.PRINT : i | oe.PRINT);
  }
  _isViewable(A) {
    return !this._hasFlag(A, oe.INVISIBLE) && !this._hasFlag(A, oe.NOVIEW);
  }
  _isPrintable(A) {
    return this._hasFlag(A, oe.PRINT) && !this._hasFlag(A, oe.HIDDEN) && !this._hasFlag(A, oe.INVISIBLE);
  }
  mustBeViewed(A, t) {
    var s;
    const i = (s = A == null ? void 0 : A.get(this.data.id)) == null ? void 0 : s.noView;
    return i !== void 0 ? !i : this.viewable && !this._hasFlag(this.flags, oe.HIDDEN);
  }
  mustBePrinted(A) {
    var i;
    const t = (i = A == null ? void 0 : A.get(this.data.id)) == null ? void 0 : i.noPrint;
    return t !== void 0 ? !t : this.printable;
  }
  mustBeViewedWhenEditing(A, t = null) {
    return A ? !this.data.isEditable : !(t != null && t.has(this.data.id));
  }
  get viewable() {
    return this.data.quadPoints === null ? !1 : this.flags === 0 ? !0 : this._isViewable(this.flags);
  }
  get printable() {
    return this.data.quadPoints === null || this.flags === 0 ? !1 : this._isPrintable(this.flags);
  }
  _parseStringHelper(A) {
    const t = typeof A == "string" ? XA(A) : "", i = t && _c(t).dir === "rtl" ? "rtl" : "ltr";
    return {
      str: t,
      dir: i
    };
  }
  setDefaultAppearance(A) {
    const {
      dict: t,
      annotationGlobals: i
    } = A, s = Ut({
      dict: t,
      key: "DA"
    }) || i.acroForm.get("DA");
    this._defaultAppearance = typeof s == "string" ? s : "", this.data.defaultAppearanceData = to(this._defaultAppearance);
  }
  setTitle(A) {
    this._title = this._parseStringHelper(A);
  }
  setContents(A) {
    this._contents = this._parseStringHelper(A);
  }
  setModificationDate(A) {
    this.modificationDate = typeof A == "string" ? A : null;
  }
  setFlags(A) {
    this.flags = Number.isInteger(A) && A > 0 ? A : 0, this.flags & oe.INVISIBLE && this.constructor.name !== "Annotation" && (this.flags ^= oe.INVISIBLE);
  }
  hasFlag(A) {
    return this._hasFlag(this.flags, A);
  }
  setRectangle(A) {
    this.rectangle = ai(A, [0, 0, 0, 0]);
  }
  setColor(A) {
    this.color = V0(A);
  }
  setLineEndings(A) {
    if (this.lineEndings = ["None", "None"], Array.isArray(A) && A.length === 2)
      for (let t = 0; t < 2; t++) {
        const i = A[t];
        if (i instanceof L)
          switch (i.name) {
            case "None":
              continue;
            case "Square":
            case "Circle":
            case "Diamond":
            case "OpenArrow":
            case "ClosedArrow":
            case "Butt":
            case "ROpenArrow":
            case "RClosedArrow":
            case "Slash":
              this.lineEndings[t] = i.name;
              continue;
          }
        k(`Ignoring invalid lineEnding: ${i}`);
      }
  }
  setRotation(A, t) {
    this.rotation = 0;
    let i = A instanceof R ? A.get("R") || 0 : t.get("Rotate") || 0;
    Number.isInteger(i) && i !== 0 && (i %= 360, i < 0 && (i += 360), i % 90 === 0 && (this.rotation = i));
  }
  setBorderAndBackgroundColors(A) {
    A instanceof R ? (this.borderColor = V0(A.getArray("BC"), null), this.backgroundColor = V0(A.getArray("BG"), null)) : this.borderColor = this.backgroundColor = null;
  }
  setBorderStyle(A) {
    if (this.borderStyle = new x9(), A instanceof R)
      if (A.has("BS")) {
        const t = A.get("BS");
        if (t instanceof R) {
          const i = t.get("Type");
          (!i || xe(i, "Border")) && (this.borderStyle.setWidth(t.get("W"), this.rectangle), this.borderStyle.setStyle(t.get("S")), this.borderStyle.setDashArray(t.getArray("D")));
        }
      } else if (A.has("Border")) {
        const t = A.getArray("Border");
        Array.isArray(t) && t.length >= 3 && (this.borderStyle.setHorizontalCornerRadius(t[0]), this.borderStyle.setVerticalCornerRadius(t[1]), this.borderStyle.setWidth(t[2], this.rectangle), t.length === 4 && this.borderStyle.setDashArray(t[3], !0));
      } else
        this.borderStyle.setWidth(0);
  }
  setAppearance(A) {
    this.appearance = null;
    const t = A.get("AP");
    if (!(t instanceof R))
      return;
    const i = t.get("N");
    if (i instanceof JA) {
      this.appearance = i;
      return;
    }
    if (!(i instanceof R))
      return;
    const s = A.get("AS");
    if (!(s instanceof L) || !i.has(s.name))
      return;
    const a = i.get(s.name);
    a instanceof JA && (this.appearance = a);
  }
  setOptionalContent(A) {
    this.oc = null;
    const t = A.get("OC");
    t instanceof L ? k("setOptionalContent: Support for /Name-entry is not implemented.") : t instanceof R && (this.oc = t);
  }
  loadResources(A, t) {
    return t.dict.getAsync("Resources").then((i) => i ? new Rn(i, A, i.xref).load().then(function() {
      return i;
    }) : void 0);
  }
  async getOperatorList(A, t, i, s) {
    const {
      hasOwnCanvas: a,
      id: n,
      rect: r
    } = this.data;
    let g = this.appearance;
    const o = !!(a && i & st.DISPLAY);
    if (o && (r[0] === r[2] || r[1] === r[3]))
      return this.data.hasOwnCanvas = !1, {
        opList: new Ct(),
        separateForm: !1,
        separateCanvas: !1
      };
    if (!g) {
      if (!o)
        return {
          opList: new Ct(),
          separateForm: !1,
          separateCanvas: !1
        };
      g = new Bt(""), g.dict = new R();
    }
    const I = g.dict, c = await this.loadResources(["ExtGState", "ColorSpace", "Pattern", "Shading", "XObject", "Font"], g), l = Xr(I.getArray("BBox"), [0, 0, 1, 1]), C = Yi(I.getArray("Matrix"), Zt), h = Ug(r, l, C), B = new Ct();
    let Q;
    return this.oc && (Q = await A.parseMarkedContentProps(this.oc, null)), Q !== void 0 && B.addOp(w.beginMarkedContentProps, ["OC", Q]), B.addOp(w.beginAnnotation, [n, r, h, C, o]), await A.getOperatorList({
      stream: g,
      task: t,
      resources: c,
      operatorList: B,
      fallbackFontDict: this._fallbackFontDict
    }), B.addOp(w.endAnnotation, []), Q !== void 0 && B.addOp(w.endMarkedContent, []), this.reset(), {
      opList: B,
      separateForm: !1,
      separateCanvas: o
    };
  }
  async save(A, t, i, s) {
    return null;
  }
  get hasTextContent() {
    return !1;
  }
  async extractTextContent(A, t, i) {
    if (!this.appearance)
      return;
    const s = await this.loadResources(["ExtGState", "Font", "Properties", "XObject"], this.appearance), a = [], n = [];
    let r = null;
    const g = {
      desiredSize: Math.Infinity,
      ready: !0,
      enqueue(o, I) {
        for (const c of o.items)
          c.str !== void 0 && (r || (r = c.transform.slice(-2)), n.push(c.str), c.hasEOL && (a.push(n.join("").trimEnd()), n.length = 0));
      }
    };
    if (await A.getTextContent({
      stream: this.appearance,
      task: t,
      resources: s,
      includeMarkedContent: !0,
      keepWhiteSpace: !0,
      sink: g,
      viewBox: i
    }), this.reset(), n.length && a.push(n.join("").trimEnd()), a.length > 1 || a[0]) {
      const o = this.appearance.dict, I = Xr(o.getArray("BBox"), null), c = Yi(o.getArray("Matrix"), null);
      this.data.textPosition = this._transformPoint(r, I, c), this.data.textContent = a;
    }
  }
  _transformPoint(A, t, i) {
    const {
      rect: s
    } = this.data;
    t || (t = [0, 0, 1, 1]), i || (i = [1, 0, 0, 1, 0, 0]);
    const a = Ug(s, t, i);
    return a[4] -= s[0], a[5] -= s[1], A = ye.applyTransform(A, a), ye.applyTransform(A, i);
  }
  getFieldObject() {
    return this.data.kidIds ? {
      id: this.data.id,
      actions: this.data.actions,
      name: this.data.fieldName,
      strokeColor: this.data.borderColor,
      fillColor: this.data.backgroundColor,
      type: "",
      kidIds: this.data.kidIds,
      page: this.data.pageIndex,
      rotation: this.rotation
    } : null;
  }
  reset() {
    for (const A of this._streams)
      A.reset();
  }
  _constructFieldName(A) {
    if (!A.has("T") && !A.has("Parent"))
      return k("Unknown field name, falling back to empty field name."), "";
    if (!A.has("Parent"))
      return XA(A.get("T"));
    const t = [];
    A.has("T") && t.unshift(XA(A.get("T")));
    let i = A;
    const s = new Ge();
    for (A.objId && s.put(A.objId); i.has("Parent") && (i = i.get("Parent"), !(!(i instanceof R) || i.objId && s.has(i.objId))); )
      i.objId && s.put(i.objId), i.has("T") && t.unshift(XA(i.get("T")));
    return t.join(".");
  }
}
class x9 {
  constructor() {
    this.width = 1, this.rawWidth = 1, this.style = m0.SOLID, this.dashArray = [3], this.horizontalCornerRadius = 0, this.verticalCornerRadius = 0;
  }
  setWidth(A, t = [0, 0, 0, 0]) {
    if (A instanceof L) {
      this.width = 0;
      return;
    }
    if (typeof A == "number") {
      if (A > 0) {
        this.rawWidth = A;
        const i = (t[2] - t[0]) / 2, s = (t[3] - t[1]) / 2;
        i > 0 && s > 0 && (A > i || A > s) && (k(`AnnotationBorderStyle.setWidth - ignoring width: ${A}`), A = 1);
      }
      this.width = A;
    }
  }
  setStyle(A) {
    if (A instanceof L)
      switch (A.name) {
        case "S":
          this.style = m0.SOLID;
          break;
        case "D":
          this.style = m0.DASHED;
          break;
        case "B":
          this.style = m0.BEVELED;
          break;
        case "I":
          this.style = m0.INSET;
          break;
        case "U":
          this.style = m0.UNDERLINE;
          break;
      }
  }
  setDashArray(A, t = !1) {
    if (Array.isArray(A)) {
      let i = !0, s = !0;
      for (const a of A)
        if (+a >= 0)
          a > 0 && (s = !1);
        else {
          i = !1;
          break;
        }
      A.length === 0 || i && !s ? (this.dashArray = A, t && this.setStyle(L.get("D"))) : this.width = 0;
    } else A && (this.width = 0);
  }
  setHorizontalCornerRadius(A) {
    Number.isInteger(A) && (this.horizontalCornerRadius = A);
  }
  setVerticalCornerRadius(A) {
    Number.isInteger(A) && (this.verticalCornerRadius = A);
  }
}
class ft extends Ra {
  constructor(A) {
    super(A);
    const {
      dict: t
    } = A;
    if (t.has("IRT")) {
      const s = t.getRaw("IRT");
      this.data.inReplyTo = s instanceof nA ? s.toString() : null;
      const a = t.get("RT");
      this.data.replyType = a instanceof L ? a.name : Pr.REPLY;
    }
    let i = null;
    if (this.data.replyType === Pr.GROUP) {
      const s = t.get("IRT");
      this.setTitle(s.get("T")), this.data.titleObj = this._title, this.setContents(s.get("Contents")), this.data.contentsObj = this._contents, s.has("CreationDate") ? (this.setCreationDate(s.get("CreationDate")), this.data.creationDate = this.creationDate) : this.data.creationDate = null, s.has("M") ? (this.setModificationDate(s.get("M")), this.data.modificationDate = this.modificationDate) : this.data.modificationDate = null, i = s.getRaw("Popup"), s.has("C") ? (this.setColor(s.getArray("C")), this.data.color = this.color) : this.data.color = null;
    } else
      this.data.titleObj = this._title, this.setCreationDate(t.get("CreationDate")), this.data.creationDate = this.creationDate, i = t.getRaw("Popup"), t.has("C") || (this.data.color = null);
    this.data.popupRef = i instanceof nA ? i.toString() : null, t.has("RC") && (this.data.richText = Sa.getRichTextAsHtml(t.get("RC")));
  }
  setCreationDate(A) {
    this.creationDate = typeof A == "string" ? A : null;
  }
  _setDefaultAppearance({
    xref: A,
    extra: t,
    strokeColor: i,
    fillColor: s,
    blendMode: a,
    strokeAlpha: n,
    fillAlpha: r,
    pointsCallback: g
  }) {
    let o = Number.MAX_VALUE, I = Number.MAX_VALUE, c = Number.MIN_VALUE, l = Number.MIN_VALUE;
    const C = ["q"];
    t && C.push(t), i && C.push(`${i[0]} ${i[1]} ${i[2]} RG`), s && C.push(`${s[0]} ${s[1]} ${s[2]} rg`);
    let h = this.data.quadPoints;
    h || (h = Float32Array.from([this.rectangle[0], this.rectangle[3], this.rectangle[2], this.rectangle[3], this.rectangle[0], this.rectangle[1], this.rectangle[2], this.rectangle[1]]));
    for (let m = 0, D = h.length; m < D; m += 8) {
      const [S, y, H, G] = g(C, h.subarray(m, m + 8));
      o = Math.min(o, S), c = Math.max(c, y), I = Math.min(I, H), l = Math.max(l, G);
    }
    C.push("Q");
    const B = new R(A), Q = new R(A);
    Q.set("Subtype", L.get("Form"));
    const E = new Bt(C.join(" "));
    E.dict = Q, B.set("Fm0", E);
    const f = new R(A);
    a && f.set("BM", L.get(a)), typeof n == "number" && f.set("CA", n), typeof r == "number" && f.set("ca", r);
    const d = new R(A);
    d.set("GS0", f);
    const u = new R(A);
    u.set("ExtGState", d), u.set("XObject", B);
    const x = new R(A);
    x.set("Resources", u);
    const p = this.data.rect = [o, I, c, l];
    x.set("BBox", p), this.appearance = new Bt("/GS0 gs /Fm0 Do"), this.appearance.dict = x, this._streams.push(this.appearance, E);
  }
  static async createNewAnnotation(A, t, i, s) {
    t.ref || (t.ref = A.getNewTemporaryRef());
    const a = t.ref, n = await this.createNewAppearanceStream(t, A, s);
    let r;
    if (n) {
      const g = A.getNewTemporaryRef();
      r = this.createNewDict(t, A, {
        apRef: g
      }), i.put(g, {
        data: n
      });
    } else
      r = this.createNewDict(t, A, {});
    return Number.isInteger(t.parentTreeId) && r.set("StructParent", t.parentTreeId), i.put(a, {
      data: r
    }), {
      ref: a
    };
  }
  static async createNewPrintAnnotation(A, t, i, s) {
    const a = await this.createNewAppearanceStream(i, t, s), n = this.createNewDict(i, t, a ? {
      ap: a
    } : {}), r = new this.prototype.constructor({
      dict: n,
      xref: t,
      annotationGlobals: A,
      evaluatorOptions: s.evaluatorOptions
    });
    return i.ref && (r.ref = r.refToReplace = i.ref), r;
  }
}
class jt extends Ra {
  constructor(A) {
    var l;
    super(A);
    const {
      dict: t,
      xref: i,
      annotationGlobals: s
    } = A, a = this.data;
    this._needAppearances = A.needAppearances, a.annotationType = He.WIDGET, a.fieldName === void 0 && (a.fieldName = this._constructFieldName(t)), a.actions === void 0 && (a.actions = $n(i, t, rc));
    let n = Ut({
      dict: t,
      key: "V",
      getArray: !0
    });
    a.fieldValue = this._decodeFormValue(n);
    const r = Ut({
      dict: t,
      key: "DV",
      getArray: !0
    });
    if (a.defaultFieldValue = this._decodeFormValue(r), n === void 0 && s.xfaDatasets) {
      const C = this._title.str;
      C && (this._hasValueFromXFA = !0, a.fieldValue = n = s.xfaDatasets.getValue(C));
    }
    n === void 0 && a.defaultFieldValue !== null && (a.fieldValue = a.defaultFieldValue), a.alternativeText = XA(t.get("TU") || ""), this.setDefaultAppearance(A), a.hasAppearance || (a.hasAppearance = this._needAppearances && a.fieldValue !== void 0 && a.fieldValue !== null);
    const g = Ut({
      dict: t,
      key: "FT"
    });
    a.fieldType = g instanceof L ? g.name : null;
    const o = Ut({
      dict: t,
      key: "DR"
    }), I = s.acroForm.get("DR"), c = (l = this.appearance) == null ? void 0 : l.dict.get("Resources");
    this._fieldResources = {
      localResources: o,
      acroFormResources: I,
      appearanceResources: c,
      mergedResources: R.merge({
        xref: i,
        dictArray: [o, c, I],
        mergeSubDicts: !0
      })
    }, a.fieldFlags = Ut({
      dict: t,
      key: "Ff"
    }), (!Number.isInteger(a.fieldFlags) || a.fieldFlags < 0) && (a.fieldFlags = 0), a.readOnly = this.hasFieldFlag(Te.READONLY), a.required = this.hasFieldFlag(Te.REQUIRED), a.hidden = this._hasFlag(a.annotationFlags, oe.HIDDEN) || this._hasFlag(a.annotationFlags, oe.NOVIEW);
  }
  _decodeFormValue(A) {
    return Array.isArray(A) ? A.filter((t) => typeof t == "string").map((t) => XA(t)) : A instanceof L ? XA(A.name) : typeof A == "string" ? XA(A) : null;
  }
  hasFieldFlag(A) {
    return !!(this.data.fieldFlags & A);
  }
  _isViewable(A) {
    return !0;
  }
  mustBeViewed(A, t) {
    return t ? this.viewable : super.mustBeViewed(A, t) && !this._hasFlag(this.flags, oe.NOVIEW);
  }
  getRotationMatrix(A) {
    var a;
    let t = (a = A == null ? void 0 : A.get(this.data.id)) == null ? void 0 : a.rotation;
    if (t === void 0 && (t = this.rotation), t === 0)
      return Zt;
    const i = this.data.rect[2] - this.data.rect[0], s = this.data.rect[3] - this.data.rect[1];
    return wn(t, i, s);
  }
  getBorderAndBackgroundAppearances(A) {
    var r;
    let t = (r = A == null ? void 0 : A.get(this.data.id)) == null ? void 0 : r.rotation;
    if (t === void 0 && (t = this.rotation), !this.backgroundColor && !this.borderColor)
      return "";
    const i = this.data.rect[2] - this.data.rect[0], s = this.data.rect[3] - this.data.rect[1], a = t === 0 || t === 180 ? `0 0 ${i} ${s} re` : `0 0 ${s} ${i} re`;
    let n = "";
    if (this.backgroundColor && (n = `${pi(this.backgroundColor, !0)} ${a} f `), this.borderColor) {
      const g = this.borderStyle.width || 1;
      n += `${g} w ${pi(this.borderColor, !1)} ${a} S `;
    }
    return n;
  }
  async getOperatorList(A, t, i, s) {
    if (i & st.ANNOTATIONS_FORMS && !(this instanceof Ol) && !this.data.noHTML && !this.data.hasOwnCanvas)
      return {
        opList: new Ct(),
        separateForm: !0,
        separateCanvas: !1
      };
    if (!this._hasText)
      return super.getOperatorList(A, t, i, s);
    const a = await this._getAppearance(A, t, i, s);
    if (this.appearance && a === null)
      return super.getOperatorList(A, t, i, s);
    const n = new Ct();
    if (!this._defaultAppearance || a === null)
      return {
        opList: n,
        separateForm: !1,
        separateCanvas: !1
      };
    const r = !!(this.data.hasOwnCanvas && i & st.DISPLAY), g = [1, 0, 0, 1, 0, 0], o = [0, 0, this.data.rect[2] - this.data.rect[0], this.data.rect[3] - this.data.rect[1]], I = Ug(this.data.rect, o, g);
    let c;
    this.oc && (c = await A.parseMarkedContentProps(this.oc, null)), c !== void 0 && n.addOp(w.beginMarkedContentProps, ["OC", c]), n.addOp(w.beginAnnotation, [this.data.id, this.data.rect, I, this.getRotationMatrix(s), r]);
    const l = new Bt(a);
    return await A.getOperatorList({
      stream: l,
      task: t,
      resources: this._fieldResources.mergedResources,
      operatorList: n
    }), n.addOp(w.endAnnotation, []), c !== void 0 && n.addOp(w.endMarkedContent, []), {
      opList: n,
      separateForm: !1,
      separateCanvas: r
    };
  }
  _getMKDict(A) {
    const t = new R(null);
    return A && t.set("R", A), this.borderColor && t.set("BC", Et(this.borderColor)), this.backgroundColor && t.set("BG", Et(this.backgroundColor)), t.size > 0 ? t : null;
  }
  amendSavedDict(A, t) {
  }
  setValue(A, t, i, s) {
    const {
      dict: a,
      ref: n
    } = FC(A, this.ref, i);
    if (!a)
      A.set("V", t);
    else if (!s.has(n)) {
      const r = a.clone();
      return r.set("V", t), s.put(n, {
        data: r
      }), r;
    }
    return null;
  }
  async save(A, t, i, s) {
    const a = i == null ? void 0 : i.get(this.data.id), n = this._buildFlags(a == null ? void 0 : a.noView, a == null ? void 0 : a.noPrint);
    let r = a == null ? void 0 : a.value, g = a == null ? void 0 : a.rotation;
    if (r === this.data.fieldValue || r === void 0) {
      if (!this._hasValueFromXFA && g === void 0 && n === void 0)
        return;
      r || (r = this.data.fieldValue);
    }
    if (g === void 0 && !this._hasValueFromXFA && Array.isArray(r) && Array.isArray(this.data.fieldValue) && E0(r, this.data.fieldValue) && n === void 0)
      return;
    g === void 0 && (g = this.rotation);
    let o = null;
    if (!this._needAppearances && (o = await this._getAppearance(A, t, st.SAVE, i), o === null && n === void 0))
      return;
    let I = !1;
    o != null && o.needAppearances && (I = !0, o = null);
    const {
      xref: c
    } = A, l = c.fetchIfRef(this.ref);
    if (!(l instanceof R))
      return;
    const C = new R(c);
    for (const E of l.getKeys())
      E !== "AP" && C.set(E, l.getRaw(E));
    if (n !== void 0 && (C.set("F", n), o === null && !I)) {
      const E = l.getRaw("AP");
      E && C.set("AP", E);
    }
    const h = {
      path: this.data.fieldName,
      value: r
    }, B = this.setValue(C, Array.isArray(r) ? r.map(Mt) : Mt(r), c, s);
    this.amendSavedDict(i, B || C);
    const Q = this._getMKDict(g);
    if (Q && C.set("MK", Q), s.put(this.ref, {
      data: C,
      xfa: h,
      needAppearances: I
    }), o !== null) {
      const E = c.getNewTemporaryRef(), f = new R(c);
      C.set("AP", f), f.set("N", E);
      const d = this._getSaveFieldResources(c), u = new Bt(o), x = u.dict = new R(c);
      x.set("Subtype", L.get("Form")), x.set("Resources", d), x.set("BBox", [0, 0, this.data.rect[2] - this.data.rect[0], this.data.rect[3] - this.data.rect[1]]);
      const p = this.getRotationMatrix(i);
      p !== Zt && x.set("Matrix", p), s.put(E, {
        data: u,
        xfa: null,
        needAppearances: !1
      });
    }
    C.set("M", `D:${mi()}`);
  }
  async _getAppearance(A, t, i, s) {
    if (this.hasFieldFlag(Te.PASSWORD))
      return null;
    const n = s == null ? void 0 : s.get(this.data.id);
    let r, g;
    if (n && (r = n.formattedValue || n.value, g = n.rotation), g === void 0 && r === void 0 && !this._needAppearances && (!this._hasValueFromXFA || this.appearance))
      return null;
    const o = this.getBorderAndBackgroundAppearances(s);
    if (r === void 0 && (r = this.data.fieldValue, !r))
      return `/Tx BMC q ${o}Q EMC`;
    if (Array.isArray(r) && r.length === 1 && (r = r[0]), nt(typeof r == "string", "Expected `value` to be a string."), r = r.trimEnd(), this.data.combo) {
      const G = this.data.options.find(({
        exportValue: v
      }) => r === v);
      r = (G == null ? void 0 : G.displayValue) || r;
    }
    if (r === "")
      return `/Tx BMC q ${o}Q EMC`;
    g === void 0 && (g = this.rotation);
    let I = -1, c;
    this.data.multiLine ? (c = r.split(/\r\n?|\n/).map((G) => G.normalize("NFC")), I = c.length) : c = [r.replace(/\r\n?|\n/, "").normalize("NFC")];
    const l = 1, C = 2;
    let h = this.data.rect[3] - this.data.rect[1], B = this.data.rect[2] - this.data.rect[0];
    (g === 90 || g === 270) && ([B, h] = [h, B]), this._defaultAppearance || (this.data.defaultAppearanceData = to(this._defaultAppearance = "/Helvetica 0 Tf 0 g"));
    let Q = await jt._getFontData(A, t, this.data.defaultAppearanceData, this._fieldResources.mergedResources), E, f, d;
    const u = [];
    let x = !1;
    for (const G of c) {
      const v = Q.encodeString(G);
      v.length > 1 && (x = !0), u.push(v.join(""));
    }
    if (x && i & st.SAVE)
      return {
        needAppearances: !0
      };
    if (x && this._isOffscreenCanvasSupported) {
      const G = this.data.comb ? "monospace" : "sans-serif", v = new ti(A.xref, G), X = v.createFontResources(c.join("")), gA = X.getRaw("Font");
      if (this._fieldResources.mergedResources.has("Font")) {
        const eA = this._fieldResources.mergedResources.get("Font");
        for (const z of gA.getKeys())
          eA.set(z, gA.getRaw(z));
      } else
        this._fieldResources.mergedResources.set("Font", gA);
      const N = v.fontName.name;
      Q = await jt._getFontData(A, t, {
        fontName: N,
        fontSize: 0
      }, X);
      for (let eA = 0, z = u.length; eA < z; eA++)
        u[eA] = fc(c[eA]);
      const F = Object.assign(/* @__PURE__ */ Object.create(null), this.data.defaultAppearanceData);
      this.data.defaultAppearanceData.fontSize = 0, this.data.defaultAppearanceData.fontName = N, [E, f, d] = this._computeFontSize(h - 2 * l, B - 2 * C, r, Q, I), this.data.defaultAppearanceData = F;
    } else
      this._isOffscreenCanvasSupported || k("_getAppearance: OffscreenCanvas is not supported, annotation may not render correctly."), [E, f, d] = this._computeFontSize(h - 2 * l, B - 2 * C, r, Q, I);
    let p = Q.descent;
    isNaN(p) ? p = yo * d : p = Math.max(yo * d, Math.abs(p) * f);
    const m = Math.min(Math.floor((h - f) / 2), l), D = this.data.textAlignment;
    if (this.data.multiLine)
      return this._getMultilineAppearance(E, u, Q, f, B, h, D, C, m, p, d, s);
    if (this.data.comb)
      return this._getCombAppearance(E, Q, u[0], f, B, h, C, m, p, d, s);
    const S = m + p;
    if (D === 0 || D > 2)
      return `/Tx BMC q ${o}BT ` + E + ` 1 0 0 1 ${$A(C)} ${$A(S)} Tm (${ts(u[0])}) Tj ET Q EMC`;
    const y = {
      shift: 0
    }, H = this._renderText(u[0], Q, f, B, D, y, C, S);
    return `/Tx BMC q ${o}BT ` + E + ` 1 0 0 1 0 0 Tm ${H} ET Q EMC`;
  }
  static async _getFontData(A, t, i, s) {
    const a = new Ct(), n = {
      font: null,
      clone() {
        return this;
      }
    }, {
      fontName: r,
      fontSize: g
    } = i;
    return await A.handleSetFont(s, [r && L.get(r), g], null, a, t, n, null), n.font;
  }
  _getTextWidth(A, t) {
    return t.charsToGlyphs(A).reduce((i, s) => i + s.width, 0) / 1e3;
  }
  _computeFontSize(A, t, i, s, a) {
    let {
      fontSize: n
    } = this.data.defaultAppearanceData, r = (n || 12) * Ei, g = Math.round(A / r);
    if (!n) {
      const o = (l) => Math.floor(l * 100) / 100;
      if (a === -1) {
        const l = this._getTextWidth(i, s);
        n = o(Math.min(A / Ei, t / l)), g = 1;
      } else {
        const l = i.split(/\r\n?|\n/), C = [];
        for (const B of l) {
          const Q = s.encodeString(B).join(""), E = s.charsToGlyphs(Q), f = s.getCharPositions(Q);
          C.push({
            line: Q,
            glyphs: E,
            positions: f
          });
        }
        const h = (B) => {
          let Q = 0;
          for (const E of C) {
            const f = this._splitLine(null, s, B, t, E);
            if (Q += f.length * B, Q > A)
              return !0;
          }
          return !1;
        };
        for (g = Math.max(g, a); ; ) {
          if (r = A / g, n = o(r / Ei), h(n)) {
            g++;
            continue;
          }
          break;
        }
      }
      const {
        fontName: I,
        fontColor: c
      } = this.data.defaultAppearanceData;
      this._defaultAppearance = m1({
        fontSize: n,
        fontName: I,
        fontColor: c
      });
    }
    return [this._defaultAppearance, n, A / g];
  }
  _renderText(A, t, i, s, a, n, r, g) {
    let o;
    if (a === 1) {
      const c = this._getTextWidth(A, t) * i;
      o = (s - c) / 2;
    } else if (a === 2) {
      const c = this._getTextWidth(A, t) * i;
      o = s - c - r;
    } else
      o = r;
    const I = $A(o - n.shift);
    return n.shift = o, g = $A(g), `${I} ${g} Td (${ts(A)}) Tj`;
  }
  _getSaveFieldResources(A) {
    var n;
    const {
      localResources: t,
      appearanceResources: i,
      acroFormResources: s
    } = this._fieldResources, a = (n = this.data.defaultAppearanceData) == null ? void 0 : n.fontName;
    if (!a)
      return t || R.empty;
    for (const r of [t, i])
      if (r instanceof R) {
        const g = r.get("Font");
        if (g instanceof R && g.has(a))
          return r;
      }
    if (s instanceof R) {
      const r = s.get("Font");
      if (r instanceof R && r.has(a)) {
        const g = new R(A);
        g.set(a, r.getRaw(a));
        const o = new R(A);
        return o.set("Font", g), R.merge({
          xref: A,
          dictArray: [o, t],
          mergeSubDicts: !0
        });
      }
    }
    return t || R.empty;
  }
  getFieldObject() {
    return null;
  }
}
class m9 extends jt {
  constructor(A) {
    super(A);
    const {
      dict: t
    } = A;
    t.has("PMD") && (this.flags |= oe.HIDDEN, this.data.hidden = !0, k("Barcodes are not supported")), this.data.hasOwnCanvas = this.data.readOnly && !this.data.noHTML, this._hasText = !0, typeof this.data.fieldValue != "string" && (this.data.fieldValue = "");
    let i = Ut({
      dict: t,
      key: "Q"
    });
    (!Number.isInteger(i) || i < 0 || i > 2) && (i = null), this.data.textAlignment = i;
    let s = Ut({
      dict: t,
      key: "MaxLen"
    });
    (!Number.isInteger(s) || s < 0) && (s = 0), this.data.maxLen = s, this.data.multiLine = this.hasFieldFlag(Te.MULTILINE), this.data.comb = this.hasFieldFlag(Te.COMB) && !this.hasFieldFlag(Te.MULTILINE) && !this.hasFieldFlag(Te.PASSWORD) && !this.hasFieldFlag(Te.FILESELECT) && this.data.maxLen !== 0, this.data.doNotScroll = this.hasFieldFlag(Te.DONOTSCROLL);
  }
  get hasTextContent() {
    return !!this.appearance && !this._needAppearances;
  }
  _getCombAppearance(A, t, i, s, a, n, r, g, o, I, c) {
    const l = a / this.data.maxLen, C = this.getBorderAndBackgroundAppearances(c), h = [], B = t.getCharPositions(i);
    for (const [E, f] of B)
      h.push(`(${ts(i.substring(E, f))}) Tj`);
    const Q = h.join(` ${$A(l)} 0 Td `);
    return `/Tx BMC q ${C}BT ` + A + ` 1 0 0 1 ${$A(r)} ${$A(g + o)} Tm ${Q} ET Q EMC`;
  }
  _getMultilineAppearance(A, t, i, s, a, n, r, g, o, I, c, l) {
    const C = [], h = a - 2 * g, B = {
      shift: 0
    };
    for (let f = 0, d = t.length; f < d; f++) {
      const u = t[f], x = this._splitLine(u, i, s, h);
      for (let p = 0, m = x.length; p < m; p++) {
        const D = x[p], S = f === 0 && p === 0 ? -o - (c - I) : -c;
        C.push(this._renderText(D, i, s, a, r, B, g, S));
      }
    }
    const Q = this.getBorderAndBackgroundAppearances(l), E = C.join(`
`);
    return `/Tx BMC q ${Q}BT ` + A + ` 1 0 0 1 0 ${$A(n)} Tm ${E} ET Q EMC`;
  }
  _splitLine(A, t, i, s, a = {}) {
    A = a.line || A;
    const n = a.glyphs || t.charsToGlyphs(A);
    if (n.length <= 1)
      return [A];
    const r = a.positions || t.getCharPositions(A), g = i / 1e3, o = [];
    let I = -1, c = -1, l = -1, C = 0, h = 0;
    for (let B = 0, Q = n.length; B < Q; B++) {
      const [E, f] = r[B], d = n[B], u = d.width * g;
      d.unicode === " " ? h + u > s ? (o.push(A.substring(C, E)), C = E, h = u, I = -1, l = -1) : (h += u, I = E, c = f, l = B) : h + u > s ? I !== -1 ? (o.push(A.substring(C, c)), C = c, B = l + 1, I = -1, h = 0) : (o.push(A.substring(C, E)), C = E, h = u) : h += u;
    }
    return C < A.length && o.push(A.substring(C, A.length)), o;
  }
  async extractTextContent(A, t, i) {
    await super.extractTextContent(A, t, i);
    const s = this.data.textContent;
    if (!s)
      return;
    const a = s.join(`
`);
    if (a === this.data.fieldValue)
      return;
    const n = a.replaceAll(/([.*+?^${}()|[\]\\])|(\s+)/g, (r, g) => g ? `\\${g}` : "\\s+");
    new RegExp(`^\\s*${n}\\s*$`).test(this.data.fieldValue) && (this.data.textContent = this.data.fieldValue.split(`
`));
  }
  getFieldObject() {
    return {
      id: this.data.id,
      value: this.data.fieldValue,
      defaultValue: this.data.defaultFieldValue || "",
      multiline: this.data.multiLine,
      password: this.hasFieldFlag(Te.PASSWORD),
      charLimit: this.data.maxLen,
      comb: this.data.comb,
      editable: !this.data.readOnly,
      hidden: this.data.hidden,
      name: this.data.fieldName,
      rect: this.data.rect,
      actions: this.data.actions,
      page: this.data.pageIndex,
      strokeColor: this.data.borderColor,
      fillColor: this.data.backgroundColor,
      rotation: this.rotation,
      type: "text"
    };
  }
}
class p9 extends jt {
  constructor(A) {
    super(A), this.checkedAppearance = null, this.uncheckedAppearance = null, this.data.checkBox = !this.hasFieldFlag(Te.RADIO) && !this.hasFieldFlag(Te.PUSHBUTTON), this.data.radioButton = this.hasFieldFlag(Te.RADIO) && !this.hasFieldFlag(Te.PUSHBUTTON), this.data.pushButton = this.hasFieldFlag(Te.PUSHBUTTON), this.data.isTooltipOnly = !1, this.data.checkBox ? this._processCheckBox(A) : this.data.radioButton ? this._processRadioButton(A) : this.data.pushButton ? (this.data.hasOwnCanvas = !0, this.data.noHTML = !1, this._processPushButton(A)) : k("Invalid field flags for button widget annotation");
  }
  async getOperatorList(A, t, i, s) {
    if (this.data.pushButton)
      return super.getOperatorList(A, t, i, !1, s);
    let a = null, n = null;
    if (s) {
      const g = s.get(this.data.id);
      a = g ? g.value : null, n = g ? g.rotation : null;
    }
    if (a === null && this.appearance)
      return super.getOperatorList(A, t, i, s);
    a == null && (a = this.data.checkBox ? this.data.fieldValue === this.data.exportValue : this.data.fieldValue === this.data.buttonValue);
    const r = a ? this.checkedAppearance : this.uncheckedAppearance;
    if (r) {
      const g = this.appearance, o = Yi(r.dict.getArray("Matrix"), Zt);
      n && r.dict.set("Matrix", this.getRotationMatrix(s)), this.appearance = r;
      const I = super.getOperatorList(A, t, i, s);
      return this.appearance = g, r.dict.set("Matrix", o), I;
    }
    return {
      opList: new Ct(),
      separateForm: !1,
      separateCanvas: !1
    };
  }
  async save(A, t, i, s) {
    if (this.data.checkBox) {
      this._saveCheckbox(A, t, i, s);
      return;
    }
    this.data.radioButton && this._saveRadioButton(A, t, i, s);
  }
  async _saveCheckbox(A, t, i, s) {
    if (!i)
      return;
    const a = i.get(this.data.id), n = this._buildFlags(a == null ? void 0 : a.noView, a == null ? void 0 : a.noPrint);
    let r = a == null ? void 0 : a.rotation, g = a == null ? void 0 : a.value;
    if (r === void 0 && n === void 0 && (g === void 0 || this.data.fieldValue === this.data.exportValue === g))
      return;
    let o = A.xref.fetchIfRef(this.ref);
    if (!(o instanceof R))
      return;
    o = o.clone(), r === void 0 && (r = this.rotation), g === void 0 && (g = this.data.fieldValue === this.data.exportValue);
    const I = {
      path: this.data.fieldName,
      value: g ? this.data.exportValue : ""
    }, c = L.get(g ? this.data.exportValue : "Off");
    this.setValue(o, c, A.xref, s), o.set("AS", c), o.set("M", `D:${mi()}`), n !== void 0 && o.set("F", n);
    const l = this._getMKDict(r);
    l && o.set("MK", l), s.put(this.ref, {
      data: o,
      xfa: I,
      needAppearances: !1
    });
  }
  async _saveRadioButton(A, t, i, s) {
    if (!i)
      return;
    const a = i.get(this.data.id), n = this._buildFlags(a == null ? void 0 : a.noView, a == null ? void 0 : a.noPrint);
    let r = a == null ? void 0 : a.rotation, g = a == null ? void 0 : a.value;
    if (r === void 0 && n === void 0 && (g === void 0 || this.data.fieldValue === this.data.buttonValue === g))
      return;
    let o = A.xref.fetchIfRef(this.ref);
    if (!(o instanceof R))
      return;
    o = o.clone(), g === void 0 && (g = this.data.fieldValue === this.data.buttonValue), r === void 0 && (r = this.rotation);
    const I = {
      path: this.data.fieldName,
      value: g ? this.data.buttonValue : ""
    }, c = L.get(g ? this.data.buttonValue : "Off");
    g && this.setValue(o, c, A.xref, s), o.set("AS", c), o.set("M", `D:${mi()}`), n !== void 0 && o.set("F", n);
    const l = this._getMKDict(r);
    l && o.set("MK", l), s.put(this.ref, {
      data: o,
      xfa: I,
      needAppearances: !1
    });
  }
  _getDefaultCheckedAppearance(A, t) {
    const i = this.data.rect[2] - this.data.rect[0], s = this.data.rect[3] - this.data.rect[1], a = [0, 0, i, s], r = Math.min(i, s) * 0.8;
    let g, o;
    t === "check" ? (g = {
      width: 0.755 * r,
      height: 0.705 * r
    }, o = "3") : t === "disc" ? (g = {
      width: 0.791 * r,
      height: 0.705 * r
    }, o = "l") : WA(`_getDefaultCheckedAppearance - unsupported type: ${t}`);
    const I = $A((i - g.width) / 2), c = $A((s - g.height) / 2), l = `q BT /PdfJsZaDb ${r} Tf 0 g ${I} ${c} Td (${o}) Tj ET Q`, C = new R(A.xref);
    C.set("FormType", 1), C.set("Subtype", L.get("Form")), C.set("Type", L.get("XObject")), C.set("BBox", a), C.set("Matrix", [1, 0, 0, 1, 0, 0]), C.set("Length", l.length);
    const h = new R(A.xref), B = new R(A.xref);
    B.set("PdfJsZaDb", this.fallbackFontDict), h.set("Font", B), C.set("Resources", h), this.checkedAppearance = new Bt(l), this.checkedAppearance.dict = C, this._streams.push(this.checkedAppearance);
  }
  _processCheckBox(A) {
    const t = A.dict.get("AP");
    if (!(t instanceof R))
      return;
    const i = t.get("N");
    if (!(i instanceof R))
      return;
    const s = this._decodeFormValue(A.dict.get("AS"));
    typeof s == "string" && (this.data.fieldValue = s);
    const a = this.data.fieldValue !== null && this.data.fieldValue !== "Off" ? this.data.fieldValue : "Yes", n = i.getKeys();
    if (n.length === 0)
      n.push("Off", a);
    else if (n.length === 1)
      n[0] === "Off" ? n.push(a) : n.unshift("Off");
    else if (n.includes(a))
      n.length = 0, n.push("Off", a);
    else {
      const o = n.find((I) => I !== "Off");
      n.length = 0, n.push("Off", o);
    }
    n.includes(this.data.fieldValue) || (this.data.fieldValue = "Off"), this.data.exportValue = n[1];
    const r = i.get(this.data.exportValue);
    this.checkedAppearance = r instanceof JA ? r : null;
    const g = i.get("Off");
    this.uncheckedAppearance = g instanceof JA ? g : null, this.checkedAppearance ? this._streams.push(this.checkedAppearance) : this._getDefaultCheckedAppearance(A, "check"), this.uncheckedAppearance && this._streams.push(this.uncheckedAppearance), this._fallbackFontDict = this.fallbackFontDict, this.data.defaultFieldValue === null && (this.data.defaultFieldValue = "Off");
  }
  _processRadioButton(A) {
    this.data.buttonValue = null;
    const t = A.dict.get("Parent");
    if (t instanceof R) {
      this.parent = A.dict.getRaw("Parent");
      const r = t.get("V");
      r instanceof L && (this.data.fieldValue = this._decodeFormValue(r));
    }
    const i = A.dict.get("AP");
    if (!(i instanceof R))
      return;
    const s = i.get("N");
    if (!(s instanceof R))
      return;
    for (const r of s.getKeys())
      if (r !== "Off") {
        this.data.buttonValue = this._decodeFormValue(r);
        break;
      }
    const a = s.get(this.data.buttonValue);
    this.checkedAppearance = a instanceof JA ? a : null;
    const n = s.get("Off");
    this.uncheckedAppearance = n instanceof JA ? n : null, this.checkedAppearance ? this._streams.push(this.checkedAppearance) : this._getDefaultCheckedAppearance(A, "disc"), this.uncheckedAppearance && this._streams.push(this.uncheckedAppearance), this._fallbackFontDict = this.fallbackFontDict, this.data.defaultFieldValue === null && (this.data.defaultFieldValue = "Off");
  }
  _processPushButton(A) {
    const {
      dict: t,
      annotationGlobals: i
    } = A;
    if (!t.has("A") && !t.has("AA") && !this.data.alternativeText) {
      k("Push buttons without action dictionaries are not supported");
      return;
    }
    this.data.isTooltipOnly = !t.has("A") && !t.has("AA"), ta.parseDestDictionary({
      destDict: t,
      resultObj: this.data,
      docBaseUrl: i.baseUrl,
      docAttachments: i.attachments
    });
  }
  getFieldObject() {
    let A = "button", t;
    return this.data.checkBox ? (A = "checkbox", t = this.data.exportValue) : this.data.radioButton && (A = "radiobutton", t = this.data.buttonValue), {
      id: this.data.id,
      value: this.data.fieldValue || "Off",
      defaultValue: this.data.defaultFieldValue,
      exportValues: t,
      editable: !this.data.readOnly,
      name: this.data.fieldName,
      rect: this.data.rect,
      hidden: this.data.hidden,
      actions: this.data.actions,
      page: this.data.pageIndex,
      strokeColor: this.data.borderColor,
      fillColor: this.data.backgroundColor,
      rotation: this.rotation,
      type: A
    };
  }
  get fallbackFontDict() {
    const A = new R();
    return A.set("BaseFont", L.get("ZapfDingbats")), A.set("Type", L.get("FallbackType")), A.set("Subtype", L.get("FallbackType")), A.set("Encoding", L.get("ZapfDingbatsEncoding")), tA(this, "fallbackFontDict", A);
  }
}
class y9 extends jt {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    this.indices = t.getArray("I"), this.hasIndices = Array.isArray(this.indices) && this.indices.length > 0, this.data.options = [];
    const s = Ut({
      dict: t,
      key: "Opt"
    });
    if (Array.isArray(s))
      for (let a = 0, n = s.length; a < n; a++) {
        const r = i.fetchIfRef(s[a]), g = Array.isArray(r);
        this.data.options[a] = {
          exportValue: this._decodeFormValue(g ? i.fetchIfRef(r[0]) : r),
          displayValue: this._decodeFormValue(g ? i.fetchIfRef(r[1]) : r)
        };
      }
    if (!this.hasIndices)
      typeof this.data.fieldValue == "string" ? this.data.fieldValue = [this.data.fieldValue] : this.data.fieldValue || (this.data.fieldValue = []);
    else {
      this.data.fieldValue = [];
      const a = this.data.options.length;
      for (const n of this.indices)
        Number.isInteger(n) && n >= 0 && n < a && this.data.fieldValue.push(this.data.options[n].exportValue);
    }
    this.data.options.length === 0 && this.data.fieldValue.length > 0 && (this.data.options = this.data.fieldValue.map((a) => ({
      exportValue: a,
      displayValue: a
    }))), this.data.combo = this.hasFieldFlag(Te.COMBO), this.data.multiSelect = this.hasFieldFlag(Te.MULTISELECT), this._hasText = !0;
  }
  getFieldObject() {
    const A = this.data.combo ? "combobox" : "listbox", t = this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : null;
    return {
      id: this.data.id,
      value: t,
      defaultValue: this.data.defaultFieldValue,
      editable: !this.data.readOnly,
      name: this.data.fieldName,
      rect: this.data.rect,
      numItems: this.data.fieldValue.length,
      multipleSelection: this.data.multiSelect,
      hidden: this.data.hidden,
      actions: this.data.actions,
      items: this.data.options,
      page: this.data.pageIndex,
      strokeColor: this.data.borderColor,
      fillColor: this.data.backgroundColor,
      rotation: this.rotation,
      type: A
    };
  }
  amendSavedDict(A, t) {
    var n;
    if (!this.hasIndices)
      return;
    let i = (n = A == null ? void 0 : A.get(this.data.id)) == null ? void 0 : n.value;
    Array.isArray(i) || (i = [i]);
    const s = [], {
      options: a
    } = this.data;
    for (let r = 0, g = 0, o = a.length; r < o; r++)
      a[r].exportValue === i[g] && (s.push(r), g += 1);
    t.set("I", s);
  }
  async _getAppearance(A, t, i, s) {
    if (this.data.combo)
      return super._getAppearance(A, t, i, s);
    let a, n;
    const r = s == null ? void 0 : s.get(this.data.id);
    if (r && (n = r.rotation, a = r.value), n === void 0 && a === void 0 && !this._needAppearances)
      return null;
    a === void 0 ? a = this.data.fieldValue : Array.isArray(a) || (a = [a]);
    const g = 1, o = 2;
    let I = this.data.rect[3] - this.data.rect[1], c = this.data.rect[2] - this.data.rect[0];
    (n === 90 || n === 270) && ([c, I] = [I, c]);
    const l = this.data.options.length, C = [];
    for (let D = 0; D < l; D++) {
      const {
        exportValue: S
      } = this.data.options[D];
      a.includes(S) && C.push(D);
    }
    this._defaultAppearance || (this.data.defaultAppearanceData = to(this._defaultAppearance = "/Helvetica 0 Tf 0 g"));
    const h = await jt._getFontData(A, t, this.data.defaultAppearanceData, this._fieldResources.mergedResources);
    let B, {
      fontSize: Q
    } = this.data.defaultAppearanceData;
    if (Q)
      B = this._defaultAppearance;
    else {
      const D = (I - g) / l;
      let S = -1, y;
      for (const {
        displayValue: H
      } of this.data.options) {
        const G = this._getTextWidth(H, h);
        G > S && (S = G, y = H);
      }
      [B, Q] = this._computeFontSize(D, c - 2 * o, y, h, -1);
    }
    const E = Q * Ei, f = (E - Q) / 2, d = Math.floor(I / E);
    let u = 0;
    if (C.length > 0) {
      const D = Math.min(...C), S = Math.max(...C);
      u = Math.max(0, S - d + 1), u > D && (u = D);
    }
    const x = Math.min(u + d + 1, l), p = ["/Tx BMC q", `1 1 ${c} ${I} re W n`];
    if (C.length) {
      p.push("0.600006 0.756866 0.854904 rg");
      for (const D of C)
        u <= D && D < x && p.push(`1 ${I - (D - u + 1) * E} ${c} ${E} re f`);
    }
    p.push("BT", B, `1 0 0 1 0 ${I} Tm`);
    const m = {
      shift: 0
    };
    for (let D = u; D < x; D++) {
      const {
        displayValue: S
      } = this.data.options[D], y = D === u ? f : 0;
      p.push(this._renderText(S, h, Q, c, 0, m, o, -E + y));
    }
    return p.push("ET Q EMC"), p.join(`
`);
  }
}
class Ol extends jt {
  constructor(A) {
    super(A), this.data.fieldValue = null, this.data.hasOwnCanvas = this.data.noRotate, this.data.noHTML = !this.data.hasOwnCanvas;
  }
  getFieldObject() {
    return {
      id: this.data.id,
      value: null,
      page: this.data.pageIndex,
      type: "signature"
    };
  }
}
class w9 extends ft {
  constructor(A) {
    super(A), this.data.noRotate = !0, this.data.hasOwnCanvas = this.data.noRotate, this.data.noHTML = !1;
    const {
      dict: i
    } = A;
    this.data.annotationType = He.TEXT, this.data.hasAppearance ? this.data.name = "NoIcon" : (this.data.rect[1] = this.data.rect[3] - 22, this.data.rect[2] = this.data.rect[0] + 22, this.data.name = i.has("Name") ? i.get("Name").name : "Note"), i.has("State") ? (this.data.state = i.get("State") || null, this.data.stateModel = i.get("StateModel") || null) : (this.data.state = null, this.data.stateModel = null);
  }
}
class b9 extends Ra {
  constructor(A) {
    var a;
    super(A);
    const {
      dict: t,
      annotationGlobals: i
    } = A;
    this.data.annotationType = He.LINK, this.data.noHTML = !1;
    const s = Fa(t, this.rectangle);
    s && (this.data.quadPoints = s), (a = this.data).borderColor || (a.borderColor = this.data.color), ta.parseDestDictionary({
      destDict: t,
      resultObj: this.data,
      docBaseUrl: i.baseUrl,
      docAttachments: i.attachments
    });
  }
}
class Zl extends Ra {
  constructor(A) {
    super(A);
    const {
      dict: t
    } = A;
    this.data.annotationType = He.POPUP, this.data.noHTML = !1, (this.data.rect[0] === this.data.rect[2] || this.data.rect[1] === this.data.rect[3]) && (this.data.rect = null);
    let i = t.get("Parent");
    if (!i) {
      k("Popup annotation has a missing or invalid parent annotation.");
      return;
    }
    this.data.parentRect = ai(i.getArray("Rect"), null);
    const s = i.get("RT");
    if (xe(s, Pr.GROUP) && (i = i.get("IRT")), i.has("M") ? (this.setModificationDate(i.get("M")), this.data.modificationDate = this.modificationDate) : this.data.modificationDate = null, i.has("C") ? (this.setColor(i.getArray("C")), this.data.color = this.color) : this.data.color = null, !this.viewable) {
      const a = i.get("F");
      this._isViewable(a) && this.setFlags(a);
    }
    this.setTitle(i.get("T")), this.data.titleObj = this._title, this.setContents(i.get("Contents")), this.data.contentsObj = this._contents, i.has("RC") && (this.data.richText = Sa.getRichTextAsHtml(i.get("RC"))), this.data.open = !!t.get("Open");
  }
}
class Kr extends ft {
  constructor(A) {
    var s;
    super(A), this.data.hasOwnCanvas = this.data.noRotate, this.data.isEditable = !this.data.noHTML, this.data.noHTML = !1;
    const {
      evaluatorOptions: t,
      xref: i
    } = A;
    if (this.data.annotationType = He.FREETEXT, this.setDefaultAppearance(A), this._hasAppearance = !!this.appearance, this._hasAppearance) {
      const {
        fontColor: a,
        fontSize: n
      } = x1(this.appearance, t, i);
      this.data.defaultAppearanceData.fontColor = a, this.data.defaultAppearanceData.fontSize = n || 10;
    } else {
      (s = this.data.defaultAppearanceData).fontSize || (s.fontSize = 10);
      const {
        fontColor: a,
        fontSize: n
      } = this.data.defaultAppearanceData;
      if (this._contents.str) {
        this.data.textContent = this._contents.str.split(/\r\n?|\n/).map((I) => I.trimEnd());
        const {
          coords: r,
          bbox: g,
          matrix: o
        } = ti.getFirstPositionInfo(this.rectangle, this.rotation, n);
        this.data.textPosition = this._transformPoint(r, g, o);
      }
      if (this._isOffscreenCanvasSupported) {
        const r = A.dict.get("CA"), g = new ti(i, "sans-serif");
        this.appearance = g.createAppearance(this._contents.str, this.rectangle, this.rotation, n, a, r), this._streams.push(this.appearance);
      } else
        k("FreeTextAnnotation: OffscreenCanvas is not supported, annotation may not render correctly.");
    }
  }
  get hasTextContent() {
    return this._hasAppearance;
  }
  static createNewDict(A, t, {
    apRef: i,
    ap: s
  }) {
    const {
      color: a,
      fontSize: n,
      oldAnnotation: r,
      rect: g,
      rotation: o,
      user: I,
      value: c
    } = A, l = r || new R(t);
    l.set("Type", L.get("Annot")), l.set("Subtype", L.get("FreeText")), r ? (l.set("M", `D:${mi()}`), l.delete("RC")) : l.set("CreationDate", `D:${mi()}`), l.set("Rect", g);
    const C = `/Helv ${n} Tf ${pi(a, !0)}`;
    if (l.set("DA", C), l.set("Contents", Mt(c)), l.set("F", 4), l.set("Border", [0, 0, 0]), l.set("Rotate", o), I && l.set("T", Mt(I)), i || s) {
      const h = new R(t);
      l.set("AP", h), i ? h.set("N", i) : h.set("N", s);
    }
    return l;
  }
  static async createNewAppearanceStream(A, t, i) {
    const {
      baseFontRef: s,
      evaluator: a,
      task: n
    } = i, {
      color: r,
      fontSize: g,
      rect: o,
      rotation: I,
      value: c
    } = A, l = new R(t), C = new R(t);
    if (s)
      C.set("Helv", s);
    else {
      const _ = new R(t);
      _.set("BaseFont", L.get("Helvetica")), _.set("Type", L.get("Font")), _.set("Subtype", L.get("Type1")), _.set("Encoding", L.get("WinAnsiEncoding")), C.set("Helv", _);
    }
    l.set("Font", C);
    const h = await jt._getFontData(a, n, {
      fontName: "Helv",
      fontSize: g
    }, l), [B, Q, E, f] = o;
    let d = E - B, u = f - Q;
    I % 180 !== 0 && ([d, u] = [u, d]);
    const x = c.split(`
`), p = g / 1e3;
    let m = -1 / 0;
    const D = [];
    for (let _ of x) {
      const TA = h.encodeString(_);
      if (TA.length > 1)
        return null;
      _ = TA.join(""), D.push(_);
      let oA = 0;
      const U = h.charsToGlyphs(_);
      for (const J of U)
        oA += J.width * p;
      m = Math.max(m, oA);
    }
    let S = 1;
    m > d && (S = d / m);
    let y = 1;
    const H = Ei * g, G = (Ei - fn) * g, v = H * x.length;
    v > u && (y = u / v);
    const X = Math.min(S, y), gA = g * X;
    let N, F, eA;
    switch (I) {
      case 0:
        eA = [1, 0, 0, 1], F = [o[0], o[1], d, u], N = [o[0], o[3] - G];
        break;
      case 90:
        eA = [0, 1, -1, 0], F = [o[1], -o[2], d, u], N = [o[1], -o[0] - G];
        break;
      case 180:
        eA = [-1, 0, 0, -1], F = [-o[2], -o[3], d, u], N = [-o[2], -o[1] - G];
        break;
      case 270:
        eA = [0, -1, 1, 0], F = [-o[3], o[0], d, u], N = [-o[3], o[2] - G];
        break;
    }
    const z = ["q", `${eA.join(" ")} 0 0 cm`, `${F.join(" ")} re W n`, "BT", `${pi(r, !0)}`, `0 Tc /Helv ${$A(gA)} Tf`];
    z.push(`${N.join(" ")} Td (${ts(D[0])}) Tj`);
    const cA = $A(H);
    for (let _ = 1, TA = D.length; _ < TA; _++) {
      const oA = D[_];
      z.push(`0 -${cA} Td (${ts(oA)}) Tj`);
    }
    z.push("ET", "Q");
    const wA = z.join(`
`), mA = new R(t);
    mA.set("FormType", 1), mA.set("Subtype", L.get("Form")), mA.set("Type", L.get("XObject")), mA.set("BBox", o), mA.set("Resources", l), mA.set("Matrix", [1, 0, 0, 1, -o[0], -o[1]]);
    const DA = new Bt(wA);
    return DA.dict = mA, DA;
  }
}
class D9 extends ft {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    this.data.annotationType = He.LINE, this.data.hasOwnCanvas = this.data.noRotate, this.data.noHTML = !1;
    const s = Xr(t.getArray("L"), [0, 0, 0, 0]);
    if (this.data.lineCoordinates = ye.normalizeRect(s), this.setLineEndings(t.getArray("LE")), this.data.lineEndings = this.lineEndings, !this.appearance) {
      const a = this.color ? Et(this.color) : [0, 0, 0], n = t.get("CA"), r = V0(t.getArray("IC"), null), g = r ? Et(r) : null, o = g ? n : null, I = this.borderStyle.width || 1, c = 2 * I, l = [this.data.lineCoordinates[0] - c, this.data.lineCoordinates[1] - c, this.data.lineCoordinates[2] + c, this.data.lineCoordinates[3] + c];
      ye.intersect(this.rectangle, l) || (this.rectangle = l), this._setDefaultAppearance({
        xref: i,
        extra: `${I} w`,
        strokeColor: a,
        fillColor: g,
        strokeAlpha: n,
        fillAlpha: o,
        pointsCallback: (C, h) => (C.push(`${s[0]} ${s[1]} m`, `${s[2]} ${s[3]} l`, "S"), [h[0] - I, h[2] + I, h[7] - I, h[3] + I])
      });
    }
  }
}
class k9 extends ft {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    if (this.data.annotationType = He.SQUARE, this.data.hasOwnCanvas = this.data.noRotate, this.data.noHTML = !1, !this.appearance) {
      const s = this.color ? Et(this.color) : [0, 0, 0], a = t.get("CA"), n = V0(t.getArray("IC"), null), r = n ? Et(n) : null, g = r ? a : null;
      if (this.borderStyle.width === 0 && !r)
        return;
      this._setDefaultAppearance({
        xref: i,
        extra: `${this.borderStyle.width} w`,
        strokeColor: s,
        fillColor: r,
        strokeAlpha: a,
        fillAlpha: g,
        pointsCallback: (o, I) => {
          const c = I[4] + this.borderStyle.width / 2, l = I[5] + this.borderStyle.width / 2, C = I[6] - I[4] - this.borderStyle.width, h = I[3] - I[7] - this.borderStyle.width;
          return o.push(`${c} ${l} ${C} ${h} re`), r ? o.push("B") : o.push("S"), [I[0], I[2], I[7], I[3]];
        }
      });
    }
  }
}
class S9 extends ft {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    if (this.data.annotationType = He.CIRCLE, !this.appearance) {
      const s = this.color ? Et(this.color) : [0, 0, 0], a = t.get("CA"), n = V0(t.getArray("IC"), null), r = n ? Et(n) : null, g = r ? a : null;
      if (this.borderStyle.width === 0 && !r)
        return;
      const o = 4 / 3 * Math.tan(Math.PI / (2 * 4));
      this._setDefaultAppearance({
        xref: i,
        extra: `${this.borderStyle.width} w`,
        strokeColor: s,
        fillColor: r,
        strokeAlpha: a,
        fillAlpha: g,
        pointsCallback: (I, c) => {
          const l = c[0] + this.borderStyle.width / 2, C = c[1] - this.borderStyle.width / 2, h = c[6] - this.borderStyle.width / 2, B = c[7] + this.borderStyle.width / 2, Q = l + (h - l) / 2, E = C + (B - C) / 2, f = (h - l) / 2 * o, d = (B - C) / 2 * o;
          return I.push(`${Q} ${B} m`, `${Q + f} ${B} ${h} ${E + d} ${h} ${E} c`, `${h} ${E - d} ${Q + f} ${C} ${Q} ${C} c`, `${Q - f} ${C} ${l} ${E - d} ${l} ${E} c`, `${l} ${E + d} ${Q - f} ${B} ${Q} ${B} c`, "h"), r ? I.push("B") : I.push("S"), [c[0], c[2], c[7], c[3]];
        }
      });
    }
  }
}
class jl extends ft {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    this.data.annotationType = He.POLYLINE, this.data.hasOwnCanvas = this.data.noRotate, this.data.noHTML = !1, this.data.vertices = null, this instanceof Xl || (this.setLineEndings(t.getArray("LE")), this.data.lineEndings = this.lineEndings);
    const s = t.getArray("Vertices");
    if (!rt(s, null))
      return;
    const a = this.data.vertices = Float32Array.from(s);
    if (!this.appearance) {
      const n = this.color ? Et(this.color) : [0, 0, 0], r = t.get("CA"), g = this.borderStyle.width || 1, o = 2 * g, I = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
      for (let c = 0, l = a.length; c < l; c += 2)
        I[0] = Math.min(I[0], a[c] - o), I[1] = Math.min(I[1], a[c + 1] - o), I[2] = Math.max(I[2], a[c] + o), I[3] = Math.max(I[3], a[c + 1] + o);
      ye.intersect(this.rectangle, I) || (this.rectangle = I), this._setDefaultAppearance({
        xref: i,
        extra: `${g} w`,
        strokeColor: n,
        strokeAlpha: r,
        pointsCallback: (c, l) => {
          for (let C = 0, h = a.length; C < h; C += 2)
            c.push(`${a[C]} ${a[C + 1]} ${C === 0 ? "m" : "l"}`);
          return c.push("S"), [l[0], l[2], l[7], l[3]];
        }
      });
    }
  }
}
class Xl extends jl {
  constructor(A) {
    super(A), this.data.annotationType = He.POLYGON;
  }
}
class F9 extends ft {
  constructor(A) {
    super(A), this.data.annotationType = He.CARET;
  }
}
class Ns extends ft {
  constructor(A) {
    super(A), this.data.hasOwnCanvas = this.data.noRotate, this.data.noHTML = !1;
    const {
      dict: t,
      xref: i
    } = A;
    this.data.annotationType = He.INK, this.data.inkLists = [], this.data.isEditable = !this.data.noHTML, this.data.noHTML = !1, this.data.opacity = t.get("CA") || 1;
    const s = t.getArray("InkList");
    if (Array.isArray(s)) {
      for (let a = 0, n = s.length; a < n; ++a) {
        if (!Array.isArray(s[a]))
          continue;
        const r = new Float32Array(s[a].length);
        this.data.inkLists.push(r);
        for (let g = 0, o = s[a].length; g < o; g += 2) {
          const I = i.fetchIfRef(s[a][g]), c = i.fetchIfRef(s[a][g + 1]);
          typeof I == "number" && typeof c == "number" && (r[g] = I, r[g + 1] = c);
        }
      }
      if (!this.appearance) {
        const a = this.color ? Et(this.color) : [0, 0, 0], n = t.get("CA"), r = this.borderStyle.width || 1, g = 2 * r, o = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
        for (const I of this.data.inkLists)
          for (let c = 0, l = I.length; c < l; c += 2)
            o[0] = Math.min(o[0], I[c] - g), o[1] = Math.min(o[1], I[c + 1] - g), o[2] = Math.max(o[2], I[c] + g), o[3] = Math.max(o[3], I[c + 1] + g);
        ye.intersect(this.rectangle, o) || (this.rectangle = o), this._setDefaultAppearance({
          xref: i,
          extra: `${r} w`,
          strokeColor: a,
          strokeAlpha: n,
          pointsCallback: (I, c) => {
            for (const l of this.data.inkLists) {
              for (let C = 0, h = l.length; C < h; C += 2)
                I.push(`${l[C]} ${l[C + 1]} ${C === 0 ? "m" : "l"}`);
              I.push("S");
            }
            return [c[0], c[2], c[7], c[3]];
          }
        });
      }
    }
  }
  static createNewDict(A, t, {
    apRef: i,
    ap: s
  }) {
    const {
      oldAnnotation: a,
      color: n,
      opacity: r,
      paths: g,
      outlines: o,
      rect: I,
      rotation: c,
      thickness: l,
      user: C
    } = A, h = a || new R(t);
    h.set("Type", L.get("Annot")), h.set("Subtype", L.get("Ink")), h.set(a ? "M" : "CreationDate", `D:${mi()}`), h.set("Rect", I), h.set("InkList", (o == null ? void 0 : o.points) || g.points), h.set("F", 4), h.set("Rotate", c), C && h.set("T", Mt(C)), o && h.set("IT", L.get("InkHighlight"));
    const B = new R(t);
    h.set("BS", B), B.set("W", l), h.set("C", Array.from(n, (E) => E / 255)), h.set("CA", r);
    const Q = new R(t);
    return h.set("AP", Q), i ? Q.set("N", i) : Q.set("N", s), h;
  }
  static async createNewAppearanceStream(A, t, i) {
    if (A.outlines)
      return this.createNewAppearanceStreamForHighlight(A, t, i);
    const {
      color: s,
      rect: a,
      paths: n,
      thickness: r,
      opacity: g
    } = A, o = [`${r} w 1 J 1 j`, `${pi(s, !1)}`];
    g !== 1 && o.push("/R0 gs");
    for (const C of n.lines) {
      o.push(`${$A(C[4])} ${$A(C[5])} m`);
      for (let h = 6, B = C.length; h < B; h += 6)
        if (isNaN(C[h]))
          o.push(`${$A(C[h + 4])} ${$A(C[h + 5])} l`);
        else {
          const [Q, E, f, d, u, x] = C.slice(h, h + 6);
          o.push([Q, E, f, d, u, x].map($A).join(" ") + " c");
        }
      C.length === 6 && o.push(`${$A(C[4])} ${$A(C[5])} l`);
    }
    o.push("S");
    const I = o.join(`
`), c = new R(t);
    if (c.set("FormType", 1), c.set("Subtype", L.get("Form")), c.set("Type", L.get("XObject")), c.set("BBox", a), c.set("Length", I.length), g !== 1) {
      const C = new R(t), h = new R(t), B = new R(t);
      B.set("CA", g), B.set("Type", L.get("ExtGState")), h.set("R0", B), C.set("ExtGState", h), c.set("Resources", C);
    }
    const l = new Bt(I);
    return l.dict = c, l;
  }
  static async createNewAppearanceStreamForHighlight(A, t, i) {
    const {
      color: s,
      rect: a,
      outlines: {
        outline: n
      },
      opacity: r
    } = A, g = [`${pi(s, !0)}`, "/R0 gs"];
    g.push(`${$A(n[4])} ${$A(n[5])} m`);
    for (let B = 6, Q = n.length; B < Q; B += 6)
      if (isNaN(n[B]))
        g.push(`${$A(n[B + 4])} ${$A(n[B + 5])} l`);
      else {
        const [E, f, d, u, x, p] = n.slice(B, B + 6);
        g.push([E, f, d, u, x, p].map($A).join(" ") + " c");
      }
    g.push("h f");
    const o = g.join(`
`), I = new R(t);
    I.set("FormType", 1), I.set("Subtype", L.get("Form")), I.set("Type", L.get("XObject")), I.set("BBox", a), I.set("Length", o.length);
    const c = new R(t), l = new R(t);
    c.set("ExtGState", l), I.set("Resources", c);
    const C = new R(t);
    l.set("R0", C), C.set("BM", L.get("Multiply")), r !== 1 && (C.set("ca", r), C.set("Type", L.get("ExtGState")));
    const h = new Bt(o);
    return h.dict = I, h;
  }
}
class vr extends ft {
  constructor(A) {
    var a;
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    if (this.data.annotationType = He.HIGHLIGHT, this.data.isEditable = !this.data.noHTML, this.data.noHTML = !1, this.data.opacity = t.get("CA") || 1, this.data.quadPoints = Fa(t, null)) {
      const n = (a = this.appearance) == null ? void 0 : a.dict.get("Resources");
      if (!this.appearance || !(n != null && n.has("ExtGState"))) {
        this.appearance && k("HighlightAnnotation - ignoring built-in appearance stream.");
        const r = this.color ? Et(this.color) : [1, 1, 0], g = t.get("CA");
        this._setDefaultAppearance({
          xref: i,
          fillColor: r,
          blendMode: "Multiply",
          fillAlpha: g,
          pointsCallback: (o, I) => (o.push(`${I[0]} ${I[1]} m`, `${I[2]} ${I[3]} l`, `${I[6]} ${I[7]} l`, `${I[4]} ${I[5]} l`, "f"), [I[0], I[2], I[7], I[3]])
        });
      }
    } else
      this.data.popupRef = null;
  }
  static createNewDict(A, t, {
    apRef: i,
    ap: s
  }) {
    const {
      color: a,
      oldAnnotation: n,
      opacity: r,
      rect: g,
      rotation: o,
      user: I,
      quadPoints: c
    } = A, l = n || new R(t);
    if (l.set("Type", L.get("Annot")), l.set("Subtype", L.get("Highlight")), l.set(n ? "M" : "CreationDate", `D:${mi()}`), l.set("CreationDate", `D:${mi()}`), l.set("Rect", g), l.set("F", 4), l.set("Border", [0, 0, 0]), l.set("Rotate", o), l.set("QuadPoints", c), l.set("C", Array.from(a, (C) => C / 255)), l.set("CA", r), I && l.set("T", Mt(I)), i || s) {
      const C = new R(t);
      l.set("AP", C), C.set("N", i || s);
    }
    return l;
  }
  static async createNewAppearanceStream(A, t, i) {
    const {
      color: s,
      rect: a,
      outlines: n,
      opacity: r
    } = A, g = [`${pi(s, !0)}`, "/R0 gs"], o = [];
    for (const Q of n) {
      o.length = 0, o.push(`${$A(Q[0])} ${$A(Q[1])} m`);
      for (let E = 2, f = Q.length; E < f; E += 2)
        o.push(`${$A(Q[E])} ${$A(Q[E + 1])} l`);
      o.push("h"), g.push(o.join(`
`));
    }
    g.push("f*");
    const I = g.join(`
`), c = new R(t);
    c.set("FormType", 1), c.set("Subtype", L.get("Form")), c.set("Type", L.get("XObject")), c.set("BBox", a), c.set("Length", I.length);
    const l = new R(t), C = new R(t);
    l.set("ExtGState", C), c.set("Resources", l);
    const h = new R(t);
    C.set("R0", h), h.set("BM", L.get("Multiply")), r !== 1 && (h.set("ca", r), h.set("Type", L.get("ExtGState")));
    const B = new Bt(I);
    return B.dict = c, B;
  }
}
class R9 extends ft {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    if (this.data.annotationType = He.UNDERLINE, this.data.quadPoints = Fa(t, null)) {
      if (!this.appearance) {
        const a = this.color ? Et(this.color) : [0, 0, 0], n = t.get("CA");
        this._setDefaultAppearance({
          xref: i,
          extra: "[] 0 d 0.571 w",
          strokeColor: a,
          strokeAlpha: n,
          pointsCallback: (r, g) => (r.push(`${g[4]} ${g[5] + 1.3} m`, `${g[6]} ${g[7] + 1.3} l`, "S"), [g[0], g[2], g[7], g[3]])
        });
      }
    } else
      this.data.popupRef = null;
  }
}
class N9 extends ft {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    if (this.data.annotationType = He.SQUIGGLY, this.data.quadPoints = Fa(t, null)) {
      if (!this.appearance) {
        const a = this.color ? Et(this.color) : [0, 0, 0], n = t.get("CA");
        this._setDefaultAppearance({
          xref: i,
          extra: "[] 0 d 1 w",
          strokeColor: a,
          strokeAlpha: n,
          pointsCallback: (r, g) => {
            const o = (g[1] - g[5]) / 6;
            let I = o, c = g[4];
            const l = g[5], C = g[6];
            r.push(`${c} ${l + I} m`);
            do
              c += 2, I = I === 0 ? o : 0, r.push(`${c} ${l + I} l`);
            while (c < C);
            return r.push("S"), [g[4], C, l - 2 * o, l + 2 * o];
          }
        });
      }
    } else
      this.data.popupRef = null;
  }
}
class G9 extends ft {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A;
    if (this.data.annotationType = He.STRIKEOUT, this.data.quadPoints = Fa(t, null)) {
      if (!this.appearance) {
        const a = this.color ? Et(this.color) : [0, 0, 0], n = t.get("CA");
        this._setDefaultAppearance({
          xref: i,
          extra: "[] 0 d 1 w",
          strokeColor: a,
          strokeAlpha: n,
          pointsCallback: (r, g) => (r.push(`${(g[0] + g[4]) / 2} ${(g[1] + g[5]) / 2} m`, `${(g[2] + g[6]) / 2} ${(g[3] + g[7]) / 2} l`, "S"), [g[0], g[2], g[7], g[3]])
        });
      }
    } else
      this.data.popupRef = null;
  }
}
var As;
class An extends ft {
  constructor(t) {
    super(t);
    jA(this, As);
    this.data.annotationType = He.STAMP, wt(this, As, this.data.hasOwnCanvas = this.data.noRotate), this.data.isEditable = !this.data.noHTML, this.data.noHTML = !1;
  }
  mustBeViewedWhenEditing(t, i = null) {
    return t ? this.data.isEditable ? (wt(this, As, this.data.hasOwnCanvas), this.data.hasOwnCanvas = !0, !0) : !1 : (this.data.hasOwnCanvas = PA(this, As), !(i != null && i.has(this.data.id)));
  }
  static async createImage(t, i) {
    const {
      width: s,
      height: a
    } = t, n = new OffscreenCanvas(s, a), r = n.getContext("2d", {
      alpha: !0
    });
    r.drawImage(t, 0, 0);
    const g = r.getImageData(0, 0, s, a).data, o = new Uint32Array(g.buffer), I = o.some(ht.isLittleEndian ? (E) => E >>> 24 !== 255 : (E) => (E & 255) !== 255);
    I && (r.fillStyle = "white", r.fillRect(0, 0, s, a), r.drawImage(t, 0, 0));
    const c = n.convertToBlob({
      type: "image/jpeg",
      quality: 1
    }).then((E) => E.arrayBuffer()), l = L.get("XObject"), C = L.get("Image"), h = new R(i);
    h.set("Type", l), h.set("Subtype", C), h.set("BitsPerComponent", 8), h.set("ColorSpace", L.get("DeviceRGB")), h.set("Filter", L.get("DCTDecode")), h.set("BBox", [0, 0, s, a]), h.set("Width", s), h.set("Height", a);
    let B = null;
    if (I) {
      const E = new Uint8Array(o.length);
      if (ht.isLittleEndian)
        for (let d = 0, u = o.length; d < u; d++)
          E[d] = o[d] >>> 24;
      else
        for (let d = 0, u = o.length; d < u; d++)
          E[d] = o[d] & 255;
      const f = new R(i);
      f.set("Type", l), f.set("Subtype", C), f.set("BitsPerComponent", 8), f.set("ColorSpace", L.get("DeviceGray")), f.set("Width", s), f.set("Height", a), B = new Ee(E, 0, 0, f);
    }
    return {
      imageStream: new Ee(await c, 0, 0, h),
      smaskStream: B,
      width: s,
      height: a
    };
  }
  static createNewDict(t, i, {
    apRef: s,
    ap: a
  }) {
    const {
      oldAnnotation: n,
      rect: r,
      rotation: g,
      user: o
    } = t, I = n || new R(i);
    if (I.set("Type", L.get("Annot")), I.set("Subtype", L.get("Stamp")), I.set(n ? "M" : "CreationDate", `D:${mi()}`), I.set("Rect", r), I.set("F", 4), I.set("Border", [0, 0, 0]), I.set("Rotate", g), o && I.set("T", Mt(o)), s || a) {
      const c = new R(i);
      I.set("AP", c), s ? c.set("N", s) : c.set("N", a);
    }
    return I;
  }
  static async createNewAppearanceStream(t, i, s) {
    if (t.oldAnnotation)
      return null;
    const {
      rotation: a
    } = t, {
      imageRef: n,
      width: r,
      height: g
    } = s.image, o = new R(i), I = new R(i);
    o.set("XObject", I), I.set("Im0", n);
    const c = `q ${r} 0 0 ${g} 0 0 cm /Im0 Do Q`, l = new R(i);
    if (l.set("FormType", 1), l.set("Subtype", L.get("Form")), l.set("Type", L.get("XObject")), l.set("BBox", [0, 0, r, g]), l.set("Resources", o), a) {
      const h = wn(a, r, g);
      l.set("Matrix", h);
    }
    const C = new Bt(c);
    return C.dict = l, C;
  }
}
As = new WeakMap();
class U9 extends ft {
  constructor(A) {
    super(A);
    const {
      dict: t,
      xref: i
    } = A, s = new mg(t.get("FS"), i);
    this.data.annotationType = He.FILEATTACHMENT, this.data.hasOwnCanvas = this.data.noRotate, this.data.noHTML = !1, this.data.file = s.serializable;
    const a = t.get("Name");
    this.data.name = a instanceof L ? XA(a.name) : "PushPin";
    const n = t.get("ca");
    this.data.fillAlpha = typeof n == "number" && n >= 0 && n <= 1 ? n : null;
  }
}
const XI = 512;
class M9 extends $e {
  constructor(A, t, i) {
    super(t), this.str = A, this.dict = A.dict, this.decrypt = i, this.nextChunk = null, this.initialized = !1;
  }
  readBlock() {
    var r;
    let A;
    if (this.initialized ? A = this.nextChunk : (A = this.str.getBytes(XI), this.initialized = !0), !A || A.length === 0) {
      this.eof = !0;
      return;
    }
    this.nextChunk = this.str.getBytes(XI);
    const t = ((r = this.nextChunk) == null ? void 0 : r.length) > 0, i = this.decrypt;
    A = i(A, !t);
    const s = this.bufferLength, a = s + A.length;
    this.ensureBuffer(a).set(A, s), this.bufferLength = a;
  }
}
class A0 {
  constructor(A) {
    this.a = 0, this.b = 0;
    const t = new Uint8Array(256), i = A.length;
    for (let s = 0; s < 256; ++s)
      t[s] = s;
    for (let s = 0, a = 0; s < 256; ++s) {
      const n = t[s];
      a = a + n + A[s % i] & 255, t[s] = t[a], t[a] = n;
    }
    this.s = t;
  }
  encryptBlock(A) {
    let t = this.a, i = this.b;
    const s = this.s, a = A.length, n = new Uint8Array(a);
    for (let r = 0; r < a; ++r) {
      t = t + 1 & 255;
      const g = s[t];
      i = i + g & 255;
      const o = s[i];
      s[t] = o, s[i] = g, n[r] = A[r] ^ s[g + o & 255];
    }
    return this.a = t, this.b = i, n;
  }
  decryptBlock(A) {
    return this.encryptBlock(A);
  }
  encrypt(A) {
    return this.encryptBlock(A);
  }
}
const Ni = function() {
  const A = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]), t = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);
  function i(s, a, n) {
    let r = 1732584193, g = -271733879, o = -1732584194, I = 271733878;
    const c = n + 72 & -64, l = new Uint8Array(c);
    let C, h;
    for (C = 0; C < n; ++C)
      l[C] = s[a++];
    l[C++] = 128;
    const B = c - 8;
    for (; C < B; )
      l[C++] = 0;
    l[C++] = n << 3 & 255, l[C++] = n >> 5 & 255, l[C++] = n >> 13 & 255, l[C++] = n >> 21 & 255, l[C++] = n >>> 29 & 255, l[C++] = 0, l[C++] = 0, l[C++] = 0;
    const Q = new Int32Array(16);
    for (C = 0; C < c; ) {
      for (h = 0; h < 16; ++h, C += 4)
        Q[h] = l[C] | l[C + 1] << 8 | l[C + 2] << 16 | l[C + 3] << 24;
      let E = r, f = g, d = o, u = I, x, p;
      for (h = 0; h < 64; ++h) {
        h < 16 ? (x = f & d | ~f & u, p = h) : h < 32 ? (x = u & f | ~u & d, p = 5 * h + 1 & 15) : h < 48 ? (x = f ^ d ^ u, p = 3 * h + 5 & 15) : (x = d ^ (f | ~u), p = 7 * h & 15);
        const m = u, D = E + x + t[h] + Q[p] | 0, S = A[h];
        u = d, d = f, f = f + (D << S | D >>> 32 - S) | 0, E = m;
      }
      r = r + E | 0, g = g + f | 0, o = o + d | 0, I = I + u | 0;
    }
    return new Uint8Array([r & 255, r >> 8 & 255, r >> 16 & 255, r >>> 24 & 255, g & 255, g >> 8 & 255, g >> 16 & 255, g >>> 24 & 255, o & 255, o >> 8 & 255, o >> 16 & 255, o >>> 24 & 255, I & 255, I >> 8 & 255, I >> 16 & 255, I >>> 24 & 255]);
  }
  return i;
}();
class iA {
  constructor(A, t) {
    this.high = A | 0, this.low = t | 0;
  }
  and(A) {
    this.high &= A.high, this.low &= A.low;
  }
  xor(A) {
    this.high ^= A.high, this.low ^= A.low;
  }
  or(A) {
    this.high |= A.high, this.low |= A.low;
  }
  shiftRight(A) {
    A >= 32 ? (this.low = this.high >>> A - 32 | 0, this.high = 0) : (this.low = this.low >>> A | this.high << 32 - A, this.high = this.high >>> A | 0);
  }
  shiftLeft(A) {
    A >= 32 ? (this.high = this.low << A - 32, this.low = 0) : (this.high = this.high << A | this.low >>> 32 - A, this.low <<= A);
  }
  rotateRight(A) {
    let t, i;
    A & 32 ? (i = this.low, t = this.high) : (t = this.low, i = this.high), A &= 31, this.low = t >>> A | i << 32 - A, this.high = i >>> A | t << 32 - A;
  }
  not() {
    this.high = ~this.high, this.low = ~this.low;
  }
  add(A) {
    const t = (this.low >>> 0) + (A.low >>> 0);
    let i = (this.high >>> 0) + (A.high >>> 0);
    t > 4294967295 && (i += 1), this.low = t | 0, this.high = i | 0;
  }
  copyTo(A, t) {
    A[t] = this.high >>> 24 & 255, A[t + 1] = this.high >> 16 & 255, A[t + 2] = this.high >> 8 & 255, A[t + 3] = this.high & 255, A[t + 4] = this.low >>> 24 & 255, A[t + 5] = this.low >> 16 & 255, A[t + 6] = this.low >> 8 & 255, A[t + 7] = this.low & 255;
  }
  assign(A) {
    this.high = A.high, this.low = A.low;
  }
}
const K0 = /* @__PURE__ */ function() {
  function A(I, c) {
    return I >>> c | I << 32 - c;
  }
  function t(I, c, l) {
    return I & c ^ ~I & l;
  }
  function i(I, c, l) {
    return I & c ^ I & l ^ c & l;
  }
  function s(I) {
    return A(I, 2) ^ A(I, 13) ^ A(I, 22);
  }
  function a(I) {
    return A(I, 6) ^ A(I, 11) ^ A(I, 25);
  }
  function n(I) {
    return A(I, 7) ^ A(I, 18) ^ I >>> 3;
  }
  function r(I) {
    return A(I, 17) ^ A(I, 19) ^ I >>> 10;
  }
  const g = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
  function o(I, c, l) {
    let C = 1779033703, h = 3144134277, B = 1013904242, Q = 2773480762, E = 1359893119, f = 2600822924, d = 528734635, u = 1541459225;
    const x = Math.ceil((l + 9) / 64) * 64, p = new Uint8Array(x);
    let m, D;
    for (m = 0; m < l; ++m)
      p[m] = I[c++];
    p[m++] = 128;
    const S = x - 8;
    for (; m < S; )
      p[m++] = 0;
    p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = l >>> 29 & 255, p[m++] = l >> 21 & 255, p[m++] = l >> 13 & 255, p[m++] = l >> 5 & 255, p[m++] = l << 3 & 255;
    const y = new Uint32Array(64);
    for (m = 0; m < x; ) {
      for (D = 0; D < 16; ++D)
        y[D] = p[m] << 24 | p[m + 1] << 16 | p[m + 2] << 8 | p[m + 3], m += 4;
      for (D = 16; D < 64; ++D)
        y[D] = r(y[D - 2]) + y[D - 7] + n(y[D - 15]) + y[D - 16] | 0;
      let H = C, G = h, v = B, X = Q, gA = E, N = f, F = d, eA = u, z, cA;
      for (D = 0; D < 64; ++D)
        z = eA + a(gA) + t(gA, N, F) + g[D] + y[D], cA = s(H) + i(H, G, v), eA = F, F = N, N = gA, gA = X + z | 0, X = v, v = G, G = H, H = z + cA | 0;
      C = C + H | 0, h = h + G | 0, B = B + v | 0, Q = Q + X | 0, E = E + gA | 0, f = f + N | 0, d = d + F | 0, u = u + eA | 0;
    }
    return new Uint8Array([C >> 24 & 255, C >> 16 & 255, C >> 8 & 255, C & 255, h >> 24 & 255, h >> 16 & 255, h >> 8 & 255, h & 255, B >> 24 & 255, B >> 16 & 255, B >> 8 & 255, B & 255, Q >> 24 & 255, Q >> 16 & 255, Q >> 8 & 255, Q & 255, E >> 24 & 255, E >> 16 & 255, E >> 8 & 255, E & 255, f >> 24 & 255, f >> 16 & 255, f >> 8 & 255, f & 255, d >> 24 & 255, d >> 16 & 255, d >> 8 & 255, d & 255, u >> 24 & 255, u >> 16 & 255, u >> 8 & 255, u & 255]);
  }
  return o;
}(), Vl = function() {
  function A(o, I, c, l, C) {
    o.assign(I), o.and(c), C.assign(I), C.not(), C.and(l), o.xor(C);
  }
  function t(o, I, c, l, C) {
    o.assign(I), o.and(c), C.assign(I), C.and(l), o.xor(C), C.assign(c), C.and(l), o.xor(C);
  }
  function i(o, I, c) {
    o.assign(I), o.rotateRight(28), c.assign(I), c.rotateRight(34), o.xor(c), c.assign(I), c.rotateRight(39), o.xor(c);
  }
  function s(o, I, c) {
    o.assign(I), o.rotateRight(14), c.assign(I), c.rotateRight(18), o.xor(c), c.assign(I), c.rotateRight(41), o.xor(c);
  }
  function a(o, I, c) {
    o.assign(I), o.rotateRight(1), c.assign(I), c.rotateRight(8), o.xor(c), c.assign(I), c.shiftRight(7), o.xor(c);
  }
  function n(o, I, c) {
    o.assign(I), o.rotateRight(19), c.assign(I), c.rotateRight(61), o.xor(c), c.assign(I), c.shiftRight(6), o.xor(c);
  }
  const r = [new iA(1116352408, 3609767458), new iA(1899447441, 602891725), new iA(3049323471, 3964484399), new iA(3921009573, 2173295548), new iA(961987163, 4081628472), new iA(1508970993, 3053834265), new iA(2453635748, 2937671579), new iA(2870763221, 3664609560), new iA(3624381080, 2734883394), new iA(310598401, 1164996542), new iA(607225278, 1323610764), new iA(1426881987, 3590304994), new iA(1925078388, 4068182383), new iA(2162078206, 991336113), new iA(2614888103, 633803317), new iA(3248222580, 3479774868), new iA(3835390401, 2666613458), new iA(4022224774, 944711139), new iA(264347078, 2341262773), new iA(604807628, 2007800933), new iA(770255983, 1495990901), new iA(1249150122, 1856431235), new iA(1555081692, 3175218132), new iA(1996064986, 2198950837), new iA(2554220882, 3999719339), new iA(2821834349, 766784016), new iA(2952996808, 2566594879), new iA(3210313671, 3203337956), new iA(3336571891, 1034457026), new iA(3584528711, 2466948901), new iA(113926993, 3758326383), new iA(338241895, 168717936), new iA(666307205, 1188179964), new iA(773529912, 1546045734), new iA(1294757372, 1522805485), new iA(1396182291, 2643833823), new iA(1695183700, 2343527390), new iA(1986661051, 1014477480), new iA(2177026350, 1206759142), new iA(2456956037, 344077627), new iA(2730485921, 1290863460), new iA(2820302411, 3158454273), new iA(3259730800, 3505952657), new iA(3345764771, 106217008), new iA(3516065817, 3606008344), new iA(3600352804, 1432725776), new iA(4094571909, 1467031594), new iA(275423344, 851169720), new iA(430227734, 3100823752), new iA(506948616, 1363258195), new iA(659060556, 3750685593), new iA(883997877, 3785050280), new iA(958139571, 3318307427), new iA(1322822218, 3812723403), new iA(1537002063, 2003034995), new iA(1747873779, 3602036899), new iA(1955562222, 1575990012), new iA(2024104815, 1125592928), new iA(2227730452, 2716904306), new iA(2361852424, 442776044), new iA(2428436474, 593698344), new iA(2756734187, 3733110249), new iA(3204031479, 2999351573), new iA(3329325298, 3815920427), new iA(3391569614, 3928383900), new iA(3515267271, 566280711), new iA(3940187606, 3454069534), new iA(4118630271, 4000239992), new iA(116418474, 1914138554), new iA(174292421, 2731055270), new iA(289380356, 3203993006), new iA(460393269, 320620315), new iA(685471733, 587496836), new iA(852142971, 1086792851), new iA(1017036298, 365543100), new iA(1126000580, 2618297676), new iA(1288033470, 3409855158), new iA(1501505948, 4234509866), new iA(1607167915, 987167468), new iA(1816402316, 1246189591)];
  function g(o, I, c, l = !1) {
    let C, h, B, Q, E, f, d, u;
    l ? (C = new iA(3418070365, 3238371032), h = new iA(1654270250, 914150663), B = new iA(2438529370, 812702999), Q = new iA(355462360, 4144912697), E = new iA(1731405415, 4290775857), f = new iA(2394180231, 1750603025), d = new iA(3675008525, 1694076839), u = new iA(1203062813, 3204075428)) : (C = new iA(1779033703, 4089235720), h = new iA(3144134277, 2227873595), B = new iA(1013904242, 4271175723), Q = new iA(2773480762, 1595750129), E = new iA(1359893119, 2917565137), f = new iA(2600822924, 725511199), d = new iA(528734635, 4215389547), u = new iA(1541459225, 327033209));
    const x = Math.ceil((c + 17) / 128) * 128, p = new Uint8Array(x);
    let m, D;
    for (m = 0; m < c; ++m)
      p[m] = o[I++];
    p[m++] = 128;
    const S = x - 16;
    for (; m < S; )
      p[m++] = 0;
    p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = 0, p[m++] = c >>> 29 & 255, p[m++] = c >> 21 & 255, p[m++] = c >> 13 & 255, p[m++] = c >> 5 & 255, p[m++] = c << 3 & 255;
    const y = new Array(80);
    for (m = 0; m < 80; m++)
      y[m] = new iA(0, 0);
    let H = new iA(0, 0), G = new iA(0, 0), v = new iA(0, 0), X = new iA(0, 0), gA = new iA(0, 0), N = new iA(0, 0), F = new iA(0, 0), eA = new iA(0, 0);
    const z = new iA(0, 0), cA = new iA(0, 0), wA = new iA(0, 0), mA = new iA(0, 0);
    let DA;
    for (m = 0; m < x; ) {
      for (D = 0; D < 16; ++D)
        y[D].high = p[m] << 24 | p[m + 1] << 16 | p[m + 2] << 8 | p[m + 3], y[D].low = p[m + 4] << 24 | p[m + 5] << 16 | p[m + 6] << 8 | p[m + 7], m += 8;
      for (D = 16; D < 80; ++D)
        DA = y[D], n(DA, y[D - 2], mA), DA.add(y[D - 7]), a(wA, y[D - 15], mA), DA.add(wA), DA.add(y[D - 16]);
      for (H.assign(C), G.assign(h), v.assign(B), X.assign(Q), gA.assign(E), N.assign(f), F.assign(d), eA.assign(u), D = 0; D < 80; ++D)
        z.assign(eA), s(wA, gA, mA), z.add(wA), A(wA, gA, N, F, mA), z.add(wA), z.add(r[D]), z.add(y[D]), i(cA, H, mA), t(wA, H, G, v, mA), cA.add(wA), DA = eA, eA = F, F = N, N = gA, X.add(z), gA = X, X = v, v = G, G = H, DA.assign(z), DA.add(cA), H = DA;
      C.add(H), h.add(G), B.add(v), Q.add(X), E.add(gA), f.add(N), d.add(F), u.add(eA);
    }
    let _;
    return l ? (_ = new Uint8Array(48), C.copyTo(_, 0), h.copyTo(_, 8), B.copyTo(_, 16), Q.copyTo(_, 24), E.copyTo(_, 32), f.copyTo(_, 40)) : (_ = new Uint8Array(64), C.copyTo(_, 0), h.copyTo(_, 8), B.copyTo(_, 16), Q.copyTo(_, 24), E.copyTo(_, 32), f.copyTo(_, 40), d.copyTo(_, 48), u.copyTo(_, 56)), _;
  }
  return g;
}();
function L9(e, A, t) {
  return Vl(e, A, t, !0);
}
class H9 {
  decryptBlock(A) {
    return A;
  }
  encrypt(A) {
    return A;
  }
}
class xo {
  constructor() {
    this._s = new Uint8Array([99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]), this._inv_s = new Uint8Array([82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]), this._mix = new Uint32Array([0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795]), this._mixCol = new Uint8Array(256);
    for (let A = 0; A < 256; A++)
      this._mixCol[A] = A < 128 ? A << 1 : A << 1 ^ 27;
    this.buffer = new Uint8Array(16), this.bufferPosition = 0;
  }
  _expandKey(A) {
    WA("Cannot call `_expandKey` on the base class");
  }
  _decrypt(A, t) {
    let i, s, a;
    const n = new Uint8Array(16);
    n.set(A);
    for (let r = 0, g = this._keySize; r < 16; ++r, ++g)
      n[r] ^= t[g];
    for (let r = this._cyclesOfRepetition - 1; r >= 1; --r) {
      i = n[13], n[13] = n[9], n[9] = n[5], n[5] = n[1], n[1] = i, i = n[14], s = n[10], n[14] = n[6], n[10] = n[2], n[6] = i, n[2] = s, i = n[15], s = n[11], a = n[7], n[15] = n[3], n[11] = i, n[7] = s, n[3] = a;
      for (let g = 0; g < 16; ++g)
        n[g] = this._inv_s[n[g]];
      for (let g = 0, o = r * 16; g < 16; ++g, ++o)
        n[g] ^= t[o];
      for (let g = 0; g < 16; g += 4) {
        const o = this._mix[n[g]], I = this._mix[n[g + 1]], c = this._mix[n[g + 2]], l = this._mix[n[g + 3]];
        i = o ^ I >>> 8 ^ I << 24 ^ c >>> 16 ^ c << 16 ^ l >>> 24 ^ l << 8, n[g] = i >>> 24 & 255, n[g + 1] = i >> 16 & 255, n[g + 2] = i >> 8 & 255, n[g + 3] = i & 255;
      }
    }
    i = n[13], n[13] = n[9], n[9] = n[5], n[5] = n[1], n[1] = i, i = n[14], s = n[10], n[14] = n[6], n[10] = n[2], n[6] = i, n[2] = s, i = n[15], s = n[11], a = n[7], n[15] = n[3], n[11] = i, n[7] = s, n[3] = a;
    for (let r = 0; r < 16; ++r)
      n[r] = this._inv_s[n[r]], n[r] ^= t[r];
    return n;
  }
  _encrypt(A, t) {
    const i = this._s;
    let s, a, n;
    const r = new Uint8Array(16);
    r.set(A);
    for (let g = 0; g < 16; ++g)
      r[g] ^= t[g];
    for (let g = 1; g < this._cyclesOfRepetition; g++) {
      for (let o = 0; o < 16; ++o)
        r[o] = i[r[o]];
      n = r[1], r[1] = r[5], r[5] = r[9], r[9] = r[13], r[13] = n, n = r[2], a = r[6], r[2] = r[10], r[6] = r[14], r[10] = n, r[14] = a, n = r[3], a = r[7], s = r[11], r[3] = r[15], r[7] = n, r[11] = a, r[15] = s;
      for (let o = 0; o < 16; o += 4) {
        const I = r[o + 0], c = r[o + 1], l = r[o + 2], C = r[o + 3];
        s = I ^ c ^ l ^ C, r[o + 0] ^= s ^ this._mixCol[I ^ c], r[o + 1] ^= s ^ this._mixCol[c ^ l], r[o + 2] ^= s ^ this._mixCol[l ^ C], r[o + 3] ^= s ^ this._mixCol[C ^ I];
      }
      for (let o = 0, I = g * 16; o < 16; ++o, ++I)
        r[o] ^= t[I];
    }
    for (let g = 0; g < 16; ++g)
      r[g] = i[r[g]];
    n = r[1], r[1] = r[5], r[5] = r[9], r[9] = r[13], r[13] = n, n = r[2], a = r[6], r[2] = r[10], r[6] = r[14], r[10] = n, r[14] = a, n = r[3], a = r[7], s = r[11], r[3] = r[15], r[7] = n, r[11] = a, r[15] = s;
    for (let g = 0, o = this._keySize; g < 16; ++g, ++o)
      r[g] ^= t[o];
    return r;
  }
  _decryptBlock2(A, t) {
    const i = A.length;
    let s = this.buffer, a = this.bufferPosition;
    const n = [];
    let r = this.iv;
    for (let I = 0; I < i; ++I) {
      if (s[a] = A[I], ++a, a < 16)
        continue;
      const c = this._decrypt(s, this._key);
      for (let l = 0; l < 16; ++l)
        c[l] ^= r[l];
      r = s, n.push(c), s = new Uint8Array(16), a = 0;
    }
    if (this.buffer = s, this.bufferLength = a, this.iv = r, n.length === 0)
      return new Uint8Array(0);
    let g = 16 * n.length;
    if (t) {
      const I = n.at(-1);
      let c = I[15];
      if (c <= 16) {
        for (let l = 15, C = 16 - c; l >= C; --l)
          if (I[l] !== c) {
            c = 0;
            break;
          }
        g -= c, n[n.length - 1] = I.subarray(0, 16 - c);
      }
    }
    const o = new Uint8Array(g);
    for (let I = 0, c = 0, l = n.length; I < l; ++I, c += 16)
      o.set(n[I], c);
    return o;
  }
  decryptBlock(A, t, i = null) {
    const s = A.length, a = this.buffer;
    let n = this.bufferPosition;
    if (i)
      this.iv = i;
    else {
      for (let r = 0; n < 16 && r < s; ++r, ++n)
        a[n] = A[r];
      if (n < 16)
        return this.bufferLength = n, new Uint8Array(0);
      this.iv = a, A = A.subarray(16);
    }
    return this.buffer = new Uint8Array(16), this.bufferLength = 0, this.decryptBlock = this._decryptBlock2, this.decryptBlock(A, t);
  }
  encrypt(A, t) {
    const i = A.length;
    let s = this.buffer, a = this.bufferPosition;
    const n = [];
    t || (t = new Uint8Array(16));
    for (let o = 0; o < i; ++o) {
      if (s[a] = A[o], ++a, a < 16)
        continue;
      for (let c = 0; c < 16; ++c)
        s[c] ^= t[c];
      const I = this._encrypt(s, this._key);
      t = I, n.push(I), s = new Uint8Array(16), a = 0;
    }
    if (this.buffer = s, this.bufferLength = a, this.iv = t, n.length === 0)
      return new Uint8Array(0);
    const r = 16 * n.length, g = new Uint8Array(r);
    for (let o = 0, I = 0, c = n.length; o < c; ++o, I += 16)
      g.set(n[o], I);
    return g;
  }
}
class _l extends xo {
  constructor(A) {
    super(), this._cyclesOfRepetition = 10, this._keySize = 160, this._rcon = new Uint8Array([141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141]), this._key = this._expandKey(A);
  }
  _expandKey(A) {
    const i = this._s, s = this._rcon, a = new Uint8Array(176);
    a.set(A);
    for (let n = 16, r = 1; n < 176; ++r) {
      let g = a[n - 3], o = a[n - 2], I = a[n - 1], c = a[n - 4];
      g = i[g], o = i[o], I = i[I], c = i[c], g ^= s[r];
      for (let l = 0; l < 4; ++l)
        a[n] = g ^= a[n - 16], n++, a[n] = o ^= a[n - 16], n++, a[n] = I ^= a[n - 16], n++, a[n] = c ^= a[n - 16], n++;
    }
    return a;
  }
}
class ga extends xo {
  constructor(A) {
    super(), this._cyclesOfRepetition = 14, this._keySize = 224, this._key = this._expandKey(A);
  }
  _expandKey(A) {
    const i = this._s, s = new Uint8Array(240);
    s.set(A);
    let a = 1, n, r, g, o;
    for (let I = 32, c = 1; I < 240; ++c) {
      I % 32 === 16 ? (n = i[n], r = i[r], g = i[g], o = i[o]) : I % 32 === 0 && (n = s[I - 3], r = s[I - 2], g = s[I - 1], o = s[I - 4], n = i[n], r = i[r], g = i[g], o = i[o], n ^= a, (a <<= 1) >= 256 && (a = (a ^ 27) & 255));
      for (let l = 0; l < 4; ++l)
        s[I] = n ^= s[I - 32], I++, s[I] = r ^= s[I - 32], I++, s[I] = g ^= s[I - 32], I++, s[I] = o ^= s[I - 32], I++;
    }
    return s;
  }
}
class J9 {
  checkOwnerPassword(A, t, i, s) {
    const a = new Uint8Array(A.length + 56);
    a.set(A, 0), a.set(t, A.length), a.set(i, A.length + t.length);
    const n = K0(a, 0, a.length);
    return E0(n, s);
  }
  checkUserPassword(A, t, i) {
    const s = new Uint8Array(A.length + 8);
    s.set(A, 0), s.set(t, A.length);
    const a = K0(s, 0, s.length);
    return E0(a, i);
  }
  getOwnerKey(A, t, i, s) {
    const a = new Uint8Array(A.length + 56);
    a.set(A, 0), a.set(t, A.length), a.set(i, A.length + t.length);
    const n = K0(a, 0, a.length);
    return new ga(n).decryptBlock(s, !1, new Uint8Array(16));
  }
  getUserKey(A, t, i) {
    const s = new Uint8Array(A.length + 8);
    s.set(A, 0), s.set(t, A.length);
    const a = K0(s, 0, s.length);
    return new ga(a).decryptBlock(i, !1, new Uint8Array(16));
  }
}
class Y9 {
  _hash(A, t, i) {
    let s = K0(t, 0, t.length).subarray(0, 32), a = [0], n = 0;
    for (; n < 64 || a.at(-1) > n - 32; ) {
      const r = A.length + s.length + i.length, g = new Uint8Array(r);
      let o = 0;
      g.set(A, o), o += A.length, g.set(s, o), o += s.length, g.set(i, o);
      const I = new Uint8Array(r * 64);
      for (let C = 0, h = 0; C < 64; C++, h += r)
        I.set(g, h);
      a = new _l(s.subarray(0, 16)).encrypt(I, s.subarray(16, 32));
      const l = a.slice(0, 16).reduce((C, h) => C + h, 0) % 3;
      l === 0 ? s = K0(a, 0, a.length) : l === 1 ? s = L9(a, 0, a.length) : l === 2 && (s = Vl(a, 0, a.length)), n++;
    }
    return s.subarray(0, 32);
  }
  checkOwnerPassword(A, t, i, s) {
    const a = new Uint8Array(A.length + 56);
    a.set(A, 0), a.set(t, A.length), a.set(i, A.length + t.length);
    const n = this._hash(A, a, i);
    return E0(n, s);
  }
  checkUserPassword(A, t, i) {
    const s = new Uint8Array(A.length + 8);
    s.set(A, 0), s.set(t, A.length);
    const a = this._hash(A, s, []);
    return E0(a, i);
  }
  getOwnerKey(A, t, i, s) {
    const a = new Uint8Array(A.length + 56);
    a.set(A, 0), a.set(t, A.length), a.set(i, A.length + t.length);
    const n = this._hash(A, a, i);
    return new ga(n).decryptBlock(s, !1, new Uint8Array(16));
  }
  getUserKey(A, t, i) {
    const s = new Uint8Array(A.length + 8);
    s.set(A, 0), s.set(t, A.length);
    const a = this._hash(A, s, []);
    return new ga(a).decryptBlock(i, !1, new Uint8Array(16));
  }
}
class VI {
  constructor(A, t) {
    this.StringCipherConstructor = A, this.StreamCipherConstructor = t;
  }
  createStream(A, t) {
    const i = new this.StreamCipherConstructor();
    return new M9(A, t, function(a, n) {
      return i.decryptBlock(a, n);
    });
  }
  decryptString(A) {
    const t = new this.StringCipherConstructor();
    let i = qe(A);
    return i = t.decryptBlock(i, !0), lt(i);
  }
  encryptString(A) {
    const t = new this.StringCipherConstructor();
    if (t instanceof xo) {
      const a = 16 - A.length % 16;
      A += String.fromCharCode(a).repeat(a);
      const n = new Uint8Array(16);
      if (typeof crypto < "u")
        crypto.getRandomValues(n);
      else
        for (let o = 0; o < 16; o++)
          n[o] = Math.floor(256 * Math.random());
      let r = qe(A);
      r = t.encrypt(r, n);
      const g = new Uint8Array(16 + r.length);
      return g.set(n), g.set(r, 16), lt(g);
    }
    let i = qe(A);
    return i = t.encrypt(i), lt(i);
  }
}
var I0, ze, zl, Lg, $l, Qn, Hg;
const g0 = class g0 {
  constructor(A, t, i) {
    jA(this, ze);
    const s = A.get("Filter");
    if (!xe(s, "Standard"))
      throw new T("unknown encryption method");
    this.filterName = s.name, this.dict = A;
    const a = A.get("V");
    if (!Number.isInteger(a) || a !== 1 && a !== 2 && a !== 4 && a !== 5)
      throw new T("unsupported encryption algorithm");
    this.algorithm = a;
    let n = A.get("Length");
    if (!n)
      if (a <= 3)
        n = 40;
      else {
        const E = A.get("CF"), f = A.get("StmF");
        if (E instanceof R && f instanceof L) {
          E.suppressEncryption = !0;
          const d = E.get(f.name);
          n = (d == null ? void 0 : d.get("Length")) || 128, n < 40 && (n <<= 3);
        }
      }
    if (!Number.isInteger(n) || n < 40 || n % 8 !== 0)
      throw new T("invalid key length");
    const r = qe(A.get("O")), g = qe(A.get("U")), o = r.subarray(0, 32), I = g.subarray(0, 32), c = A.get("P"), l = A.get("R"), C = (a === 4 || a === 5) && A.get("EncryptMetadata") !== !1;
    this.encryptMetadata = C;
    const h = qe(t);
    let B;
    if (i) {
      if (l === 6)
        try {
          i = Or(i);
        } catch {
          k("CipherTransformFactory: Unable to convert UTF8 encoded password.");
        }
      B = qe(i);
    }
    let Q;
    if (a !== 5)
      Q = BA(this, ze, Lg).call(this, h, B, o, I, c, l, n, C);
    else {
      const E = r.subarray(32, 40), f = r.subarray(40, 48), d = g.subarray(0, 48), u = g.subarray(32, 40), x = g.subarray(40, 48), p = qe(A.get("OE")), m = qe(A.get("UE")), D = qe(A.get("Perms"));
      Q = BA(this, ze, zl).call(this, l, B, o, E, f, d, I, u, x, p, m, D);
    }
    if (!Q && !i)
      throw new dn("No password given", bo.NEED_PASSWORD);
    if (!Q && i) {
      const E = BA(this, ze, $l).call(this, B, o, l, n);
      Q = BA(this, ze, Lg).call(this, h, E, o, I, c, l, n, C);
    }
    if (!Q)
      throw new dn("Incorrect Password", bo.INCORRECT_PASSWORD);
    if (this.encryptionKey = Q, a >= 4) {
      const E = A.get("CF");
      E instanceof R && (E.suppressEncryption = !0), this.cf = E, this.stmf = A.get("StmF") || L.get("Identity"), this.strf = A.get("StrF") || L.get("Identity"), this.eff = A.get("EFF") || this.stmf;
    }
  }
  createCipherTransform(A, t) {
    if (this.algorithm === 4 || this.algorithm === 5)
      return new VI(BA(this, ze, Hg).call(this, this.cf, this.strf, A, t, this.encryptionKey), BA(this, ze, Hg).call(this, this.cf, this.stmf, A, t, this.encryptionKey));
    const i = BA(this, ze, Qn).call(this, A, t, this.encryptionKey, !1), s = function() {
      return new A0(i);
    };
    return new VI(s, s);
  }
};
I0 = new WeakMap(), ze = new WeakSet(), zl = function(A, t, i, s, a, n, r, g, o, I, c, l) {
  if (t) {
    const h = Math.min(127, t.length);
    t = t.subarray(0, h);
  } else
    t = [];
  const C = A === 6 ? new Y9() : new J9();
  return C.checkUserPassword(t, g, r) ? C.getUserKey(t, o, c) : t.length && C.checkOwnerPassword(t, s, n, i) ? C.getOwnerKey(t, a, n, I) : null;
}, Lg = function(A, t, i, s, a, n, r, g) {
  const o = 40 + i.length + A.length, I = new Uint8Array(o);
  let c = 0, l, C;
  if (t)
    for (C = Math.min(32, t.length); c < C; ++c)
      I[c] = t[c];
  for (l = 0; c < 32; )
    I[c++] = PA(g0, I0)[l++];
  for (l = 0, C = i.length; l < C; ++l)
    I[c++] = i[l];
  for (I[c++] = a & 255, I[c++] = a >> 8 & 255, I[c++] = a >> 16 & 255, I[c++] = a >>> 24 & 255, l = 0, C = A.length; l < C; ++l)
    I[c++] = A[l];
  n >= 4 && !g && (I[c++] = 255, I[c++] = 255, I[c++] = 255, I[c++] = 255);
  let h = Ni(I, 0, c);
  const B = r >> 3;
  if (n >= 3)
    for (l = 0; l < 50; ++l)
      h = Ni(h, 0, B);
  const Q = h.subarray(0, B);
  let E, f;
  if (n >= 3) {
    for (c = 0; c < 32; ++c)
      I[c] = PA(g0, I0)[c];
    for (l = 0, C = A.length; l < C; ++l)
      I[c++] = A[l];
    E = new A0(Q), f = E.encryptBlock(Ni(I, 0, c)), C = Q.length;
    const d = new Uint8Array(C);
    for (l = 1; l <= 19; ++l) {
      for (let u = 0; u < C; ++u)
        d[u] = Q[u] ^ l;
      E = new A0(d), f = E.encryptBlock(f);
    }
    for (l = 0, C = f.length; l < C; ++l)
      if (s[l] !== f[l])
        return null;
  } else
    for (E = new A0(Q), f = E.encryptBlock(PA(g0, I0)), l = 0, C = f.length; l < C; ++l)
      if (s[l] !== f[l])
        return null;
  return Q;
}, $l = function(A, t, i, s) {
  const a = new Uint8Array(32);
  let n = 0;
  const r = Math.min(32, A.length);
  for (; n < r; ++n)
    a[n] = A[n];
  let g = 0;
  for (; n < 32; )
    a[n++] = PA(g0, I0)[g++];
  let o = Ni(a, 0, n);
  const I = s >> 3;
  if (i >= 3)
    for (g = 0; g < 50; ++g)
      o = Ni(o, 0, o.length);
  let c, l;
  if (i >= 3) {
    l = t;
    const C = new Uint8Array(I);
    for (g = 19; g >= 0; g--) {
      for (let h = 0; h < I; ++h)
        C[h] = o[h] ^ g;
      c = new A0(C), l = c.encryptBlock(l);
    }
  } else
    c = new A0(o.subarray(0, I)), l = c.encryptBlock(t);
  return l;
}, Qn = function(A, t, i, s = !1) {
  const a = new Uint8Array(i.length + 9), n = i.length;
  let r;
  for (r = 0; r < n; ++r)
    a[r] = i[r];
  return a[r++] = A & 255, a[r++] = A >> 8 & 255, a[r++] = A >> 16 & 255, a[r++] = t & 255, a[r++] = t >> 8 & 255, s && (a[r++] = 115, a[r++] = 65, a[r++] = 108, a[r++] = 84), Ni(a, 0, r).subarray(0, Math.min(i.length + 5, 16));
}, Hg = function(A, t, i, s, a) {
  if (!(t instanceof L))
    throw new T("Invalid crypt filter name.");
  const n = this, r = A.get(t.name), g = r == null ? void 0 : r.get("CFM");
  if (!g || g.name === "None")
    return function() {
      return new H9();
    };
  if (g.name === "V2")
    return function() {
      var o;
      return new A0(BA(o = n, ze, Qn).call(o, i, s, a, !1));
    };
  if (g.name === "AESV2")
    return function() {
      var o;
      return new _l(BA(o = n, ze, Qn).call(o, i, s, a, !0));
    };
  if (g.name === "AESV3")
    return function() {
      return new ga(a);
    };
  throw new T("Unknown crypto method");
}, jA(g0, I0, new Uint8Array([40, 191, 78, 94, 78, 117, 138, 65, 100, 0, 78, 86, 255, 250, 1, 8, 46, 46, 0, 182, 208, 104, 62, 128, 47, 12, 169, 254, 100, 83, 105, 122]));
let Mg = g0;
function _I(e) {
  try {
    return Zs(e);
  } catch (A) {
    return k(`UTF-8 decoding failed: "${A}".`), e;
  }
}
class K9 extends ar {
  constructor(A) {
    super(A), this.node = null;
  }
  onEndElement(A) {
    const t = super.onEndElement(A);
    if (t && A === "xfa:datasets")
      throw this.node = t, new Error("Aborting DatasetXMLParser.");
  }
}
class v9 {
  constructor(A) {
    if (A.datasets)
      this.node = new ar({
        hasAttributes: !0
      }).parseFromString(A.datasets).documentElement;
    else {
      const t = new K9({
        hasAttributes: !0
      });
      try {
        t.parseFromString(A["xdp:xdp"]);
      } catch {
      }
      this.node = t.node;
    }
  }
  getValue(A) {
    if (!this.node || !A)
      return "";
    const t = this.node.searchNode(Bc(A), 0);
    if (!t)
      return "";
    const i = t.firstChild;
    return (i == null ? void 0 : i.nodeName) === "value" ? t.children.map((s) => _I(s.textContent)) : _I(t.textContent);
  }
}
var xa;
class T9 {
  constructor(A, t) {
    jA(this, xa, null);
    this.stream = A, this.pdfManager = t, this.entries = [], this._xrefStms = /* @__PURE__ */ new Set(), this._cacheMap = /* @__PURE__ */ new Map(), this._pendingRefs = new Ge(), this._newPersistentRefNum = null, this._newTemporaryRefNum = null, this._persistentRefsCache = null;
  }
  getNewPersistentRef(A) {
    this._newPersistentRefNum === null && (this._newPersistentRefNum = this.entries.length || 1);
    const t = this._newPersistentRefNum++;
    return this._cacheMap.set(t, A), nA.get(t, 0);
  }
  getNewTemporaryRef() {
    if (this._newTemporaryRefNum === null && (this._newTemporaryRefNum = this.entries.length || 1, this._newPersistentRefNum)) {
      this._persistentRefsCache = /* @__PURE__ */ new Map();
      for (let A = this._newTemporaryRefNum; A < this._newPersistentRefNum; A++)
        this._persistentRefsCache.set(A, this._cacheMap.get(A)), this._cacheMap.delete(A);
    }
    return nA.get(this._newTemporaryRefNum++, 0);
  }
  resetNewTemporaryRef() {
    if (this._newTemporaryRefNum = null, this._persistentRefsCache)
      for (const [A, t] of this._persistentRefsCache)
        this._cacheMap.set(A, t);
    this._persistentRefsCache = null;
  }
  setStartXRef(A) {
    this.startXRefQueue = [A];
  }
  parse(A = !1) {
    let t;
    A ? (k("Indexing all PDF objects"), t = this.indexObjects()) : t = this.readXRef(), t.assignXref(this), this.trailer = t;
    let i;
    try {
      i = t.get("Encrypt");
    } catch (a) {
      if (a instanceof Ie)
        throw a;
      k(`XRef.parse - Invalid "Encrypt" reference: "${a}".`);
    }
    if (i instanceof R) {
      const a = t.get("ID"), n = a != null && a.length ? a[0] : "";
      i.suppressEncryption = !0, this.encrypt = new Mg(i, n, this.pdfManager.password);
    }
    let s;
    try {
      s = t.get("Root");
    } catch (a) {
      if (a instanceof Ie)
        throw a;
      k(`XRef.parse - Invalid "Root" reference: "${a}".`);
    }
    if (s instanceof R)
      try {
        if (s.get("Pages") instanceof R) {
          this.root = s;
          return;
        }
      } catch (a) {
        if (a instanceof Ie)
          throw a;
        k(`XRef.parse - Invalid "Pages" reference: "${a}".`);
      }
    throw A ? new mn("Invalid Root reference.") : new W0();
  }
  processXRefTable(A) {
    "tableState" in this || (this.tableState = {
      entryNum: 0,
      streamPos: A.lexer.stream.pos,
      parserBuf1: A.buf1,
      parserBuf2: A.buf2
    });
    const t = this.readXRefTable(A);
    if (!Ne(t, "trailer"))
      throw new T("Invalid XRef table: could not find trailer dictionary");
    let i = A.getObj();
    if (!(i instanceof R) && i.dict && (i = i.dict), !(i instanceof R))
      throw new T("Invalid XRef table: could not parse trailer dictionary");
    return delete this.tableState, i;
  }
  readXRefTable(A) {
    const t = A.lexer.stream, i = this.tableState;
    t.pos = i.streamPos, A.buf1 = i.parserBuf1, A.buf2 = i.parserBuf2;
    let s;
    for (; ; ) {
      if (!("firstEntryNum" in i) || !("entryCount" in i)) {
        if (Ne(s = A.getObj(), "trailer"))
          break;
        i.firstEntryNum = s, i.entryCount = A.getObj();
      }
      let a = i.firstEntryNum;
      const n = i.entryCount;
      if (!Number.isInteger(a) || !Number.isInteger(n))
        throw new T("Invalid XRef table: wrong types in subsection header");
      for (let r = i.entryNum; r < n; r++) {
        i.streamPos = t.pos, i.entryNum = r, i.parserBuf1 = A.buf1, i.parserBuf2 = A.buf2;
        const g = {};
        g.offset = A.getObj(), g.gen = A.getObj();
        const o = A.getObj();
        if (o instanceof De)
          switch (o.cmd) {
            case "f":
              g.free = !0;
              break;
            case "n":
              g.uncompressed = !0;
              break;
          }
        if (!Number.isInteger(g.offset) || !Number.isInteger(g.gen) || !(g.free || g.uncompressed))
          throw new T(`Invalid entry in XRef subsection: ${a}, ${n}`);
        r === 0 && g.free && a === 1 && (a = 0), this.entries[r + a] || (this.entries[r + a] = g);
      }
      i.entryNum = 0, i.streamPos = t.pos, i.parserBuf1 = A.buf1, i.parserBuf2 = A.buf2, delete i.firstEntryNum, delete i.entryCount;
    }
    if (this.entries[0] && !this.entries[0].free)
      throw new T("Invalid XRef table: unexpected first object");
    return s;
  }
  processXRefStream(A) {
    if (!("streamState" in this)) {
      const t = A.dict, i = t.get("W");
      let s = t.get("Index");
      s || (s = [0, t.get("Size")]), this.streamState = {
        entryRanges: s,
        byteWidths: i,
        entryNum: 0,
        streamPos: A.pos
      };
    }
    return this.readXRefStream(A), delete this.streamState, A.dict;
  }
  readXRefStream(A) {
    const t = this.streamState;
    A.pos = t.streamPos;
    const [i, s, a] = t.byteWidths, n = t.entryRanges;
    for (; n.length > 0; ) {
      const [r, g] = n;
      if (!Number.isInteger(r) || !Number.isInteger(g))
        throw new T(`Invalid XRef range fields: ${r}, ${g}`);
      if (!Number.isInteger(i) || !Number.isInteger(s) || !Number.isInteger(a))
        throw new T(`Invalid XRef entry fields length: ${r}, ${g}`);
      for (let o = t.entryNum; o < g; ++o) {
        t.entryNum = o, t.streamPos = A.pos;
        let I = 0, c = 0, l = 0;
        for (let h = 0; h < i; ++h) {
          const B = A.getByte();
          if (B === -1)
            throw new T("Invalid XRef byteWidths 'type'.");
          I = I << 8 | B;
        }
        i === 0 && (I = 1);
        for (let h = 0; h < s; ++h) {
          const B = A.getByte();
          if (B === -1)
            throw new T("Invalid XRef byteWidths 'offset'.");
          c = c << 8 | B;
        }
        for (let h = 0; h < a; ++h) {
          const B = A.getByte();
          if (B === -1)
            throw new T("Invalid XRef byteWidths 'generation'.");
          l = l << 8 | B;
        }
        const C = {};
        switch (C.offset = c, C.gen = l, I) {
          case 0:
            C.free = !0;
            break;
          case 1:
            C.uncompressed = !0;
            break;
          case 2:
            break;
          default:
            throw new T(`Invalid XRef entry type: ${I}`);
        }
        this.entries[r + o] || (this.entries[r + o] = C);
      }
      t.entryNum = 0, t.streamPos = A.pos, n.splice(0, 2);
    }
  }
  indexObjects() {
    function r(y, H) {
      let G = "", v = y[H];
      for (; v !== 10 && v !== 13 && v !== 60 && !(++H >= y.length); )
        G += String.fromCharCode(v), v = y[H];
      return G;
    }
    function g(y, H, G) {
      const v = G.length, X = y.length;
      let gA = 0;
      for (; H < X; ) {
        let N = 0;
        for (; N < v && y[H + N] === G[N]; )
          ++N;
        if (N >= v)
          break;
        H++, gA++;
      }
      return gA;
    }
    const o = /\b(endobj|\d+\s+\d+\s+obj|xref|trailer\s*<<)\b/g, I = /\b(startxref|\d+\s+\d+\s+obj)\b/g, c = /^(\d+)\s+(\d+)\s+obj\b/, l = new Uint8Array([116, 114, 97, 105, 108, 101, 114]), C = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]), h = new Uint8Array([47, 88, 82, 101, 102]);
    this.entries.length = 0, this._cacheMap.clear();
    const B = this.stream;
    B.pos = 0;
    const Q = B.getBytes(), E = lt(Q), f = Q.length;
    let d = B.start;
    const u = [], x = [];
    for (; d < f; ) {
      let y = Q[d];
      if (y === 9 || y === 10 || y === 13 || y === 32) {
        ++d;
        continue;
      }
      if (y === 37) {
        do {
          if (++d, d >= f)
            break;
          y = Q[d];
        } while (y !== 10 && y !== 13);
        continue;
      }
      const H = r(Q, d);
      let G;
      if (H.startsWith("xref") && (H.length === 4 || /\s/.test(H[4])))
        d += g(Q, d, l), u.push(d), d += g(Q, d, C);
      else if (G = c.exec(H)) {
        const v = G[1] | 0, X = G[2] | 0, gA = d + H.length;
        let N, F = !1;
        if (!this.entries[v])
          F = !0;
        else if (this.entries[v].gen === X)
          try {
            new Fi({
              lexer: new Wt(B.makeSubStream(gA))
            }).getObj(), F = !0;
          } catch (wA) {
            wA instanceof jr ? k(`indexObjects -- checking object (${H}): "${wA}".`) : F = !0;
          }
        F && (this.entries[v] = {
          offset: d - B.start,
          gen: X,
          uncompressed: !0
        }), o.lastIndex = gA;
        const eA = o.exec(E);
        eA ? (N = o.lastIndex + 1 - d, eA[1] !== "endobj" && (k(`indexObjects: Found "${eA[1]}" inside of another "obj", caused by missing "endobj" -- trying to recover.`), N -= eA[1].length + 1)) : N = f - d;
        const z = Q.subarray(d, d + N), cA = g(z, 0, h);
        cA < N && z[cA + 5] < 64 && (x.push(d - B.start), this._xrefStms.add(d - B.start)), d += N;
      } else if (H.startsWith("trailer") && (H.length === 7 || /\s/.test(H[7]))) {
        u.push(d);
        const v = d + H.length;
        let X;
        I.lastIndex = v;
        const gA = I.exec(E);
        gA ? (X = I.lastIndex + 1 - d, gA[1] !== "startxref" && (k(`indexObjects: Found "${gA[1]}" after "trailer", caused by missing "startxref" -- trying to recover.`), X -= gA[1].length + 1)) : X = f - d, d += X;
      } else
        d += H.length + 1;
    }
    for (const y of x)
      this.startXRefQueue.push(y), this.readXRef(!0);
    const p = [];
    let m = !1;
    for (const y of u) {
      B.pos = y;
      const H = new Fi({
        lexer: new Wt(B),
        xref: this,
        allowStreams: !0,
        recoveryMode: !0
      }), G = H.getObj();
      if (!Ne(G, "trailer"))
        continue;
      const v = H.getObj();
      v instanceof R && (p.push(v), v.has("Encrypt") && (m = !0));
    }
    let D, S;
    for (const y of [...p, "genFallback", ...p]) {
      if (y === "genFallback") {
        if (!S)
          break;
        this._generationFallback = !0;
        continue;
      }
      let H = !1;
      try {
        const G = y.get("Root");
        if (!(G instanceof R))
          continue;
        const v = G.get("Pages");
        if (!(v instanceof R))
          continue;
        const X = v.get("Count");
        Number.isInteger(X) && (H = !0);
      } catch (G) {
        S = G;
        continue;
      }
      if (H && (!m || y.has("Encrypt")) && y.has("ID"))
        return y;
      D = y;
    }
    if (D)
      return D;
    if (this.topDict)
      return this.topDict;
    if (!p.length)
      for (const [y, H] of this.entries.entries()) {
        if (!H)
          continue;
        const G = nA.get(y, H.gen);
        let v;
        try {
          v = this.fetch(G);
        } catch {
          continue;
        }
        if (v instanceof JA && (v = v.dict), v instanceof R && v.has("Root"))
          return v;
      }
    throw new mn("Invalid PDF structure.");
  }
  readXRef(A = !1) {
    const t = this.stream, i = /* @__PURE__ */ new Set();
    for (; this.startXRefQueue.length; ) {
      try {
        const s = this.startXRefQueue[0];
        if (i.has(s)) {
          k("readXRef - skipping XRef table since it was already parsed."), this.startXRefQueue.shift();
          continue;
        }
        i.add(s), t.pos = s + t.start;
        const a = new Fi({
          lexer: new Wt(t),
          xref: this,
          allowStreams: !0
        });
        let n = a.getObj(), r;
        if (Ne(n, "xref"))
          r = this.processXRefTable(a), this.topDict || (this.topDict = r), n = r.get("XRefStm"), Number.isInteger(n) && !this._xrefStms.has(n) && (this._xrefStms.add(n), this.startXRefQueue.push(n), PA(this, xa) ?? wt(this, xa, n));
        else if (Number.isInteger(n)) {
          if (!Number.isInteger(a.getObj()) || !Ne(a.getObj(), "obj") || !((n = a.getObj()) instanceof JA))
            throw new T("Invalid XRef stream");
          if (r = this.processXRefStream(n), this.topDict || (this.topDict = r), !r)
            throw new T("Failed to read XRef stream");
        } else
          throw new T("Invalid XRef stream header");
        n = r.get("Prev"), Number.isInteger(n) ? this.startXRefQueue.push(n) : n instanceof nA && this.startXRefQueue.push(n.num);
      } catch (s) {
        if (s instanceof Ie)
          throw s;
        vA("(while reading XRef): " + s);
      }
      this.startXRefQueue.shift();
    }
    if (this.topDict)
      return this.topDict;
    if (!A)
      throw new W0();
  }
  get lastXRefStreamPos() {
    return PA(this, xa) ?? (this._xrefStms.size > 0 ? Math.max(...this._xrefStms) : null);
  }
  getEntry(A) {
    const t = this.entries[A];
    return t && !t.free && t.offset ? t : null;
  }
  fetchIfRef(A, t = !1) {
    return A instanceof nA ? this.fetch(A, t) : A;
  }
  fetch(A, t = !1) {
    if (!(A instanceof nA))
      throw new Error("ref object is not a reference");
    const i = A.num, s = this._cacheMap.get(i);
    if (s !== void 0)
      return s instanceof R && !s.objId && (s.objId = A.toString()), s;
    let a = this.getEntry(i);
    if (a === null)
      return this._cacheMap.set(i, a), a;
    if (this._pendingRefs.has(A))
      return this._pendingRefs.remove(A), k(`Ignoring circular reference: ${A}.`), DC;
    this._pendingRefs.put(A);
    try {
      a = a.uncompressed ? this.fetchUncompressed(A, a, t) : this.fetchCompressed(A, a, t), this._pendingRefs.remove(A);
    } catch (n) {
      throw this._pendingRefs.remove(A), n;
    }
    return a instanceof R ? a.objId = A.toString() : a instanceof JA && (a.dict.objId = A.toString()), a;
  }
  fetchUncompressed(A, t, i = !1) {
    const s = A.gen;
    let a = A.num;
    if (t.gen !== s) {
      const c = `Inconsistent generation in XRef: ${A}`;
      if (this._generationFallback && t.gen < s)
        return k(c), this.fetchUncompressed(nA.get(a, t.gen), t, i);
      throw new Ji(c);
    }
    const n = this.stream.makeSubStream(t.offset + this.stream.start), r = new Fi({
      lexer: new Wt(n),
      xref: this,
      allowStreams: !0
    }), g = r.getObj(), o = r.getObj(), I = r.getObj();
    if (g !== a || o !== s || !(I instanceof De))
      throw new Ji(`Bad (uncompressed) XRef entry: ${A}`);
    if (I.cmd !== "obj") {
      if (I.cmd.startsWith("obj") && (a = parseInt(I.cmd.substring(3), 10), !Number.isNaN(a)))
        return a;
      throw new Ji(`Bad (uncompressed) XRef entry: ${A}`);
    }
    return t = this.encrypt && !i ? r.getObj(this.encrypt.createCipherTransform(a, s)) : r.getObj(), t instanceof JA || this._cacheMap.set(a, t), t;
  }
  fetchCompressed(A, t, i = !1) {
    const s = t.offset, a = this.fetch(nA.get(s, 0));
    if (!(a instanceof JA))
      throw new T("bad ObjStm stream");
    const n = a.dict.get("First"), r = a.dict.get("N");
    if (!Number.isInteger(n) || !Number.isInteger(r))
      throw new T("invalid first and n parameters for ObjStm stream");
    let g = new Fi({
      lexer: new Wt(a),
      xref: this,
      allowStreams: !0
    });
    const o = new Array(r), I = new Array(r);
    for (let C = 0; C < r; ++C) {
      const h = g.getObj();
      if (!Number.isInteger(h))
        throw new T(`invalid object number in the ObjStm stream: ${h}`);
      const B = g.getObj();
      if (!Number.isInteger(B))
        throw new T(`invalid object offset in the ObjStm stream: ${B}`);
      o[C] = h, I[C] = B;
    }
    const c = (a.start || 0) + n, l = new Array(r);
    for (let C = 0; C < r; ++C) {
      const h = C < r - 1 ? I[C + 1] - I[C] : void 0;
      if (h < 0)
        throw new T("Invalid offset in the ObjStm stream.");
      g = new Fi({
        lexer: new Wt(a.makeSubStream(c + I[C], h, a.dict)),
        xref: this,
        allowStreams: !0
      });
      const B = g.getObj();
      if (l[C] = B, B instanceof JA)
        continue;
      const Q = o[C], E = this.entries[Q];
      E && E.offset === s && E.gen === C && this._cacheMap.set(Q, B);
    }
    if (t = l[t.gen], t === void 0)
      throw new Ji(`Bad (compressed) XRef entry: ${A}`);
    return t;
  }
  async fetchIfRefAsync(A, t) {
    return A instanceof nA ? this.fetchAsync(A, t) : A;
  }
  async fetchAsync(A, t) {
    try {
      return this.fetch(A, t);
    } catch (i) {
      if (!(i instanceof Ie))
        throw i;
      return await this.pdfManager.requestRange(i.begin, i.end), this.fetchAsync(A, t);
    }
  }
  getCatalogObj() {
    return this.root;
  }
}
xa = new WeakMap();
const q9 = [0, 0, 612, 792];
var ma, Jg;
class zI {
  constructor({
    pdfManager: A,
    xref: t,
    pageIndex: i,
    pageDict: s,
    ref: a,
    globalIdFactory: n,
    fontCache: r,
    builtInCMapCache: g,
    standardFontDataCache: o,
    globalImageCache: I,
    systemFontCache: c,
    nonBlendModesSet: l,
    xfaFactory: C
  }) {
    jA(this, ma);
    this.pdfManager = A, this.pageIndex = i, this.pageDict = s, this.xref = t, this.ref = a, this.fontCache = r, this.builtInCMapCache = g, this.standardFontDataCache = o, this.globalImageCache = I, this.systemFontCache = c, this.nonBlendModesSet = l, this.evaluatorOptions = A.evaluatorOptions, this.resourcesPromise = null, this.xfaFactory = C;
    const h = {
      obj: 0
    };
    this._localIdFactory = class extends n {
      static createObjId() {
        return `p${i}_${++h.obj}`;
      }
      static getPageObjId() {
        return `p${a.toString()}`;
      }
    };
  }
  _getInheritableProperty(A, t = !1) {
    const i = Ut({
      dict: this.pageDict,
      key: A,
      getArray: t,
      stopWhenFound: !1
    });
    return Array.isArray(i) ? i.length === 1 || !(i[0] instanceof R) ? i[0] : R.merge({
      xref: this.xref,
      dictArray: i
    }) : i;
  }
  get content() {
    return this.pageDict.getArray("Contents");
  }
  get resources() {
    const A = this._getInheritableProperty("Resources");
    return tA(this, "resources", A instanceof R ? A : R.empty);
  }
  _getBoundingBox(A) {
    if (this.xfaData)
      return this.xfaData.bbox;
    const t = ai(this._getInheritableProperty(A, !0), null);
    if (t) {
      if (t[2] - t[0] > 0 && t[3] - t[1] > 0)
        return t;
      k(`Empty, or invalid, /${A} entry.`);
    }
    return null;
  }
  get mediaBox() {
    return tA(this, "mediaBox", this._getBoundingBox("MediaBox") || q9);
  }
  get cropBox() {
    return tA(this, "cropBox", this._getBoundingBox("CropBox") || this.mediaBox);
  }
  get userUnit() {
    const A = this.pageDict.get("UserUnit");
    return tA(this, "userUnit", typeof A == "number" && A > 0 ? A : 1);
  }
  get view() {
    const {
      cropBox: A,
      mediaBox: t
    } = this;
    if (A !== t && !E0(A, t)) {
      const i = ye.intersect(A, t);
      if (i && i[2] - i[0] > 0 && i[3] - i[1] > 0)
        return tA(this, "view", i);
      k("Empty /CropBox and /MediaBox intersection.");
    }
    return tA(this, "view", t);
  }
  get rotate() {
    let A = this._getInheritableProperty("Rotate") || 0;
    return A % 90 !== 0 ? A = 0 : A >= 360 ? A %= 360 : A < 0 && (A = (A % 360 + 360) % 360), tA(this, "rotate", A);
  }
  _onSubStreamError(A, t) {
    if (this.evaluatorOptions.ignoreErrors) {
      k(`getContentStream - ignoring sub-stream (${t}): "${A}".`);
      return;
    }
    throw A;
  }
  getContentStream() {
    return this.pdfManager.ensure(this, "content").then((A) => A instanceof JA ? A : Array.isArray(A) ? new eh(A, this._onSubStreamError.bind(this)) : new _r());
  }
  get xfaData() {
    return tA(this, "xfaData", this.xfaFactory ? {
      bbox: this.xfaFactory.getBoundingBox(this.pageIndex)
    } : null);
  }
  async saveNewAnnotations(A, t, i, s, a) {
    if (this.xfaFactory)
      throw new Error("XFA: Cannot save new annotations.");
    const n = new Bi({
      xref: this.xref,
      handler: A,
      pageIndex: this.pageIndex,
      idFactory: this._localIdFactory,
      fontCache: this.fontCache,
      builtInCMapCache: this.builtInCMapCache,
      standardFontDataCache: this.standardFontDataCache,
      globalImageCache: this.globalImageCache,
      systemFontCache: this.systemFontCache,
      options: this.evaluatorOptions
    }), r = new It(), g = new Ge();
    await BA(this, ma, Jg).call(this, i, r, g);
    const o = this.pageDict, I = this.annotations.filter((C) => !(C instanceof nA && r.has(C))), c = await Li.saveNewAnnotations(n, t, i, s, a);
    for (const {
      ref: C
    } of c.annotations)
      C instanceof nA && !g.has(C) && I.push(C);
    const l = o.clone();
    l.set("Annots", I), a.put(this.ref, {
      data: l
    });
    for (const C of r)
      a.put(C, {
        data: null
      });
  }
  save(A, t, i, s) {
    const a = new Bi({
      xref: this.xref,
      handler: A,
      pageIndex: this.pageIndex,
      idFactory: this._localIdFactory,
      fontCache: this.fontCache,
      builtInCMapCache: this.builtInCMapCache,
      standardFontDataCache: this.standardFontDataCache,
      globalImageCache: this.globalImageCache,
      systemFontCache: this.systemFontCache,
      options: this.evaluatorOptions
    });
    return this._parsedAnnotations.then(function(n) {
      const r = [];
      for (const g of n)
        r.push(g.save(a, t, i, s).catch(function(o) {
          return k(`save - ignoring annotation data during "${t.name}" task: "${o}".`), null;
        }));
      return Promise.all(r);
    });
  }
  loadResources(A) {
    return this.resourcesPromise || (this.resourcesPromise = this.pdfManager.ensure(this, "resources")), this.resourcesPromise.then(() => new Rn(this.resources, A, this.xref).load());
  }
  getOperatorList({
    handler: A,
    sink: t,
    task: i,
    intent: s,
    cacheKey: a,
    annotationStorage: n = null,
    modifiedIds: r = null
  }) {
    const g = this.getContentStream(), o = this.loadResources(["ColorSpace", "ExtGState", "Font", "Pattern", "Properties", "Shading", "XObject"]), I = new Bi({
      xref: this.xref,
      handler: A,
      pageIndex: this.pageIndex,
      idFactory: this._localIdFactory,
      fontCache: this.fontCache,
      builtInCMapCache: this.builtInCMapCache,
      standardFontDataCache: this.standardFontDataCache,
      globalImageCache: this.globalImageCache,
      systemFontCache: this.systemFontCache,
      options: this.evaluatorOptions
    }), c = this.xfaFactory ? null : Ec(n), l = c == null ? void 0 : c.get(this.pageIndex);
    let C = Promise.resolve(null), h = null;
    if (l) {
      const Q = this.pdfManager.ensureDoc("annotationGlobals");
      let E;
      const f = /* @__PURE__ */ new Set();
      for (const {
        bitmapId: u,
        bitmap: x
      } of l)
        u && !x && !f.has(u) && f.add(u);
      const {
        isOffscreenCanvasSupported: d
      } = this.evaluatorOptions;
      if (f.size > 0) {
        const u = l.slice();
        for (const [x, p] of n)
          x.startsWith(ac) && p.bitmap && f.has(p.bitmapId) && u.push(p);
        E = Li.generateImages(u, this.xref, d);
      } else
        E = Li.generateImages(l, this.xref, d);
      h = new Ge(), C = Promise.all([Q, BA(this, ma, Jg).call(this, l, h, null)]).then(([u]) => u ? Li.printNewAnnotations(u, I, i, l, E) : null);
    }
    const B = Promise.all([g, o]).then(([Q]) => {
      const E = new Ct(s, t);
      return A.send("StartRenderPage", {
        transparency: I.hasBlendModes(this.resources, this.nonBlendModesSet),
        pageIndex: this.pageIndex,
        cacheKey: a
      }), I.getOperatorList({
        stream: Q,
        task: i,
        resources: this.resources,
        operatorList: E
      }).then(function() {
        return E;
      });
    });
    return Promise.all([B, this._parsedAnnotations, C]).then(function([Q, E, f]) {
      if (f) {
        E = E.filter((S) => !(S.ref && h.has(S.ref)));
        for (let S = 0, y = f.length; S < y; S++) {
          const H = f[S];
          if (H.refToReplace) {
            const G = E.findIndex((v) => v.ref && pn(v.ref, H.refToReplace));
            G >= 0 && (E.splice(G, 1, H), f.splice(S--, 1), y--);
          }
        }
        E = E.concat(f);
      }
      if (E.length === 0 || s & st.ANNOTATIONS_DISABLE)
        return Q.flush(!0), {
          length: Q.totalLength
        };
      const d = !!(s & st.ANNOTATIONS_FORMS), u = !!(s & st.IS_EDITING), x = !!(s & st.ANY), p = !!(s & st.DISPLAY), m = !!(s & st.PRINT), D = [];
      for (const S of E)
        (x || p && S.mustBeViewed(n, d) && S.mustBeViewedWhenEditing(u, r) || m && S.mustBePrinted(n)) && D.push(S.getOperatorList(I, i, s, n).catch(function(y) {
          return k(`getOperatorList - ignoring annotation data during "${i.name}" task: "${y}".`), {
            opList: null,
            separateForm: !1,
            separateCanvas: !1
          };
        }));
      return Promise.all(D).then(function(S) {
        let y = !1, H = !1;
        for (const {
          opList: G,
          separateForm: v,
          separateCanvas: X
        } of S)
          Q.addOpList(G), y || (y = v), H || (H = X);
        return Q.flush(!0, {
          form: y,
          canvas: H
        }), {
          length: Q.totalLength
        };
      });
    });
  }
  async extractTextContent({
    handler: A,
    task: t,
    includeMarkedContent: i,
    disableNormalization: s,
    sink: a
  }) {
    const n = this.getContentStream(), r = this.loadResources(["ExtGState", "Font", "Properties", "XObject"]), g = this.pdfManager.ensureCatalog("lang"), [o, , I] = await Promise.all([n, r, g]);
    return new Bi({
      xref: this.xref,
      handler: A,
      pageIndex: this.pageIndex,
      idFactory: this._localIdFactory,
      fontCache: this.fontCache,
      builtInCMapCache: this.builtInCMapCache,
      standardFontDataCache: this.standardFontDataCache,
      globalImageCache: this.globalImageCache,
      systemFontCache: this.systemFontCache,
      options: this.evaluatorOptions
    }).getTextContent({
      stream: o,
      task: t,
      resources: this.resources,
      includeMarkedContent: i,
      disableNormalization: s,
      sink: a,
      viewBox: this.view,
      lang: I
    });
  }
  async getStructTree() {
    const A = await this.pdfManager.ensureCatalog("structTreeRoot");
    if (!A)
      return null;
    await this._parsedAnnotations;
    const t = await this.pdfManager.ensure(this, "_parseStructTree", [A]);
    return this.pdfManager.ensure(t, "serializable");
  }
  _parseStructTree(A) {
    const t = new gl(A, this.pageDict);
    return t.parse(this.ref), t;
  }
  async getAnnotationsData(A, t, i) {
    const s = await this._parsedAnnotations;
    if (s.length === 0)
      return s;
    const a = [], n = [];
    let r;
    const g = !!(i & st.ANY), o = !!(i & st.DISPLAY), I = !!(i & st.PRINT);
    for (const c of s) {
      const l = g || o && c.viewable;
      (l || I && c.printable) && a.push(c.data), c.hasTextContent && l && (r || (r = new Bi({
        xref: this.xref,
        handler: A,
        pageIndex: this.pageIndex,
        idFactory: this._localIdFactory,
        fontCache: this.fontCache,
        builtInCMapCache: this.builtInCMapCache,
        standardFontDataCache: this.standardFontDataCache,
        globalImageCache: this.globalImageCache,
        systemFontCache: this.systemFontCache,
        options: this.evaluatorOptions
      })), n.push(c.extractTextContent(r, t, [-1 / 0, -1 / 0, 1 / 0, 1 / 0]).catch(function(C) {
        k(`getAnnotationsData - ignoring textContent during "${t.name}" task: "${C}".`);
      })));
    }
    return await Promise.all(n), a;
  }
  get annotations() {
    const A = this._getInheritableProperty("Annots");
    return tA(this, "annotations", Array.isArray(A) ? A : []);
  }
  get _parsedAnnotations() {
    const A = this.pdfManager.ensure(this, "annotations").then(async (t) => {
      if (t.length === 0)
        return t;
      const [i, s] = await Promise.all([this.pdfManager.ensureDoc("annotationGlobals"), this.pdfManager.ensureDoc("fieldObjects")]);
      if (!i)
        return [];
      const a = s == null ? void 0 : s.orphanFields, n = [];
      for (const I of t)
        n.push(Li.create(this.xref, I, i, this._localIdFactory, !1, a, this.ref).catch(function(c) {
          return k(`_parsedAnnotations: "${c}".`), null;
        }));
      const r = [];
      let g, o;
      for (const I of await Promise.all(n))
        if (I) {
          if (I instanceof jt) {
            (o || (o = [])).push(I);
            continue;
          }
          if (I instanceof Zl) {
            (g || (g = [])).push(I);
            continue;
          }
          r.push(I);
        }
      return o && r.push(...o), g && r.push(...g), r;
    });
    return tA(this, "_parsedAnnotations", A);
  }
  get jsActions() {
    const A = $n(this.xref, this.pageDict, EC);
    return tA(this, "jsActions", A);
  }
}
ma = new WeakSet(), Jg = async function(A, t, i) {
  const s = [];
  for (const a of A)
    if (a.id) {
      const n = nA.fromString(a.id);
      if (!n) {
        k(`A non-linked annotation cannot be modified: ${a.id}`);
        continue;
      }
      if (a.deleted) {
        if (t.put(n, n), a.popupRef) {
          const r = nA.fromString(a.popupRef);
          r && t.put(r, r);
        }
        continue;
      }
      i == null || i.put(n), a.ref = n, s.push(this.xref.fetchAsync(n).then((r) => {
        r instanceof R && (a.oldAnnotation = r.clone());
      }, () => {
        k(`Cannot fetch \`oldAnnotation\` for: ${n}.`);
      })), delete a.id;
    }
  await Promise.all(s);
};
const $I = new Uint8Array([37, 80, 68, 70, 45]), Ac = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]), P9 = new Uint8Array([101, 110, 100, 111, 98, 106]);
function Tr(e, A, t = 1024, i = !1) {
  const s = A.length, a = e.peekBytes(t), n = a.length - s;
  if (n <= 0)
    return !1;
  if (i) {
    const r = s - 1;
    let g = a.length - 1;
    for (; g >= r; ) {
      let o = 0;
      for (; o < s && a[g - o] === A[r - o]; )
        o++;
      if (o >= s)
        return e.pos += g - r, !0;
      g--;
    }
  } else {
    let r = 0;
    for (; r <= n; ) {
      let g = 0;
      for (; g < s && a[r + g] === A[g]; )
        g++;
      if (g >= s)
        return e.pos += r, !0;
      r++;
    }
  }
  return !1;
}
var pa, Yg;
class AC {
  constructor(A, t) {
    jA(this, pa);
    if (t.length <= 0)
      throw new mn("The PDF file is empty, i.e. its size is zero bytes.");
    this.pdfManager = A, this.stream = t, this.xref = new T9(t, A), this._pagePromises = /* @__PURE__ */ new Map(), this._version = null;
    const i = {
      font: 0
    };
    this._globalIdFactory = class {
      static getDocId() {
        return `g_${A.docId}`;
      }
      static createFontId() {
        return `f${++i.font}`;
      }
      static createObjId() {
        WA("Abstract method `createObjId` called.");
      }
      static getPageObjId() {
        WA("Abstract method `getPageObjId` called.");
      }
    };
  }
  parse(A) {
    this.xref.parse(A), this.catalog = new ta(this.pdfManager, this.xref);
  }
  get linearization() {
    let A = null;
    try {
      A = Wh.create(this.stream);
    } catch (t) {
      if (t instanceof Ie)
        throw t;
      vA(t);
    }
    return tA(this, "linearization", A);
  }
  get startXRef() {
    const A = this.stream;
    let t = 0;
    if (this.linearization) {
      if (A.reset(), Tr(A, P9)) {
        A.skip(6);
        let i = A.peekByte();
        for (; mt(i); )
          A.pos++, i = A.peekByte();
        t = A.pos - A.start;
      }
    } else {
      const s = Ac.length;
      let a = !1, n = A.end;
      for (; !a && n > 0; )
        n -= 1024 - s, n < 0 && (n = 0), A.pos = n, a = Tr(A, Ac, 1024, !0);
      if (a) {
        A.skip(9);
        let r;
        do
          r = A.getByte();
        while (mt(r));
        let g = "";
        for (; r >= 32 && r <= 57; )
          g += String.fromCharCode(r), r = A.getByte();
        t = parseInt(g, 10), isNaN(t) && (t = 0);
      }
    }
    return tA(this, "startXRef", t);
  }
  checkHeader() {
    const A = this.stream;
    if (A.reset(), !Tr(A, $I))
      return;
    A.moveStart(), A.skip($I.length);
    let t = "", i;
    for (; (i = A.getByte()) > 32 && t.length < 7; )
      t += String.fromCharCode(i);
    Cc.test(t) ? this._version = t : k(`Invalid PDF header version: ${t}`);
  }
  parseStartXRef() {
    this.xref.setStartXRef(this.startXRef);
  }
  get numPages() {
    let A = 0;
    return this.catalog.hasActualNumPages ? A = this.catalog.numPages : this.xfaFactory ? A = this.xfaFactory.getNumPages() : this.linearization ? A = this.linearization.numPages : A = this.catalog.numPages, tA(this, "numPages", A);
  }
  _hasOnlyDocumentSignatures(A, t = 0) {
    return Array.isArray(A) ? A.every((s) => {
      if (s = this.xref.fetchIfRef(s), !(s instanceof R))
        return !1;
      if (s.has("Kids"))
        return ++t > 10 ? (k("_hasOnlyDocumentSignatures: maximum recursion depth reached"), !1) : this._hasOnlyDocumentSignatures(s.get("Kids"), t);
      const a = xe(s.get("FT"), "Sig"), n = s.get("Rect"), r = Array.isArray(n) && n.every((g) => g === 0);
      return a && r;
    }) : !1;
  }
  get _xfaStreams() {
    const A = this.catalog.acroForm;
    if (!A)
      return null;
    const t = A.get("XFA"), i = {
      "xdp:xdp": "",
      template: "",
      datasets: "",
      config: "",
      connectionSet: "",
      localeSet: "",
      stylesheet: "",
      "/xdp:xdp": ""
    };
    if (t instanceof JA && !t.isEmpty)
      return i["xdp:xdp"] = t, i;
    if (!Array.isArray(t) || t.length === 0)
      return null;
    for (let s = 0, a = t.length; s < a; s += 2) {
      let n;
      if (s === 0 ? n = "xdp:xdp" : s === a - 2 ? n = "/xdp:xdp" : n = t[s], !i.hasOwnProperty(n))
        continue;
      const r = this.xref.fetchIfRef(t[s + 1]);
      !(r instanceof JA) || r.isEmpty || (i[n] = r);
    }
    return i;
  }
  get xfaDatasets() {
    const A = this._xfaStreams;
    if (!A)
      return tA(this, "xfaDatasets", null);
    for (const t of ["datasets", "xdp:xdp"]) {
      const i = A[t];
      if (i)
        try {
          const s = Zs(i.getString()), a = {
            [t]: s
          };
          return tA(this, "xfaDatasets", new v9(a));
        } catch {
          k("XFA - Invalid utf-8 string.");
          break;
        }
    }
    return tA(this, "xfaDatasets", null);
  }
  get xfaData() {
    const A = this._xfaStreams;
    if (!A)
      return null;
    const t = /* @__PURE__ */ Object.create(null);
    for (const [i, s] of Object.entries(A))
      if (s)
        try {
          t[i] = Zs(s.getString());
        } catch {
          return k("XFA - Invalid utf-8 string."), null;
        }
    return t;
  }
  get xfaFactory() {
    let A;
    return this.pdfManager.enableXfa && this.catalog.needsRendering && this.formInfo.hasXfa && !this.formInfo.hasAcroForm && (A = this.xfaData), tA(this, "xfaFactory", A ? new Sa(A) : null);
  }
  get isPureXfa() {
    return this.xfaFactory ? this.xfaFactory.isValid() : !1;
  }
  get htmlForXfa() {
    return this.xfaFactory ? this.xfaFactory.getPages() : null;
  }
  async loadXfaImages() {
    const A = await this.pdfManager.ensureCatalog("xfaImages");
    if (!A)
      return;
    const t = A.getKeys();
    await new Rn(A, t, this.xref).load();
    const s = /* @__PURE__ */ new Map();
    for (const a of t) {
      const n = A.get(a);
      n instanceof JA && s.set(a, n.getBytes());
    }
    this.xfaFactory.setImages(s);
  }
  async loadXfaFonts(A, t) {
    const i = await this.pdfManager.ensureCatalog("acroForm");
    if (!i)
      return;
    const s = await i.getAsync("DR");
    if (!(s instanceof R))
      return;
    await new Rn(s, ["Font"], this.xref).load();
    const n = s.get("Font");
    if (!(n instanceof R))
      return;
    const r = Object.assign(/* @__PURE__ */ Object.create(null), this.pdfManager.evaluatorOptions);
    r.useSystemFonts = !1;
    const g = new Bi({
      xref: this.xref,
      handler: A,
      pageIndex: -1,
      idFactory: this._globalIdFactory,
      fontCache: this.catalog.fontCache,
      builtInCMapCache: this.catalog.builtInCMapCache,
      standardFontDataCache: this.catalog.standardFontDataCache,
      options: r
    }), o = new Ct(), I = [], c = {
      get font() {
        return I.at(-1);
      },
      set font(B) {
        I.push(B);
      },
      clone() {
        return this;
      }
    }, l = [];
    for (const [B, Q] of n) {
      const E = Q.get("FontDescriptor");
      if (!(E instanceof R))
        continue;
      let f = E.get("FontFamily");
      f = f.replaceAll(/[ ]+(\d)/g, "$1");
      const d = E.get("FontWeight"), u = -E.get("ItalicAngle"), x = {
        fontFamily: f,
        fontWeight: d,
        italicAngle: u
      };
      MC(x) && l.push(g.handleSetFont(s, [L.get(B), 1], null, o, t, c, null, x).catch(function(p) {
        return k(`loadXfaFonts: "${p}".`), null;
      }));
    }
    await Promise.all(l);
    const C = this.xfaFactory.setFonts(I);
    if (!C)
      return;
    r.ignoreErrors = !0, l.length = 0, I.length = 0;
    const h = /* @__PURE__ */ new Set();
    for (const B of C)
      Ao(`${B}-Regular`) || h.add(B);
    h.size && C.push("PdfJS-Fallback");
    for (const B of C)
      if (!h.has(B))
        for (const Q of [{
          name: "Regular",
          fontWeight: 400,
          italicAngle: 0
        }, {
          name: "Bold",
          fontWeight: 700,
          italicAngle: 0
        }, {
          name: "Italic",
          fontWeight: 400,
          italicAngle: 12
        }, {
          name: "BoldItalic",
          fontWeight: 700,
          italicAngle: 12
        }]) {
          const E = `${B}-${Q.name}`, f = Zc(E);
          l.push(g.handleSetFont(s, [L.get(E), 1], null, o, t, c, f, {
            fontFamily: B,
            fontWeight: Q.fontWeight,
            italicAngle: Q.italicAngle
          }).catch(function(d) {
            return k(`loadXfaFonts: "${d}".`), null;
          }));
        }
    await Promise.all(l), this.xfaFactory.appendFonts(I, h);
  }
  async serializeXfaData(A) {
    return this.xfaFactory ? this.xfaFactory.serializeData(A) : null;
  }
  get version() {
    return this.catalog.version || this._version;
  }
  get formInfo() {
    const A = {
      hasFields: !1,
      hasAcroForm: !1,
      hasXfa: !1,
      hasSignatures: !1
    }, t = this.catalog.acroForm;
    if (!t)
      return tA(this, "formInfo", A);
    try {
      const i = t.get("Fields"), s = Array.isArray(i) && i.length > 0;
      A.hasFields = s;
      const a = t.get("XFA");
      A.hasXfa = Array.isArray(a) && a.length > 0 || a instanceof JA && !a.isEmpty;
      const r = !!(t.get("SigFlags") & 1), g = r && this._hasOnlyDocumentSignatures(i);
      A.hasAcroForm = s && !g, A.hasSignatures = r;
    } catch (i) {
      if (i instanceof Ie)
        throw i;
      k(`Cannot fetch form information: "${i}".`);
    }
    return tA(this, "formInfo", A);
  }
  get documentInfo() {
    const A = {
      PDFFormatVersion: this.version,
      Language: this.catalog.lang,
      EncryptFilterName: this.xref.encrypt ? this.xref.encrypt.filterName : null,
      IsLinearized: !!this.linearization,
      IsAcroFormPresent: this.formInfo.hasAcroForm,
      IsXFAPresent: this.formInfo.hasXfa,
      IsCollectionPresent: !!this.catalog.collection,
      IsSignaturesPresent: this.formInfo.hasSignatures
    };
    let t;
    try {
      t = this.xref.trailer.get("Info");
    } catch (i) {
      if (i instanceof Ie)
        throw i;
      vA("The document information dictionary is invalid.");
    }
    if (!(t instanceof R))
      return tA(this, "documentInfo", A);
    for (const i of t.getKeys()) {
      const s = t.get(i);
      switch (i) {
        case "Title":
        case "Author":
        case "Subject":
        case "Keywords":
        case "Creator":
        case "Producer":
        case "CreationDate":
        case "ModDate":
          if (typeof s == "string") {
            A[i] = XA(s);
            continue;
          }
          break;
        case "Trapped":
          if (s instanceof L) {
            A[i] = s;
            continue;
          }
          break;
        default:
          let a;
          switch (typeof s) {
            case "string":
              a = XA(s);
              break;
            case "number":
            case "boolean":
              a = s;
              break;
            default:
              s instanceof L && (a = s);
              break;
          }
          if (a === void 0) {
            k(`Bad value, for custom key "${i}", in Info: ${s}.`);
            continue;
          }
          A.Custom || (A.Custom = /* @__PURE__ */ Object.create(null)), A.Custom[i] = a;
          continue;
      }
      k(`Bad value, for key "${i}", in Info: ${s}.`);
    }
    return tA(this, "documentInfo", A);
  }
  get fingerprints() {
    const t = "\0".repeat(16);
    function i(r) {
      return typeof r == "string" && r.length === 16 && r !== t;
    }
    const s = this.xref.trailer.get("ID");
    let a, n;
    return Array.isArray(s) && i(s[0]) ? (a = qe(s[0]), s[1] !== s[0] && i(s[1]) && (n = qe(s[1]))) : a = Ni(this.stream.getByteRange(0, 1024), 0, 1024), tA(this, "fingerprints", [ko(a), n ? ko(n) : null]);
  }
  async _getLinearizationPage(A) {
    const {
      catalog: t,
      linearization: i,
      xref: s
    } = this, a = nA.get(i.objectNumberFirst, 0);
    try {
      const n = await s.fetchAsync(a);
      if (n instanceof R) {
        let r = n.getRaw("Type");
        if (r instanceof nA && (r = await s.fetchAsync(r)), xe(r, "Page") || !n.has("Type") && !n.has("Kids") && n.has("Contents"))
          return t.pageKidsCountCache.has(a) || t.pageKidsCountCache.put(a, 1), t.pageIndexCache.has(a) || t.pageIndexCache.put(a, 0), [n, a];
      }
      throw new T("The Linearization dictionary doesn't point to a valid Page dictionary.");
    } catch (n) {
      return k(`_getLinearizationPage: "${n.message}".`), t.getPageDict(A);
    }
  }
  getPage(A) {
    const t = this._pagePromises.get(A);
    if (t)
      return t;
    const {
      catalog: i,
      linearization: s,
      xfaFactory: a
    } = this;
    let n;
    return a ? n = Promise.resolve([R.empty, null]) : (s == null ? void 0 : s.pageFirst) === A ? n = this._getLinearizationPage(A) : n = i.getPageDict(A), n = n.then(([r, g]) => new zI({
      pdfManager: this.pdfManager,
      xref: this.xref,
      pageIndex: A,
      pageDict: r,
      ref: g,
      globalIdFactory: this._globalIdFactory,
      fontCache: i.fontCache,
      builtInCMapCache: i.builtInCMapCache,
      standardFontDataCache: i.standardFontDataCache,
      globalImageCache: i.globalImageCache,
      systemFontCache: i.systemFontCache,
      nonBlendModesSet: i.nonBlendModesSet,
      xfaFactory: a
    })), this._pagePromises.set(A, n), n;
  }
  async checkFirstPage(A = !1) {
    if (!A)
      try {
        await this.getPage(0);
      } catch (t) {
        if (t instanceof Ji)
          throw this._pagePromises.delete(0), await this.cleanup(), new W0();
      }
  }
  async checkLastPage(A = !1) {
    const {
      catalog: t,
      pdfManager: i
    } = this;
    t.setActualNumPages();
    let s;
    try {
      if (await Promise.all([i.ensureDoc("xfaFactory"), i.ensureDoc("linearization"), i.ensureCatalog("numPages")]), this.xfaFactory)
        return;
      if (this.linearization ? s = this.linearization.numPages : s = t.numPages, Number.isInteger(s)) {
        if (s <= 1)
          return;
      } else throw new T("Page count is not an integer.");
      await this.getPage(s - 1);
    } catch (a) {
      if (this._pagePromises.delete(s - 1), await this.cleanup(), a instanceof Ji && !A)
        throw new W0();
      k(`checkLastPage - invalid /Pages tree /Count: ${s}.`);
      let n;
      try {
        n = await t.getAllPageDicts(A);
      } catch (r) {
        if (r instanceof Ji && !A)
          throw new W0();
        t.setActualNumPages(1);
        return;
      }
      for (const [r, [g, o]] of n) {
        let I;
        g instanceof Error ? (I = Promise.reject(g), I.catch(() => {
        })) : I = Promise.resolve(new zI({
          pdfManager: i,
          xref: this.xref,
          pageIndex: r,
          pageDict: g,
          ref: o,
          globalIdFactory: this._globalIdFactory,
          fontCache: t.fontCache,
          builtInCMapCache: t.builtInCMapCache,
          standardFontDataCache: t.standardFontDataCache,
          globalImageCache: t.globalImageCache,
          systemFontCache: t.systemFontCache,
          nonBlendModesSet: t.nonBlendModesSet,
          xfaFactory: null
        })), this._pagePromises.set(r, I);
      }
      t.setActualNumPages(n.size);
    }
  }
  fontFallback(A, t) {
    return this.catalog.fontFallback(A, t);
  }
  async cleanup(A = !1) {
    return this.catalog ? this.catalog.cleanup(A) : io();
  }
  get fieldObjects() {
    const A = this.pdfManager.ensureDoc("formInfo").then(async (t) => {
      if (!t.hasFields)
        return null;
      const [i, s] = await Promise.all([this.pdfManager.ensureDoc("annotationGlobals"), this.pdfManager.ensureCatalog("acroForm")]);
      if (!i)
        return null;
      const a = new Ge(), n = /* @__PURE__ */ Object.create(null), r = /* @__PURE__ */ new Map(), g = new It();
      for (const I of await s.getAsync("Fields"))
        await BA(this, pa, Yg).call(this, "", null, I, r, i, a, g);
      const o = [];
      for (const [I, c] of r)
        o.push(Promise.all(c).then((l) => {
          l = l.filter((C) => !!C), l.length > 0 && (n[I] = l);
        }));
      return await Promise.all(o), {
        allFields: n,
        orphanFields: g
      };
    });
    return tA(this, "fieldObjects", A);
  }
  get hasJSActions() {
    const A = this.pdfManager.ensureDoc("_parseHasJSActions");
    return tA(this, "hasJSActions", A);
  }
  async _parseHasJSActions() {
    const [A, t] = await Promise.all([this.pdfManager.ensureCatalog("jsActions"), this.pdfManager.ensureDoc("fieldObjects")]);
    return A ? !0 : t ? Object.values(t.allFields).some((i) => i.some((s) => s.actions !== null)) : !1;
  }
  get calculationOrderIds() {
    var i;
    const A = (i = this.catalog.acroForm) == null ? void 0 : i.get("CO");
    if (!Array.isArray(A) || A.length === 0)
      return tA(this, "calculationOrderIds", null);
    const t = [];
    for (const s of A)
      s instanceof nA && t.push(s.toString());
    return tA(this, "calculationOrderIds", t.length ? t : null);
  }
  get annotationGlobals() {
    return tA(this, "annotationGlobals", Li.createGlobals(this.pdfManager));
  }
}
pa = new WeakSet(), Yg = async function(A, t, i, s, a, n, r) {
  const {
    xref: g
  } = this;
  if (!(i instanceof nA) || n.has(i))
    return;
  n.put(i);
  const o = await g.fetchAsync(i);
  if (!(o instanceof R))
    return;
  if (o.has("T")) {
    const c = XA(await o.getAsync("T"));
    A = A === "" ? c : `${A}.${c}`;
  } else {
    let c = o;
    for (; ; ) {
      if (c = c.getRaw("Parent") || t, c instanceof nA) {
        if (n.has(c))
          break;
        c = await g.fetchAsync(c);
      }
      if (!(c instanceof R))
        break;
      if (c.has("T")) {
        const l = XA(await c.getAsync("T"));
        A = A === "" ? l : `${A}.${l}`;
        break;
      }
    }
  }
  if (t && !o.has("Parent") && xe(o.get("Subtype"), "Widget") && r.put(i, t), s.has(A) || s.set(A, []), s.get(A).push(Li.create(g, i, a, null, !0, r, null).then((c) => c == null ? void 0 : c.getFieldObject()).catch(function(c) {
    return k(`#collectFieldObjects: "${c}".`), null;
  })), !o.has("Kids"))
    return;
  const I = await o.getAsync("Kids");
  if (Array.isArray(I))
    for (const c of I)
      await BA(this, pa, Yg).call(this, A, i, c, s, a, n, r);
};
function W9(e) {
  if (e) {
    const A = un(e);
    if (A)
      return A.href;
    k(`Invalid absolute docBaseUrl: "${e}".`);
  }
  return null;
}
class eC {
  constructor(A) {
    var t, i;
    this._docBaseUrl = W9(A.docBaseUrl), this._docId = A.docId, this._password = A.password, this.enableXfa = A.enableXfa, (t = A.evaluatorOptions).isOffscreenCanvasSupported && (t.isOffscreenCanvasSupported = ht.isOffscreenCanvasSupported), (i = A.evaluatorOptions).isImageDecoderSupported && (i.isImageDecoderSupported = ht.isImageDecoderSupported), this.evaluatorOptions = Object.freeze(A.evaluatorOptions);
  }
  get docId() {
    return this._docId;
  }
  get password() {
    return this._password;
  }
  get docBaseUrl() {
    return this._docBaseUrl;
  }
  get catalog() {
    return this.pdfDocument.catalog;
  }
  ensureDoc(A, t) {
    return this.ensure(this.pdfDocument, A, t);
  }
  ensureXRef(A, t) {
    return this.ensure(this.pdfDocument.xref, A, t);
  }
  ensureCatalog(A, t) {
    return this.ensure(this.pdfDocument.catalog, A, t);
  }
  getPage(A) {
    return this.pdfDocument.getPage(A);
  }
  fontFallback(A, t) {
    return this.pdfDocument.fontFallback(A, t);
  }
  loadXfaFonts(A, t) {
    return this.pdfDocument.loadXfaFonts(A, t);
  }
  loadXfaImages() {
    return this.pdfDocument.loadXfaImages();
  }
  serializeXfaData(A) {
    return this.pdfDocument.serializeXfaData(A);
  }
  cleanup(A = !1) {
    return this.pdfDocument.cleanup(A);
  }
  async ensure(A, t, i) {
    WA("Abstract method `ensure` called");
  }
  requestRange(A, t) {
    WA("Abstract method `requestRange` called");
  }
  requestLoadedStream(A = !1) {
    WA("Abstract method `requestLoadedStream` called");
  }
  sendProgressiveData(A) {
    WA("Abstract method `sendProgressiveData` called");
  }
  updatePassword(A) {
    this._password = A;
  }
  terminate(A) {
    WA("Abstract method `terminate` called");
  }
}
class ec extends eC {
  constructor(A) {
    super(A);
    const t = new Ee(A.source);
    this.pdfDocument = new AC(this, t), this._loadedStreamPromise = Promise.resolve(t);
  }
  async ensure(A, t, i) {
    const s = A[t];
    return typeof s == "function" ? s.apply(A, i) : s;
  }
  requestRange(A, t) {
    return Promise.resolve();
  }
  requestLoadedStream(A = !1) {
    return this._loadedStreamPromise;
  }
  terminate(A) {
  }
}
class O9 extends eC {
  constructor(A) {
    super(A), this.streamManager = new YC(A.source, {
      msgHandler: A.handler,
      length: A.length,
      disableAutoFetch: A.disableAutoFetch,
      rangeChunkSize: A.rangeChunkSize
    }), this.pdfDocument = new AC(this, this.streamManager.getStream());
  }
  async ensure(A, t, i) {
    try {
      const s = A[t];
      return typeof s == "function" ? s.apply(A, i) : s;
    } catch (s) {
      if (!(s instanceof Ie))
        throw s;
      return await this.requestRange(s.begin, s.end), this.ensure(A, t, i);
    }
  }
  requestRange(A, t) {
    return this.streamManager.requestRange(A, t);
  }
  requestLoadedStream(A = !1) {
    return this.streamManager.requestAllChunks(A);
  }
  sendProgressiveData(A) {
    this.streamManager.onReceiveData({
      chunk: A
    });
  }
  terminate(A) {
    this.streamManager.abort(A);
  }
}
async function tC(e, A, t, {
  encrypt: i = null
}) {
  const s = i == null ? void 0 : i.createCipherTransform(e.num, e.gen);
  t.push(`${e.num} ${e.gen} obj
`), A instanceof R ? await Qr(A, t, s) : A instanceof JA ? await iC(A, t, s) : (Array.isArray(A) || ArrayBuffer.isView(A)) && await sC(A, t, s), t.push(`
endobj
`);
}
async function Qr(e, A, t) {
  A.push("<<");
  for (const i of e.getKeys())
    A.push(` /${Tg(i)} `), await aC(e.getRaw(i), A, t);
  A.push(">>");
}
async function iC(e, A, t) {
  let i = e.getBytes();
  const {
    dict: s
  } = e, [a, n] = await Promise.all([s.getAsync("Filter"), s.getAsync("DecodeParms")]), r = Array.isArray(a) ? await s.xref.fetchIfRefAsync(a[0]) : a, g = xe(r, "FlateDecode");
  if (i.length >= 256 || g)
    try {
      const c = new CompressionStream("deflate"), l = c.writable.getWriter();
      await l.ready, l.write(i).then(async () => {
        await l.ready, await l.close();
      }).catch(() => {
      });
      const C = await new Response(c.readable).arrayBuffer();
      i = new Uint8Array(C);
      let h, B;
      a ? g || (h = Array.isArray(a) ? [L.get("FlateDecode"), ...a] : [L.get("FlateDecode"), a], n && (B = Array.isArray(n) ? [null, ...n] : [null, n])) : h = L.get("FlateDecode"), h && s.set("Filter", h), B && s.set("DecodeParms", B);
    } catch (c) {
      vA(`writeStream - cannot compress data: "${c}".`);
    }
  let I = lt(i);
  t && (I = t.encryptString(I)), s.set("Length", I.length), await Qr(s, A, t), A.push(` stream
`, I, `
endstream`);
}
async function sC(e, A, t) {
  A.push("[");
  let i = !0;
  for (const s of e)
    i ? i = !1 : A.push(" "), await aC(s, A, t);
  A.push("]");
}
async function aC(e, A, t) {
  e instanceof L ? A.push(`/${Tg(e.name)}`) : e instanceof nA ? A.push(`${e.num} ${e.gen} R`) : Array.isArray(e) || ArrayBuffer.isView(e) ? await sC(e, A, t) : typeof e == "string" ? (t && (e = t.encryptString(e)), A.push(`(${ts(e)})`)) : typeof e == "number" ? A.push($A(e)) : typeof e == "boolean" ? A.push(e.toString()) : e instanceof R ? await Qr(e, A, t) : e instanceof JA ? await iC(e, A, t) : e === null ? A.push("null") : k(`Unhandled value in writer: ${typeof e}, please file a bug.`);
}
function qr(e, A, t, i) {
  for (let s = A + t - 1; s > t - 1; s--)
    i[s] = e & 255, e >>= 8;
  return t + A;
}
function nC(e, A, t) {
  for (let i = 0, s = e.length; i < s; i++)
    t[A + i] = e.charCodeAt(i) & 255;
}
function Z9(e, A) {
  const t = Math.floor(Date.now() / 1e3), i = A.filename || "", s = [t.toString(), i, e.toString()];
  let a = s.reduce((g, o) => g + o.length, 0);
  for (const g of Object.values(A.info))
    s.push(g), a += g.length;
  const n = new Uint8Array(a);
  let r = 0;
  for (const g of s)
    nC(g, r, n), r += g.length;
  return lt(Ni(n));
}
function j9(e, A) {
  const t = new ar({
    hasAttributes: !0
  }).parseFromString(e);
  for (const {
    xfa: s
  } of A) {
    if (!s)
      continue;
    const {
      path: a,
      value: n
    } = s;
    if (!a)
      continue;
    const r = Bc(a);
    let g = t.documentElement.searchNode(r, 0);
    !g && r.length > 1 && (g = t.documentElement.searchNode([r.at(-1)], 0)), g ? g.childNodes = Array.isArray(n) ? n.map((o) => new Ks("value", o)) : [new Ks("#text", n)] : k(`Node not found for path: ${a}`);
  }
  const i = [];
  return t.documentElement.dump(i), i.join("");
}
async function X9({
  xref: e,
  acroForm: A,
  acroFormRef: t,
  hasXfa: i,
  hasXfaDatasetsEntry: s,
  xfaDatasetsRef: a,
  needAppearances: n,
  changes: r
}) {
  if (i && !s && !a && k("XFA - Cannot save it"), !n && (!i || !a || s))
    return;
  const g = A.clone();
  if (i && !s) {
    const o = A.get("XFA").slice();
    o.splice(2, 0, "datasets"), o.splice(3, 0, a), g.set("XFA", o);
  }
  n && g.set("NeedAppearances", !0), r.put(t, {
    data: g
  });
}
function V9({
  xfaData: e,
  xfaDatasetsRef: A,
  changes: t,
  xref: i
}) {
  if (e === null) {
    const a = i.fetchIfRef(A);
    e = j9(a.getString(), t);
  }
  const s = new Bt(e);
  s.dict = new R(i), s.dict.set("Type", L.get("EmbeddedFile")), t.put(A, {
    data: s
  });
}
async function _9(e, A, t, i, s) {
  s.push(`xref
`);
  const a = rC(t);
  let n = 0;
  for (const {
    ref: r,
    data: g
  } of t)
    r.num === a[n] && (s.push(`${a[n]} ${a[n + 1]}
`), n += 2), g !== null ? (s.push(`${A.toString().padStart(10, "0")} ${Math.min(r.gen, 65535).toString().padStart(5, "0")} n\r
`), A += g.length) : s.push(`0000000000 ${Math.min(r.gen + 1, 65535).toString().padStart(5, "0")} f\r
`);
  gC(A, e, i), s.push(`trailer
`), await Qr(i, s), s.push(`
startxref
`, A.toString(), `
%%EOF
`);
}
function rC(e) {
  const A = [];
  for (const {
    ref: t
  } of e)
    t.num === A.at(-2) + A.at(-1) ? A[A.length - 1] += 1 : A.push(t.num, 1);
  return A;
}
async function z9(e, A, t, i, s) {
  const a = [];
  let n = 0, r = 0;
  for (const {
    ref: B,
    data: Q
  } of t) {
    let E;
    n = Math.max(n, A), Q !== null ? (E = Math.min(B.gen, 65535), a.push([1, A, E]), A += Q.length) : (E = Math.min(B.gen + 1, 65535), a.push([0, 0, E])), r = Math.max(r, E);
  }
  i.set("Index", rC(t));
  const g = So(n), o = So(r), I = [1, g, o];
  i.set("W", I), gC(A, e, i);
  const c = I.reduce((B, Q) => B + Q, 0), l = new Uint8Array(c * a.length), C = new Ee(l);
  C.dict = i;
  let h = 0;
  for (const [B, Q, E] of a)
    h = qr(B, I[0], h, l), h = qr(Q, I[1], h, l), h = qr(E, I[2], h, l);
  await tC(e.newRef, C, s, {}), s.push(`startxref
`, A.toString(), `
%%EOF
`);
}
function gC(e, A, t) {
  if (Array.isArray(A.fileIds) && A.fileIds.length > 0) {
    const i = Z9(e, A);
    t.set("ID", [A.fileIds[0], i]);
  }
}
function $9(e, A, t) {
  const i = new R(null);
  i.set("Prev", e.startXRef);
  const s = e.newRef;
  return t ? (A.put(s, {
    data: ""
  }), i.set("Size", s.num + 1), i.set("Type", L.get("XRef"))) : i.set("Size", s.num), e.rootRef !== null && i.set("Root", e.rootRef), e.infoRef !== null && i.set("Info", e.infoRef), e.encryptRef !== null && i.set("Encrypt", e.encryptRef), i;
}
async function Ax(e, A, t = []) {
  const i = [];
  for (const [s, {
    data: a
  }] of e.items()) {
    if (a === null || typeof a == "string") {
      i.push({
        ref: s,
        data: a
      });
      continue;
    }
    await tC(s, a, t, A), i.push({
      ref: s,
      data: t.join("")
    }), t.length = 0;
  }
  return i.sort((s, a) => s.ref.num - a.ref.num);
}
async function ex({
  originalData: e,
  xrefInfo: A,
  changes: t,
  xref: i = null,
  hasXfa: s = !1,
  xfaDatasetsRef: a = null,
  hasXfaDatasetsEntry: n = !1,
  needAppearances: r,
  acroFormRef: g = null,
  acroForm: o = null,
  xfaData: I = null,
  useXrefStream: c = !1
}) {
  await X9({
    xref: i,
    acroForm: o,
    acroFormRef: g,
    hasXfa: s,
    hasXfaDatasetsEntry: n,
    xfaDatasetsRef: a,
    needAppearances: r,
    changes: t
  }), s && V9({
    xfaData: I,
    xfaDatasetsRef: a,
    changes: t,
    xref: i
  });
  const l = $9(A, t, c), C = [], h = await Ax(t, i, C);
  let B = e.length;
  const Q = e.at(-1);
  Q !== 10 && Q !== 13 && (C.push(`
`), B += 1);
  for (const {
    data: u
  } of h)
    u !== null && C.push(u);
  await (c ? z9(A, B, h, l, C) : _9(A, B, h, l, C));
  const E = C.reduce((u, x) => u + x.length, e.length), f = new Uint8Array(E);
  f.set(e);
  let d = e.length;
  for (const u of C)
    nC(u, d, f), d += u.length;
  return f;
}
const en = {
  UNKNOWN: 0,
  DATA: 1,
  ERROR: 2
}, ke = {
  UNKNOWN: 0,
  CANCEL: 1,
  CANCEL_COMPLETE: 2,
  CLOSE: 3,
  ENQUEUE: 4,
  ERROR: 5,
  PULL: 6,
  PULL_COMPLETE: 7,
  START_COMPLETE: 8
};
function tc() {
}
function kt(e) {
  switch (e instanceof Error || typeof e == "object" && e !== null || WA('wrapReason: Expected "reason" to be a (possibly cloned) Error.'), e.name) {
    case "AbortException":
      return new je(e.message);
    case "MissingPDFException":
      return new gc(e.message);
    case "PasswordException":
      return new dn(e.message, e.code);
    case "UnexpectedResponseException":
      return new oc(e.message, e.status);
    case "UnknownErrorException":
      return new xn(e.message, e.details);
    default:
      return new xn(e.message, e.toString());
  }
}
var es, Ht, oC, IC, cC, En;
class ic {
  constructor(A, t, i) {
    jA(this, Ht);
    jA(this, es, new AbortController());
    this.sourceName = A, this.targetName = t, this.comObj = i, this.callbackId = 1, this.streamId = 1, this.streamSinks = /* @__PURE__ */ Object.create(null), this.streamControllers = /* @__PURE__ */ Object.create(null), this.callbackCapabilities = /* @__PURE__ */ Object.create(null), this.actionHandler = /* @__PURE__ */ Object.create(null), i.addEventListener("message", BA(this, Ht, oC).bind(this), {
      signal: PA(this, es).signal
    });
  }
  on(A, t) {
    const i = this.actionHandler;
    if (i[A])
      throw new Error(`There is already an actionName called "${A}"`);
    i[A] = t;
  }
  send(A, t, i) {
    this.comObj.postMessage({
      sourceName: this.sourceName,
      targetName: this.targetName,
      action: A,
      data: t
    }, i);
  }
  sendWithPromise(A, t, i) {
    const s = this.callbackId++, a = Promise.withResolvers();
    this.callbackCapabilities[s] = a;
    try {
      this.comObj.postMessage({
        sourceName: this.sourceName,
        targetName: this.targetName,
        action: A,
        callbackId: s,
        data: t
      }, i);
    } catch (n) {
      a.reject(n);
    }
    return a.promise;
  }
  sendWithStream(A, t, i, s) {
    const a = this.streamId++, n = this.sourceName, r = this.targetName, g = this.comObj;
    return new ReadableStream({
      start: (o) => {
        const I = Promise.withResolvers();
        return this.streamControllers[a] = {
          controller: o,
          startCall: I,
          pullCall: null,
          cancelCall: null,
          isClosed: !1
        }, g.postMessage({
          sourceName: n,
          targetName: r,
          action: A,
          streamId: a,
          data: t,
          desiredSize: o.desiredSize
        }, s), I.promise;
      },
      pull: (o) => {
        const I = Promise.withResolvers();
        return this.streamControllers[a].pullCall = I, g.postMessage({
          sourceName: n,
          targetName: r,
          stream: ke.PULL,
          streamId: a,
          desiredSize: o.desiredSize
        }), I.promise;
      },
      cancel: (o) => {
        nt(o instanceof Error, "cancel must have a valid reason");
        const I = Promise.withResolvers();
        return this.streamControllers[a].cancelCall = I, this.streamControllers[a].isClosed = !0, g.postMessage({
          sourceName: n,
          targetName: r,
          stream: ke.CANCEL,
          streamId: a,
          reason: kt(o)
        }), I.promise;
      }
    }, i);
  }
  destroy() {
    var A;
    (A = PA(this, es)) == null || A.abort(), wt(this, es, null);
  }
}
es = new WeakMap(), Ht = new WeakSet(), oC = function({
  data: A
}) {
  if (A.targetName !== this.sourceName)
    return;
  if (A.stream) {
    BA(this, Ht, cC).call(this, A);
    return;
  }
  if (A.callback) {
    const i = A.callbackId, s = this.callbackCapabilities[i];
    if (!s)
      throw new Error(`Cannot resolve callback ${i}`);
    if (delete this.callbackCapabilities[i], A.callback === en.DATA)
      s.resolve(A.data);
    else if (A.callback === en.ERROR)
      s.reject(kt(A.reason));
    else
      throw new Error("Unexpected callback case");
    return;
  }
  const t = this.actionHandler[A.action];
  if (!t)
    throw new Error(`Unknown action from worker: ${A.action}`);
  if (A.callbackId) {
    const i = this.sourceName, s = A.sourceName, a = this.comObj;
    Promise.try(t, A.data).then(function(n) {
      a.postMessage({
        sourceName: i,
        targetName: s,
        callback: en.DATA,
        callbackId: A.callbackId,
        data: n
      });
    }, function(n) {
      a.postMessage({
        sourceName: i,
        targetName: s,
        callback: en.ERROR,
        callbackId: A.callbackId,
        reason: kt(n)
      });
    });
    return;
  }
  if (A.streamId) {
    BA(this, Ht, IC).call(this, A);
    return;
  }
  t(A.data);
}, IC = function(A) {
  const t = A.streamId, i = this.sourceName, s = A.sourceName, a = this.comObj, n = this, r = this.actionHandler[A.action], g = {
    enqueue(o, I = 1, c) {
      if (this.isCancelled)
        return;
      const l = this.desiredSize;
      this.desiredSize -= I, l > 0 && this.desiredSize <= 0 && (this.sinkCapability = Promise.withResolvers(), this.ready = this.sinkCapability.promise), a.postMessage({
        sourceName: i,
        targetName: s,
        stream: ke.ENQUEUE,
        streamId: t,
        chunk: o
      }, c);
    },
    close() {
      this.isCancelled || (this.isCancelled = !0, a.postMessage({
        sourceName: i,
        targetName: s,
        stream: ke.CLOSE,
        streamId: t
      }), delete n.streamSinks[t]);
    },
    error(o) {
      nt(o instanceof Error, "error must have a valid reason"), !this.isCancelled && (this.isCancelled = !0, a.postMessage({
        sourceName: i,
        targetName: s,
        stream: ke.ERROR,
        streamId: t,
        reason: kt(o)
      }));
    },
    sinkCapability: Promise.withResolvers(),
    onPull: null,
    onCancel: null,
    isCancelled: !1,
    desiredSize: A.desiredSize,
    ready: null
  };
  g.sinkCapability.resolve(), g.ready = g.sinkCapability.promise, this.streamSinks[t] = g, Promise.try(r, A.data, g).then(function() {
    a.postMessage({
      sourceName: i,
      targetName: s,
      stream: ke.START_COMPLETE,
      streamId: t,
      success: !0
    });
  }, function(o) {
    a.postMessage({
      sourceName: i,
      targetName: s,
      stream: ke.START_COMPLETE,
      streamId: t,
      reason: kt(o)
    });
  });
}, cC = function(A) {
  const t = A.streamId, i = this.sourceName, s = A.sourceName, a = this.comObj, n = this.streamControllers[t], r = this.streamSinks[t];
  switch (A.stream) {
    case ke.START_COMPLETE:
      A.success ? n.startCall.resolve() : n.startCall.reject(kt(A.reason));
      break;
    case ke.PULL_COMPLETE:
      A.success ? n.pullCall.resolve() : n.pullCall.reject(kt(A.reason));
      break;
    case ke.PULL:
      if (!r) {
        a.postMessage({
          sourceName: i,
          targetName: s,
          stream: ke.PULL_COMPLETE,
          streamId: t,
          success: !0
        });
        break;
      }
      r.desiredSize <= 0 && A.desiredSize > 0 && r.sinkCapability.resolve(), r.desiredSize = A.desiredSize, Promise.try(r.onPull || tc).then(function() {
        a.postMessage({
          sourceName: i,
          targetName: s,
          stream: ke.PULL_COMPLETE,
          streamId: t,
          success: !0
        });
      }, function(o) {
        a.postMessage({
          sourceName: i,
          targetName: s,
          stream: ke.PULL_COMPLETE,
          streamId: t,
          reason: kt(o)
        });
      });
      break;
    case ke.ENQUEUE:
      if (nt(n, "enqueue should have stream controller"), n.isClosed)
        break;
      n.controller.enqueue(A.chunk);
      break;
    case ke.CLOSE:
      if (nt(n, "close should have stream controller"), n.isClosed)
        break;
      n.isClosed = !0, n.controller.close(), BA(this, Ht, En).call(this, n, t);
      break;
    case ke.ERROR:
      nt(n, "error should have stream controller"), n.controller.error(kt(A.reason)), BA(this, Ht, En).call(this, n, t);
      break;
    case ke.CANCEL_COMPLETE:
      A.success ? n.cancelCall.resolve() : n.cancelCall.reject(kt(A.reason)), BA(this, Ht, En).call(this, n, t);
      break;
    case ke.CANCEL:
      if (!r)
        break;
      const g = kt(A.reason);
      Promise.try(r.onCancel || tc, g).then(function() {
        a.postMessage({
          sourceName: i,
          targetName: s,
          stream: ke.CANCEL_COMPLETE,
          streamId: t,
          success: !0
        });
      }, function(o) {
        a.postMessage({
          sourceName: i,
          targetName: s,
          stream: ke.CANCEL_COMPLETE,
          streamId: t,
          reason: kt(o)
        });
      }), r.sinkCapability.reject(g), r.isCancelled = !0, delete this.streamSinks[t];
      break;
    default:
      throw new Error("Unexpected stream case");
  }
}, En = async function(A, t) {
  var i, s, a;
  await Promise.allSettled([(i = A.startCall) == null ? void 0 : i.promise, (s = A.pullCall) == null ? void 0 : s.promise, (a = A.cancelCall) == null ? void 0 : a.promise]), delete this.streamControllers[t];
};
class tx {
  constructor(A) {
    this._msgHandler = A, this._contentLength = null, this._fullRequestReader = null, this._rangeRequestReaders = [];
  }
  getFullReader() {
    return nt(!this._fullRequestReader, "PDFWorkerStream.getFullReader can only be called once."), this._fullRequestReader = new ix(this._msgHandler), this._fullRequestReader;
  }
  getRangeReader(A, t) {
    const i = new sx(A, t, this._msgHandler);
    return this._rangeRequestReaders.push(i), i;
  }
  cancelAllRequests(A) {
    var t;
    (t = this._fullRequestReader) == null || t.cancel(A);
    for (const i of this._rangeRequestReaders.slice(0))
      i.cancel(A);
  }
}
class ix {
  constructor(A) {
    this._msgHandler = A, this.onProgress = null, this._contentLength = null, this._isRangeSupported = !1, this._isStreamingSupported = !1;
    const t = this._msgHandler.sendWithStream("GetReader");
    this._reader = t.getReader(), this._headersReady = this._msgHandler.sendWithPromise("ReaderHeadersReady").then((i) => {
      this._isStreamingSupported = i.isStreamingSupported, this._isRangeSupported = i.isRangeSupported, this._contentLength = i.contentLength;
    });
  }
  get headersReady() {
    return this._headersReady;
  }
  get contentLength() {
    return this._contentLength;
  }
  get isStreamingSupported() {
    return this._isStreamingSupported;
  }
  get isRangeSupported() {
    return this._isRangeSupported;
  }
  async read() {
    const {
      value: A,
      done: t
    } = await this._reader.read();
    return t ? {
      value: void 0,
      done: !0
    } : {
      value: A.buffer,
      done: !1
    };
  }
  cancel(A) {
    this._reader.cancel(A);
  }
}
class sx {
  constructor(A, t, i) {
    this._msgHandler = i, this.onProgress = null;
    const s = this._msgHandler.sendWithStream("GetRangeReader", {
      begin: A,
      end: t
    });
    this._reader = s.getReader();
  }
  get isStreamingSupported() {
    return !1;
  }
  async read() {
    const {
      value: A,
      done: t
    } = await this._reader.read();
    return t ? {
      value: void 0,
      done: !0
    } : {
      value: A.buffer,
      done: !1
    };
  }
  cancel(A) {
    this._reader.cancel(A);
  }
}
class e0 {
  constructor(A) {
    this.name = A, this.terminated = !1, this._capability = Promise.withResolvers();
  }
  get finished() {
    return this._capability.promise;
  }
  finish() {
    this._capability.resolve();
  }
  terminate() {
    this.terminated = !0;
  }
  ensureNotTerminated() {
    if (this.terminated)
      throw new Error("Worker task was terminated");
  }
}
const mo = class mo {
  static setup(A, t) {
    let i = !1;
    A.on("test", (s) => {
      i || (i = !0, A.send("test", s instanceof Uint8Array));
    }), A.on("configure", (s) => {
      fC(s.verbosity);
    }), A.on("GetDocRequest", (s) => this.createDocumentHandler(s, t));
  }
  static createDocumentHandler(A, t) {
    let i, s = !1, a = null;
    const n = /* @__PURE__ */ new Set(), r = uC(), {
      docId: g,
      apiVersion: o
    } = A, I = "4.9.155";
    if (o !== I)
      throw new Error(`The API version "${o}" does not match the Worker version "${I}".`);
    const c = [];
    for (const u in [])
      c.push(u);
    if (c.length)
      throw new Error("The `Array.prototype` contains unexpected enumerable properties: " + c.join(", ") + "; thus breaking e.g. `for...in` iteration of `Array`s.");
    const l = g + "_worker";
    let C = new ic(l, g, t);
    function h() {
      if (s)
        throw new Error("Worker was terminated");
    }
    function B(u) {
      n.add(u);
    }
    function Q(u) {
      u.finish(), n.delete(u);
    }
    async function E(u) {
      await i.ensureDoc("checkHeader"), await i.ensureDoc("parseStartXRef"), await i.ensureDoc("parse", [u]), await i.ensureDoc("checkFirstPage", [u]), await i.ensureDoc("checkLastPage", [u]);
      const x = await i.ensureDoc("isPureXfa");
      if (x) {
        const S = new e0("loadXfaFonts");
        B(S), await Promise.all([i.loadXfaFonts(C, S).catch((y) => {
        }).then(() => Q(S)), i.loadXfaImages()]);
      }
      const [p, m] = await Promise.all([i.ensureDoc("numPages"), i.ensureDoc("fingerprints")]), D = x ? await i.ensureDoc("htmlForXfa") : null;
      return {
        numPages: p,
        fingerprints: m,
        htmlForXfa: D
      };
    }
    async function f({
      data: u,
      password: x,
      disableAutoFetch: p,
      rangeChunkSize: m,
      length: D,
      docBaseUrl: S,
      enableXfa: y,
      evaluatorOptions: H
    }) {
      const G = {
        source: null,
        disableAutoFetch: p,
        docBaseUrl: S,
        docId: g,
        enableXfa: y,
        evaluatorOptions: H,
        handler: C,
        length: D,
        password: x,
        rangeChunkSize: m
      };
      if (u)
        return G.source = u, new ec(G);
      const v = new tx(C), X = v.getFullReader(), gA = Promise.withResolvers();
      let N, F = [], eA = 0;
      return X.headersReady.then(function() {
        if (X.isRangeSupported) {
          G.source = v, G.length = X.contentLength, G.disableAutoFetch || (G.disableAutoFetch = X.isStreamingSupported), N = new O9(G);
          for (const z of F)
            N.sendProgressiveData(z);
          F = [], gA.resolve(N), a = null;
        }
      }).catch(function(z) {
        gA.reject(z), a = null;
      }), new Promise(function(z, cA) {
        const wA = function({
          value: mA,
          done: DA
        }) {
          try {
            if (h(), DA) {
              if (!N) {
                const _ = hc(F);
                F = [], D && _.length !== D && k("reported HTTP length is different from actual"), G.source = _, N = new ec(G), gA.resolve(N);
              }
              a = null;
              return;
            }
            eA += mA.byteLength, X.isStreamingSupported || C.send("DocProgress", {
              loaded: eA,
              total: Math.max(eA, X.contentLength || 0)
            }), N ? N.sendProgressiveData(mA) : F.push(mA), X.read().then(wA, cA);
          } catch (_) {
            cA(_);
          }
        };
        X.read().then(wA, cA);
      }).catch(function(z) {
        gA.reject(z), a = null;
      }), a = (z) => {
        v.cancelAllRequests(z);
      }, gA.promise;
    }
    function d(u) {
      function x(D) {
        h(), C.send("GetDoc", {
          pdfInfo: D
        });
      }
      function p(D) {
        if (h(), D instanceof dn) {
          const S = new e0(`PasswordException: response ${D.code}`);
          B(S), C.sendWithPromise("PasswordRequest", D).then(function({
            password: y
          }) {
            Q(S), i.updatePassword(y), m();
          }).catch(function() {
            Q(S), C.send("DocException", D);
          });
        } else D instanceof mn || D instanceof gc || D instanceof oc || D instanceof xn ? C.send("DocException", D) : C.send("DocException", new xn(D.message, D.toString()));
      }
      function m() {
        h(), E(!1).then(x, function(D) {
          if (h(), !(D instanceof W0)) {
            p(D);
            return;
          }
          i.requestLoadedStream().then(function() {
            h(), E(!0).then(x, p);
          });
        });
      }
      h(), f(u).then(function(D) {
        if (s)
          throw D.terminate(new je("Worker was terminated.")), new Error("Worker was terminated");
        i = D, i.requestLoadedStream(!0).then((S) => {
          C.send("DataLoaded", {
            length: S.bytes.byteLength
          });
        });
      }).then(m, p);
    }
    return C.on("GetPage", function(u) {
      return i.getPage(u.pageIndex).then(function(x) {
        return Promise.all([i.ensure(x, "rotate"), i.ensure(x, "ref"), i.ensure(x, "userUnit"), i.ensure(x, "view")]).then(function([p, m, D, S]) {
          return {
            rotate: p,
            ref: m,
            refStr: (m == null ? void 0 : m.toString()) ?? null,
            userUnit: D,
            view: S
          };
        });
      });
    }), C.on("GetPageIndex", function(u) {
      const x = nA.get(u.num, u.gen);
      return i.ensureCatalog("getPageIndex", [x]);
    }), C.on("GetDestinations", function(u) {
      return i.ensureCatalog("destinations");
    }), C.on("GetDestination", function(u) {
      return i.ensureCatalog("getDestination", [u.id]);
    }), C.on("GetPageLabels", function(u) {
      return i.ensureCatalog("pageLabels");
    }), C.on("GetPageLayout", function(u) {
      return i.ensureCatalog("pageLayout");
    }), C.on("GetPageMode", function(u) {
      return i.ensureCatalog("pageMode");
    }), C.on("GetViewerPreferences", function(u) {
      return i.ensureCatalog("viewerPreferences");
    }), C.on("GetOpenAction", function(u) {
      return i.ensureCatalog("openAction");
    }), C.on("GetAttachments", function(u) {
      return i.ensureCatalog("attachments");
    }), C.on("GetDocJSActions", function(u) {
      return i.ensureCatalog("jsActions");
    }), C.on("GetPageJSActions", function({
      pageIndex: u
    }) {
      return i.getPage(u).then(function(x) {
        return i.ensure(x, "jsActions");
      });
    }), C.on("GetOutline", function(u) {
      return i.ensureCatalog("documentOutline");
    }), C.on("GetOptionalContentConfig", function(u) {
      return i.ensureCatalog("optionalContentConfig");
    }), C.on("GetPermissions", function(u) {
      return i.ensureCatalog("permissions");
    }), C.on("GetMetadata", function(u) {
      return Promise.all([i.ensureDoc("documentInfo"), i.ensureCatalog("metadata")]);
    }), C.on("GetMarkInfo", function(u) {
      return i.ensureCatalog("markInfo");
    }), C.on("GetData", function(u) {
      return i.requestLoadedStream().then(function(x) {
        return x.bytes;
      });
    }), C.on("GetAnnotations", function({
      pageIndex: u,
      intent: x
    }) {
      return i.getPage(u).then(function(p) {
        const m = new e0(`GetAnnotations: page ${u}`);
        return B(m), p.getAnnotationsData(C, m, x).then((D) => (Q(m), D), (D) => {
          throw Q(m), D;
        });
      });
    }), C.on("GetFieldObjects", function(u) {
      return i.ensureDoc("fieldObjects").then((x) => (x == null ? void 0 : x.allFields) || null);
    }), C.on("HasJSActions", function(u) {
      return i.ensureDoc("hasJSActions");
    }), C.on("GetCalculationOrderIds", function(u) {
      return i.ensureDoc("calculationOrderIds");
    }), C.on("SaveDocument", async function({
      isPureXfa: u,
      numPages: x,
      annotationStorage: p,
      filename: m
    }) {
      const D = [i.requestLoadedStream(), i.ensureCatalog("acroForm"), i.ensureCatalog("acroFormRef"), i.ensureDoc("startXRef"), i.ensureDoc("xref"), i.ensureDoc("linearization"), i.ensureCatalog("structTreeRoot")], S = new It(), y = [], H = u ? null : Ec(p), [G, v, X, gA, N, F, eA] = await Promise.all(D), z = N.trailer.getRaw("Root") || null;
      let cA;
      if (H) {
        eA ? await eA.canUpdateStructTree({
          pdfManager: i,
          xref: N,
          newAnnotationsByPage: H
        }) && (cA = eA) : await ea.canCreateStructureTree({
          catalogRef: z,
          pdfManager: i,
          newAnnotationsByPage: H
        }) && (cA = null);
        const J = Li.generateImages(p.values(), N, i.evaluatorOptions.isOffscreenCanvasSupported), q = cA === void 0 ? y : [];
        for (const [Z, sA] of H)
          q.push(i.getPage(Z).then((V) => {
            const P = new e0(`Save (editor): page ${Z}`);
            return V.saveNewAnnotations(C, P, sA, J, S).finally(function() {
              Q(P);
            });
          }));
        cA === null ? y.push(Promise.all(q).then(async () => {
          await ea.createStructureTree({
            newAnnotationsByPage: H,
            xref: N,
            catalogRef: z,
            pdfManager: i,
            changes: S
          });
        })) : cA && y.push(Promise.all(q).then(async () => {
          await cA.updateStructureTree({
            newAnnotationsByPage: H,
            pdfManager: i,
            changes: S
          });
        }));
      }
      if (u)
        y.push(i.serializeXfaData(p));
      else
        for (let J = 0; J < x; J++)
          y.push(i.getPage(J).then(function(q) {
            const Z = new e0(`Save: page ${J}`);
            return q.save(C, Z, p, S).finally(function() {
              Q(Z);
            });
          }));
      const wA = await Promise.all(y);
      let mA = null;
      if (u) {
        if (mA = wA[0], !mA)
          return G.bytes;
      } else if (S.size === 0)
        return G.bytes;
      const DA = X && v instanceof R && S.values().some((J) => J.needAppearances), _ = v instanceof R && v.get("XFA") || null;
      let TA = null, oA = !1;
      if (Array.isArray(_)) {
        for (let J = 0, q = _.length; J < q; J += 2)
          _[J] === "datasets" && (TA = _[J + 1], oA = !0);
        TA === null && (TA = N.getNewTemporaryRef());
      } else _ && k("Unsupported XFA type.");
      let U = /* @__PURE__ */ Object.create(null);
      if (N.trailer) {
        const J = /* @__PURE__ */ Object.create(null), q = N.trailer.get("Info") || null;
        if (q instanceof R)
          for (const [Z, sA] of q)
            typeof sA == "string" && (J[Z] = XA(sA));
        U = {
          rootRef: z,
          encryptRef: N.trailer.getRaw("Encrypt") || null,
          newRef: N.getNewTemporaryRef(),
          infoRef: N.trailer.getRaw("Info") || null,
          info: J,
          fileIds: N.trailer.get("ID") || null,
          startXRef: F ? gA : N.lastXRefStreamPos ?? gA,
          filename: m
        };
      }
      return ex({
        originalData: G.bytes,
        xrefInfo: U,
        changes: S,
        xref: N,
        hasXfa: !!_,
        xfaDatasetsRef: TA,
        hasXfaDatasetsEntry: oA,
        needAppearances: DA,
        acroFormRef: X,
        acroForm: v,
        xfaData: mA,
        useXrefStream: lc(N.topDict, "XRef")
      }).finally(() => {
        N.resetNewTemporaryRef();
      });
    }), C.on("GetOperatorList", function(u, x) {
      const p = u.pageIndex;
      i.getPage(p).then(function(m) {
        const D = new e0(`GetOperatorList: page ${p}`);
        B(D);
        const S = r >= Os.INFOS ? Date.now() : 0;
        m.getOperatorList({
          handler: C,
          sink: x,
          task: D,
          intent: u.intent,
          cacheKey: u.cacheKey,
          annotationStorage: u.annotationStorage,
          modifiedIds: u.modifiedIds
        }).then(function(y) {
          Q(D), S && vA(`page=${p + 1} - getOperatorList: time=${Date.now() - S}ms, len=${y.length}`), x.close();
        }, function(y) {
          Q(D), !D.terminated && x.error(y);
        });
      });
    }), C.on("GetTextContent", function(u, x) {
      const {
        pageIndex: p,
        includeMarkedContent: m,
        disableNormalization: D
      } = u;
      i.getPage(p).then(function(S) {
        const y = new e0("GetTextContent: page " + p);
        B(y);
        const H = r >= Os.INFOS ? Date.now() : 0;
        S.extractTextContent({
          handler: C,
          task: y,
          sink: x,
          includeMarkedContent: m,
          disableNormalization: D
        }).then(function() {
          Q(y), H && vA(`page=${p + 1} - getTextContent: time=${Date.now() - H}ms`), x.close();
        }, function(G) {
          Q(y), !y.terminated && x.error(G);
        });
      });
    }), C.on("GetStructTree", function(u) {
      return i.getPage(u.pageIndex).then(function(x) {
        return i.ensure(x, "getStructTree");
      });
    }), C.on("FontFallback", function(u) {
      return i.fontFallback(u.id, C);
    }), C.on("Cleanup", function(u) {
      return i.cleanup(!0);
    }), C.on("Terminate", function(u) {
      s = !0;
      const x = [];
      if (i) {
        i.terminate(new je("Worker was terminated."));
        const p = i.cleanup();
        x.push(p), i = null;
      } else
        io();
      a == null || a(new je("Worker was terminated."));
      for (const p of n)
        x.push(p.finished), p.terminate();
      return Promise.all(x).then(function() {
        C.destroy(), C = null;
      });
    }), C.on("Ready", function(u) {
      d(A), A = null;
    }), l;
  }
  static initializeFromPort(A) {
    const t = new ic("worker", "main", A);
    this.setup(t, A), t.send("ready", null);
  }
};
typeof window > "u" && !hC && typeof self < "u" && typeof self.postMessage == "function" && "onmessage" in self && mo.initializeFromPort(self);
let Kg = mo;
var nx = sc.WorkerMessageHandler;
Promise.withResolvers ?? (Promise.withResolvers = function() {
  let e, A;
  return { promise: new Promise((i, s) => {
    e = i, A = s;
  }), resolve: e, reject: A };
});
export {
  nx as WorkerMessageHandler
};

title: Playground

options:
  preview: https://kirby.tools/copilot

tabs:
  gettingStarted:
    label: Getting Started
    columns:
      - width: 2/3
        fields:
          infoApiKey:
            label: Getting Started
            type: info
            theme: positive
            text: |
              To play with the **Kirby Copilot**, please configure your AI provider settings below. Choose from **OpenAI**, **Google**, or **Anthropic** and enter your corresponding API key. The key is required to make client-side requests to AI models. For production use of the plugin, you will need to provide one in the global configuration of Kirby.
          headlineProvider:
            type: headline
            label: AI Provider Configuration
            numbered: false
          modelProvider:
            label: AI Provider
            type: toggles
            default: openai
            grow: false
            options:
              - value: openai
                text: OpenAI
              - value: google
                text: Google
              - value: anthropic
                text: Anthropic
            help: |
              Choose your preferred AI provider. Each provider offers different models and capabilities.
          apiKey:
            label: API Key
            type: playground-api-key
            help: |
              **OpenAI**: Get your key from [OpenAI Platform](https://platform.openai.com/api-keys)
              **Google**: Get your key from [Google AI Studio](https://aistudio.google.com/app/apikey)
              **Anthropic**: Get your key from [Anthropic Console](https://console.anthropic.com/settings/keys)

              The key will be saved to the **session storage** of your browser. It will not be stored server-side or in any other way.
          openaiModel:
            label: AI Model
            type: select
            when:
              modelProvider: openai
            options:
              o4-mini: o4-mini (recommended)
              gpt-4o: GPT-4o
              gpt-4o-mini: GPT-4o Mini
            help: |
              Select the OpenAI model to use. **o4-mini** is recommended for most use cases. <ins>**Note: Add a valid payment method in your account to use these models.**</ins>
          googleModel:
            label: Google Model
            type: select
            when:
              modelProvider: google
            options:
              gemini-2.5-flash-preview-04-17: Gemini 2.5 Flash (recommended)
              gemini-2.5-pro-preview-06-05: Gemini 2.5 Pro
            help: |
              Select the Google Gemini model to use. **Gemini 2.5 Flash** offers the best performance for most cases.
          anthropicModel:
            label: Anthropic Model
            type: select
            when:
              modelProvider: anthropic
            options:
              claude-sonnet-4-20250514: Claude 4 Sonnet (recommended)
              claude-opus-4-20250514: Claude 4 Opus
            help: |
              Select the Anthropic Claude model to use. **Claude 4 Sonnet** provides an excellent balance of capability and speed.

      - width: 1/3
        fields:
          infoDocumentation:
            label: üõçÔ∏è Convinced? Grab a copy!
            type: info
            theme: passive
            text: |
              Purchase a copy of <sparkly-text style="--sparkly-text-size: 2em; --sparkly-text-color: var(--color-yellow-600)">**[Kirby Copilot](https://kirby.tools/copilot)**</sparkly-text> to improve the content management of your client's Kirby project or your own with AI.

  blocksFields:
    label: Blocks Fields
    columns:
      - width: 1/1
        fields:
          headline01:
            type: headline
            label: Copilot for Blocks Fields
      - width: 2/3
        fields:
          content01:
            extends: fields/blocks
            label: Blocks Builder
      - width: 1/3
        sections:
          copilot01:
            type: copilot
            field: content01

  layoutFields:
    label: Layout Fields
    columns:
      - width: 2/3
        fields:
          infoLayoutFields:
            label: Page Builder
            type: info
            theme: positive
            text: |
              With Kirby Copilot for `layout` fields, you can create complex page structures just by prompting!
      - width: 2/3
        fields:
          headline07:
            type: headline
            label: Copilot for Layout Fields
          content07:
            label: Layouts Builder
            type: layout
            layouts:
              - 1/1
              - "1/2, 1/2"
              - "1/1, 1/3, 2/3"
              - "1/1, 2/3, 1/3"
            fieldsets:
              # Landing page blocks
              - hero
              - features
              - showcase
              # - stats
              - testimonials
              - team
              # - pricing
              - faq
              - cta
              - contact
              # # Core Kirby blocks
              - heading
              - text
              # - list
              # - quote
              # - image
              # - video
              # - code
              # - markdown
      - width: 1/3
        sections:
          copilot07:
            type: copilot
            field: content07
          infoLayoutFields:
            label: Recommendation
            type: info
            theme: notice
            text: |
              Please use **Google Gemini** models, since OpenAI's models have [limitations on nested structured outputs](https://platform.openai.com/docs/guides/structured-outputs/supported-schemas?api-mode=responses#objects-have-limitations-on-nesting-depth-and-size). Gemini results are more reliable for structured output generation.

  textlikeFields:
    label: Writer & Textarea Fields
    columns:
      - width: 1/1
        fields:
          infoTextlikeFields:
            label: Writer & Textareas
            type: info
            theme: positive
            text: |
              Writer and textarea fields support two interaction modes:
              - Use the Copilot section on the right, just like with blocks fields.
              - Use the toolbar button to open a prompt dialog. To open it programmatically, use the shortcut:
                `Cmd + .` (macOS) or `Ctrl + .` (Windows/Linux).
          headline06:
            type: headline
            label: Copilot for Writer Fields
      - width: 2/3
        fields:
          content06:
            label: Writer
            type: writer
            toolbar:
              inline: false
            marks:
              - bold
              - italic
              - underline
              - "|"
              - copilot
      - width: 1/3
        sections:
          copilot06:
            type: copilot
            field: content06

      - width: 1/1
        fields:
          headline02:
            type: headline
            label: Copilot for Textarea Fields
      - width: 2/3
        fields:
          content02:
            label: Textarea
            type: textarea
            buttons:
              - headlines
              - "|"
              - bold
              - italic
              - "|"
              - copilot
      - width: 1/3
        sections:
          copilot02:
            type: copilot
            field: content02

  promptUsage:
    label: Prompt Usage
    columns:
      - width: 1/1
        fields:
          headline05:
            type: headline
            label: Include Fields as Context
      - width: 2/3
        fields:
          info05:
            label: Info
            type: info
            theme: passive
            text: |
              Context is key to a good user prompt. The content from other fields of the same model are available in the user prompt. Wrap the field name in curly braces to use it as a placeholder.

              This prompt uses the field `date` from the bottom of this page:
              ```
              What is the current date? (Hint, it is {date}!)
              ```
          content05:
            extends: fields/blocks
            label: Blocks
      - width: 1/3
        sections:
          copilot05:
            type: copilot
            field: content05
            userPrompt: |
              What is the current date?
              (Hint, it is {date}!)
            files: false

      - width: 1/1
        fields:
          headline03:
            type: headline
            label: Predefined Prompt
      - width: 2/3
        fields:
          info03:
            label: Info
            type: info
            theme: passive
            text: |
              Add a predefined user prompt with the `userPrompt` property.
          content03:
            extends: fields/blocks
            label: Blocks
      - width: 1/3
        sections:
          copilot03:
            type: copilot
            field: content03
            userPrompt: Write a short story about lorem ipsum. Segment article into headings (H2).

      - width: 1/1
        fields:
          headline04:
            type: headline
            label: Immutable, Predefined Prompt
      - width: 2/3
        fields:
          info04:
            label: Info
            type: info
            theme: passive
            text: |
              With both the `editable` and the `files` property set to `false`, the user prompt is not editable and no context files can be added, respectively.
          content04:
            extends: fields/blocks
            label: Blocks
      - width: 1/3
        sections:
          copilot04:
            type: copilot
            field: content04
            userPrompt: Write a short story about lorem ipsum. Segment article into headings (H2).
            editable: false
            files: false

      - width: 1/1
        fields:
          headlineContext:
            type: headline
            label: Context
      - width: 2/3
        fields:
          intro:
            label: Intro
            type: text
          infoContext:
            label: Info
            type: info
            theme: passive
            text: |
              Access the fields above in any user prompt by using the placeholders `{intro}` and `{date}`.
      - width: 1/3
        fields:
          date:
            label: Date
            type: date
